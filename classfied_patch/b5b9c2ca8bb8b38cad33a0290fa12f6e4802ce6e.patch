From b5b9c2ca8bb8b38cad33a0290fa12f6e4802ce6e Mon Sep 17 00:00:00 2001
From: Igor Sheludko <ishell@chromium.org>
Date: Mon, 14 Jun 2021 16:21:36 +0200
Subject: [PATCH] [cleanup] Remove unused TailCallOptimizedCodeSlot builtin

Bug: v8:11879
Change-Id: Ifb894d8beec6b54a9b7ff879dd4d6710306ba15b
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2960217
Commit-Queue: Igor Sheludko <ishell@chromium.org>
Commit-Queue: Camillo Bruni <cbruni@chromium.org>
Auto-Submit: Igor Sheludko <ishell@chromium.org>
Reviewed-by: Camillo Bruni <cbruni@chromium.org>
Cr-Commit-Position: refs/heads/master@{#75139}
---
 src/builtins/arm/builtins-arm.cc         |  8 --------
 src/builtins/arm64/builtins-arm64.cc     |  6 ------
 src/builtins/builtins-definitions.h      |  2 --
 src/builtins/builtins-internal-gen.cc    |  3 ---
 src/builtins/ia32/builtins-ia32.cc       |  4 ----
 src/builtins/mips/builtins-mips.cc       |  5 -----
 src/builtins/mips64/builtins-mips64.cc   |  5 -----
 src/builtins/riscv64/builtins-riscv64.cc |  7 -------
 src/builtins/x64/builtins-x64.cc         |  8 --------
 src/codegen/interface-descriptors-inl.h  |  5 -----
 src/codegen/interface-descriptors.h      | 12 ------------
 11 files changed, 65 deletions(-)

diff --git a/src/builtins/arm/builtins-arm.cc b/src/builtins/arm/builtins-arm.cc
index 66aca724e0..792664d85a 100644
--- a/src/builtins/arm/builtins-arm.cc
+++ b/src/builtins/arm/builtins-arm.cc
@@ -1777,14 +1777,6 @@ void Builtins::Generate_NotifyDeoptimized(MacroAssembler* masm) {
   __ Ret();
 }
 
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  UseScratchRegisterScope temps(masm);
-  // Need a few extra registers
-  temps.Include(r8, r9);
-  Register optimized_code_entry = kJavaScriptCallCodeStartRegister;
-  TailCallOptimizedCodeSlot(masm, optimized_code_entry, temps.Acquire());
-}
-
 namespace {
 
 void Generate_OSREntry(MacroAssembler* masm, Register entry_address,
diff --git a/src/builtins/arm64/builtins-arm64.cc b/src/builtins/arm64/builtins-arm64.cc
index ced6177fe4..b89b8b99fb 100644
--- a/src/builtins/arm64/builtins-arm64.cc
+++ b/src/builtins/arm64/builtins-arm64.cc
@@ -2023,12 +2023,6 @@ void Builtins::Generate_NotifyDeoptimized(MacroAssembler* masm) {
   __ Ret();
 }
 
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  UseScratchRegisterScope temps(masm);
-  Register optimized_code_entry = kJavaScriptCallCodeStartRegister;
-  TailCallOptimizedCodeSlot(masm, optimized_code_entry, temps.AcquireX());
-}
-
 namespace {
 
 void Generate_OSREntry(MacroAssembler* masm, Register entry_address,
diff --git a/src/builtins/builtins-definitions.h b/src/builtins/builtins-definitions.h
index 99374298b0..a2441ac6ed 100644
--- a/src/builtins/builtins-definitions.h
+++ b/src/builtins/builtins-definitions.h
@@ -235,8 +235,6 @@ namespace internal {
   /* Type conversions continuations */                                         \
   TFC(ToBooleanLazyDeoptContinuation, SingleParameterOnStack)                  \
                                                                                \
-  ASM(TailCallOptimizedCodeSlot, TailCallOptimizedCodeSlot)                    \
-                                                                               \
   /* Handlers */                                                               \
   TFH(KeyedLoadIC_PolymorphicName, LoadWithVector)                             \
   TFH(KeyedStoreIC_Megamorphic, Store)                                         \
diff --git a/src/builtins/builtins-internal-gen.cc b/src/builtins/builtins-internal-gen.cc
index af993107f6..2677fd3b7c 100644
--- a/src/builtins/builtins-internal-gen.cc
+++ b/src/builtins/builtins-internal-gen.cc
@@ -1027,9 +1027,6 @@ void Builtins::Generate_BaselineLeaveFrame(MacroAssembler* masm) {
 void Builtins::Generate_BaselineOnStackReplacement(MacroAssembler* masm) {
   masm->Trap();
 }
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  masm->Trap();
-}
 #endif
 
 // ES6 [[Get]] operation.
diff --git a/src/builtins/ia32/builtins-ia32.cc b/src/builtins/ia32/builtins-ia32.cc
index fc997a58cb..2a53d01f08 100644
--- a/src/builtins/ia32/builtins-ia32.cc
+++ b/src/builtins/ia32/builtins-ia32.cc
@@ -1878,10 +1878,6 @@ void Builtins::Generate_NotifyDeoptimized(MacroAssembler* masm) {
   __ ret(1 * kSystemPointerSize);  // Remove eax.
 }
 
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  TailCallOptimizedCodeSlot(masm, ecx);
-}
-
 // static
 void Builtins::Generate_FunctionPrototypeApply(MacroAssembler* masm) {
   // ----------- S t a t e -------------
diff --git a/src/builtins/mips/builtins-mips.cc b/src/builtins/mips/builtins-mips.cc
index 9c6f1b0306..6434870fed 100644
--- a/src/builtins/mips/builtins-mips.cc
+++ b/src/builtins/mips/builtins-mips.cc
@@ -1749,11 +1749,6 @@ void Builtins::Generate_NotifyDeoptimized(MacroAssembler* masm) {
   __ Addu(sp, sp, Operand(1 * kPointerSize));  // Remove accumulator.
 }
 
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  Register optimized_code_entry = kJavaScriptCallCodeStartRegister;
-  TailCallOptimizedCodeSlot(masm, optimized_code_entry, t7, t4);
-}
-
 namespace {
 
 void Generate_OSREntry(MacroAssembler* masm, Register entry_address,
diff --git a/src/builtins/mips64/builtins-mips64.cc b/src/builtins/mips64/builtins-mips64.cc
index 8983d829e3..aa794e5c84 100644
--- a/src/builtins/mips64/builtins-mips64.cc
+++ b/src/builtins/mips64/builtins-mips64.cc
@@ -1768,11 +1768,6 @@ void Builtins::Generate_NotifyDeoptimized(MacroAssembler* masm) {
   __ Daddu(sp, sp, Operand(1 * kPointerSize));  // Remove state.
 }
 
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  Register optimized_code_entry = kJavaScriptCallCodeStartRegister;
-  TailCallOptimizedCodeSlot(masm, optimized_code_entry, t3, t0);
-}
-
 namespace {
 
 void Generate_OSREntry(MacroAssembler* masm, Register entry_address,
diff --git a/src/builtins/riscv64/builtins-riscv64.cc b/src/builtins/riscv64/builtins-riscv64.cc
index 6324d30b88..ac3dcec486 100644
--- a/src/builtins/riscv64/builtins-riscv64.cc
+++ b/src/builtins/riscv64/builtins-riscv64.cc
@@ -1838,13 +1838,6 @@ void Builtins::Generate_NotifyDeoptimized(MacroAssembler* masm) {
   __ Ret();
 }
 
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  Register optimized_code_entry = kJavaScriptCallCodeStartRegister;
-  UseScratchRegisterScope temps(masm);
-  temps.Include(t4, t0);
-  TailCallOptimizedCodeSlot(masm, optimized_code_entry, temps.Acquire(),
-                            temps.Acquire());
-}
 namespace {
 
 void Generate_OSREntry(MacroAssembler* masm, Register entry_address,
diff --git a/src/builtins/x64/builtins-x64.cc b/src/builtins/x64/builtins-x64.cc
index b13caf6b4d..452ab646e4 100644
--- a/src/builtins/x64/builtins-x64.cc
+++ b/src/builtins/x64/builtins-x64.cc
@@ -1858,14 +1858,6 @@ void Builtins::Generate_NotifyDeoptimized(MacroAssembler* masm) {
   __ ret(1 * kSystemPointerSize);  // Remove rax.
 }
 
-void Builtins::Generate_TailCallOptimizedCodeSlot(MacroAssembler* masm) {
-  Register optimized_code_entry = kJavaScriptCallCodeStartRegister;
-  Register closure = kJSFunctionRegister;
-  TailCallOptimizedCodeSlot(masm, optimized_code_entry, closure, r9,
-                            WriteBarrierDescriptor::SlotAddressRegister(),
-                            JumpMode::kJump);
-}
-
 // static
 void Builtins::Generate_FunctionPrototypeApply(MacroAssembler* masm) {
   // ----------- S t a t e -------------
diff --git a/src/codegen/interface-descriptors-inl.h b/src/codegen/interface-descriptors-inl.h
index 4d8c61e2ca..f4146aafe7 100644
--- a/src/codegen/interface-descriptors-inl.h
+++ b/src/codegen/interface-descriptors-inl.h
@@ -372,11 +372,6 @@ constexpr auto FastNewObjectDescriptor::registers() {
   return RegisterArray(TargetRegister(), NewTargetRegister());
 }
 
-// static
-constexpr auto TailCallOptimizedCodeSlotDescriptor::registers() {
-  return RegisterArray(kJavaScriptCallCodeStartRegister);
-}
-
 // static
 constexpr auto LoadNoFeedbackDescriptor::registers() {
   return RegisterArray(LoadDescriptor::ReceiverRegister(),
diff --git a/src/codegen/interface-descriptors.h b/src/codegen/interface-descriptors.h
index cc8932f4e1..4288e72ff7 100644
--- a/src/codegen/interface-descriptors.h
+++ b/src/codegen/interface-descriptors.h
@@ -77,7 +77,6 @@ namespace internal {
   V(InterpreterCEntry1)                  \
   V(InterpreterCEntry2)                  \
   V(InterpreterDispatch)                 \
-  V(TailCallOptimizedCodeSlot)           \
   V(InterpreterPushArgsThenCall)         \
   V(InterpreterPushArgsThenConstruct)    \
   V(JSTrampoline)                        \
@@ -1551,17 +1550,6 @@ class GrowArrayElementsDescriptor
   static constexpr auto registers();
 };
 
-class V8_EXPORT_PRIVATE TailCallOptimizedCodeSlotDescriptor
-    : public StaticCallInterfaceDescriptor<
-          TailCallOptimizedCodeSlotDescriptor> {
- public:
-  DEFINE_PARAMETERS(kOptimizedCodeEntry)
-  DEFINE_PARAMETER_TYPES(MachineType::AnyTagged())  // kAccumulator
-  DECLARE_DESCRIPTOR(TailCallOptimizedCodeSlotDescriptor)
-
-  static constexpr auto registers();
-};
-
 class BaselineOutOfLinePrologueDescriptor
     : public StaticCallInterfaceDescriptor<
           BaselineOutOfLinePrologueDescriptor> {
-- 
2.35.1

