From 80717207474bb8faf10de8458ff0ae0aa90c1cd0 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Fri, 27 Oct 2023 12:34:49 +0800
Subject: [PATCH] [riscv][wasm] Also load the real stack limit from the root
 register

Port commit d5244423b7fb9b9c237472dc610f762d18c4d2ad

Bug: v8:14393
Change-Id: Ia7c7282ef4ddd7f0722bd0b3bf307ed7c98d3a93
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4983265
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Reviewed-by: Ji Qiu <qiuji@iscas.ac.cn>
Commit-Queue: Ji Qiu <qiuji@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#90625}
---
 .../backend/riscv/code-generator-riscv.cc       | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/src/compiler/backend/riscv/code-generator-riscv.cc b/src/compiler/backend/riscv/code-generator-riscv.cc
index 8ce6f850ac3..780bae074ee 100644
--- a/src/compiler/backend/riscv/code-generator-riscv.cc
+++ b/src/compiler/backend/riscv/code-generator-riscv.cc
@@ -4123,15 +4123,14 @@ void CodeGenerator::AssembleConstructFrame() {
       // exception unconditionally. Thereby we can avoid the integer overflow
       // check in the condition code.
       if ((required_slots * kSystemPointerSize) <
-          (v8_flags.stack_size * 1024)) {
-        __ LoadWord(
-            kScratchReg,
-            FieldMemOperand(kWasmInstanceRegister,
-                            WasmInstanceObject::kRealStackLimitAddressOffset));
-        __ LoadWord(kScratchReg, MemOperand(kScratchReg));
-        __ AddWord(kScratchReg, kScratchReg,
-                   Operand(required_slots * kSystemPointerSize));
-        __ BranchShort(&done, uge, sp, Operand(kScratchReg));
+          (v8_flags.stack_size * KB)) {
+        UseScratchRegisterScope temps(masm());
+        Register stack_limit = temps.Acquire();
+        __ LoadStackLimit(stack_limit,
+                          MacroAssembler::StackLimitKind::kRealStackLimit);
+        __ AddWord(stack_limit, stack_limit,
+                 Operand(required_slots * kSystemPointerSize));
+        __ Branch(&done, uge, sp, Operand(stack_limit));
       }
 
       __ Call(static_cast<intptr_t>(Builtin::kWasmStackOverflow),
-- 
2.35.1

