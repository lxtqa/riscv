From 217df0c9ec4610fe1e482c7f0a9a6ec5569e4572 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Mon, 7 Jun 2021 11:00:16 +0800
Subject: [PATCH] [riscv64] Repair where the InputOrZeroRegister function is
 incorrectly used

Change-Id: Ia1dfb428e5518343252300bf4323f24a20bb7f2f
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2939539
Commit-Queue: Brice Dobry <brice.dobry@futurewei.com>
Reviewed-by: Brice Dobry <brice.dobry@futurewei.com>
Cr-Commit-Position: refs/heads/master@{#74983}
---
 src/compiler/backend/riscv64/code-generator-riscv64.cc | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/compiler/backend/riscv64/code-generator-riscv64.cc b/src/compiler/backend/riscv64/code-generator-riscv64.cc
index e6258b10ff..feb886cfaa 100644
--- a/src/compiler/backend/riscv64/code-generator-riscv64.cc
+++ b/src/compiler/backend/riscv64/code-generator-riscv64.cc
@@ -606,7 +606,7 @@ CodeGenerator::CodeGenResult CodeGenerator::AssembleArchInstruction(
       if (instr->InputAt(0)->IsImmediate()) {
         __ Call(i.InputCode(0), RelocInfo::CODE_TARGET);
       } else {
-        Register reg = i.InputOrZeroRegister(0);
+        Register reg = i.InputRegister(0);
         DCHECK_IMPLIES(
             instr->HasCallDescriptorFlag(CallDescriptor::kFixedTargetRegister),
             reg == kJavaScriptCallCodeStartRegister);
@@ -618,7 +618,7 @@ CodeGenerator::CodeGenResult CodeGenerator::AssembleArchInstruction(
     }
     case kArchCallBuiltinPointer: {
       DCHECK(!instr->InputAt(0)->IsImmediate());
-      Register builtin_index = i.InputOrZeroRegister(0);
+      Register builtin_index = i.InputRegister(0);
       __ CallBuiltinByIndex(builtin_index);
       RecordCallPosition(instr);
       frame_access_state()->ClearSPDelta();
@@ -1882,7 +1882,7 @@ CodeGenerator::CodeGenResult CodeGenerator::AssembleArchInstruction(
     case kRiscvStoreCompressTagged: {
       size_t index = 0;
       MemOperand operand = i.MemoryOperand(&index);
-      __ StoreTaggedField(i.InputRegister(index), operand);
+      __ StoreTaggedField(i.InputOrZeroRegister(index), operand);
       break;
     }
     case kRiscvLoadDecompressTaggedSigned: {
-- 
2.35.1

