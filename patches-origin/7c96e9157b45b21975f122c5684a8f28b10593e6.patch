From 7c96e9157b45b21975f122c5684a8f28b10593e6 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Tue, 29 Jun 2021 14:05:33 +0800
Subject: [PATCH] [riscv64] Fix compressed pointer load/store in baseline

Change-Id: Idee7918a06aefed54385560d19b3a471c86cbf6d
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2992403
Reviewed-by: Ji Qiu <qiuji@iscas.ac.cn>
Commit-Queue: Ji Qiu <qiuji@iscas.ac.cn>
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/master@{#75433}
---
 .../riscv64/baseline-assembler-riscv64-inl.h  | 19 ++++++-------------
 1 file changed, 6 insertions(+), 13 deletions(-)

diff --git a/src/baseline/riscv64/baseline-assembler-riscv64-inl.h b/src/baseline/riscv64/baseline-assembler-riscv64-inl.h
index 2dc76480a5..e1d3440b2c 100644
--- a/src/baseline/riscv64/baseline-assembler-riscv64-inl.h
+++ b/src/baseline/riscv64/baseline-assembler-riscv64-inl.h
@@ -449,19 +449,15 @@ void BaselineAssembler::Pop(T... registers) {
 
 void BaselineAssembler::LoadTaggedPointerField(Register output, Register source,
                                                int offset) {
-  // FIXME(riscv64): riscv64 don't implement pointer compressed
-  // __ LoadTaggedPointerField(output, FieldMemOperand(source, offset));
-  __ Ld(output, FieldMemOperand(source, offset));
+  __ LoadTaggedPointerField(output, FieldMemOperand(source, offset));
 }
 void BaselineAssembler::LoadTaggedSignedField(Register output, Register source,
                                               int offset) {
-  // FIXME(riscv64): riscv64 don't implement pointer compressed
-  __ Ld(output, FieldMemOperand(source, offset));
+  __ LoadTaggedSignedField(output, FieldMemOperand(source, offset));
 }
 void BaselineAssembler::LoadTaggedAnyField(Register output, Register source,
                                            int offset) {
-  // FIXME(riscv64): riscv64 don't implement pointer compressed
-  __ Ld(output, FieldMemOperand(source, offset));
+  __ LoadAnyTaggedField(output, FieldMemOperand(source, offset));
 }
 void BaselineAssembler::LoadByteField(Register output, Register source,
                                       int offset) {
@@ -473,23 +469,20 @@ void BaselineAssembler::StoreTaggedSignedField(Register target, int offset,
   ScratchRegisterScope temps(this);
   Register tmp = temps.AcquireScratch();
   __ li(tmp, Operand(value));
-  // FIXME(riscv64): riscv64 don't implement pointer compressed
-  __ Sd(tmp, FieldMemOperand(target, offset));
+  __ StoreTaggedField(tmp, FieldMemOperand(target, offset));
 }
 void BaselineAssembler::StoreTaggedFieldWithWriteBarrier(Register target,
                                                          int offset,
                                                          Register value) {
-  // FIXME(riscv64): riscv64 don't implement pointer compressed
   ASM_CODE_COMMENT(masm_);
-  __ Sd(value, FieldMemOperand(target, offset));
+  __ StoreTaggedField(value, FieldMemOperand(target, offset));
   __ RecordWriteField(target, offset, value, kRAHasNotBeenSaved,
                       SaveFPRegsMode::kIgnore);
 }
 void BaselineAssembler::StoreTaggedFieldNoWriteBarrier(Register target,
                                                        int offset,
                                                        Register value) {
-  // FIXME(riscv64): riscv64 don't implement pointer compressed
-  __ Sd(value, FieldMemOperand(target, offset));
+  __ StoreTaggedField(value, FieldMemOperand(target, offset));
 }
 
 void BaselineAssembler::AddToInterruptBudgetAndJumpIfNotExceeded(
-- 
2.35.1

