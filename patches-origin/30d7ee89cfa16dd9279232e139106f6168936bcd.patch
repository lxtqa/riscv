From 30d7ee89cfa16dd9279232e139106f6168936bcd Mon Sep 17 00:00:00 2001
From: yangwenming <yangwenming@bytedance.com>
Date: Tue, 8 Aug 2023 23:22:18 +0800
Subject: [PATCH] [riscv64,wasm] zero-extend value in I64Store32 cases for
 LiftOff.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

In RISC-V, instruction 'lr.w' load a 32-bits-width value and
signed-extends it. Such behavior conflicts with wasm specs
about 'i64.atomic.add32_u', 'i64.atomic.sub32_u', etc. This
CL inserts instructions to zero-extend result value.

Bug: v8:14113
Change-Id: I436c1882d07d1aa6dd0b74fe4c9868905024353b
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4760344
Auto-Submit: 杨文明 <yangwenming@bytedance.com>
Commit-Queue: Clemens Backes <clemensb@chromium.org>
Reviewed-by: Clemens Backes <clemensb@chromium.org>
Cr-Commit-Position: refs/heads/main@{#89442}
---
 src/wasm/baseline/riscv/liftoff-assembler-riscv64.h | 3 +++
 test/mjsunit/mjsunit.status                         | 4 ----
 2 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h b/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h
index bde3da04ade..5fb5c48b4cd 100644
--- a/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h
+++ b/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h
@@ -395,6 +395,9 @@ inline void AtomicBinop(LiftoffAssembler* lasm, Register dst_addr,
       __ sync();
       break;
     case StoreType::kI64Store32:
+      __ lr_w(true, false, result_reg, actual_addr);
+      __ ZeroExtendWord(result_reg, result_reg);
+      break;
     case StoreType::kI32Store:
       __ lr_w(true, false, result_reg, actual_addr);
       break;
diff --git a/test/mjsunit/mjsunit.status b/test/mjsunit/mjsunit.status
index 14ff3e6bc29..00081646a1f 100644
--- a/test/mjsunit/mjsunit.status
+++ b/test/mjsunit/mjsunit.status
@@ -979,10 +979,6 @@
 'regress/wasm/regress-14171':[SKIP],
 }], # 'arch == riscv32'
 
-[ 'arch == riscv64' , {
-'regress/wasm/regress-14113':[SKIP],
-}], # 'arch == riscv64'
-
 ##############################################################################
 ['system == macos', {
   # TODO(machenbach): These tests are x25 slower on 4-core Mac Minis. They can
-- 
2.35.1

