From 9c6c1f10e32e78abe0a9e0f817d54ba6444d3dfa Mon Sep 17 00:00:00 2001
From: Andreas Haas <ahaas@chromium.org>
Date: Fri, 26 Nov 2021 18:11:52 +0100
Subject: [PATCH] Reland^2 "[wasm] Update spec tests"

Change-Id: I72a9b9551bc99d94bfb41fe5174ae58844e5dedb
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3303802
Reviewed-by: Nico Hartmann <nicohartmann@chromium.org>
Commit-Queue: Andreas Haas <ahaas@chromium.org>
Cr-Commit-Position: refs/heads/main@{#78143}
---
 test/wasm-js/tests.tar.gz.sha1              |  2 +-
 test/wasm-js/wasm-js.status                 |  7 +++++++
 test/wasm-spec-tests/tests.tar.gz.sha1      |  2 +-
 test/wasm-spec-tests/wasm-spec-tests.status | 21 +++++++++------------
 4 files changed, 18 insertions(+), 14 deletions(-)

diff --git a/test/wasm-js/tests.tar.gz.sha1 b/test/wasm-js/tests.tar.gz.sha1
index 43a7a5c9ac..77bb70be11 100644
--- a/test/wasm-js/tests.tar.gz.sha1
+++ b/test/wasm-js/tests.tar.gz.sha1
@@ -1 +1 @@
-765700116a6d805cba8fc49374813dcf465eb6d7
\ No newline at end of file
+032b07ce80fd04f7b3f143d1d00eb7454156e2e3
\ No newline at end of file
diff --git a/test/wasm-js/wasm-js.status b/test/wasm-js/wasm-js.status
index 3c1431eebd..a2abfe3b0f 100644
--- a/test/wasm-js/wasm-js.status
+++ b/test/wasm-js/wasm-js.status
@@ -14,6 +14,13 @@
   'wpt/function/table.tentative': [FAIL],
   'wpt/function/type.tentative': [FAIL],
 
+  # Failing tests after update
+  'proposals/js-types/global/type': [FAIL],
+  'proposals/js-types/module/exports': [FAIL],
+  'proposals/js-types/module/imports': [FAIL],
+  'proposals/js-types/table/constructor': [FAIL],
+  'proposals/js-types/table/type': [FAIL],
+
   # Outdated proposal tests.
   'proposals/js-types/table/get-set': [FAIL],
   'proposals/memory64/table/get-set': [FAIL],
diff --git a/test/wasm-spec-tests/tests.tar.gz.sha1 b/test/wasm-spec-tests/tests.tar.gz.sha1
index 7214ce7c34..e6fc7039fb 100644
--- a/test/wasm-spec-tests/tests.tar.gz.sha1
+++ b/test/wasm-spec-tests/tests.tar.gz.sha1
@@ -1 +1 @@
-6ad3d75e3bb7790de62b5a7db0fd5c38817d17a1
\ No newline at end of file
+1cce5fa8f76a93b77bf022aefbe2832a8f4e0588
\ No newline at end of file
diff --git a/test/wasm-spec-tests/wasm-spec-tests.status b/test/wasm-spec-tests/wasm-spec-tests.status
index c72fbcbe00..a80d4ff603 100644
--- a/test/wasm-spec-tests/wasm-spec-tests.status
+++ b/test/wasm-spec-tests/wasm-spec-tests.status
@@ -8,18 +8,6 @@
   # TODO(v8:10994): Failing spec test after update.
   'proposals/js-types/data': [FAIL],
 
-  # Failing tests after update.
-  'simd_address': [SKIP],
-  'simd_align': [SKIP],
-  'simd_bit_shift': [SKIP],
-  'simd_bitwise': [SKIP],
-  'simd_boolean': [SKIP],
-  'simd_const': [SKIP],
-  'simd_conversions': [SKIP],
-  'simd_f32x4': [SKIP],
-  'simd_f32x4_arith': [SKIP],
-  'simd_f32x4_cmp': [SKIP],
-
   # Missing rebase in the proposal repository.
   'proposals/js-types/table': [FAIL],
   'proposals/memory64/linking': [FAIL],
@@ -47,6 +35,8 @@
   # Tests that need to run sequentially (e.g. due to memory consumption).
   'proposals/simd/simd_f32x4*': [PASS, HEAVY],
   'proposals/simd/simd_f64x2*': [PASS, HEAVY],
+  'simd_f32x4*': [PASS, HEAVY],
+  'simd_f64x2*': [PASS, HEAVY],
   'f32*': [PASS, HEAVY],
   'f64*': [PASS, HEAVY],
 }],  # ALWAYS
@@ -56,10 +46,15 @@
   'proposals/simd/simd_f32x4': [PASS, FAIL],
   'proposals/simd/simd_f32x4_arith': [PASS, FAIL],
   'proposals/simd/simd_f32x4_cmp': [PASS, FAIL],
+  'simd_f32x4': [PASS, FAIL],
+  'simd_f32x4_arith': [PASS, FAIL],
+  'simd_f32x4_cmp': [PASS, FAIL],
   # This test only has 1 problematic use of f32x4.min and f32x4.div, consider
   # removing it from upstream, then we can run this test.
   'proposals/simd/simd_splat' : [PASS, FAIL],
   'proposals/simd/simd_f32x4_pmin_pmax' : [PASS, FAIL],
+  'simd_splat' : [PASS, FAIL],
+  'simd_f32x4_pmin_pmax' : [PASS, FAIL],
 }],  # arch == arm and not simulator_run
 
 ['arch == mipsel or arch == mips64el or arch == mips or arch == mips64', {
@@ -113,6 +108,7 @@
 
    # SIMD is not fully implemented yet.
    'proposals/simd/*': [SKIP],
+   'simd*': [SKIP],
 }],  # 'arch == riscv64
 
 ['arch == ppc or arch == ppc64', {
@@ -163,6 +159,7 @@
 ##############################################################################
 ['no_simd_hardware == True', {
   'proposals/simd/*': [SKIP],
+  'simd*': [SKIP],
 }],  # no_simd_hardware == True
 
 ]
-- 
2.35.1

