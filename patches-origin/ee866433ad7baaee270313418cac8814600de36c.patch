From ee866433ad7baaee270313418cac8814600de36c Mon Sep 17 00:00:00 2001
From: Andreas Haas <ahaas@chromium.org>
Date: Wed, 27 Apr 2022 09:42:20 +0200
Subject: [PATCH] [wasm] Remove SIMD proposal tests

The SIMD proposal has been merged into the main spec, it is not
necessary anymore to execute the SIMD proposal tests additionally.

R=gdeepti@chromium.org

Change-Id: I1c5847a1bfba2d0c956cf353816fd71417506a1f
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3609848
Reviewed-by: Deepti Gandluri <gdeepti@chromium.org>
Commit-Queue: Andreas Haas <ahaas@chromium.org>
Cr-Commit-Position: refs/heads/main@{#80241}
---
 test/wasm-js/testcfg.py                     | 5 -----
 test/wasm-js/tests.tar.gz.sha1              | 2 +-
 test/wasm-js/wasm-js.status                 | 3 ---
 test/wasm-spec-tests/tests.tar.gz.sha1      | 2 +-
 test/wasm-spec-tests/wasm-spec-tests.status | 9 ---------
 tools/wasm/update-wasm-spec-tests.sh        | 5 ++++-
 6 files changed, 6 insertions(+), 20 deletions(-)

diff --git a/test/wasm-js/testcfg.py b/test/wasm-js/testcfg.py
index 785853a48bf..a28586a0e3f 100644
--- a/test/wasm-js/testcfg.py
+++ b/test/wasm-js/testcfg.py
@@ -23,11 +23,6 @@ proposal_flags = [{
                     'flags': ['--experimental-wasm-tail-call',
                               '--wasm-staging']
                   },
-                  {
-                    'name': 'simd',
-                    'flags': ['--experimental-wasm-simd',
-                              '--wasm-staging']
-                  },
                   {
                     'name': 'memory64',
                     'flags': ['--experimental-wasm-memory64',
diff --git a/test/wasm-js/tests.tar.gz.sha1 b/test/wasm-js/tests.tar.gz.sha1
index d4933d79fd4..5036c3ffa49 100644
--- a/test/wasm-js/tests.tar.gz.sha1
+++ b/test/wasm-js/tests.tar.gz.sha1
@@ -1 +1 @@
-77caf7a71ca803a21490254a355d3653bc09c463
\ No newline at end of file
+0caddd4400f2bcc1f1068e61de360da525ee09dc
\ No newline at end of file
diff --git a/test/wasm-js/wasm-js.status b/test/wasm-js/wasm-js.status
index 3cca606199d..f909bf140a7 100644
--- a/test/wasm-js/wasm-js.status
+++ b/test/wasm-js/wasm-js.status
@@ -20,11 +20,9 @@
   # Outdated proposal tests.
   'proposals/js-types/table/get-set': [FAIL],
   'proposals/memory64/table/get-set': [FAIL],
-  'proposals/simd/table/get-set': [FAIL],
   'proposals/tail-call/table/get-set': [FAIL],
   'proposals/js-types/memory/constructor': [FAIL],
   'proposals/memory64/memory/constructor': [FAIL],
-  'proposals/simd/memory/constructor': [FAIL],
   'proposals/tail-call/memory/constructor': [FAIL],
   'proposals/js-types/interface': [FAIL],
   'proposals/memory64/interface': [FAIL],
@@ -38,7 +36,6 @@
 
   # These are slow, and not useful to run for the proposals:
   'proposals/js-types/limits': [SKIP],
-  'proposals/simd/limits': [SKIP],
   'proposals/memory64/limits': [SKIP],
 }], # ALWAYS
 
diff --git a/test/wasm-spec-tests/tests.tar.gz.sha1 b/test/wasm-spec-tests/tests.tar.gz.sha1
index 3029661f87d..f9cb84a0dfb 100644
--- a/test/wasm-spec-tests/tests.tar.gz.sha1
+++ b/test/wasm-spec-tests/tests.tar.gz.sha1
@@ -1 +1 @@
-f91743f2e18c6499455ea1d4924046fff6a4a82b
\ No newline at end of file
+9a2ab19f199c25fa3db70a5dd831e82c748ebabd
\ No newline at end of file
diff --git a/test/wasm-spec-tests/wasm-spec-tests.status b/test/wasm-spec-tests/wasm-spec-tests.status
index a80d4ff6033..dfd8594aa47 100644
--- a/test/wasm-spec-tests/wasm-spec-tests.status
+++ b/test/wasm-spec-tests/wasm-spec-tests.status
@@ -33,8 +33,6 @@
   'proposals/memory64/imports': [FAIL],
 
   # Tests that need to run sequentially (e.g. due to memory consumption).
-  'proposals/simd/simd_f32x4*': [PASS, HEAVY],
-  'proposals/simd/simd_f64x2*': [PASS, HEAVY],
   'simd_f32x4*': [PASS, HEAVY],
   'simd_f64x2*': [PASS, HEAVY],
   'f32*': [PASS, HEAVY],
@@ -43,16 +41,11 @@
 
 ['arch == arm and not simulator_run', {
   # See https://crbug.com/v8/10938 denormals not handled correctly on ARM.
-  'proposals/simd/simd_f32x4': [PASS, FAIL],
-  'proposals/simd/simd_f32x4_arith': [PASS, FAIL],
-  'proposals/simd/simd_f32x4_cmp': [PASS, FAIL],
   'simd_f32x4': [PASS, FAIL],
   'simd_f32x4_arith': [PASS, FAIL],
   'simd_f32x4_cmp': [PASS, FAIL],
   # This test only has 1 problematic use of f32x4.min and f32x4.div, consider
   # removing it from upstream, then we can run this test.
-  'proposals/simd/simd_splat' : [PASS, FAIL],
-  'proposals/simd/simd_f32x4_pmin_pmax' : [PASS, FAIL],
   'simd_splat' : [PASS, FAIL],
   'simd_f32x4_pmin_pmax' : [PASS, FAIL],
 }],  # arch == arm and not simulator_run
@@ -107,7 +100,6 @@
    'proposals/tail-call/skip-stack-guard-page': '--sim-stack-size=8192',
 
    # SIMD is not fully implemented yet.
-   'proposals/simd/*': [SKIP],
    'simd*': [SKIP],
 }],  # 'arch == riscv64
 
@@ -158,7 +150,6 @@
 
 ##############################################################################
 ['no_simd_hardware == True', {
-  'proposals/simd/*': [SKIP],
   'simd*': [SKIP],
 }],  # no_simd_hardware == True
 
diff --git a/tools/wasm/update-wasm-spec-tests.sh b/tools/wasm/update-wasm-spec-tests.sh
index 1ab8853a1ad..554d7efea95 100755
--- a/tools/wasm/update-wasm-spec-tests.sh
+++ b/tools/wasm/update-wasm-spec-tests.sh
@@ -62,6 +62,9 @@ log_and_run make clean opt
 
 log_and_run cd ${TMP_DIR}/spec/test/core
 log_and_run cp *.wast ${SPEC_TEST_DIR}/tests/
+# SIMD tests are in a subdirectory. The "run.py" script below takes care of
+# that, but we have to copy the .wast files explicitly.
+log_and_run cp simd/*.wast ${SPEC_TEST_DIR}/tests/
 
 log_and_run ./run.py --wasm ${TMP_DIR}/spec/interpreter/wasm --out ${TMP_DIR}
 log_and_run cp ${TMP_DIR}/*.js ${SPEC_TEST_DIR}/tests/
@@ -91,7 +94,7 @@ done
 # Generate the proposal tests.
 ###############################################################################
 
-repos='js-types tail-call simd memory64'
+repos='js-types tail-call memory64'
 
 for repo in ${repos}; do
   echo "Process ${repo}"
-- 
2.35.1

