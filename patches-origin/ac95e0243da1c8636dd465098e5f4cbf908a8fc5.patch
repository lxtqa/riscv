From ac95e0243da1c8636dd465098e5f4cbf908a8fc5 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Thu, 16 Sep 2021 09:56:06 +0800
Subject: [PATCH] [riscv64]delete check in F32X4MIN/MAX

Change-Id: I7419009e11d40416322abb0bec8bfacf9b5580d0
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3162721
Commit-Queue: Ji Qiu <qiuji@iscas.ac.cn>
Reviewed-by: Ji Qiu <qiuji@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#76862}
---
 .../backend/riscv64/code-generator-riscv64.cc    | 16 +++++++---------
 .../baseline/riscv64/liftoff-assembler-riscv64.h | 14 ++++++--------
 2 files changed, 13 insertions(+), 17 deletions(-)

diff --git a/src/compiler/backend/riscv64/code-generator-riscv64.cc b/src/compiler/backend/riscv64/code-generator-riscv64.cc
index 4d9e25f471..7dbba1fed0 100644
--- a/src/compiler/backend/riscv64/code-generator-riscv64.cc
+++ b/src/compiler/backend/riscv64/code-generator-riscv64.cc
@@ -2549,11 +2549,10 @@ CodeGenerator::CodeGenResult CodeGenerator::AssembleArchInstruction(
                   i.InputSimd128Register(1));
       __ vand_vv(v0, v0, kSimd128ScratchReg);
       __ li(kScratchReg, kNaN);
-      __ vmv_vx(i.OutputSimd128Register(), kScratchReg);
-      DCHECK_NE(i.OutputSimd128Register(), i.InputSimd128Register(1));
-      DCHECK_NE(i.OutputSimd128Register(), i.InputSimd128Register(0));
-      __ vfmax_vv(i.OutputSimd128Register(), i.InputSimd128Register(1),
+      __ vmv_vx(kSimd128ScratchReg, kScratchReg);
+      __ vfmax_vv(kSimd128ScratchReg, i.InputSimd128Register(1),
                   i.InputSimd128Register(0), Mask);
+      __ vmv_vv(i.OutputSimd128Register(), kSimd128ScratchReg);
       break;
     }
     case kRiscvF32x4Min: {
@@ -2564,11 +2563,10 @@ CodeGenerator::CodeGenResult CodeGenerator::AssembleArchInstruction(
                   i.InputSimd128Register(1));
       __ vand_vv(v0, v0, kSimd128ScratchReg);
       __ li(kScratchReg, kNaN);
-      __ vmv_vx(i.OutputSimd128Register(), kScratchReg);
-      DCHECK_NE(i.OutputSimd128Register(), i.InputSimd128Register(1));
-      DCHECK_NE(i.OutputSimd128Register(), i.InputSimd128Register(0));
-      __ vfmin_vv(i.OutputSimd128Register(), i.InputSimd128Register(1),
-                  i.InputSimd128Register(0));
+      __ vmv_vx(kSimd128ScratchReg, kScratchReg);
+      __ vfmin_vv(kSimd128ScratchReg, i.InputSimd128Register(1),
+                  i.InputSimd128Register(0), Mask);
+      __ vmv_vv(i.OutputSimd128Register(), kSimd128ScratchReg);
       break;
     }
     default:
diff --git a/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h b/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
index 69b48a3a9b..8d5051d522 100644
--- a/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
+++ b/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
@@ -2603,10 +2603,9 @@ void LiftoffAssembler::emit_f32x4_min(LiftoffRegister dst, LiftoffRegister lhs,
   vmfeq_vv(kSimd128ScratchReg, rhs.fp().toV(), rhs.fp().toV());
   vand_vv(v0, v0, kSimd128ScratchReg);
   li(kScratchReg, kNaN);
-  DCHECK_NE(dst, lhs);
-  DCHECK_NE(dst, rhs);
-  vmv_vx(dst.fp().toV(), kScratchReg);
-  vfmin_vv(dst.fp().toV(), rhs.fp().toV(), lhs.fp().toV(), Mask);
+  vmv_vx(kSimd128ScratchReg, kScratchReg);
+  vfmin_vv(kSimd128ScratchReg, rhs.fp().toV(), lhs.fp().toV(), Mask);
+  vmv_vv(dst.fp().toV(), kSimd128ScratchReg);
 }
 
 void LiftoffAssembler::emit_f32x4_max(LiftoffRegister dst, LiftoffRegister lhs,
@@ -2617,10 +2616,9 @@ void LiftoffAssembler::emit_f32x4_max(LiftoffRegister dst, LiftoffRegister lhs,
   vmfeq_vv(kSimd128ScratchReg, rhs.fp().toV(), rhs.fp().toV());
   vand_vv(v0, v0, kSimd128ScratchReg);
   li(kScratchReg, kNaN);
-  DCHECK_NE(dst, lhs);
-  DCHECK_NE(dst, rhs);
-  vmv_vx(dst.fp().toV(), kScratchReg);
-  vfmax_vv(dst.fp().toV(), rhs.fp().toV(), lhs.fp().toV(), Mask);
+  vmv_vx(kSimd128ScratchReg, kScratchReg);
+  vfmax_vv(kSimd128ScratchReg, rhs.fp().toV(), lhs.fp().toV(), Mask);
+  vmv_vv(dst.fp().toV(), kSimd128ScratchReg);
 }
 
 void LiftoffAssembler::emit_f32x4_pmin(LiftoffRegister dst, LiftoffRegister lhs,
-- 
2.35.1

