From 46e50187d82fa6645339b5ed29d92b10cc42cba6 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Tue, 15 Aug 2023 09:47:41 +0800
Subject: [PATCH] [riscv][wasm] Fix memory.fill and memory.init with i64.const
 args

Calls to memory.init and fill with i64.const destination argument
are generated by LLVM for thread local storage initialization.
Without the fix they fail with "Memory access out of bounds" error.


Port commit e703a03fec212957bc522dc859d4330bd21e6b69


Change-Id: I833ffba91d7b73405736b54be8ecaa9b6e4b7419
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4779385
Reviewed-by: Ji Qiu <qiuji@iscas.ac.cn>
Commit-Queue: Ji Qiu <qiuji@iscas.ac.cn>
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#89517}
---
 .../riscv/liftoff-assembler-riscv64.h         | 21 +++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h b/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h
index 962228393b0..d308a48c1e2 100644
--- a/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h
+++ b/src/wasm/baseline/riscv/liftoff-assembler-riscv64.h
@@ -1674,14 +1674,23 @@ void LiftoffAssembler::CallC(const std::initializer_list<VarState> args,
           UNREACHABLE();
       }
     } else if (arg.is_const()) {
-      DCHECK_EQ(kI32, arg.kind());
-      if (arg.i32_const() == 0) {
-        src = zero_reg;
+      if (arg.kind() == kI32) {
+        if (arg.i32_const() == 0) {
+          Sw(zero_reg, dst);
+        } else {
+          src = temps.Acquire();
+          li(src, arg.i32_const());
+          Sw(src, dst);
+        }
       } else {
-        src = temps.Acquire();
-        li(src, arg.i32_const());
+        if (arg.i32_const() == 0) {
+          StoreWord(zero_reg, dst);
+        } else {
+          src = temps.Acquire();
+          li(src, static_cast<int64_t>(arg.i32_const()));
+          StoreWord(src, dst);
+        }
       }
-      StoreWord(src, dst);
     } else if (value_kind_size(arg.kind()) == 4) {
       MemOperand src = liftoff::GetStackSlot(arg.offset());
       auto scratch = temps.Acquire();
-- 
2.35.1

