From 24861cbefe45a89be8ef93d36ec21e0a67ab4a0c Mon Sep 17 00:00:00 2001
From: Deepti Gandluri <gdeepti@chromium.org>
Date: Fri, 15 Sep 2023 01:04:09 +0000
Subject: [PATCH] Revert "[builtins] Make more Builtins methods constexpr"
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This reverts commit 0831b6bd1213aa09ded21905e879562606196385.

Reason for revert: Suspect for binary size increase: https://logs.chromium.org/logs/chromium/buildbucket/cr-buildbucket/8769932193492886177/+/u/Trybot_Results/Binary_Size_Details

Original change's description:
> [builtins] Make more Builtins methods constexpr
>
> The main motivation is to be able to distinguish between CPP and JS
> linkage builtins in Maglev. Malgev heavily relies on templates for
> builtins and therefore needs a way to distinguish between CPP and JS
> linkage at compile-time.
>
> Bug: v8:7700
> Change-Id: I2986e3553a6d9210f473dfbc03c51220572b57f1
> Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4859927
> Reviewed-by: Dominik Inf√ºhr <dinfuehr@chromium.org>
> Commit-Queue: Patrick Thier <pthier@chromium.org>
> Reviewed-by: Igor Sheludko <ishell@chromium.org>
> Reviewed-by: Jakob Linke <jgruber@chromium.org>
> Cr-Commit-Position: refs/heads/main@{#89996}

Bug: v8:7700
Change-Id: I441947993fda421d1b7b9b225129a3b9523d3cac
No-Presubmit: true
No-Tree-Checks: true
No-Try: true
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4863704
Owners-Override: Deepti Gandluri <gdeepti@chromium.org>
Commit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Auto-Submit: Deepti Gandluri <gdeepti@chromium.org>
Cr-Commit-Position: refs/heads/main@{#90002}
---
 BUILD.bazel                                   |   3 +-
 BUILD.gn                                      |   3 +-
 src/builtins/base.tq                          |   2 +-
 src/builtins/builtins-array-gen.cc            |   2 +-
 src/builtins/builtins-async-function-gen.cc   |   2 +-
 src/builtins/builtins-async-gen.cc            |   2 +-
 src/builtins/builtins-async-generator-gen.cc  |   2 +-
 src/builtins/builtins-async-iterator-gen.cc   |   2 +-
 src/builtins/builtins-bigint-gen.cc           |   2 +-
 src/builtins/builtins-call-gen.cc             |   2 +-
 src/builtins/builtins-collections-gen.cc      |   2 +-
 src/builtins/builtins-constructor-gen.cc      |   2 +-
 src/builtins/builtins-conversion-gen.cc       |   2 +-
 src/builtins/builtins-date-gen.cc             |   2 +-
 src/builtins/builtins-generator-gen.cc        |   2 +-
 src/builtins/builtins-global-gen.cc           |   2 +-
 src/builtins/builtins-handler-gen.cc          |   2 +-
 src/builtins/builtins-ic-gen.cc               |   2 +-
 src/builtins/builtins-inl.h                   | 177 ------------------
 src/builtins/builtins-internal-gen.cc         |   2 +-
 src/builtins/builtins-intl-gen.cc             |   2 +-
 src/builtins/builtins-iterator-gen.cc         |   2 +-
 src/builtins/builtins-lazy-gen.cc             |   2 +-
 src/builtins/builtins-microtask-queue-gen.cc  |   2 +-
 src/builtins/builtins-number-gen.cc           |   2 +-
 src/builtins/builtins-object-gen.cc           |   2 +-
 src/builtins/builtins-promise-gen.cc          |   2 +-
 src/builtins/builtins-proxy-gen.cc            |   2 +-
 src/builtins/builtins-regexp-gen.cc           |   2 +-
 src/builtins/builtins-shadow-realm-gen.cc     |   2 +-
 .../builtins-sharedarraybuffer-gen.cc         |   2 +-
 src/builtins/builtins-string-gen.cc           |   2 +-
 src/builtins/builtins-temporal-gen.cc         |   2 +-
 src/builtins/builtins-typed-array-gen.cc      |   2 +-
 ...s-utils-gen-inl.h => builtins-utils-gen.h} |   7 +-
 src/builtins/builtins-wasm-gen.cc             |   2 +-
 src/builtins/builtins.cc                      | 110 ++++++++++-
 src/builtins/builtins.h                       |  57 ++++--
 src/builtins/setup-builtins-internal.cc       |   2 +-
 src/codegen/arm/macro-assembler-arm.cc        |   1 -
 src/codegen/arm64/macro-assembler-arm64.cc    |   1 -
 src/codegen/ia32/macro-assembler-ia32.cc      |   2 +-
 .../loong64/macro-assembler-loong64.cc        |   1 -
 src/codegen/macro-assembler-base.cc           |  12 +-
 src/codegen/macro-assembler-base.h            |  10 +-
 src/codegen/mips64/macro-assembler-mips64.cc  |   1 -
 src/codegen/ppc/macro-assembler-ppc.cc        |   1 -
 src/codegen/reloc-info.cc                     |   1 -
 src/codegen/riscv/macro-assembler-riscv.cc    |   1 -
 src/codegen/s390/macro-assembler-s390.cc      |   1 -
 src/codegen/x64/macro-assembler-x64.cc        |   1 -
 src/compiler/backend/instruction.cc           |   1 -
 src/compiler/frame-states.cc                  |   1 -
 src/compiler/js-call-reducer.cc               |   1 -
 src/compiler/js-typed-lowering.cc             |   1 -
 src/compiler/pipeline.cc                      |   1 -
 src/debug/debug-evaluate.cc                   |   1 -
 src/deoptimizer/deoptimizer.cc                |   1 -
 src/diagnostics/disassembler.cc               |   1 -
 src/diagnostics/objects-printer.cc            |   1 -
 src/execution/arm64/simulator-arm64.cc        |   1 -
 src/execution/frames.cc                       |   1 -
 src/heap/heap.cc                              |   1 -
 src/ic/handler-configuration.cc               |   1 -
 src/interpreter/interpreter.cc                |   1 -
 src/logging/log.cc                            |   1 -
 src/maglev/maglev-code-generator.cc           |   1 -
 src/maglev/maglev-graph-builder.cc            |   2 +-
 src/maglev/maglev-graph-printer.cc            |   1 -
 src/maglev/maglev-ir.cc                       |   1 -
 src/objects/call-site-info.cc                 |   1 -
 src/objects/code.cc                           |   1 -
 src/snapshot/embedded/embedded-data.cc        |   1 -
 src/snapshot/embedded/embedded-file-writer.cc |   1 -
 src/snapshot/sort-builtins.cc                 |   1 -
 .../interpreter/interpreter-unittest.cc       |   1 -
 76 files changed, 196 insertions(+), 286 deletions(-)
 delete mode 100644 src/builtins/builtins-inl.h
 rename src/builtins/{builtins-utils-gen-inl.h => builtins-utils-gen.h} (94%)

diff --git a/BUILD.bazel b/BUILD.bazel
index b01ce241503..4f795c40411 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -1194,7 +1194,6 @@ filegroup(
         "src/builtins/accessors.h",
         "src/builtins/builtins.cc",
         "src/builtins/builtins.h",
-        "src/builtins/builtins-inl.h",
         "src/builtins/builtins-api.cc",
         "src/builtins/builtins-array.cc",
         "src/builtins/builtins-arraybuffer.cc",
@@ -3254,7 +3253,7 @@ filegroup(
         "src/builtins/builtins-temporal-gen.cc",
         "src/builtins/builtins-typed-array-gen.cc",
         "src/builtins/builtins-typed-array-gen.h",
-        "src/builtins/builtins-utils-gen-inl.h",
+        "src/builtins/builtins-utils-gen.h",
         "src/builtins/growable-fixed-array-gen.cc",
         "src/builtins/growable-fixed-array-gen.h",
         "src/builtins/profile-data-reader.cc",
diff --git a/BUILD.gn b/BUILD.gn
index a3cb4ccd64a..df7c780294d 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -2780,7 +2780,7 @@ v8_source_set("v8_initializers") {
     "src/builtins/builtins-temporal-gen.cc",
     "src/builtins/builtins-typed-array-gen.cc",
     "src/builtins/builtins-typed-array-gen.h",
-    "src/builtins/builtins-utils-gen-inl.h",
+    "src/builtins/builtins-utils-gen.h",
     "src/builtins/growable-fixed-array-gen.cc",
     "src/builtins/growable-fixed-array-gen.h",
     "src/builtins/profile-data-reader.cc",
@@ -3111,7 +3111,6 @@ v8_header_set("v8_internal_headers") {
     "src/builtins/builtins-constructor.h",
     "src/builtins/builtins-definitions.h",
     "src/builtins/builtins-descriptors.h",
-    "src/builtins/builtins-inl.h",
     "src/builtins/builtins-promise.h",
     "src/builtins/builtins-utils-inl.h",
     "src/builtins/builtins-utils.h",
diff --git a/src/builtins/base.tq b/src/builtins/base.tq
index a2b7ff8f691..4685c4b007b 100644
--- a/src/builtins/base.tq
+++ b/src/builtins/base.tq
@@ -3,7 +3,7 @@
 // Context found in the LICENSE file.
 
 #include 'src/builtins/builtins-regexp-gen.h'
-#include 'src/builtins/builtins-utils-gen-inl.h'
+#include 'src/builtins/builtins-utils-gen.h'
 #include 'src/builtins/builtins.h'
 #include 'src/codegen/code-factory.h'
 #include 'src/heap/factory-inl.h'
diff --git a/src/builtins/builtins-array-gen.cc b/src/builtins/builtins-array-gen.cc
index 1c0d3403392..b1eae115ee7 100644
--- a/src/builtins/builtins-array-gen.cc
+++ b/src/builtins/builtins-array-gen.cc
@@ -7,7 +7,7 @@
 #include "src/builtins/builtins-iterator-gen.h"
 #include "src/builtins/builtins-string-gen.h"
 #include "src/builtins/builtins-typed-array-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/codegen/interface-descriptors-inl.h"
diff --git a/src/builtins/builtins-async-function-gen.cc b/src/builtins/builtins-async-function-gen.cc
index b689fb111b9..20eca72b457 100644
--- a/src/builtins/builtins-async-function-gen.cc
+++ b/src/builtins/builtins-async-function-gen.cc
@@ -3,7 +3,7 @@
 // found in the LICENSE file.
 
 #include "src/builtins/builtins-async-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/objects/js-generator.h"
diff --git a/src/builtins/builtins-async-gen.cc b/src/builtins/builtins-async-gen.cc
index 1300c1a58b7..d87004050ba 100644
--- a/src/builtins/builtins-async-gen.cc
+++ b/src/builtins/builtins-async-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/builtins/builtins-async-gen.h"
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/heap/factory-inl.h"
 #include "src/objects/js-generator.h"
 #include "src/objects/js-promise.h"
diff --git a/src/builtins/builtins-async-generator-gen.cc b/src/builtins/builtins-async-generator-gen.cc
index de632b46801..bcf982bb2f5 100644
--- a/src/builtins/builtins-async-generator-gen.cc
+++ b/src/builtins/builtins-async-generator-gen.cc
@@ -3,7 +3,7 @@
 // found in the LICENSE file.
 
 #include "src/builtins/builtins-async-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-async-iterator-gen.cc b/src/builtins/builtins-async-iterator-gen.cc
index 6a2c5c91289..9c2b753ae3c 100644
--- a/src/builtins/builtins-async-iterator-gen.cc
+++ b/src/builtins/builtins-async-iterator-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/base/optional.h"
 #include "src/builtins/builtins-async-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-bigint-gen.cc b/src/builtins/builtins-bigint-gen.cc
index a0993d9eb0a..8db65c9f53c 100644
--- a/src/builtins/builtins-bigint-gen.cc
+++ b/src/builtins/builtins-bigint-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/builtins/builtins-bigint-gen.h"
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/objects/dictionary.h"
diff --git a/src/builtins/builtins-call-gen.cc b/src/builtins/builtins-call-gen.cc
index c38ceb05b49..1f98e20e678 100644
--- a/src/builtins/builtins-call-gen.cc
+++ b/src/builtins/builtins-call-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/builtins/builtins-call-gen.h"
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/macro-assembler.h"
 #include "src/common/globals.h"
diff --git a/src/builtins/builtins-collections-gen.cc b/src/builtins/builtins-collections-gen.cc
index 7036b448e8e..2cd4d731aaf 100644
--- a/src/builtins/builtins-collections-gen.cc
+++ b/src/builtins/builtins-collections-gen.cc
@@ -6,7 +6,7 @@
 
 #include "src/builtins/builtins-constructor-gen.h"
 #include "src/builtins/builtins-iterator-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/execution/protectors.h"
 #include "src/heap/factory-inl.h"
diff --git a/src/builtins/builtins-constructor-gen.cc b/src/builtins/builtins-constructor-gen.cc
index e81dee67db5..c6423124c14 100644
--- a/src/builtins/builtins-constructor-gen.cc
+++ b/src/builtins/builtins-constructor-gen.cc
@@ -7,7 +7,7 @@
 #include "src/ast/ast.h"
 #include "src/builtins/builtins-call-gen.h"
 #include "src/builtins/builtins-constructor.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-conversion-gen.cc b/src/builtins/builtins-conversion-gen.cc
index d7fa772f42c..d635a8cb13c 100644
--- a/src/builtins/builtins-conversion-gen.cc
+++ b/src/builtins/builtins-conversion-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-date-gen.cc b/src/builtins/builtins-date-gen.cc
index 73c9a877f80..5edd5487f30 100644
--- a/src/builtins/builtins-date-gen.cc
+++ b/src/builtins/builtins-date-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/objects/dictionary.h"
diff --git a/src/builtins/builtins-generator-gen.cc b/src/builtins/builtins-generator-gen.cc
index a9e00d8670d..d8c091889e1 100644
--- a/src/builtins/builtins-generator-gen.cc
+++ b/src/builtins/builtins-generator-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-global-gen.cc b/src/builtins/builtins-global-gen.cc
index 94b9c50c7ab..1edfbbf80fa 100644
--- a/src/builtins/builtins-global-gen.cc
+++ b/src/builtins/builtins-global-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 
diff --git a/src/builtins/builtins-handler-gen.cc b/src/builtins/builtins-handler-gen.cc
index 164912a671e..124b9f6b6f2 100644
--- a/src/builtins/builtins-handler-gen.cc
+++ b/src/builtins/builtins-handler-gen.cc
@@ -3,7 +3,7 @@
 // found in the LICENSE file.
 
 #include "src/base/optional.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/ic/ic.h"
diff --git a/src/builtins/builtins-ic-gen.cc b/src/builtins/builtins-ic-gen.cc
index e46b2243cbf..8c3a7fb1ad6 100644
--- a/src/builtins/builtins-ic-gen.cc
+++ b/src/builtins/builtins-ic-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/ic/accessor-assembler.h"
diff --git a/src/builtins/builtins-inl.h b/src/builtins/builtins-inl.h
deleted file mode 100644
index 08fa3c636a9..00000000000
--- a/src/builtins/builtins-inl.h
+++ /dev/null
@@ -1,177 +0,0 @@
-// Copyright 2023 the V8 project authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#ifndef V8_BUILTINS_BUILTINS_INL_H_
-#define V8_BUILTINS_BUILTINS_INL_H_
-
-#include "src/builtins/builtins.h"
-#include "src/utils/utils.h"
-
-namespace v8 {
-namespace internal {
-
-namespace builtins {
-namespace detail {
-
-struct BuiltinInfo {
-  const char* name;
-  Builtins::Kind kind;
-};
-
-#define DECL_CPP(Name, ...) {#Name, Builtins::CPP},
-#define DECL_TFJ(Name, ...) {#Name, Builtins::TFJ},
-#define DECL_TFC(Name, ...) {#Name, Builtins::TFC},
-#define DECL_TFS(Name, ...) {#Name, Builtins::TFS},
-#define DECL_TFH(Name, ...) {#Name, Builtins::TFH},
-#define DECL_BCH(Name, ...) {#Name, Builtins::BCH},
-#define DECL_ASM(Name, ...) {#Name, Builtins::ASM},
-constexpr BuiltinInfo builtin_info[] = {BUILTIN_LIST(
-    DECL_CPP, DECL_TFJ, DECL_TFC, DECL_TFS, DECL_TFH, DECL_BCH, DECL_ASM)};
-#undef DECL_CPP
-#undef DECL_TFJ
-#undef DECL_TFC
-#undef DECL_TFS
-#undef DECL_TFH
-#undef DECL_BCH
-#undef DECL_ASM
-
-}  // namespace detail
-}  // namespace builtins
-
-// static
-constexpr BytecodeOffset Builtins::GetContinuationBytecodeOffset(
-    Builtin builtin) {
-  DCHECK(Builtins::KindOf(builtin) == TFJ || Builtins::KindOf(builtin) == TFC ||
-         Builtins::KindOf(builtin) == TFS);
-  return BytecodeOffset(BytecodeOffset::kFirstBuiltinContinuationId +
-                        ToInt(builtin));
-}
-
-// static
-constexpr Builtin Builtins::GetBuiltinFromBytecodeOffset(BytecodeOffset id) {
-  Builtin builtin = Builtins::FromInt(
-      id.ToInt() - BytecodeOffset::kFirstBuiltinContinuationId);
-  DCHECK(Builtins::KindOf(builtin) == TFJ || Builtins::KindOf(builtin) == TFC ||
-         Builtins::KindOf(builtin) == TFS);
-  return builtin;
-}
-
-// stati
-constexpr Builtin Builtins::GetRecordWriteStub(SaveFPRegsMode fp_mode,
-                                               PointerType type) {
-  switch (type) {
-    case PointerType::kDirect:
-      switch (fp_mode) {
-        case SaveFPRegsMode::kIgnore:
-          return Builtin::kRecordWriteIgnoreFP;
-        case SaveFPRegsMode::kSave:
-          return Builtin::kRecordWriteSaveFP;
-      }
-    case PointerType::kIndirect:
-      switch (fp_mode) {
-        case SaveFPRegsMode::kIgnore:
-          return Builtin::kIndirectPointerBarrierIgnoreFP;
-        case SaveFPRegsMode::kSave:
-          return Builtin::kIndirectPointerBarrierSaveFP;
-      }
-  }
-}
-
-// static
-constexpr Builtin Builtins::GetEphemeronKeyBarrierStub(SaveFPRegsMode fp_mode) {
-  switch (fp_mode) {
-    case SaveFPRegsMode::kIgnore:
-      return Builtin::kEphemeronKeyBarrierIgnoreFP;
-    case SaveFPRegsMode::kSave:
-      return Builtin::kEphemeronKeyBarrierSaveFP;
-  }
-}
-
-// static
-constexpr const char* Builtins::name(Builtin builtin) {
-  int index = ToInt(builtin);
-  DCHECK(IsBuiltinId(index));
-  return builtins::detail::builtin_info[index].name;
-}
-
-// static
-constexpr const char* Builtins::NameForStackTrace(Builtin builtin) {
-#if V8_ENABLE_WEBASSEMBLY
-  // Most builtins are never shown in stack traces. Those that are exposed
-  // to JavaScript get their name from the object referring to them. Here
-  // we only support a few internal builtins that have special reasons for
-  // being shown on stack traces:
-  // - builtins that are allowlisted in {StubFrame::Summarize}.
-  // - builtins that throw the same error as one of those above, but would
-  //   lose information and e.g. print "indexOf" instead of "String.indexOf".
-  switch (builtin) {
-    case Builtin::kStringPrototypeToLocaleLowerCase:
-      return "String.toLocaleLowerCase";
-    case Builtin::kStringPrototypeIndexOf:
-    case Builtin::kThrowIndexOfCalledOnNull:
-      return "String.indexOf";
-#if V8_INTL_SUPPORT
-    case Builtin::kStringPrototypeToLowerCaseIntl:
-#endif
-    case Builtin::kThrowToLowerCaseCalledOnNull:
-      return "String.toLowerCase";
-    case Builtin::kWasmIntToString:
-      return "Number.toString";
-    default:
-      // Callers getting this might well crash, which might be desirable
-      // because it's similar to {UNREACHABLE()}, but contrary to that a
-      // careful caller can also check the value and use it as an "is a
-      // name available for this builtin?" check.
-      return nullptr;
-  }
-#else
-  return nullptr;
-#endif  // V8_ENABLE_WEBASSEMBLY
-}
-
-// static
-constexpr Builtins::Kind Builtins::KindOf(Builtin builtin) {
-  DCHECK(IsBuiltinId(builtin));
-  return builtins::detail::builtin_info[ToInt(builtin)].kind;
-}
-
-// static
-constexpr const char* Builtins::KindNameOf(Builtin builtin) {
-  Kind kind = Builtins::KindOf(builtin);
-  // clang-format off
-  switch (kind) {
-    case CPP: return "CPP";
-    case TFJ: return "TFJ";
-    case TFC: return "TFC";
-    case TFS: return "TFS";
-    case TFH: return "TFH";
-    case BCH: return "BCH";
-    case ASM: return "ASM";
-  }
-  // clang-format on
-  UNREACHABLE();
-}
-
-// static
-constexpr bool Builtins::IsJSEntryVariant(Builtin builtin) {
-  switch (builtin) {
-    case Builtin::kJSEntry:
-    case Builtin::kJSConstructEntry:
-    case Builtin::kJSRunMicrotasksEntry:
-      return true;
-    default:
-      return false;
-  }
-  UNREACHABLE();
-}
-
-// static
-constexpr bool Builtins::IsCpp(Builtin builtin) {
-  return Builtins::KindOf(builtin) == CPP;
-}
-
-}  // namespace internal
-}  // namespace v8
-
-#endif  // V8_BUILTINS_BUILTINS_INL_H_
diff --git a/src/builtins/builtins-internal-gen.cc b/src/builtins/builtins-internal-gen.cc
index 2bbe1a16aa4..9a35975fa92 100644
--- a/src/builtins/builtins-internal-gen.cc
+++ b/src/builtins/builtins-internal-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/api/api.h"
 #include "src/baseline/baseline.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/codegen/interface-descriptors-inl.h"
diff --git a/src/builtins/builtins-intl-gen.cc b/src/builtins/builtins-intl-gen.cc
index 8c1a72a7c44..81b86b8d892 100644
--- a/src/builtins/builtins-intl-gen.cc
+++ b/src/builtins/builtins-intl-gen.cc
@@ -7,7 +7,7 @@
 #endif  // V8_INTL_SUPPORT
 
 #include "src/builtins/builtins-iterator-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/objects/js-list-format-inl.h"
 #include "src/objects/js-list-format.h"
diff --git a/src/builtins/builtins-iterator-gen.cc b/src/builtins/builtins-iterator-gen.cc
index bc26b134a38..04278db6cc4 100644
--- a/src/builtins/builtins-iterator-gen.cc
+++ b/src/builtins/builtins-iterator-gen.cc
@@ -6,7 +6,7 @@
 
 #include "src/builtins/builtins-collections-gen.h"
 #include "src/builtins/builtins-string-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/builtins/growable-fixed-array-gen.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-lazy-gen.cc b/src/builtins/builtins-lazy-gen.cc
index 7a57d06b1ef..2a377bf10e1 100644
--- a/src/builtins/builtins-lazy-gen.cc
+++ b/src/builtins/builtins-lazy-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/builtins/builtins-lazy-gen.h"
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/common/globals.h"
 #include "src/objects/code-inl.h"
diff --git a/src/builtins/builtins-microtask-queue-gen.cc b/src/builtins/builtins-microtask-queue-gen.cc
index e175b1e9ddd..96fdaaba202 100644
--- a/src/builtins/builtins-microtask-queue-gen.cc
+++ b/src/builtins/builtins-microtask-queue-gen.cc
@@ -3,7 +3,7 @@
 // found in the LICENSE file.
 
 #include "src/api/api.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/execution/microtask-queue.h"
 #include "src/objects/js-weak-refs.h"
diff --git a/src/builtins/builtins-number-gen.cc b/src/builtins/builtins-number-gen.cc
index 41cf25a7435..e4de522f5ea 100644
--- a/src/builtins/builtins-number-gen.cc
+++ b/src/builtins/builtins-number-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/ic/binary-op-assembler.h"
diff --git a/src/builtins/builtins-object-gen.cc b/src/builtins/builtins-object-gen.cc
index 906691d856d..a425989083e 100644
--- a/src/builtins/builtins-object-gen.cc
+++ b/src/builtins/builtins-object-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/builtins/builtins-object-gen.h"
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/common/globals.h"
 #include "src/heap/factory-inl.h"
diff --git a/src/builtins/builtins-promise-gen.cc b/src/builtins/builtins-promise-gen.cc
index 941749384de..c48fc0f78fc 100644
--- a/src/builtins/builtins-promise-gen.cc
+++ b/src/builtins/builtins-promise-gen.cc
@@ -7,7 +7,7 @@
 #include "src/builtins/builtins-constructor-gen.h"
 #include "src/builtins/builtins-iterator-gen.h"
 #include "src/builtins/builtins-promise.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-proxy-gen.cc b/src/builtins/builtins-proxy-gen.cc
index 0adbb651b0c..041f2912917 100644
--- a/src/builtins/builtins-proxy-gen.cc
+++ b/src/builtins/builtins-proxy-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/builtins/builtins-proxy-gen.h"
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins-utils.h"
 #include "src/builtins/builtins.h"
 #include "src/common/globals.h"
diff --git a/src/builtins/builtins-regexp-gen.cc b/src/builtins/builtins-regexp-gen.cc
index 6d6e8992345..d3665246913 100644
--- a/src/builtins/builtins-regexp-gen.cc
+++ b/src/builtins/builtins-regexp-gen.cc
@@ -5,7 +5,7 @@
 #include "src/builtins/builtins-regexp-gen.h"
 
 #include "src/builtins/builtins-constructor-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/builtins/growable-fixed-array-gen.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/builtins/builtins-shadow-realm-gen.cc b/src/builtins/builtins-shadow-realm-gen.cc
index baf7a96b989..2cf2b1aa96f 100644
--- a/src/builtins/builtins-shadow-realm-gen.cc
+++ b/src/builtins/builtins-shadow-realm-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/objects/descriptor-array.h"
diff --git a/src/builtins/builtins-sharedarraybuffer-gen.cc b/src/builtins/builtins-sharedarraybuffer-gen.cc
index 3442a9e31ab..09e6de5d1af 100644
--- a/src/builtins/builtins-sharedarraybuffer-gen.cc
+++ b/src/builtins/builtins-sharedarraybuffer-gen.cc
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/objects/objects.h"
diff --git a/src/builtins/builtins-string-gen.cc b/src/builtins/builtins-string-gen.cc
index 6ff9095cb45..85035f3ef5a 100644
--- a/src/builtins/builtins-string-gen.cc
+++ b/src/builtins/builtins-string-gen.cc
@@ -6,7 +6,7 @@
 
 #include "src/base/strings.h"
 #include "src/builtins/builtins-regexp-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/code-stub-assembler.h"
diff --git a/src/builtins/builtins-temporal-gen.cc b/src/builtins/builtins-temporal-gen.cc
index aa09a43e9bf..98c947ab7ef 100644
--- a/src/builtins/builtins-temporal-gen.cc
+++ b/src/builtins/builtins-temporal-gen.cc
@@ -3,7 +3,7 @@
 // found in the LICENSE file.
 
 #include "src/builtins/builtins-iterator-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/growable-fixed-array-gen.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/objects/js-temporal-objects-inl.h"
diff --git a/src/builtins/builtins-typed-array-gen.cc b/src/builtins/builtins-typed-array-gen.cc
index a37dfe34cf7..42e594a0ce9 100644
--- a/src/builtins/builtins-typed-array-gen.cc
+++ b/src/builtins/builtins-typed-array-gen.cc
@@ -5,7 +5,7 @@
 #include "src/builtins/builtins-typed-array-gen.h"
 
 #include "src/builtins/builtins-constructor-gen.h"
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/builtins/builtins.h"
 #include "src/builtins/growable-fixed-array-gen.h"
 #include "src/execution/protectors.h"
diff --git a/src/builtins/builtins-utils-gen-inl.h b/src/builtins/builtins-utils-gen.h
similarity index 94%
rename from src/builtins/builtins-utils-gen-inl.h
rename to src/builtins/builtins-utils-gen.h
index 39a060ca8b3..a274562c041 100644
--- a/src/builtins/builtins-utils-gen-inl.h
+++ b/src/builtins/builtins-utils-gen.h
@@ -2,12 +2,11 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#ifndef V8_BUILTINS_BUILTINS_UTILS_GEN_INL_H_
-#define V8_BUILTINS_BUILTINS_UTILS_GEN_INL_H_
+#ifndef V8_BUILTINS_BUILTINS_UTILS_GEN_H_
+#define V8_BUILTINS_BUILTINS_UTILS_GEN_H_
 
 #include "include/cppgc/source-location.h"
 #include "src/builtins/builtins-descriptors.h"
-#include "src/builtins/builtins-inl.h"
 
 namespace v8 {
 namespace internal {
@@ -62,4 +61,4 @@ class CodeAssemblerState;
 }  // namespace internal
 }  // namespace v8
 
-#endif  // V8_BUILTINS_BUILTINS_UTILS_GEN_INL_H_
+#endif  // V8_BUILTINS_BUILTINS_UTILS_GEN_H_
diff --git a/src/builtins/builtins-wasm-gen.cc b/src/builtins/builtins-wasm-gen.cc
index 52a833d6d85..55fc36fd2c9 100644
--- a/src/builtins/builtins-wasm-gen.cc
+++ b/src/builtins/builtins-wasm-gen.cc
@@ -4,7 +4,7 @@
 
 #include "src/builtins/builtins-wasm-gen.h"
 
-#include "src/builtins/builtins-utils-gen-inl.h"
+#include "src/builtins/builtins-utils-gen.h"
 #include "src/codegen/code-stub-assembler.h"
 #include "src/codegen/interface-descriptors.h"
 #include "src/objects/map-inl.h"
diff --git a/src/builtins/builtins.cc b/src/builtins/builtins.cc
index 9812199dd17..44a794158fa 100644
--- a/src/builtins/builtins.cc
+++ b/src/builtins/builtins.cc
@@ -6,7 +6,6 @@
 
 #include "src/api/api-inl.h"
 #include "src/builtins/builtins-descriptors.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/macro-assembler-inl.h"
@@ -35,6 +34,9 @@ namespace {
 
 // TODO(jgruber): Pack in CallDescriptors::Key.
 struct BuiltinMetadata {
+  const char* name;
+  Builtins::Kind kind;
+
   struct BytecodeAndScale {
     interpreter::Bytecode bytecode : 8;
     interpreter::OperandScale scale : 8;
@@ -65,19 +67,42 @@ struct BuiltinMetadata {
   } data;
 };
 
-#define DECL_CPP(Name, ...) {{FUNCTION_ADDR(Builtin_##Name)}},
-#define DECL_TFJ(_, Count, ...) {{Count, 0}},
-#define DECL_BCH(Name, OperandScale, Bytecode) {{Bytecode, OperandScale}},
-#define NO_METADATA(...) {},
-const BuiltinMetadata builtin_metadata[] = {
-    BUILTIN_LIST(DECL_CPP, DECL_TFJ, NO_METADATA, NO_METADATA, NO_METADATA,
-                 DECL_BCH, NO_METADATA)};
+#define DECL_CPP(Name, ...) \
+  {#Name, Builtins::CPP, {FUNCTION_ADDR(Builtin_##Name)}},
+#define DECL_TFJ(Name, Count, ...) {#Name, Builtins::TFJ, {Count, 0}},
+#define DECL_TFC(Name, ...) {#Name, Builtins::TFC, {}},
+#define DECL_TFS(Name, ...) {#Name, Builtins::TFS, {}},
+#define DECL_TFH(Name, ...) {#Name, Builtins::TFH, {}},
+#define DECL_BCH(Name, OperandScale, Bytecode) \
+  {#Name, Builtins::BCH, {Bytecode, OperandScale}},
+#define DECL_ASM(Name, ...) {#Name, Builtins::ASM, {}},
+const BuiltinMetadata builtin_metadata[] = {BUILTIN_LIST(
+    DECL_CPP, DECL_TFJ, DECL_TFC, DECL_TFS, DECL_TFH, DECL_BCH, DECL_ASM)};
 #undef DECL_CPP
 #undef DECL_TFJ
+#undef DECL_TFC
+#undef DECL_TFS
+#undef DECL_TFH
 #undef DECL_BCH
+#undef DECL_ASM
 
 }  // namespace
 
+BytecodeOffset Builtins::GetContinuationBytecodeOffset(Builtin builtin) {
+  DCHECK(Builtins::KindOf(builtin) == TFJ || Builtins::KindOf(builtin) == TFC ||
+         Builtins::KindOf(builtin) == TFS);
+  return BytecodeOffset(BytecodeOffset::kFirstBuiltinContinuationId +
+                        ToInt(builtin));
+}
+
+Builtin Builtins::GetBuiltinFromBytecodeOffset(BytecodeOffset id) {
+  Builtin builtin = Builtins::FromInt(
+      id.ToInt() - BytecodeOffset::kFirstBuiltinContinuationId);
+  DCHECK(Builtins::KindOf(builtin) == TFJ || Builtins::KindOf(builtin) == TFC ||
+         Builtins::KindOf(builtin) == TFS);
+  return builtin;
+}
+
 void Builtins::TearDown() { initialized_ = false; }
 
 const char* Builtins::Lookup(Address pc) {
@@ -214,6 +239,48 @@ bool Builtins::HasJSLinkage(Builtin builtin) {
   return CallInterfaceDescriptorFor(builtin) == JSTrampolineDescriptor{};
 }
 
+// static
+const char* Builtins::name(Builtin builtin) {
+  int index = ToInt(builtin);
+  DCHECK(IsBuiltinId(index));
+  return builtin_metadata[index].name;
+}
+
+// static
+const char* Builtins::NameForStackTrace(Builtin builtin) {
+#if V8_ENABLE_WEBASSEMBLY
+  // Most builtins are never shown in stack traces. Those that are exposed
+  // to JavaScript get their name from the object referring to them. Here
+  // we only support a few internal builtins that have special reasons for
+  // being shown on stack traces:
+  // - builtins that are allowlisted in {StubFrame::Summarize}.
+  // - builtins that throw the same error as one of those above, but would
+  //   lose information and e.g. print "indexOf" instead of "String.indexOf".
+  switch (builtin) {
+    case Builtin::kStringPrototypeToLocaleLowerCase:
+      return "String.toLocaleLowerCase";
+    case Builtin::kStringPrototypeIndexOf:
+    case Builtin::kThrowIndexOfCalledOnNull:
+      return "String.indexOf";
+#if V8_INTL_SUPPORT
+    case Builtin::kStringPrototypeToLowerCaseIntl:
+#endif
+    case Builtin::kThrowToLowerCaseCalledOnNull:
+      return "String.toLowerCase";
+    case Builtin::kWasmIntToString:
+      return "Number.toString";
+    default:
+      // Callers getting this might well crash, which might be desirable
+      // because it's similar to {UNREACHABLE()}, but contrary to that a
+      // careful caller can also check the value and use it as an "is a
+      // name available for this builtin?" check.
+      return nullptr;
+  }
+#else
+  return nullptr;
+#endif  // V8_ENABLE_WEBASSEMBLY
+}
+
 void Builtins::PrintBuiltinCode() {
   DCHECK(v8_flags.print_builtin_code);
 #ifdef ENABLE_DISASSEMBLER
@@ -365,6 +432,33 @@ Handle<Code> Builtins::CreateInterpreterEntryTrampolineForProfiling(
       .Build();
 }
 
+Builtins::Kind Builtins::KindOf(Builtin builtin) {
+  DCHECK(IsBuiltinId(builtin));
+  return builtin_metadata[ToInt(builtin)].kind;
+}
+
+// static
+const char* Builtins::KindNameOf(Builtin builtin) {
+  Kind kind = Builtins::KindOf(builtin);
+  // clang-format off
+  switch (kind) {
+    case CPP: return "CPP";
+    case TFJ: return "TFJ";
+    case TFC: return "TFC";
+    case TFS: return "TFS";
+    case TFH: return "TFH";
+    case BCH: return "BCH";
+    case ASM: return "ASM";
+  }
+  // clang-format on
+  UNREACHABLE();
+}
+
+// static
+bool Builtins::IsCpp(Builtin builtin) {
+  return Builtins::KindOf(builtin) == CPP;
+}
+
 // static
 bool Builtins::AllowDynamicFunction(Isolate* isolate, Handle<JSFunction> target,
                                     Handle<JSObject> target_global_proxy) {
diff --git a/src/builtins/builtins.h b/src/builtins/builtins.h
index 8b5e6638717..5797cc15cf3 100644
--- a/src/builtins/builtins.h
+++ b/src/builtins/builtins.h
@@ -123,13 +123,37 @@ class Builtins {
   // The different builtin kinds are documented in builtins-definitions.h.
   enum Kind { CPP, TFJ, TFC, TFS, TFH, BCH, ASM };
 
-  static constexpr BytecodeOffset GetContinuationBytecodeOffset(
-      Builtin builtin);
-  static constexpr Builtin GetBuiltinFromBytecodeOffset(BytecodeOffset);
+  static BytecodeOffset GetContinuationBytecodeOffset(Builtin builtin);
+  static Builtin GetBuiltinFromBytecodeOffset(BytecodeOffset);
 
   static constexpr Builtin GetRecordWriteStub(
-      SaveFPRegsMode fp_mode, PointerType type = PointerType::kDirect);
-  static constexpr Builtin GetEphemeronKeyBarrierStub(SaveFPRegsMode fp_mode);
+      SaveFPRegsMode fp_mode, PointerType type = PointerType::kDirect) {
+    switch (type) {
+      case PointerType::kDirect:
+        switch (fp_mode) {
+          case SaveFPRegsMode::kIgnore:
+            return Builtin::kRecordWriteIgnoreFP;
+          case SaveFPRegsMode::kSave:
+            return Builtin::kRecordWriteSaveFP;
+        }
+      case PointerType::kIndirect:
+        switch (fp_mode) {
+          case SaveFPRegsMode::kIgnore:
+            return Builtin::kIndirectPointerBarrierIgnoreFP;
+          case SaveFPRegsMode::kSave:
+            return Builtin::kIndirectPointerBarrierSaveFP;
+        }
+    }
+  }
+
+  static constexpr Builtin GetEphemeronKeyBarrierStub(SaveFPRegsMode fp_mode) {
+    switch (fp_mode) {
+      case SaveFPRegsMode::kIgnore:
+        return Builtin::kEphemeronKeyBarrierIgnoreFP;
+      case SaveFPRegsMode::kSave:
+        return Builtin::kEphemeronKeyBarrierSaveFP;
+    }
+  }
 
   // Convenience wrappers.
   Handle<Code> CallFunction(ConvertReceiverMode = ConvertReceiverMode::kAny);
@@ -151,9 +175,8 @@ class Builtins {
 
   static int GetStackParameterCount(Builtin builtin);
 
-  V8_EXPORT_PRIVATE static constexpr const char* name(Builtin builtin);
-  V8_EXPORT_PRIVATE static constexpr const char* NameForStackTrace(
-      Builtin builtin);
+  V8_EXPORT_PRIVATE static const char* name(Builtin builtin);
+  V8_EXPORT_PRIVATE static const char* NameForStackTrace(Builtin builtin);
 
   // Support for --print-builtin-size and --print-builtin-code.
   void PrintBuiltinCode();
@@ -163,10 +186,10 @@ class Builtins {
   // Address otherwise.
   static Address CppEntryOf(Builtin builtin);
 
-  static constexpr Kind KindOf(Builtin builtin);
-  static constexpr const char* KindNameOf(Builtin builtin);
+  static Kind KindOf(Builtin builtin);
+  static const char* KindNameOf(Builtin builtin);
 
-  static constexpr bool IsCpp(Builtin builtin);
+  static bool IsCpp(Builtin builtin);
 
   // True, iff the given code object is a builtin. Note that this does not
   // necessarily mean that its kind is InstructionStream::BUILTIN.
@@ -221,7 +244,17 @@ class Builtins {
   static Handle<Code> CreateInterpreterEntryTrampolineForProfiling(
       Isolate* isolate);
 
-  static constexpr bool IsJSEntryVariant(Builtin builtin);
+  static bool IsJSEntryVariant(Builtin builtin) {
+    switch (builtin) {
+      case Builtin::kJSEntry:
+      case Builtin::kJSConstructEntry:
+      case Builtin::kJSRunMicrotasksEntry:
+        return true;
+      default:
+        return false;
+    }
+    UNREACHABLE();
+  }
 
   int js_entry_handler_offset() const {
     DCHECK_NE(js_entry_handler_offset_, 0);
diff --git a/src/builtins/setup-builtins-internal.cc b/src/builtins/setup-builtins-internal.cc
index f818e26fa51..de1ac56f797 100644
--- a/src/builtins/setup-builtins-internal.cc
+++ b/src/builtins/setup-builtins-internal.cc
@@ -4,7 +4,7 @@
 
 #include <fstream>
 
-#include "src/builtins/builtins-inl.h"
+#include "src/builtins/builtins.h"
 #include "src/builtins/profile-data-reader.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/interface-descriptors.h"
diff --git a/src/codegen/arm/macro-assembler-arm.cc b/src/codegen/arm/macro-assembler-arm.cc
index b2fce5ab81a..6ab47b8f629 100644
--- a/src/codegen/arm/macro-assembler-arm.cc
+++ b/src/codegen/arm/macro-assembler-arm.cc
@@ -10,7 +10,6 @@
 #include "src/base/division-by-constant.h"
 #include "src/base/numbers/double.h"
 #include "src/base/utils/random-number-generator.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/codegen/arm64/macro-assembler-arm64.cc b/src/codegen/arm64/macro-assembler-arm64.cc
index ea3f8b626cb..f4214cf5d79 100644
--- a/src/codegen/arm64/macro-assembler-arm64.cc
+++ b/src/codegen/arm64/macro-assembler-arm64.cc
@@ -6,7 +6,6 @@
 
 #include "src/base/bits.h"
 #include "src/base/division-by-constant.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/codegen/ia32/macro-assembler-ia32.cc b/src/codegen/ia32/macro-assembler-ia32.cc
index 11e1f250db4..20f16ac2014 100644
--- a/src/codegen/ia32/macro-assembler-ia32.cc
+++ b/src/codegen/ia32/macro-assembler-ia32.cc
@@ -11,7 +11,7 @@
 #include "src/base/logging.h"
 #include "src/base/macros.h"
 #include "src/base/platform/platform.h"
-#include "src/builtins/builtins-inl.h"
+#include "src/builtins/builtins.h"
 #include "src/codegen/assembler.h"
 #include "src/codegen/bailout-reason.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/codegen/loong64/macro-assembler-loong64.cc b/src/codegen/loong64/macro-assembler-loong64.cc
index 425181d0c8e..576446ca640 100644
--- a/src/codegen/loong64/macro-assembler-loong64.cc
+++ b/src/codegen/loong64/macro-assembler-loong64.cc
@@ -8,7 +8,6 @@
 
 #include "src/base/bits.h"
 #include "src/base/division-by-constant.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/codegen/macro-assembler-base.cc b/src/codegen/macro-assembler-base.cc
index 2cc2447df0e..2e657dd3b89 100644
--- a/src/codegen/macro-assembler-base.cc
+++ b/src/codegen/macro-assembler-base.cc
@@ -4,7 +4,7 @@
 
 #include "src/codegen/macro-assembler-base.h"
 
-#include "src/builtins/builtins-inl.h"
+#include "src/builtins/builtins.h"
 #include "src/builtins/constants-table-builder.h"
 #include "src/codegen/external-reference-encoder.h"
 #include "src/common/globals.h"
@@ -126,16 +126,6 @@ bool MacroAssemblerBase::IsAddressableThroughRootRegister(
   return isolate->root_register_addressable_region().contains(address);
 }
 
-// static
-std::string MacroAssemblerBase::CommentForOffHeapTrampoline(const char* prefix,
-                                                            Builtin builtin) {
-  if (!v8_flags.code_comments) return "";
-  std::ostringstream str;
-  str << "Inlined  Trampoline for " << prefix << " to "
-      << Builtins::name(builtin);
-  return str.str();
-}
-
 // static
 Tagged_t MacroAssemblerBase::ReadOnlyRootPtr(RootIndex index,
                                              Isolate* isolate) {
diff --git a/src/codegen/macro-assembler-base.h b/src/codegen/macro-assembler-base.h
index 454b1ab0d85..b51a6847c0e 100644
--- a/src/codegen/macro-assembler-base.h
+++ b/src/codegen/macro-assembler-base.h
@@ -101,8 +101,14 @@ class V8_EXPORT_PRIVATE MacroAssemblerBase : public Assembler {
   static constexpr int kStackPageSize = 4 * KB;
 #endif
 
-  static std::string CommentForOffHeapTrampoline(const char* prefix,
-                                                 Builtin builtin);
+  V8_INLINE std::string CommentForOffHeapTrampoline(const char* prefix,
+                                                    Builtin builtin) {
+    if (!v8_flags.code_comments) return "";
+    std::ostringstream str;
+    str << "Inlined  Trampoline for " << prefix << " to "
+        << Builtins::name(builtin);
+    return str.str();
+  }
 
   enum class RecordWriteCallMode { kDefault, kWasm };
 
diff --git a/src/codegen/mips64/macro-assembler-mips64.cc b/src/codegen/mips64/macro-assembler-mips64.cc
index c2f6db666a3..3d0ea54397a 100644
--- a/src/codegen/mips64/macro-assembler-mips64.cc
+++ b/src/codegen/mips64/macro-assembler-mips64.cc
@@ -8,7 +8,6 @@
 
 #include "src/base/bits.h"
 #include "src/base/division-by-constant.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/codegen/ppc/macro-assembler-ppc.cc b/src/codegen/ppc/macro-assembler-ppc.cc
index 4d0014dda35..3ba34b05f7a 100644
--- a/src/codegen/ppc/macro-assembler-ppc.cc
+++ b/src/codegen/ppc/macro-assembler-ppc.cc
@@ -9,7 +9,6 @@
 
 #include "src/base/bits.h"
 #include "src/base/division-by-constant.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/external-reference-table.h"
diff --git a/src/codegen/reloc-info.cc b/src/codegen/reloc-info.cc
index c24a7f1ef49..02df3ea0308 100644
--- a/src/codegen/reloc-info.cc
+++ b/src/codegen/reloc-info.cc
@@ -5,7 +5,6 @@
 #include "src/codegen/reloc-info.h"
 
 #include "src/base/vlq.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/code-reference.h"
 #include "src/codegen/external-reference-encoder.h"
diff --git a/src/codegen/riscv/macro-assembler-riscv.cc b/src/codegen/riscv/macro-assembler-riscv.cc
index a3af2e8f96d..a2c7338d2e6 100644
--- a/src/codegen/riscv/macro-assembler-riscv.cc
+++ b/src/codegen/riscv/macro-assembler-riscv.cc
@@ -6,7 +6,6 @@
 
 #include "src/base/bits.h"
 #include "src/base/division-by-constant.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/codegen/s390/macro-assembler-s390.cc b/src/codegen/s390/macro-assembler-s390.cc
index 5bf965a9e0b..fc6ad1be84d 100644
--- a/src/codegen/s390/macro-assembler-s390.cc
+++ b/src/codegen/s390/macro-assembler-s390.cc
@@ -9,7 +9,6 @@
 
 #include "src/base/bits.h"
 #include "src/base/division-by-constant.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/external-reference-table.h"
diff --git a/src/codegen/x64/macro-assembler-x64.cc b/src/codegen/x64/macro-assembler-x64.cc
index 539ebcc717f..eea2fec44db 100644
--- a/src/codegen/x64/macro-assembler-x64.cc
+++ b/src/codegen/x64/macro-assembler-x64.cc
@@ -10,7 +10,6 @@
 #include "src/base/bits.h"
 #include "src/base/division-by-constant.h"
 #include "src/base/utils/random-number-generator.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/callable.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/cpu-features.h"
diff --git a/src/compiler/backend/instruction.cc b/src/compiler/backend/instruction.cc
index 6b5644b9fb9..d1041c41e21 100644
--- a/src/compiler/backend/instruction.cc
+++ b/src/compiler/backend/instruction.cc
@@ -8,7 +8,6 @@
 #include <iomanip>
 
 #include "src/base/iterator.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/aligned-slot-allocator.h"
 #include "src/codegen/interface-descriptors.h"
 #include "src/codegen/machine-type.h"
diff --git a/src/compiler/frame-states.cc b/src/compiler/frame-states.cc
index db3dfb91575..9135be6c168 100644
--- a/src/compiler/frame-states.cc
+++ b/src/compiler/frame-states.cc
@@ -5,7 +5,6 @@
 #include "src/compiler/frame-states.h"
 
 #include "src/base/functional.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/callable.h"
 #include "src/compiler/graph.h"
 #include "src/compiler/js-graph.h"
diff --git a/src/compiler/js-call-reducer.cc b/src/compiler/js-call-reducer.cc
index c6c8b441aa5..22020ea78b0 100644
--- a/src/compiler/js-call-reducer.cc
+++ b/src/compiler/js-call-reducer.cc
@@ -8,7 +8,6 @@
 
 #include "src/base/container-utils.h"
 #include "src/base/small-vector.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/builtins/builtins-promise.h"
 #include "src/builtins/builtins-utils.h"
 #include "src/codegen/code-factory.h"
diff --git a/src/compiler/js-typed-lowering.cc b/src/compiler/js-typed-lowering.cc
index 65a2c66613c..af7858445f7 100644
--- a/src/compiler/js-typed-lowering.cc
+++ b/src/compiler/js-typed-lowering.cc
@@ -5,7 +5,6 @@
 #include "src/compiler/js-typed-lowering.h"
 
 #include "src/ast/modules.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/builtins/builtins-utils.h"
 #include "src/codegen/code-factory.h"
 #include "src/codegen/interface-descriptors-inl.h"
diff --git a/src/compiler/pipeline.cc b/src/compiler/pipeline.cc
index 065b114b683..fd83f3f5bbc 100644
--- a/src/compiler/pipeline.cc
+++ b/src/compiler/pipeline.cc
@@ -10,7 +10,6 @@
 #include <sstream>
 
 #include "src/base/optional.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/builtins/profile-data-reader.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/bailout-reason.h"
diff --git a/src/debug/debug-evaluate.cc b/src/debug/debug-evaluate.cc
index 65e5a46dadb..a8d001d636d 100644
--- a/src/debug/debug-evaluate.cc
+++ b/src/debug/debug-evaluate.cc
@@ -5,7 +5,6 @@
 #include "src/debug/debug-evaluate.h"
 
 #include "src/builtins/accessors.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/compiler.h"
 #include "src/codegen/reloc-info.h"
diff --git a/src/deoptimizer/deoptimizer.cc b/src/deoptimizer/deoptimizer.cc
index 89777e43e70..eb23ef32f5a 100644
--- a/src/deoptimizer/deoptimizer.cc
+++ b/src/deoptimizer/deoptimizer.cc
@@ -5,7 +5,6 @@
 #include "src/deoptimizer/deoptimizer.h"
 
 #include "src/base/memory.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/interface-descriptors.h"
 #include "src/codegen/register-configuration.h"
 #include "src/codegen/reloc-info.h"
diff --git a/src/diagnostics/disassembler.cc b/src/diagnostics/disassembler.cc
index 84c26ffeabf..6656cf4fc5f 100644
--- a/src/diagnostics/disassembler.cc
+++ b/src/diagnostics/disassembler.cc
@@ -14,7 +14,6 @@
 #include "src/base/memory.h"
 #include "src/base/strings.h"
 #include "src/base/vector.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/code-comments.h"
 #include "src/codegen/code-reference.h"
diff --git a/src/diagnostics/objects-printer.cc b/src/diagnostics/objects-printer.cc
index dbe6ce7b965..a7f6463642d 100644
--- a/src/diagnostics/objects-printer.cc
+++ b/src/diagnostics/objects-printer.cc
@@ -5,7 +5,6 @@
 #include <iomanip>
 #include <memory>
 
-#include "src/builtins/builtins-inl.h"
 #include "src/common/globals.h"
 #include "src/diagnostics/disasm.h"
 #include "src/diagnostics/disassembler.h"
diff --git a/src/execution/arm64/simulator-arm64.cc b/src/execution/arm64/simulator-arm64.cc
index 840aa50c85d..beba51defc5 100644
--- a/src/execution/arm64/simulator-arm64.cc
+++ b/src/execution/arm64/simulator-arm64.cc
@@ -17,7 +17,6 @@
 #include "src/base/overflowing-math.h"
 #include "src/base/platform/platform.h"
 #include "src/base/platform/wrappers.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/arm64/decoder-arm64-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/macro-assembler.h"
diff --git a/src/execution/frames.cc b/src/execution/frames.cc
index a5ee33d7eff..b9c770263b4 100644
--- a/src/execution/frames.cc
+++ b/src/execution/frames.cc
@@ -11,7 +11,6 @@
 #include "src/api/api-arguments.h"
 #include "src/api/api-natives.h"
 #include "src/base/bits.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/interface-descriptors.h"
 #include "src/codegen/linkage-location.h"
 #include "src/codegen/macro-assembler.h"
diff --git a/src/heap/heap.cc b/src/heap/heap.cc
index 5566191e669..985d66dc193 100644
--- a/src/heap/heap.cc
+++ b/src/heap/heap.cc
@@ -23,7 +23,6 @@
 #include "src/base/platform/mutex.h"
 #include "src/base/utils/random-number-generator.h"
 #include "src/builtins/accessors.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/compilation-cache.h"
 #include "src/common/assert-scope.h"
diff --git a/src/ic/handler-configuration.cc b/src/ic/handler-configuration.cc
index 5b8020cd01b..a9e41cdc8e9 100644
--- a/src/ic/handler-configuration.cc
+++ b/src/ic/handler-configuration.cc
@@ -4,7 +4,6 @@
 
 #include "src/ic/handler-configuration.h"
 
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/code-factory.h"
 #include "src/ic/handler-configuration-inl.h"
 #include "src/objects/data-handler-inl.h"
diff --git a/src/interpreter/interpreter.cc b/src/interpreter/interpreter.cc
index afebc5625a7..a3339f3d5a2 100644
--- a/src/interpreter/interpreter.cc
+++ b/src/interpreter/interpreter.cc
@@ -10,7 +10,6 @@
 #include "builtins-generated/bytecodes-builtins-list.h"
 #include "src/ast/prettyprinter.h"
 #include "src/ast/scopes.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/compiler.h"
 #include "src/codegen/unoptimized-compilation-info.h"
 #include "src/common/globals.h"
diff --git a/src/logging/log.cc b/src/logging/log.cc
index 614771b5208..e8aacc0e546 100644
--- a/src/logging/log.cc
+++ b/src/logging/log.cc
@@ -15,7 +15,6 @@
 #include "src/base/platform/mutex.h"
 #include "src/base/platform/platform.h"
 #include "src/base/platform/wrappers.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/builtins/profile-data-reader.h"
 #include "src/codegen/bailout-reason.h"
 #include "src/codegen/compiler.h"
diff --git a/src/maglev/maglev-code-generator.cc b/src/maglev/maglev-code-generator.cc
index 24518bd6128..27c4d0ee25e 100644
--- a/src/maglev/maglev-code-generator.cc
+++ b/src/maglev/maglev-code-generator.cc
@@ -7,7 +7,6 @@
 #include <algorithm>
 
 #include "src/base/hashmap.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/code-desc.h"
 #include "src/codegen/interface-descriptors-inl.h"
 #include "src/codegen/interface-descriptors.h"
diff --git a/src/maglev/maglev-graph-builder.cc b/src/maglev/maglev-graph-builder.cc
index b0bf70d46f2..074325a55ae 100644
--- a/src/maglev/maglev-graph-builder.cc
+++ b/src/maglev/maglev-graph-builder.cc
@@ -13,7 +13,7 @@
 #include "src/base/v8-fallthrough.h"
 #include "src/base/vector.h"
 #include "src/builtins/builtins-constructor.h"
-#include "src/builtins/builtins-inl.h"
+#include "src/builtins/builtins.h"
 #include "src/codegen/cpu-features.h"
 #include "src/codegen/interface-descriptors-inl.h"
 #include "src/common/assert-scope.h"
diff --git a/src/maglev/maglev-graph-printer.cc b/src/maglev/maglev-graph-printer.cc
index 62770a2607f..a3e54a69703 100644
--- a/src/maglev/maglev-graph-printer.cc
+++ b/src/maglev/maglev-graph-printer.cc
@@ -13,7 +13,6 @@
 #include <vector>
 
 #include "src/base/logging.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/common/assert-scope.h"
 #include "src/interpreter/bytecode-array-iterator.h"
 #include "src/interpreter/bytecode-decoder.h"
diff --git a/src/maglev/maglev-ir.cc b/src/maglev/maglev-ir.cc
index ffdbb1680cd..e203e6aaa1a 100644
--- a/src/maglev/maglev-ir.cc
+++ b/src/maglev/maglev-ir.cc
@@ -8,7 +8,6 @@
 
 #include "src/base/bounds.h"
 #include "src/builtins/builtins-constructor.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/interface-descriptors-inl.h"
 #include "src/codegen/interface-descriptors.h"
 #include "src/common/globals.h"
diff --git a/src/objects/call-site-info.cc b/src/objects/call-site-info.cc
index f4edd814328..083e39bce30 100644
--- a/src/objects/call-site-info.cc
+++ b/src/objects/call-site-info.cc
@@ -5,7 +5,6 @@
 #include "src/objects/call-site-info.h"
 
 #include "src/base/strings.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/objects/call-site-info-inl.h"
 #include "src/objects/shared-function-info.h"
 #include "src/strings/string-builder-inl.h"
diff --git a/src/objects/code.cc b/src/objects/code.cc
index 4098ba09c5b..5fd4e0ba599 100644
--- a/src/objects/code.cc
+++ b/src/objects/code.cc
@@ -6,7 +6,6 @@
 
 #include <iomanip>
 
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/flush-instruction-cache.h"
 #include "src/codegen/reloc-info-inl.h"
diff --git a/src/snapshot/embedded/embedded-data.cc b/src/snapshot/embedded/embedded-data.cc
index a5e526bf2bb..fb3642c9595 100644
--- a/src/snapshot/embedded/embedded-data.cc
+++ b/src/snapshot/embedded/embedded-data.cc
@@ -4,7 +4,6 @@
 
 #include "src/snapshot/embedded/embedded-data.h"
 
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/assembler-inl.h"
 #include "src/codegen/callable.h"
 #include "src/snapshot/embedded/embedded-data-inl.h"
diff --git a/src/snapshot/embedded/embedded-file-writer.cc b/src/snapshot/embedded/embedded-file-writer.cc
index 86ffd2ae01e..b397434b1fe 100644
--- a/src/snapshot/embedded/embedded-file-writer.cc
+++ b/src/snapshot/embedded/embedded-file-writer.cc
@@ -7,7 +7,6 @@
 #include <algorithm>
 #include <cinttypes>
 
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/source-position-table.h"
 #include "src/flags/flags.h"  // For ENABLE_CONTROL_FLOW_INTEGRITY_BOOL
 #include "src/objects/code-inl.h"
diff --git a/src/snapshot/sort-builtins.cc b/src/snapshot/sort-builtins.cc
index df58f7d0e3c..1ee1184d617 100644
--- a/src/snapshot/sort-builtins.cc
+++ b/src/snapshot/sort-builtins.cc
@@ -7,7 +7,6 @@
 #include <algorithm>
 #include <fstream>
 
-#include "src/builtins/builtins-inl.h"
 #include "src/snapshot/embedded/embedded-data-inl.h"
 #include "src/snapshot/embedded/embedded-data.h"
 
diff --git a/test/unittests/interpreter/interpreter-unittest.cc b/test/unittests/interpreter/interpreter-unittest.cc
index a02604a8d3e..2f9fa7e7f8d 100644
--- a/test/unittests/interpreter/interpreter-unittest.cc
+++ b/test/unittests/interpreter/interpreter-unittest.cc
@@ -8,7 +8,6 @@
 
 #include "src/api/api-inl.h"
 #include "src/base/overflowing-math.h"
-#include "src/builtins/builtins-inl.h"
 #include "src/codegen/compiler.h"
 #include "src/execution/execution.h"
 #include "src/handles/handles.h"
-- 
2.35.1

