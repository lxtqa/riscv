From d94cb639978fd21a1187b685690708e9a4224289 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Mon, 15 Aug 2022 20:17:49 +0800
Subject: [PATCH] [riscv]Fix temporary register reuse

Change-Id: I8c02e3b8b73fc46d098993c39bf901f9619c8346
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3830281
Reviewed-by: ji qiu <qiuji@iscas.ac.cn>
Commit-Queue: ji qiu <qiuji@iscas.ac.cn>
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#82467}
---
 src/builtins/riscv/builtins-riscv.cc | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/src/builtins/riscv/builtins-riscv.cc b/src/builtins/riscv/builtins-riscv.cc
index 8c817ba9852..92c15e29421 100644
--- a/src/builtins/riscv/builtins-riscv.cc
+++ b/src/builtins/riscv/builtins-riscv.cc
@@ -962,7 +962,11 @@ void Builtins::Generate_BaselineOutOfLinePrologue(MacroAssembler* masm) {
               FieldMemOperand(closure, JSFunction::kFeedbackCellOffset));
   __ LoadWord(feedback_vector,
               FieldMemOperand(feedback_vector, Cell::kValueOffset));
-  __ AssertFeedbackVector(feedback_vector, kScratchReg);
+  {
+    UseScratchRegisterScope temp(masm);
+    Register type = temps.Acquire();
+    __ AssertFeedbackVector(feedback_vector, type);
+  }
 
   // Check for an tiering state.
   Label has_optimized_code_or_state;
@@ -1011,7 +1015,11 @@ void Builtins::Generate_BaselineOutOfLinePrologue(MacroAssembler* masm) {
     __ Push(argc, bytecode_array);
     // Baseline code frames store the feedback vector where interpreter would
     // store the bytecode offset.
-    __ AssertFeedbackVector(feedback_vector, kScratchReg);
+    {
+      UseScratchRegisterScope temp(masm);
+      Register type = temps.Acquire();
+      __ AssertFeedbackVector(feedback_vector, type);
+    }
     // Our stack is currently aligned. We have have to push something along with
     // the feedback vector to keep it that way -- we may as well start
     // initialising the register frame.
-- 
2.35.1

