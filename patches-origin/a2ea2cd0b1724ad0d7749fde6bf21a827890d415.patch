From a2ea2cd0b1724ad0d7749fde6bf21a827890d415 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Fri, 11 Mar 2022 16:36:04 +0800
Subject: [PATCH] [riscv64] Keep the type consistent in in_range

Change-Id: I23b76ec7bdf0f1997815f4928d903a9807413129
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3516829
Reviewed-by: ji qiu <qiuji@iscas.ac.cn>
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Commit-Queue: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#79451}
---
 src/codegen/riscv64/register-riscv64.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/codegen/riscv64/register-riscv64.h b/src/codegen/riscv64/register-riscv64.h
index e8ff7220a78..3b17e77a0eb 100644
--- a/src/codegen/riscv64/register-riscv64.h
+++ b/src/codegen/riscv64/register-riscv64.h
@@ -300,7 +300,7 @@ class FPURegister : public RegisterBase<FPURegister, kDoubleAfterLast> {
   // this cl, in order to facilitate modification, it is assumed that the vector
   // register and floating point register are shared.
   VRegister toV() const {
-    DCHECK(base::IsInRange(code(), 0, kVRAfterLast - 1));
+    DCHECK(base::IsInRange(static_cast<int>(code()), 0, kVRAfterLast - 1));
     return VRegister(code());
   }
 
-- 
2.35.1

