From d42e4f6e8df1d603ba184dcfc644b25a6cbc8044 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Thu, 16 Dec 2021 17:22:34 +0800
Subject: [PATCH] [riscv64] skip rvv test when no rvv

Change-Id: If9619a796865b402361f521c0529e8452a9a3078
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3343862
Reviewed-by: ji qiu <qiuji@iscas.ac.cn>
Commit-Queue: ji qiu <qiuji@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#78403}
---
 test/cctest/test-assembler-riscv64.cc | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/test/cctest/test-assembler-riscv64.cc b/test/cctest/test-assembler-riscv64.cc
index d275bbd8ab8..2e42da8ee99 100644
--- a/test/cctest/test-assembler-riscv64.cc
+++ b/test/cctest/test-assembler-riscv64.cc
@@ -1979,6 +1979,7 @@ TEST(li_estimate) {
 
 #define UTEST_LOAD_STORE_RVV(ldname, stname, SEW, arg...)            \
   TEST(RISCV_UTEST_##stname##ldname##SEW) {                          \
+    if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;               \
     CcTest::InitializeVM();                                          \
     Isolate* isolate = CcTest::i_isolate();                          \
     HandleScope scope(isolate);                                      \
@@ -1998,6 +1999,8 @@ UTEST_LOAD_STORE_RVV(vl, vs, E8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
 // UTEST_LOAD_STORE_RVV(vl, vs, E8, 127, 127, 127, 127, 127, 127, 127)
 
 TEST(RVV_VSETIVLI) {
+  if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;
+
   CcTest::InitializeVM();
   Isolate* isolate = CcTest::i_isolate();
   HandleScope scope(isolate);
@@ -2009,6 +2012,8 @@ TEST(RVV_VSETIVLI) {
 }
 
 TEST(RVV_VFMV) {
+  if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;
+
   CcTest::InitializeVM();
   Isolate* isolate = CcTest::i_isolate();
   HandleScope scope(isolate);
@@ -2036,6 +2041,7 @@ inline int32_t ToImm5(int32_t v) {
 // Tests for vector integer arithmetic instructions between vector and vector
 #define UTEST_RVV_VI_VV_FORM_WITH_RES(instr_name, width, array, expect_res) \
   TEST(RISCV_UTEST_##instr_name##_##width) {                                \
+    if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;                      \
     CcTest::InitializeVM();                                                 \
     auto fn = [](MacroAssembler& assm) {                                    \
       __ VU.set(t0, VSew::E##width, Vlmul::m1);                             \
@@ -2055,6 +2061,7 @@ inline int32_t ToImm5(int32_t v) {
 // Tests for vector integer arithmetic instructions between vector and scalar
 #define UTEST_RVV_VI_VX_FORM_WITH_RES(instr_name, width, array, expect_res) \
   TEST(RISCV_UTEST_##instr_name##_##width) {                                \
+    if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;                      \
     CcTest::InitializeVM();                                                 \
     auto fn = [](MacroAssembler& assm) {                                    \
       __ VU.set(t0, VSew::E##width, Vlmul::m1);                             \
@@ -2074,6 +2081,7 @@ inline int32_t ToImm5(int32_t v) {
 // immediate
 #define UTEST_RVV_VI_VI_FORM_WITH_RES(instr_name, width, array, expect_res) \
   TEST(RISCV_UTEST_##instr_name##_##width) {                                \
+    if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;                      \
     CcTest::InitializeVM();                                                 \
     for (int##width##_t rs1_val : array) {                                  \
       for (int##width##_t rs2_val : array) {                                \
@@ -2183,6 +2191,7 @@ UTEST_RVV_VI_VX_FORM_WITH_FN(vminu_vx, 32, ARRAY_INT32, std::min<uint32_t>)
 // vector and vector
 #define UTEST_RVV_VF_VV_FORM_WITH_RES(instr_name, array, expect_res)    \
   TEST(RISCV_UTEST_##instr_name) {                                      \
+    if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;                  \
     CcTest::InitializeVM();                                             \
     auto fn = [](MacroAssembler& assm) {                                \
       __ VU.set(t0, VSew::E32, Vlmul::m1);                              \
@@ -2203,6 +2212,7 @@ UTEST_RVV_VI_VX_FORM_WITH_FN(vminu_vx, 32, ARRAY_INT32, std::min<uint32_t>)
 // vector and scalar
 #define UTEST_RVV_VF_VF_FORM_WITH_RES(instr_name, array, expect_res)    \
   TEST(RISCV_UTEST_##instr_name) {                                      \
+    if (!CpuFeatures::IsSupported(RISCV_SIMD)) return;                  \
     CcTest::InitializeVM();                                             \
     auto fn = [](MacroAssembler& assm) {                                \
       __ VU.set(t0, VSew::E32, Vlmul::m1);                              \
-- 
2.35.1

