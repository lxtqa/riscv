From a1e72ab03ebf5a0075f71589f66a48362bcee641 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Sun, 25 Apr 2021 14:45:53 +0800
Subject: [PATCH] [riscv64][sparkplug]Port Use EnterFrame/LeaveFrame with
 StackFrame::BASELINE

Change-Id: I7cf47d9be50790f453bd2908b58aff3a41e2f95b
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2848735
Reviewed-by: Brice Dobry <brice.dobry@futurewei.com>
Commit-Queue: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/master@{#74195}
---
 src/baseline/riscv64/baseline-assembler-riscv64-inl.h | 2 +-
 src/builtins/riscv64/builtins-riscv64.cc              | 2 +-
 src/codegen/riscv64/macro-assembler-riscv64.cc        | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/baseline/riscv64/baseline-assembler-riscv64-inl.h b/src/baseline/riscv64/baseline-assembler-riscv64-inl.h
index 301503f5238..b38fbe83313 100644
--- a/src/baseline/riscv64/baseline-assembler-riscv64-inl.h
+++ b/src/baseline/riscv64/baseline-assembler-riscv64-inl.h
@@ -597,7 +597,7 @@ void BaselineAssembler::EmitReturn(MacroAssembler* masm) {
   __ Bind(&corrected_args_count);
 
   // Leave the frame (also dropping the register file).
-  __ masm()->LeaveFrame(StackFrame::MANUAL);
+  __ masm()->LeaveFrame(StackFrame::BASELINE);
 
   // Drop receiver + arguments.
   __ masm()->Add64(params_size, params_size, 1);  // Include the receiver.
diff --git a/src/builtins/riscv64/builtins-riscv64.cc b/src/builtins/riscv64/builtins-riscv64.cc
index 1b6d60f135f..ae99355eee4 100644
--- a/src/builtins/riscv64/builtins-riscv64.cc
+++ b/src/builtins/riscv64/builtins-riscv64.cc
@@ -979,7 +979,7 @@ static void LoadOptimizationStateAndJumpIfNeedsProcessing(
   __ RecordComment("[ Check optimization state");
   UseScratchRegisterScope temps(masm);
   Register scratch = temps.Acquire();
-  __ Ld(optimization_state,
+  __ Lw(optimization_state,
         FieldMemOperand(feedback_vector, FeedbackVector::kFlagsOffset));
   __ And(
       scratch, optimization_state,
diff --git a/src/codegen/riscv64/macro-assembler-riscv64.cc b/src/codegen/riscv64/macro-assembler-riscv64.cc
index 6193de4d1f4..d83d9a72854 100644
--- a/src/codegen/riscv64/macro-assembler-riscv64.cc
+++ b/src/codegen/riscv64/macro-assembler-riscv64.cc
@@ -3979,7 +3979,7 @@ void TurboAssembler::EnterFrame(StackFrame::Type type) {
   BlockTrampolinePoolScope block_trampoline_pool(this);
   Push(ra, fp);
   Move(fp, sp);
-  if (type != StackFrame::MANUAL) {
+  if (!StackFrame::IsJavaScript(type)) {
     li(scratch, Operand(StackFrame::TypeToMarker(type)));
     Push(scratch);
   }
-- 
2.35.1

