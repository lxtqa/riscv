From 18589f30b1fb7cb175a3c5e3dec200e02882c1b7 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Wed, 22 Sep 2021 14:13:38 +0800
Subject: [PATCH] [riscv64] Fix error in assembler atomic

Change-Id: I71bc9fd393d2f53c982b85cd1cf6729e56a62f2d
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3174619
Reviewed-by: Ji Qiu <qiuji@iscas.ac.cn>
Reviewed-by: Hannes Payer <hpayer@chromium.org>
Commit-Queue: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#77071}
---
 src/compiler/backend/riscv64/code-generator-riscv64.cc | 4 ++--
 test/mjsunit/mjsunit.status                            | 4 ----
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/src/compiler/backend/riscv64/code-generator-riscv64.cc b/src/compiler/backend/riscv64/code-generator-riscv64.cc
index a47894591cf..8ff0bbc33e2 100644
--- a/src/compiler/backend/riscv64/code-generator-riscv64.cc
+++ b/src/compiler/backend/riscv64/code-generator-riscv64.cc
@@ -441,8 +441,8 @@ FPUCondition FlagsConditionToConditionCmpFPU(bool* predicate,
     __ load_linked(i.TempRegister(2), MemOperand(i.TempRegister(0), 0));       \
     __ ExtractBits(i.OutputRegister(0), i.TempRegister(2), i.TempRegister(1),  \
                    size, sign_extend);                                         \
-    __ ExtractBits(i.InputRegister(2), i.InputRegister(2), i.TempRegister(1),  \
-                   size, sign_extend);                                         \
+    __ ExtractBits(i.InputRegister(2), i.InputRegister(2), 0, size,            \
+                   sign_extend);                                               \
     __ BranchShort(&exit, ne, i.InputRegister(2),                              \
                    Operand(i.OutputRegister(0)));                              \
     __ InsertBits(i.TempRegister(2), i.InputRegister(3), i.TempRegister(1),    \
diff --git a/test/mjsunit/mjsunit.status b/test/mjsunit/mjsunit.status
index 426069a0ab7..4b0340b5f5c 100644
--- a/test/mjsunit/mjsunit.status
+++ b/test/mjsunit/mjsunit.status
@@ -843,7 +843,6 @@
   'regress/regress-490': [SKIP],
   'regress/regress-create-exception': [SKIP],
   'regress/regress-3247124': [SKIP],
-  'compiler/regress-1226988': [SKIP],
 
   # Requires bigger stack size in the Genesis and if stack size is increased,
   # the test requires too much time to run.  However, the problem test covers
@@ -871,9 +870,6 @@
   'regress/regress-1138075': [SKIP],
   'regress/regress-1138611': [SKIP],
 
-  # Some atomic functions are not yet implemented
-  'regress/wasm/regress-1196837': [SKIP],
-
   # SIMD not be implemented
   'regress/wasm/regress-1054466': [SKIP],
   'regress/wasm/regress-1065599': [SKIP],
-- 
2.35.1

