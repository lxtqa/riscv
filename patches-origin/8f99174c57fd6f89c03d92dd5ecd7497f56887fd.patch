From 8f99174c57fd6f89c03d92dd5ecd7497f56887fd Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Mon, 25 Oct 2021 09:47:11 +0800
Subject: [PATCH] [riscv64] Delete unused varible

Change-Id: Id6d8f1224cb59fb55decbd6fef1c8e674ea6de63
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3237328
Reviewed-by: ji qiu <qiuji@iscas.ac.cn>
Commit-Queue: ji qiu <qiuji@iscas.ac.cn>
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#77511}
---
 src/codegen/riscv64/assembler-riscv64.cc | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/src/codegen/riscv64/assembler-riscv64.cc b/src/codegen/riscv64/assembler-riscv64.cc
index 426e1cd225a..2f3c6974e1e 100644
--- a/src/codegen/riscv64/assembler-riscv64.cc
+++ b/src/codegen/riscv64/assembler-riscv64.cc
@@ -3305,12 +3305,10 @@ int Assembler::li_estimate(int64_t imm, bool is_get_temp_reg) {
     // plus the number of zeros between the parts. Each part is added after the
     // left shift.
     uint32_t mask = 0x80000000;
-    int32_t shift_val = 0;
     int32_t i;
     for (i = 0; i < 32; i++) {
       if ((low_32 & mask) == 0) {
         mask >>= 1;
-        shift_val++;
         if (i == 31) {
           // rest is zero
           count++;
@@ -3318,21 +3316,17 @@ int Assembler::li_estimate(int64_t imm, bool is_get_temp_reg) {
         continue;
       }
       // The first 1 seen
-      int32_t part;
       if ((i + 11) < 32) {
         // Pick 11 bits
-        part = ((uint32_t)(low_32 << i) >> i) >> (32 - (i + 11));
         count++;
         count++;
         i += 10;
         mask >>= 11;
       } else {
-        part = (uint32_t)(low_32 << i) >> i;
         count++;
         count++;
         break;
       }
-      shift_val = 0;
     }
   }
   return count;
-- 
2.35.1

