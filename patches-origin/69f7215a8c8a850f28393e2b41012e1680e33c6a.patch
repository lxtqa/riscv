From 69f7215a8c8a850f28393e2b41012e1680e33c6a Mon Sep 17 00:00:00 2001
From: yangwenming <yangwenming@bytedance.com>
Date: Thu, 3 Aug 2023 23:18:59 +0800
Subject: [PATCH] riscv: [tagged-ptr] Make Object methods static
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Port f20f342a3e275ae6442a53e34869f1c90f0db4a0

Original Commit Message:

    Turn obj->Foo() into Object::Foo(obj) for Object methods.

    This allows operations on Smis without dereferencing.

Bug: v8:12710
Change-Id: Ifc6055b0d243fc6b4d8d056a6635c37a65a6aaba
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4749339
Commit-Queue: Yahan Lu <yahan@iscas.ac.cn>
Auto-Submit: 杨文明 <yangwenming@bytedance.com>
Reviewed-by: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#89362}
---
 src/execution/riscv/simulator-riscv.cc | 2 +-
 test/cctest/test-assembler-riscv32.cc  | 2 +-
 test/cctest/test-assembler-riscv64.cc  | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/execution/riscv/simulator-riscv.cc b/src/execution/riscv/simulator-riscv.cc
index 4e9123a6ae7..886d5ceebfa 100644
--- a/src/execution/riscv/simulator-riscv.cc
+++ b/src/execution/riscv/simulator-riscv.cc
@@ -1892,7 +1892,7 @@ void RiscvDebugger::Debug() {
             Object obj(value);
             os << arg1 << ": \n";
 #ifdef DEBUG
-            obj.Print(os);
+            Print(obj, os);
             os << "\n";
 #else
             os << Brief(obj) << "\n";
diff --git a/test/cctest/test-assembler-riscv32.cc b/test/cctest/test-assembler-riscv32.cc
index 4ccc5fb2882..719836ab7ca 100644
--- a/test/cctest/test-assembler-riscv32.cc
+++ b/test/cctest/test-assembler-riscv32.cc
@@ -1729,7 +1729,7 @@ TEST(jump_tables3) {
         Object(reinterpret_cast<Address>(f.Call(i, 0, 0, 0, 0))), isolate);
 #ifdef OBJECT_PRINT
     ::printf("f(%d) = ", i);
-    result->Print(std::cout);
+    Print(*result, std::cout);
     ::printf("\n");
 #endif
     CHECK(values[i].is_identical_to(result));
diff --git a/test/cctest/test-assembler-riscv64.cc b/test/cctest/test-assembler-riscv64.cc
index ad317e86b02..c05b01f3cce 100644
--- a/test/cctest/test-assembler-riscv64.cc
+++ b/test/cctest/test-assembler-riscv64.cc
@@ -2006,7 +2006,7 @@ TEST(jump_tables3) {
         Object(reinterpret_cast<Address>(f.Call(i, 0, 0, 0, 0))), isolate);
 #ifdef OBJECT_PRINT
     ::printf("f(%d) = ", i);
-    result->Print(std::cout);
+    Print(*result, std::cout);
     ::printf("\n");
 #endif
     CHECK(values[i].is_identical_to(result));
-- 
2.35.1

