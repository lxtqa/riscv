From ae9f9c67097914acf79907b9ac423e1fca128af7 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Thu, 9 Jun 2022 11:38:54 +0800
Subject: [PATCH] [riscv64] Implement relaxed_trunc

Change-Id: I164d1debe2734e1dabf01e048deb4102e4903147
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3697472
Reviewed-by: ji qiu <qiuji@iscas.ac.cn>
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Commit-Queue: ji qiu <qiuji@iscas.ac.cn>
Commit-Queue: Yahan Lu <yahan@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#81019}
---
 .../riscv64/liftoff-assembler-riscv64.h       | 20 +++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h b/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
index efc82e1f62d..753ff69d94e 100644
--- a/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
+++ b/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
@@ -2418,19 +2418,31 @@ void LiftoffAssembler::emit_i32x4_trunc_sat_f64x2_u_zero(LiftoffRegister dst,
 
 void LiftoffAssembler::emit_i32x4_relaxed_trunc_f32x4_s(LiftoffRegister dst,
                                                         LiftoffRegister src) {
-  bailout(kRelaxedSimd, "emit_i32x4_relaxed_trunc_f32x4_s");
+  VU.set(FPURoundingMode::RTZ);
+  VU.set(kScratchReg, E32, m1);
+  vfcvt_x_f_v(dst.fp().toV(), src.fp().toV());
 }
 void LiftoffAssembler::emit_i32x4_relaxed_trunc_f32x4_u(LiftoffRegister dst,
                                                         LiftoffRegister src) {
-  bailout(kRelaxedSimd, "emit_i32x4_relaxed_trunc_f32x4_u");
+  VU.set(FPURoundingMode::RTZ);
+  VU.set(kScratchReg, E32, m1);
+  vfcvt_xu_f_v(dst.fp().toV(), src.fp().toV());
 }
 void LiftoffAssembler::emit_i32x4_relaxed_trunc_f64x2_s_zero(
     LiftoffRegister dst, LiftoffRegister src) {
-  bailout(kRelaxedSimd, "emit_i32x4_relaxed_trunc_f64x2_s_zero");
+  VU.set(kScratchReg, E32, m1);
+  VU.set(FPURoundingMode::RTZ);
+  vmv_vv(kSimd128ScratchReg, src.fp().toV());
+  vfncvt_x_f_w(kSimd128ScratchReg, kSimd128ScratchReg);
+  vmv_vv(dst.fp().toV(), kSimd128ScratchReg);
 }
 void LiftoffAssembler::emit_i32x4_relaxed_trunc_f64x2_u_zero(
     LiftoffRegister dst, LiftoffRegister src) {
-  bailout(kRelaxedSimd, "emit_i32x4_relaxed_trunc_f64x2_u_zero");
+  VU.set(kScratchReg, E32, m1);
+  VU.set(FPURoundingMode::RTZ);
+  vmv_vv(kSimd128ScratchReg, src.fp().toV());
+  vfncvt_xu_f_w(kSimd128ScratchReg, kSimd128ScratchReg);
+  vmv_vv(dst.fp().toV(), kSimd128ScratchReg);
 }
 
 void LiftoffAssembler::emit_f64x2_eq(LiftoffRegister dst, LiftoffRegister lhs,
-- 
2.35.1

