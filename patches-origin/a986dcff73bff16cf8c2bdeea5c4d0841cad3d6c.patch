From a986dcff73bff16cf8c2bdeea5c4d0841cad3d6c Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Sat, 18 Jun 2022 08:33:52 +0800
Subject: [PATCH] [riscv64] Avoid using callee saved register in call func

f8(fs0) is callee saved so that we should not use it to hold return value in the float_min_max test case.


Change-Id: I7039918cc434462dd956339d4263811543e23a94
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3711284
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Reviewed-by: ji qiu <qiuji@iscas.ac.cn>
Commit-Queue: ji qiu <qiuji@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#81230}
---
 test/cctest/test-macro-assembler-riscv64.cc | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/test/cctest/test-macro-assembler-riscv64.cc b/test/cctest/test-macro-assembler-riscv64.cc
index 2226da7ecdc..eab663b8f8b 100644
--- a/test/cctest/test-macro-assembler-riscv64.cc
+++ b/test/cctest/test-macro-assembler-riscv64.cc
@@ -1007,15 +1007,15 @@ TEST(Sltu) {
 
 template <typename T, typename Inputs, typename Results>
 static void GenerateMacroFloat32MinMax(MacroAssembler& masm) {
-  T a = T::from_code(4);  // f4
-  T b = T::from_code(6);  // f6
-  T c = T::from_code(8);  // f8
+  T a = T::from_code(5);  // ft5
+  T b = T::from_code(6);  // ft6
+  T c = T::from_code(7);  // ft7
 
 #define FLOAT_MIN_MAX(fminmax, res, x, y, res_field)        \
   __ LoadFloat(x, MemOperand(a0, offsetof(Inputs, src1_))); \
   __ LoadFloat(y, MemOperand(a0, offsetof(Inputs, src2_))); \
   __ fminmax(res, x, y);                                    \
-  __ StoreFloat(a, MemOperand(a1, offsetof(Results, res_field)))
+  __ StoreFloat(res, MemOperand(a1, offsetof(Results, res_field)))
 
   // a = min(b, c);
   FLOAT_MIN_MAX(Float32Min, a, b, c, min_abc_);
@@ -1107,15 +1107,15 @@ TEST(macro_float_minmax_f32) {
 
 template <typename T, typename Inputs, typename Results>
 static void GenerateMacroFloat64MinMax(MacroAssembler& masm) {
-  T a = T::from_code(4);  // f4
-  T b = T::from_code(6);  // f6
-  T c = T::from_code(8);  // f8
+  T a = T::from_code(5);  // ft5
+  T b = T::from_code(6);  // ft6
+  T c = T::from_code(7);  // ft7
 
 #define FLOAT_MIN_MAX(fminmax, res, x, y, res_field)         \
   __ LoadDouble(x, MemOperand(a0, offsetof(Inputs, src1_))); \
   __ LoadDouble(y, MemOperand(a0, offsetof(Inputs, src2_))); \
   __ fminmax(res, x, y);                                     \
-  __ StoreDouble(a, MemOperand(a1, offsetof(Results, res_field)))
+  __ StoreDouble(res, MemOperand(a1, offsetof(Results, res_field)))
 
   // a = min(b, c);
   FLOAT_MIN_MAX(Float64Min, a, b, c, min_abc_);
-- 
2.35.1

