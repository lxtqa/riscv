From 62f5ce8d379ef7f710760ca6e971822bced1e3de Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Tue, 6 Jun 2023 18:54:36 +0800
Subject: [PATCH] [riscv][wasm-gc] Inlining into JS: Lower traps to conditional
 jump to trap call

Port commit a764401e64fdef9834cafeba32fc219eba9bd74b

Bug: v8:7748

Change-Id: Ib89d27ad20f96ad878f2ff35019dd6813743997d
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4593016
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Commit-Queue: Ji Qiu <qiuji@iscas.ac.cn>
Reviewed-by: Ji Qiu <qiuji@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#88099}
---
 .../backend/riscv/code-generator-riscv.cc       | 17 ++++++-----------
 1 file changed, 6 insertions(+), 11 deletions(-)

diff --git a/src/compiler/backend/riscv/code-generator-riscv.cc b/src/compiler/backend/riscv/code-generator-riscv.cc
index 958dd70b90f..0cbe1083320 100644
--- a/src/compiler/backend/riscv/code-generator-riscv.cc
+++ b/src/compiler/backend/riscv/code-generator-riscv.cc
@@ -3974,14 +3974,15 @@ void CodeGenerator::AssembleArchTrap(Instruction* instr,
    public:
     OutOfLineTrap(CodeGenerator* gen, Instruction* instr)
         : OutOfLineCode(gen), instr_(instr), gen_(gen) {}
-    void Generate() final {
-      auto [trap_id, frame_state_offset] =
-          gen_->DecodeTrapIdAndFrameStateOffset<RiscvOperandConverter>(instr_);
-      GenerateCallToTrap(trap_id, frame_state_offset);
+    void Generate() override {
+      RiscvOperandConverter i(gen_, instr_);
+      TrapId trap_id =
+          static_cast<TrapId>(i.InputInt32(instr_->InputCount() - 1));
+      GenerateCallToTrap(trap_id);
     }
 
    private:
-    void GenerateCallToTrap(TrapId trap_id, size_t frame_state_offset) {
+    void GenerateCallToTrap(TrapId trap_id) {
       if (trap_id == TrapId::kInvalid) {
         // We cannot test calls to the runtime in cctest/test-run-wasm.
         // Therefore we emit a call to C here instead of a call to the runtime.
@@ -4005,12 +4006,6 @@ void CodeGenerator::AssembleArchTrap(Instruction* instr,
         ReferenceMap* reference_map =
             gen_->zone()->New<ReferenceMap>(gen_->zone());
         gen_->RecordSafepoint(reference_map);
-        // If we have a frame state, the offset is not 0.
-        if (frame_state_offset != 0) {
-          gen_->BuildTranslation(instr_, masm()->pc_offset(),
-                                 frame_state_offset, 0,
-                                 OutputFrameStateCombine::Ignore());
-        }
         if (v8_flags.debug_code) {
           __ stop();
         }
-- 
2.35.1

