From e868f793e13f09b324775ca816bdca462ac514e6 Mon Sep 17 00:00:00 2001
From: Lu Yahan <yahan@iscas.ac.cn>
Date: Thu, 19 May 2022 10:27:46 +0800
Subject: [PATCH] [riscv64][wasm-relaxed-simd] Add liftoff min/max operations
 on RISCV64

Port commit 0236d7b5b47e8411f3211af3b9f17dee9ea9e252

Bug: v8:12284
Change-Id: I5a1c7b7a50c45e0d768ee3e200a2c25dbfcc8b36
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3654978
Reviewed-by: ji qiu <qiuji@iscas.ac.cn>
Auto-Submit: Yahan Lu <yahan@iscas.ac.cn>
Commit-Queue: Yahan Lu <yahan@iscas.ac.cn>
Commit-Queue: ji qiu <qiuji@iscas.ac.cn>
Cr-Commit-Position: refs/heads/main@{#80625}
---
 .../riscv64/liftoff-assembler-riscv64.h       | 28 +++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h b/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
index c9c24c2e02b..74b7698de4f 100644
--- a/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
+++ b/src/wasm/baseline/riscv64/liftoff-assembler-riscv64.h
@@ -3108,6 +3108,20 @@ void LiftoffAssembler::emit_f32x4_max(LiftoffRegister dst, LiftoffRegister lhs,
   vmv_vv(dst.fp().toV(), kSimd128ScratchReg);
 }
 
+void LiftoffAssembler::emit_f32x4_relaxed_min(LiftoffRegister dst,
+                                              LiftoffRegister lhs,
+                                              LiftoffRegister rhs) {
+  VU.set(kScratchReg, E32, m1);
+  vfmin_vv(dst.fp().toV(), rhs.fp().toV(), lhs.fp().toV());
+}
+
+void LiftoffAssembler::emit_f32x4_relaxed_max(LiftoffRegister dst,
+                                              LiftoffRegister lhs,
+                                              LiftoffRegister rhs) {
+  VU.set(kScratchReg, E32, m1);
+  vfmax_vv(dst.fp().toV(), rhs.fp().toV(), lhs.fp().toV());
+}
+
 void LiftoffAssembler::emit_f32x4_pmin(LiftoffRegister dst, LiftoffRegister lhs,
                                        LiftoffRegister rhs) {
   VU.set(kScratchReg, E32, m1);
@@ -3216,6 +3230,20 @@ void LiftoffAssembler::emit_f64x2_max(LiftoffRegister dst, LiftoffRegister lhs,
   vmv_vv(dst.fp().toV(), kSimd128ScratchReg);
 }
 
+void LiftoffAssembler::emit_f64x2_relaxed_min(LiftoffRegister dst,
+                                              LiftoffRegister lhs,
+                                              LiftoffRegister rhs) {
+  VU.set(kScratchReg, E64, m1);
+  vfmin_vv(dst.fp().toV(), rhs.fp().toV(), lhs.fp().toV());
+}
+
+void LiftoffAssembler::emit_f64x2_relaxed_max(LiftoffRegister dst,
+                                              LiftoffRegister lhs,
+                                              LiftoffRegister rhs) {
+  VU.set(kScratchReg, E64, m1);
+  vfmax_vv(dst.fp().toV(), rhs.fp().toV(), lhs.fp().toV());
+}
+
 void LiftoffAssembler::emit_f64x2_pmin(LiftoffRegister dst, LiftoffRegister lhs,
                                        LiftoffRegister rhs) {
   VU.set(kScratchReg, E64, m1);
-- 
2.35.1

