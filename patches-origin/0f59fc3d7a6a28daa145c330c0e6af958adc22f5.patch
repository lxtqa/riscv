From 0f59fc3d7a6a28daa145c330c0e6af958adc22f5 Mon Sep 17 00:00:00 2001
From: Igor Sheludko <ishell@chromium.org>
Date: Fri, 23 Jun 2023 17:29:25 +0200
Subject: [PATCH] [maglev] Mark all failing tests as such

Most of them fail because Maglev doesn't support compiler::NodeObserver
machinery and because tests have certain expectations about the set of
optimizations that the optimizing compiler should apply.

Bug: v8:7700
Change-Id: I2b09cc6dbabba008d4f345337825dd57f8f48eb5
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/4637130
Auto-Submit: Igor Sheludko <ishell@chromium.org>
Commit-Queue: Leszek Swirski <leszeks@chromium.org>
Commit-Queue: Igor Sheludko <ishell@chromium.org>
Reviewed-by: Leszek Swirski <leszeks@chromium.org>
Cr-Commit-Position: refs/heads/main@{#88470}
---
 test/cctest/cctest.status   | 59 +++++++++++++++++++++++++++++++++++++
 test/message/message.status |  8 +++++
 2 files changed, 67 insertions(+)

diff --git a/test/cctest/cctest.status b/test/cctest/cctest.status
index d69292f769d..76e6e2dac18 100644
--- a/test/cctest/cctest.status
+++ b/test/cctest/cctest.status
@@ -1058,4 +1058,63 @@
   'test-api/FastApiCalls': [SKIP],
 }],  # variant == turboshaft
 
+##############################################################################
+# Behavioural differences between Maglev and Turbofan when the former is used
+# for OptimizeFunctionOnNextCall.
+['variant == stress_maglev or variant == stress_maglev_future', {
+  # Maglev doesn't support compiler::NodeObserver machinery.
+  'test-js-to-wasm/TestFastJSWasmCall_I32Arg': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_Nop': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_MixedMistypedArgs': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_MistypedArgs': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_LazyDeopt_F64Result': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_MixedArgs': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_LazyDeopt_I64Result': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_NoArgs': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_I64Arg': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_I32ArgNotSmi': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_I64ArgExpectsBigInt': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_I32ArgDoesntExpectBigInt': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_LazyDeopt_VoidResult': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_LazyDeopt_I32Result': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_I64NegativeResult': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_LazyDeopt_F32Result': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_MismatchedArity': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_MultipleArgs': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_EagerDeopt': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_F64ArgDoesntExpectBigInt': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_ExternrefArg': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_F32Arg': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_F64Arg': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_NoReturnTypes': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_ExternrefNullArg': [FAIL],
+  'test-js-to-wasm/TestFastJSWasmCall_F32ArgDoesntExpectBigInt': [FAIL],
+  'test-calls-with-arraylike-or-spread/ReduceJSCallWithArrayLike': [FAIL],
+  'test-calls-with-arraylike-or-spread/ReduceJSCallWithSpread': [FAIL],
+  'test-calls-with-arraylike-or-spread/ReduceJSCreateBoundFunction': [FAIL],
+  'test-calls-with-arraylike-or-spread/ReduceJSCreateClosure': [FAIL],
+  'test-verify-type/TestVerifyType': [FAIL],
+  # Maglev doesn't support FastApi calls.
+  'test-api/FastApiCalls': [FAIL],
+  'test-api/FastApiSequenceOverloads': [FAIL],
+  # Maglev doesn't produce optimized enough code to match CPU profile tests
+  # expectations.
+  'test-cpu-profiler/CollectDeoptEvents': [FAIL],
+  'test-cpu-profiler/DetailedSourcePositionAPI_Inlining': [FAIL],
+  'test-cpu-profiler/DetailedSourcePositionAPI': [FAIL],
+  'test-cpu-profiler/DeoptAtFirstLevelInlinedSource': [FAIL],
+  'test-cpu-profiler/TickLinesOptimized': [FAIL],
+  'test-cpu-profiler/Inlining': [FAIL],
+  'test-cpu-profiler/FastApiCPUProfiler': [FAIL],
+  'test-cpu-profiler/DeoptAtSecondLevelInlinedSource': [FAIL],
+  # Maglev doesn't produce optimized enough code to match heap tests
+  # expectations.
+  'test-heap/CellsInOptimizedCodeAreWeak': [FAIL],
+  'test-heap/EnsureAllocationSiteDependentCodesProcessed': [FAIL],
+  'test-heap/LeakNativeContextViaMapKeyed': [FAIL],
+  'test-heap/NewSpaceObjectsInOptimizedCode': [FAIL],
+  'test-heap/LeakNativeContextViaMapProto': [FAIL],
+  'test-heap/ObjectsInOptimizedCodeAreWeak': [FAIL],
+  'test-heap/ObjectsInEagerlyDeoptimizedCodeAreWeak': [FAIL],
+}],  # variant == stress_maglev or variant == stress_maglev_future
 ]
diff --git a/test/message/message.status b/test/message/message.status
index 2fcc62723ec..0daa0aaa25b 100644
--- a/test/message/message.status
+++ b/test/message/message.status
@@ -119,4 +119,12 @@
   'wasm-trace-memory64': [SKIP],
   'wasm-trace-memory64-liftoff': [SKIP],
 }],  # 'arch in (ia32, arm, riscv32)'
+
+##############################################################################
+# Behavioural differences between Maglev and Turbofan when the former is used
+# for OptimizeFunctionOnNextCall.
+['variant == stress_maglev or variant == stress_maglev_future', {
+  # Maglev doesn't support inlining of Wasm code.
+  'wasm-inlining-into-js': [FAIL],
+}],  # variant == stress_maglev or variant == stress_maglev_future
 ]
-- 
2.35.1

