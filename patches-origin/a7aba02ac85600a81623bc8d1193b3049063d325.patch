From a7aba02ac85600a81623bc8d1193b3049063d325 Mon Sep 17 00:00:00 2001
From: Alan Zhao <ayzhao@google.com>
Date: Thu, 26 May 2022 12:55:56 -0400
Subject: [PATCH] Fix V8 not building with llvm-ml
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Currently, llvm-ml only assembles files that have the .asm extension, so
push_registers_masm.S fails to get assembled. This CL changes the
extension of the x86 and x64 push_registers_masm.S files to .asm.

I'll work on a patch to support assembling files with the .S extension
in llvm-ml, but in the meantime, we should probably rename the files as
it is customary for Intel syntax assembly files to have the .asm
extension[0].

ARM assembly files don't use llvm-ml, so we don't need to rename them.

[0]: https://stackoverflow.com/a/34098830

Change-Id: Ie4db42b78dd358c3ec0de83e9518aa5c60f6d175
Bug: chromium:762167
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3668287
Commit-Queue: Manos Koukoutos <manoskouk@chromium.org>
Reviewed-by: Dominik Inf√ºhr <dinfuehr@chromium.org>
Cr-Commit-Position: refs/heads/main@{#80772}
---
 BUILD.bazel                                                   | 4 ++--
 BUILD.gn                                                      | 4 ++--
 .../ia32/{push_registers_masm.S => push_registers_masm.asm}   | 0
 .../x64/{push_registers_masm.S => push_registers_masm.asm}    | 0
 4 files changed, 4 insertions(+), 4 deletions(-)
 rename src/heap/base/asm/ia32/{push_registers_masm.S => push_registers_masm.asm} (100%)
 rename src/heap/base/asm/x64/{push_registers_masm.S => push_registers_masm.asm} (100%)

diff --git a/BUILD.bazel b/BUILD.bazel
index fb767b1eed1..bb7b7c7166b 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -3084,8 +3084,8 @@ filegroup(
         "@v8//bazel/config:is_inline_asm_s390x": ["src/heap/base/asm/s390/push_registers_asm.cc"],
         "@v8//bazel/config:is_inline_asm_riscv64": ["src/heap/base/asm/riscv64/push_registers_asm.cc"],
         "@v8//bazel/config:is_inline_asm_ppc64le": ["src/heap/base/asm/ppc/push_registers_asm.cc"],
-        "@v8//bazel/config:is_msvc_asm_ia32": ["src/heap/base/asm/ia32/push_registers_masm.S"],
-        "@v8//bazel/config:is_msvc_asm_x64": ["src/heap/base/asm/x64/push_registers_masm.S"],
+        "@v8//bazel/config:is_msvc_asm_ia32": ["src/heap/base/asm/ia32/push_registers_masm.asm"],
+        "@v8//bazel/config:is_msvc_asm_x64": ["src/heap/base/asm/x64/push_registers_masm.asm"],
         "@v8//bazel/config:is_msvc_asm_arm64": ["src/heap/base/asm/arm64/push_registers_masm.S"],
     }),
 )
diff --git a/BUILD.gn b/BUILD.gn
index 01718ac05d3..97828fc06b7 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -5616,9 +5616,9 @@ v8_source_set("v8_heap_base") {
     }
   } else if (is_win) {
     if (current_cpu == "x64") {
-      sources += [ "src/heap/base/asm/x64/push_registers_masm.S" ]
+      sources += [ "src/heap/base/asm/x64/push_registers_masm.asm" ]
     } else if (current_cpu == "x86") {
-      sources += [ "src/heap/base/asm/ia32/push_registers_masm.S" ]
+      sources += [ "src/heap/base/asm/ia32/push_registers_masm.asm" ]
     } else if (current_cpu == "arm64") {
       sources += [ "src/heap/base/asm/arm64/push_registers_masm.S" ]
     }
diff --git a/src/heap/base/asm/ia32/push_registers_masm.S b/src/heap/base/asm/ia32/push_registers_masm.asm
similarity index 100%
rename from src/heap/base/asm/ia32/push_registers_masm.S
rename to src/heap/base/asm/ia32/push_registers_masm.asm
diff --git a/src/heap/base/asm/x64/push_registers_masm.S b/src/heap/base/asm/x64/push_registers_masm.asm
similarity index 100%
rename from src/heap/base/asm/x64/push_registers_masm.S
rename to src/heap/base/asm/x64/push_registers_masm.asm
-- 
2.35.1

