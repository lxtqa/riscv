From a2ea3574db41052e70481ad6a3ba4c9eb958c88d Mon Sep 17 00:00:00 2001
From: Ng Zhi An <zhin@chromium.org>
Date: Fri, 5 Nov 2021 17:23:15 -0700
Subject: [PATCH] Fix -Wshadow warnings by making OptimizationMarker an enum
 class

Bug: v8:12244,v8:12245
Change-Id: I7de616f87dcec7ebaa51af10390c2685650633d0
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3266004
Reviewed-by: Anton Bikineev <bikineev@chromium.org>
Commit-Queue: Zhi An Ng <zhin@chromium.org>
Cr-Commit-Position: refs/heads/main@{#77781}
---
 src/builtins/arm/builtins-arm.cc         | 2 +-
 src/builtins/arm64/builtins-arm64.cc     | 3 ++-
 src/builtins/builtins-lazy-gen.cc        | 4 +++-
 src/builtins/ia32/builtins-ia32.cc       | 2 +-
 src/builtins/loong64/builtins-loong64.cc | 3 ++-
 src/builtins/mips/builtins-mips.cc       | 3 ++-
 src/builtins/mips64/builtins-mips64.cc   | 3 ++-
 src/builtins/ppc/builtins-ppc.cc         | 2 +-
 src/builtins/riscv64/builtins-riscv64.cc | 4 ++--
 src/builtins/s390/builtins-s390.cc       | 2 +-
 src/builtins/x64/builtins-x64.cc         | 2 +-
 src/common/globals.h                     | 9 ++++++---
 12 files changed, 24 insertions(+), 15 deletions(-)

diff --git a/src/builtins/arm/builtins-arm.cc b/src/builtins/arm/builtins-arm.cc
index 6651da333be..a55f662802b 100644
--- a/src/builtins/arm/builtins-arm.cc
+++ b/src/builtins/arm/builtins-arm.cc
@@ -892,7 +892,7 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           Runtime::FunctionId function_id) {
   ASM_CODE_COMMENT(masm);
   Label no_match;
-  __ cmp_raw_immediate(actual_marker, expected_marker);
+  __ cmp_raw_immediate(actual_marker, static_cast<int>(expected_marker));
   __ b(ne, &no_match);
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
diff --git a/src/builtins/arm64/builtins-arm64.cc b/src/builtins/arm64/builtins-arm64.cc
index c5bef392681..f7e0499ded5 100644
--- a/src/builtins/arm64/builtins-arm64.cc
+++ b/src/builtins/arm64/builtins-arm64.cc
@@ -1083,7 +1083,8 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           Runtime::FunctionId function_id) {
   ASM_CODE_COMMENT(masm);
   Label no_match;
-  __ CompareAndBranch(actual_marker, Operand(expected_marker), ne, &no_match);
+  __ CompareAndBranch(actual_marker, Operand(static_cast<int>(expected_marker)),
+                      ne, &no_match);
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
 }
diff --git a/src/builtins/builtins-lazy-gen.cc b/src/builtins/builtins-lazy-gen.cc
index e95d0da4cc9..5e888ba5633 100644
--- a/src/builtins/builtins-lazy-gen.cc
+++ b/src/builtins/builtins-lazy-gen.cc
@@ -34,7 +34,9 @@ void LazyBuiltinsAssembler::TailCallRuntimeIfMarkerEquals(
     TNode<Uint32T> marker, OptimizationMarker expected_marker,
     Runtime::FunctionId function_id, TNode<JSFunction> function) {
   Label no_match(this);
-  GotoIfNot(Word32Equal(marker, Uint32Constant(expected_marker)), &no_match);
+  GotoIfNot(Word32Equal(marker,
+                        Uint32Constant(static_cast<uint32_t>(expected_marker))),
+            &no_match);
   GenerateTailCallToReturnedCode(function_id, function);
   BIND(&no_match);
 }
diff --git a/src/builtins/ia32/builtins-ia32.cc b/src/builtins/ia32/builtins-ia32.cc
index 30545345e8c..c16687c15dc 100644
--- a/src/builtins/ia32/builtins-ia32.cc
+++ b/src/builtins/ia32/builtins-ia32.cc
@@ -837,7 +837,7 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           Runtime::FunctionId function_id) {
   ASM_CODE_COMMENT(masm);
   Label no_match;
-  __ cmp(actual_marker, expected_marker);
+  __ cmp(actual_marker, static_cast<int>(expected_marker));
   __ j(not_equal, &no_match, Label::kNear);
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
diff --git a/src/builtins/loong64/builtins-loong64.cc b/src/builtins/loong64/builtins-loong64.cc
index 9a9d5336acc..a684fa5a31b 100644
--- a/src/builtins/loong64/builtins-loong64.cc
+++ b/src/builtins/loong64/builtins-loong64.cc
@@ -871,7 +871,8 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           OptimizationMarker expected_marker,
                                           Runtime::FunctionId function_id) {
   Label no_match;
-  __ Branch(&no_match, ne, actual_marker, Operand(expected_marker));
+  __ Branch(&no_match, ne, actual_marker,
+            Operand(static_cast<int>(expected_marker)));
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
 }
diff --git a/src/builtins/mips/builtins-mips.cc b/src/builtins/mips/builtins-mips.cc
index 3a68b17551d..2225df851fe 100644
--- a/src/builtins/mips/builtins-mips.cc
+++ b/src/builtins/mips/builtins-mips.cc
@@ -865,7 +865,8 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           Runtime::FunctionId function_id) {
   ASM_CODE_COMMENT(masm);
   Label no_match;
-  __ Branch(&no_match, ne, actual_marker, Operand(expected_marker));
+  __ Branch(&no_match, ne, actual_marker,
+            Operand(static_cast<int>(expected_marker)));
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
 }
diff --git a/src/builtins/mips64/builtins-mips64.cc b/src/builtins/mips64/builtins-mips64.cc
index 078b798ef2c..6e4e58ac2e0 100644
--- a/src/builtins/mips64/builtins-mips64.cc
+++ b/src/builtins/mips64/builtins-mips64.cc
@@ -876,7 +876,8 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           OptimizationMarker expected_marker,
                                           Runtime::FunctionId function_id) {
   Label no_match;
-  __ Branch(&no_match, ne, actual_marker, Operand(expected_marker));
+  __ Branch(&no_match, ne, actual_marker,
+            Operand(static_cast<int>(expected_marker)));
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
 }
diff --git a/src/builtins/ppc/builtins-ppc.cc b/src/builtins/ppc/builtins-ppc.cc
index 3153253dc57..0e3ed26eeb8 100644
--- a/src/builtins/ppc/builtins-ppc.cc
+++ b/src/builtins/ppc/builtins-ppc.cc
@@ -856,7 +856,7 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           OptimizationMarker expected_marker,
                                           Runtime::FunctionId function_id) {
   Label no_match;
-  __ cmpi(actual_marker, Operand(expected_marker));
+  __ cmpi(actual_marker, Operand(static_cast<int>(expected_marker)));
   __ bne(&no_match);
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
diff --git a/src/builtins/riscv64/builtins-riscv64.cc b/src/builtins/riscv64/builtins-riscv64.cc
index 66394ec25b0..746c989e425 100644
--- a/src/builtins/riscv64/builtins-riscv64.cc
+++ b/src/builtins/riscv64/builtins-riscv64.cc
@@ -921,8 +921,8 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           Runtime::FunctionId function_id) {
   ASM_CODE_COMMENT(masm);
   Label no_match;
-  __ Branch(&no_match, ne, actual_marker, Operand(expected_marker),
-            Label::Distance::kNear);
+  __ Branch(&no_match, ne, actual_marker,
+            Operand(static_cast<int>(expected_marker)), Label::Distance::kNear);
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
 }
diff --git a/src/builtins/s390/builtins-s390.cc b/src/builtins/s390/builtins-s390.cc
index 58713de8f04..28f7ed80129 100644
--- a/src/builtins/s390/builtins-s390.cc
+++ b/src/builtins/s390/builtins-s390.cc
@@ -951,7 +951,7 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           OptimizationMarker expected_marker,
                                           Runtime::FunctionId function_id) {
   Label no_match;
-  __ CmpS64(actual_marker, Operand(expected_marker));
+  __ CmpS64(actual_marker, Operand(static_cast<int>(expected_marker)));
   __ bne(&no_match);
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
diff --git a/src/builtins/x64/builtins-x64.cc b/src/builtins/x64/builtins-x64.cc
index c2de46498f3..28556c5071b 100644
--- a/src/builtins/x64/builtins-x64.cc
+++ b/src/builtins/x64/builtins-x64.cc
@@ -948,7 +948,7 @@ static void TailCallRuntimeIfMarkerEquals(MacroAssembler* masm,
                                           Runtime::FunctionId function_id) {
   ASM_CODE_COMMENT(masm);
   Label no_match;
-  __ Cmp(actual_marker, expected_marker);
+  __ Cmp(actual_marker, static_cast<int>(expected_marker));
   __ j(not_equal, &no_match);
   GenerateTailCallToReturnedCode(masm, function_id);
   __ bind(&no_match);
diff --git a/src/common/globals.h b/src/common/globals.h
index 09bfae28de7..a415dc09d85 100644
--- a/src/common/globals.h
+++ b/src/common/globals.h
@@ -1620,7 +1620,7 @@ inline std::ostream& operator<<(std::ostream& os,
 
 using FileAndLine = std::pair<const char*, int>;
 
-enum OptimizationMarker : int32_t {
+enum class OptimizationMarker : int32_t {
   // These values are set so that it is easy to check if there is a marker where
   // some processing needs to be done.
   kNone = 0b000,
@@ -1633,8 +1633,11 @@ enum OptimizationMarker : int32_t {
 // For kNone or kInOptimizationQueue we don't need any special processing.
 // To check both cases using a single mask, we expect the kNone to be 0 and
 // kInOptimizationQueue to be 1 so that we can mask off the lsb for checking.
-STATIC_ASSERT(kNone == 0b000 && kInOptimizationQueue == 0b001);
-STATIC_ASSERT(kLastOptimizationMarker <= 0b111);
+STATIC_ASSERT(static_cast<int>(OptimizationMarker::kNone) == 0b000 &&
+              static_cast<int>(OptimizationMarker::kInOptimizationQueue) ==
+                  0b001);
+STATIC_ASSERT(static_cast<int>(OptimizationMarker::kLastOptimizationMarker) <=
+              0b111);
 static constexpr uint32_t kNoneOrInOptimizationQueueMask = 0b110;
 
 inline bool IsInOptimizationQueueMarker(OptimizationMarker marker) {
-- 
2.35.1

