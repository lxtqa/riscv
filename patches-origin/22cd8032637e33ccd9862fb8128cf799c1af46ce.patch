From 22cd8032637e33ccd9862fb8128cf799c1af46ce Mon Sep 17 00:00:00 2001
From: Michael Lippautz <mlippautz@chromium.org>
Date: Tue, 24 Aug 2021 13:02:29 +0200
Subject: [PATCH] cppgc: Update README

Give a little bit of introduction to Oilpan and provide a few links to
navigate the project.

Bug: chromium:1056170
Change-Id: I4ef8c256c8de7932e3393017be6c58ba48ca45f2
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/3114141
Commit-Queue: Michael Lippautz <mlippautz@chromium.org>
Reviewed-by: Hannes Payer <hpayer@chromium.org>
Cr-Commit-Position: refs/heads/main@{#76457}
---
 BUILD.gn                                        |  4 ++--
 include/cppgc/README.md                         | 17 +++++++++++++++--
 .../cppgc/{cppgc-sample.cc => hello-world.cc}   |  0
 tools/cppgc/gen_cmake.py                        |  2 +-
 tools/cppgc/test_cmake.sh                       |  2 +-
 5 files changed, 19 insertions(+), 6 deletions(-)
 rename samples/cppgc/{cppgc-sample.cc => hello-world.cc} (100%)

diff --git a/BUILD.gn b/BUILD.gn
index 724ccf5554..340ca8c5ee 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -5892,8 +5892,8 @@ if (want_v8_shell) {
   }
 }
 
-v8_executable("cppgc_sample") {
-  sources = [ "samples/cppgc/cppgc-sample.cc" ]
+v8_executable("cppgc_hello_world") {
+  sources = [ "samples/cppgc/hello-world.cc" ]
 
   if (v8_current_cpu == "riscv64") {
     libs = [ "atomic" ]
diff --git a/include/cppgc/README.md b/include/cppgc/README.md
index b59fea6ed8..e454399853 100644
--- a/include/cppgc/README.md
+++ b/include/cppgc/README.md
@@ -1,3 +1,16 @@
-# C++ Garbage Collection
+# Oilpan: C++ Garbage Collection
 
-This directory provides an open-source garbage collection library for C++.
+Oilpan is an open-source garbage collection library for C++ that can be used stand-alone or in collaboration with V8's JavaScript garbage collector.
+
+**Key properties**
+- Trace-based garbage collection;
+- Precise on-heap memory layout;
+- Conservative on-stack memory layout;
+- Allows for collection with and without considering stack;
+- Incremental and concurrent marking;
+- Incremental and concurrent sweeping;
+- Non-incremental and non-concurrent compaction for selected spaces;
+
+See the [Hello World](https://chromium.googlesource.com/v8/v8/+/main/samples/cppgc/hello-world.cc) example on how to get started using Oilpan to manage C++ code.
+
+Oilpan follows V8's project organization, see e.g. on how we accept [contributions](https://v8.dev/docs/contribute) and [provide a stable API](https://v8.dev/docs/api).
diff --git a/samples/cppgc/cppgc-sample.cc b/samples/cppgc/hello-world.cc
similarity index 100%
rename from samples/cppgc/cppgc-sample.cc
rename to samples/cppgc/hello-world.cc
diff --git a/tools/cppgc/gen_cmake.py b/tools/cppgc/gen_cmake.py
index 9a7b54ec73..1063455b7f 100755
--- a/tools/cppgc/gen_cmake.py
+++ b/tools/cppgc/gen_cmake.py
@@ -409,7 +409,7 @@ else{else_cond}
                    deps=['Threads::Threads'],
                    desc='Main library'),
             'sample':
-            Target(name='cppgc_sample',
+            Target(name='cppgc_hello_world',
                    cmake='add_executable',
                    deps=['cppgc'],
                    desc='Example'),
diff --git a/tools/cppgc/test_cmake.sh b/tools/cppgc/test_cmake.sh
index 77f551c0b5..55765ddcdd 100755
--- a/tools/cppgc/test_cmake.sh
+++ b/tools/cppgc/test_cmake.sh
@@ -50,7 +50,7 @@ cmake -GNinja $rootdir || fail "Failed to execute cmake"
 
 # Build all targets.
 ninja cppgc || fail "Failed to build cppgc"
-ninja cppgc_sample || fail "Failed to build sample"
+ninja cppgc_hello_world || fail "Failed to build sample"
 ninja cppgc_unittests || fail "Failed to build unittests"
 
 # Run unittests.
-- 
2.35.1

