diff --git a/src/baseline/riscv64/baseline-compiler-riscv64-inl.h b/src/baseline/riscv64/baseline-compiler-riscv64-inl.h
index deb5aba0efb..c631c4c33f6 100644
--- a/src/baseline/riscv64/baseline-compiler-riscv64-inl.h
+++ b/src/baseline/riscv64/baseline-compiler-riscv64-inl.h
@@ -14,7 +14,6 @@ namespace baseline {
 #define __ basm_.
 
 void BaselineCompiler::Prologue() {
-  ASM_CODE_COMMENT(&masm_);
   // Enter the frame here, since CallBuiltin will override lr.
   __ masm()->EnterFrame(StackFrame::BASELINE);
   DCHECK_EQ(kJSFunctionRegister, kJavaScriptCallTargetRegister);
@@ -26,7 +25,7 @@ void BaselineCompiler::Prologue() {
 }
 
 void BaselineCompiler::PrologueFillFrame() {
-  ASM_CODE_COMMENT(&masm_);
+  __ RecordComment("[ Fill frame");
   // Inlined register frame fill
   interpreter::Register new_target_or_generator_register =
       bytecode_->incoming_new_target_or_generator_register();
@@ -91,10 +90,10 @@ void BaselineCompiler::PrologueFillFrame() {
     }
     __ masm()->Branch(&loop, gt, scratch, Operand(1));
   }
+  __ RecordComment("]");
 }
 
 void BaselineCompiler::VerifyFrameSize() {
-  ASM_CODE_COMMENT(&masm_);
   __ masm()->Add64(kScratchReg, sp,
                    RoundUp(InterpreterFrameConstants::kFixedFrameSizeFromFp +
                                bytecode_->frame_size(),
