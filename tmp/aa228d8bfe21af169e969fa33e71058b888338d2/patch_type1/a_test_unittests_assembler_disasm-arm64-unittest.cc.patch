diff --git a/test/unittests/assembler/disasm-arm64-unittest.cc b/test/unittests/assembler/disasm-arm64-unittest.cc
index d845144e14..eb33d4b9f3 100644
--- a/test/unittests/assembler/disasm-arm64-unittest.cc
+++ b/test/unittests/assembler/disasm-arm64-unittest.cc
@@ -49,7 +49,7 @@ using DisasmArm64Test = TestWithIsolate;
 #define INSTR_SIZE (1024)
 #define SET_UP_MASM()                                                         \
   HandleScope scope(isolate());                                               \
-  byte* buf = static_cast<byte*>(malloc(INSTR_SIZE));                         \
+  uint8_t* buf = static_cast<uint8_t*>(malloc(INSTR_SIZE));                   \
   uint32_t encoding = 0;                                                      \
   MacroAssembler* assm =                                                      \
       new MacroAssembler((isolate()), v8::internal::CodeObjectRequired::kYes, \
@@ -61,7 +61,7 @@ using DisasmArm64Test = TestWithIsolate;
 
 #define SET_UP_ASM()                                                         \
   HandleScope scope(isolate());                                              \
-  byte* buf = static_cast<byte*>(malloc(INSTR_SIZE));                        \
+  uint8_t* buf = static_cast<uint8_t*>(malloc(INSTR_SIZE));                  \
   uint32_t encoding = 0;                                                     \
   Assembler* assm = new Assembler(AssemblerOptions{},                        \
                                   ExternalAssemblerBuffer(buf, INSTR_SIZE)); \
@@ -2012,7 +2012,7 @@ TEST_F(DisasmArm64Test, debug) {
   for (int i = 0; i < 2; i++) {
     // Loop runs with and without the simulator code enabled.
     HandleScope scope(isolate());
-    byte* buf = static_cast<byte*>(malloc(INSTR_SIZE));
+    uint8_t* buf = static_cast<uint8_t*>(malloc(INSTR_SIZE));
     uint32_t encoding = 0;
     AssemblerOptions options;
 #ifdef USE_SIMULATOR
