diff --git a/src/codegen/arm64/constants-arm64.h b/src/codegen/arm64/constants-arm64.h
index 7fda6439a75..56509c80673 100644
--- a/src/codegen/arm64/constants-arm64.h
+++ b/src/codegen/arm64/constants-arm64.h
@@ -28,6 +28,8 @@ static_assert(sizeof(1) == sizeof(int32_t));
 namespace v8 {
 namespace internal {
 
+// The maximum size of the code range s.t. pc-relative calls are possible
+// between all Code objects in the range.
 constexpr size_t kMaxPCRelativeCodeRangeInMB = 128;
 
 constexpr uint8_t kInstrSize = 4;
@@ -140,11 +142,17 @@ constexpr unsigned kFloat16MantissaBits = 10;
 constexpr unsigned kFloat16ExponentBits = 5;
 constexpr unsigned kFloat16ExponentBias = 15;
 
-// Actual value of root register is offset from the root array's start
+// The actual value of the kRootRegister is offset from the IsolateData's start
 // to take advantage of negative displacement values.
-// TODO(sigurds): Choose best value.
-// TODO(ishell): Choose best value for ptr-compr.
-constexpr int kRootRegisterBias = kSystemPointerSize == kTaggedSize ? 256 : 0;
+#ifdef V8_COMPRESS_POINTERS_IN_SHARED_CAGE
+constexpr int kRootRegisterBias = 256;
+// Problems with #include order prevent this static_assert:
+// static_assert(kRootRegister != kPtrComprCageBaseRegister);
+#else
+constexpr int kRootRegisterBias = 0;
+// Problems with #include order prevent this static_assert:
+// static_assert(kRootRegister == kPtrComprCageBaseRegister);
+#endif  // V8_COMPRESS_POINTERS_IN_SHARED_CAGE
 
 using float16 = uint16_t;
 
