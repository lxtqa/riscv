diff --git a/src/wasm/baseline/ia32/liftoff-assembler-ia32.h b/src/wasm/baseline/ia32/liftoff-assembler-ia32-inl.h
similarity index 99%
rename from src/wasm/baseline/ia32/liftoff-assembler-ia32.h
rename to src/wasm/baseline/ia32/liftoff-assembler-ia32-inl.h
index 8e2516bdedd..b2f75a3aab7 100644
--- a/src/wasm/baseline/ia32/liftoff-assembler-ia32.h
+++ b/src/wasm/baseline/ia32/liftoff-assembler-ia32-inl.h
@@ -2,8 +2,8 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 
-#ifndef V8_WASM_BASELINE_IA32_LIFTOFF_ASSEMBLER_IA32_H_
-#define V8_WASM_BASELINE_IA32_LIFTOFF_ASSEMBLER_IA32_H_
+#ifndef V8_WASM_BASELINE_IA32_LIFTOFF_ASSEMBLER_IA32_INL_H_
+#define V8_WASM_BASELINE_IA32_LIFTOFF_ASSEMBLER_IA32_INL_H_
 
 #include "src/base/v8-fallthrough.h"
 #include "src/codegen/assembler.h"
@@ -15,9 +15,7 @@
 #include "src/wasm/value-type.h"
 #include "src/wasm/wasm-objects.h"
 
-namespace v8 {
-namespace internal {
-namespace wasm {
+namespace v8::internal::wasm {
 
 #define RETURN_FALSE_IF_MISSING_CPU_FEATURE(name)    \
   if (!CpuFeatures::IsSupported(name)) return false; \
@@ -1136,7 +1134,6 @@ void LiftoffAssembler::AtomicCompareExchange(
       pinned.clear(LiftoffRegister(value_reg));
     }
 
-
     Operand dst_op = Operand(dst_addr, offset_imm);
 
     lock();
@@ -4914,8 +4911,6 @@ void LiftoffStackSlots::Construct(int param_slots) {
 
 #undef RETURN_FALSE_IF_MISSING_CPU_FEATURE
 
-}  // namespace wasm
-}  // namespace internal
-}  // namespace v8
+}  // namespace v8::internal::wasm
 
-#endif  // V8_WASM_BASELINE_IA32_LIFTOFF_ASSEMBLER_IA32_H_
+#endif  // V8_WASM_BASELINE_IA32_LIFTOFF_ASSEMBLER_IA32_INL_H_
diff --git a/src/wasm/baseline/liftoff-assembler-inl.h b/src/wasm/baseline/liftoff-assembler-inl.h
new file mode 100644
index 00000000000..dd9bbe5ce97
