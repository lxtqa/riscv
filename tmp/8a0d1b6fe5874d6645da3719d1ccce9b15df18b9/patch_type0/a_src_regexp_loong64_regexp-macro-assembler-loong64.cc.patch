diff --git a/src/regexp/loong64/regexp-macro-assembler-loong64.cc b/src/regexp/loong64/regexp-macro-assembler-loong64.cc
index 3db9a90c29..c60a714339 100644
--- a/src/regexp/loong64/regexp-macro-assembler-loong64.cc
+++ b/src/regexp/loong64/regexp-macro-assembler-loong64.cc
@@ -667,13 +667,12 @@ Handle<HeapObject> RegExpMacroAssemblerLOONG64::GetCode(Handle<String> source) {
     // Order here should correspond to order of offset constants in header file.
     // TODO(plind): we save s0..s7, but ONLY use s3 here - use the regs
     // or dont save.
-    RegList registers_to_retain = s0.bit() | s1.bit() | s2.bit() | s3.bit() |
-                                  s4.bit() | s5.bit() | s6.bit() | s7.bit();
-    RegList argument_registers = a0.bit() | a1.bit() | a2.bit() | a3.bit();
+    RegList registers_to_retain = {s0, s1, s2, s3, s4, s5, s6, s7};
+    RegList argument_registers = {a0, a1, a2, a3};
 
-    argument_registers |= a4.bit() | a5.bit() | a6.bit() | a7.bit();
+    argument_registers |= {a4, a5, a6, a7};
 
-    __ MultiPush(ra.bit(), fp.bit(), argument_registers | registers_to_retain);
+    __ MultiPush({ra}, {fp}, argument_registers | registers_to_retain);
     // Set frame pointer in space for it if this is not a direct call
     // from generated code.
     // TODO(plind): this 8 is the # of argument regs, should have definition.
@@ -894,7 +893,7 @@ Handle<HeapObject> RegExpMacroAssemblerLOONG64::GetCode(Handle<String> source) {
     // Skip sp past regexp registers and local variables..
     __ mov(sp, frame_pointer());
     // Restore registers s0..s7 and return (restoring ra to pc).
-    __ MultiPop(ra.bit(), fp.bit(), registers_to_retain);
+    __ MultiPop({ra}, {fp}, registers_to_retain);
     __ Ret();
 
     // Backtrack code (branch target for conditional backtracks).
