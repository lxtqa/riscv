diff --git a/src/maglev/x64/maglev-ir-x64.cc b/src/maglev/x64/maglev-ir-x64.cc
index ae70542f2e4..9b10d5b5dc4 100644
--- a/src/maglev/x64/maglev-ir-x64.cc
+++ b/src/maglev/x64/maglev-ir-x64.cc
@@ -586,106 +586,6 @@ void LoadFixedArrayElement::GenerateCode(MaglevAssembler* masm,
   }
 }
 
-void StoreFixedArrayElementWithWriteBarrier::SetValueLocationConstraints() {
-  UseRegister(elements_input());
-  UseRegister(index_input());
-  UseRegister(value_input());
-  RequireSpecificTemporary(WriteBarrierDescriptor::ObjectRegister());
-  RequireSpecificTemporary(WriteBarrierDescriptor::SlotAddressRegister());
-}
-void StoreFixedArrayElementWithWriteBarrier::GenerateCode(
-    MaglevAssembler* masm, const ProcessingState& state) {
-  Register elements = ToRegister(elements_input());
-  Register index = ToRegister(index_input());
-  Register value = ToRegister(value_input());
-  if (v8_flags.debug_code) {
-    __ AssertNotSmi(elements);
-    __ CmpObjectType(elements, FIXED_ARRAY_TYPE, kScratchRegister);
-    __ Assert(equal, AbortReason::kUnexpectedValue);
-    __ cmpq(index, Immediate(0));
-    __ Assert(above_equal, AbortReason::kUnexpectedNegativeValue);
-  }
-  __ mov_tagged(
-      FieldOperand(elements, index, times_tagged_size, FixedArray::kHeaderSize),
-      value);
-
-  ZoneLabelRef done(masm);
-  Label* deferred_write_barrier = masm->MakeDeferredCode(
-      [](MaglevAssembler* masm, ZoneLabelRef done, Register object,
-         Register index, Register value, RegisterSnapshot register_snapshot) {
-        ASM_CODE_COMMENT_STRING(masm, "Write barrier slow path");
-        // Use the value as the scratch register if possible, since
-        // CheckPageFlag emits slightly better code when value == scratch.
-        Register scratch = kScratchRegister;
-        if (value != object && !register_snapshot.live_registers.has(value)) {
-          scratch = value;
-        }
-        __ CheckPageFlag(value, scratch,
-                         MemoryChunk::kPointersToHereAreInterestingMask, zero,
-                         *done);
-
-        Register stub_object_reg = WriteBarrierDescriptor::ObjectRegister();
-        Register slot_reg = WriteBarrierDescriptor::SlotAddressRegister();
-
-        RegList saved;
-        if (object != stub_object_reg &&
-            register_snapshot.live_registers.has(stub_object_reg)) {
-          saved.set(stub_object_reg);
-        }
-        if (register_snapshot.live_registers.has(slot_reg)) {
-          saved.set(slot_reg);
-        }
-
-        __ PushAll(saved);
-
-        if (object != stub_object_reg) {
-          __ Move(stub_object_reg, object);
-          object = stub_object_reg;
-        }
-        __ leaq(slot_reg, FieldOperand(object, index, times_tagged_size,
-                                       FixedArray::kHeaderSize));
-
-        SaveFPRegsMode const save_fp_mode =
-            !register_snapshot.live_double_registers.is_empty()
-                ? SaveFPRegsMode::kSave
-                : SaveFPRegsMode::kIgnore;
-
-        __ CallRecordWriteStub(object, slot_reg, save_fp_mode);
-
-        __ PopAll(saved);
-        __ jmp(*done);
-      },
-      done, elements, index, value, register_snapshot());
-
-  __ JumpIfSmi(value, *done);
-  __ CheckPageFlag(elements, kScratchRegister,
-                   MemoryChunk::kPointersFromHereAreInterestingMask, not_zero,
-                   deferred_write_barrier);
-  __ bind(*done);
-}
-
-void StoreFixedArrayElementNoWriteBarrier::SetValueLocationConstraints() {
-  UseRegister(elements_input());
-  UseRegister(index_input());
-  UseRegister(value_input());
-}
-void StoreFixedArrayElementNoWriteBarrier::GenerateCode(
-    MaglevAssembler* masm, const ProcessingState& state) {
-  Register elements = ToRegister(elements_input());
-  Register index = ToRegister(index_input());
-  Register value = ToRegister(value_input());
-  if (v8_flags.debug_code) {
-    __ AssertNotSmi(elements);
-    __ CmpObjectType(elements, FIXED_ARRAY_TYPE, kScratchRegister);
-    __ Assert(equal, AbortReason::kUnexpectedValue);
-    __ cmpq(index, Immediate(0));
-    __ Assert(above_equal, AbortReason::kUnexpectedNegativeValue);
-  }
-  __ mov_tagged(
-      FieldOperand(elements, index, times_tagged_size, FixedArray::kHeaderSize),
-      value);
-}
-
 void LoadFixedDoubleArrayElement::SetValueLocationConstraints() {
   UseRegister(elements_input());
   UseRegister(index_input());
diff --git a/test/mjsunit/maglev/regress-4349817-1.js b/test/mjsunit/maglev/regress-4349817-1.js
new file mode 100644
index 00000000000..bbeb0c23092
