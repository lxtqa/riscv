diff --git a/src/maglev/arm64/maglev-assembler-arm64-inl.h b/src/maglev/arm64/maglev-assembler-arm64-inl.h
index c7ce9cbadf9..2da9310b51f 100644
--- a/src/maglev/arm64/maglev-assembler-arm64-inl.h
+++ b/src/maglev/arm64/maglev-assembler-arm64-inl.h
@@ -906,24 +906,7 @@ inline void MaglevAssembler::CallSelf() {
   Bl(code_gen_state()->entry_label());
 }
 
-inline void MaglevAssembler::Jump(Label* target, Label::Distance) {
-  // Any eager deopts should go through JumpIf to enable us to support the
-  // `--deopt-every-n-times` stress mode. See EmitEagerDeoptStress.
-  DCHECK(!IsDeoptLabel(target));
-  B(target);
-}
-
-inline void MaglevAssembler::JumpToDeopt(Label* target) {
-  DCHECK(IsDeoptLabel(target));
-  B(target);
-}
-
-inline void MaglevAssembler::EmitEagerDeoptStress(Label* target) {
-  // TODO(olivf): On arm `--deopt-every-n-times` is currently not supported.
-  // Supporting it would require to implement this method, additionally handle
-  // deopt branches in Cbz, and handle all cases where we fall through to the
-  // deopt branch (like Int32Divide).
-}
+inline void MaglevAssembler::Jump(Label* target, Label::Distance) { B(target); }
 
 inline void MaglevAssembler::JumpIf(Condition cond, Label* target,
                                     Label::Distance) {
