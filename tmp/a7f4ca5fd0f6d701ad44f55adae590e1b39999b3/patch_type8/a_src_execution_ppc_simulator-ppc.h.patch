diff --git a/src/execution/ppc/simulator-ppc.h b/src/execution/ppc/simulator-ppc.h
index 5a781c63a6f..c0586e73b2e 100644
--- a/src/execution/ppc/simulator-ppc.h
+++ b/src/execution/ppc/simulator-ppc.h
@@ -177,11 +177,11 @@ class Simulator : public SimulatorBase {
   double get_double_from_register_pair(int reg);
   void set_d_register_from_double(int dreg, const double dbl) {
     DCHECK(dreg >= 0 && dreg < kNumFPRs);
-    *bit_cast<double*>(&fp_registers_[dreg]) = dbl;
+    *base::bit_cast<double*>(&fp_registers_[dreg]) = dbl;
   }
   double get_double_from_d_register(int dreg) {
     DCHECK(dreg >= 0 && dreg < kNumFPRs);
-    return *bit_cast<double*>(&fp_registers_[dreg]);
+    return *base::bit_cast<double*>(&fp_registers_[dreg]);
   }
   void set_d_register(int dreg, int64_t value) {
     DCHECK(dreg >= 0 && dreg < kNumFPRs);
@@ -434,7 +434,7 @@ class Simulator : public SimulatorBase {
   T get_simd_register_bytes(int reg, int byte_from) {
     // Byte location is reversed in memory.
     int from = kSimd128Size - 1 - (byte_from + sizeof(T) - 1);
-    void* src = bit_cast<uint8_t*>(&simd_registers_[reg]) + from;
+    void* src = base::bit_cast<uint8_t*>(&simd_registers_[reg]) + from;
     T dst;
     memcpy(&dst, src, sizeof(T));
     return dst;
@@ -457,7 +457,7 @@ class Simulator : public SimulatorBase {
   void set_simd_register_bytes(int reg, int byte_from, T value) {
     // Byte location is reversed in memory.
     int from = kSimd128Size - 1 - (byte_from + sizeof(T) - 1);
-    void* dst = bit_cast<uint8_t*>(&simd_registers_[reg]) + from;
+    void* dst = base::bit_cast<uint8_t*>(&simd_registers_[reg]) + from;
     memcpy(dst, &value, sizeof(T));
   }
 
