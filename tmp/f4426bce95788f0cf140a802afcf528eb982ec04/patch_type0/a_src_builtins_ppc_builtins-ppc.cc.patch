diff --git a/src/builtins/ppc/builtins-ppc.cc b/src/builtins/ppc/builtins-ppc.cc
index 84cc9acc99..fa182fbe9b 100644
--- a/src/builtins/ppc/builtins-ppc.cc
+++ b/src/builtins/ppc/builtins-ppc.cc
@@ -3301,19 +3301,19 @@ static void CallApiFunctionAndReturn(MacroAssembler* masm,
     __ stw(r16, MemOperand(r17, kLevelOffset));
   }
 
-  Label profiler_enabled, done_api_call;
-  __ RecordComment("Check if profiler is enabled");
+  Label profiler_or_side_effects_check_enabled, done_api_call;
+  __ RecordComment("Check if profiler or side effects check is enabled");
   __ lbz(scratch,
          __ ExternalReferenceAsOperand(
-             ExternalReference::is_profiling_address(isolate), scratch));
+             ExternalReference::execution_mode_address(isolate), scratch));
   __ cmpi(scratch, Operand::Zero());
-  __ bne(&profiler_enabled);
+  __ bne(&profiler_or_side_effects_check_enabled);
 #ifdef V8_RUNTIME_CALL_STATS
   __ RecordComment("Check if RCS is enabled");
   __ Move(scratch, ExternalReference::address_of_runtime_stats_flag());
   __ lwz(scratch, MemOperand(scratch, 0));
   __ cmpi(scratch, Operand::Zero());
-  __ bne(&profiler_enabled);
+  __ bne(&profiler_or_side_effects_check_enabled);
 #endif  // V8_RUNTIME_CALL_STATS
 
   __ RecordComment("Call the api function directly.");
@@ -3387,7 +3387,7 @@ static void CallApiFunctionAndReturn(MacroAssembler* masm,
 
   {
     ASM_CODE_COMMENT_STRING(masm, "Call the api function via the thunk.");
-    __ bind(&profiler_enabled);
+    __ bind(&profiler_or_side_effects_check_enabled);
     // Additional parameter is the address of the actual callback.
     __ Move(r6, function_address);
     __ Move(ip, thunk_ref);
