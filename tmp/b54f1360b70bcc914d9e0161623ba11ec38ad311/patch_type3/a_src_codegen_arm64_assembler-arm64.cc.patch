diff --git a/src/codegen/arm64/assembler-arm64.cc b/src/codegen/arm64/assembler-arm64.cc
index f6a035a9e7..a111a34e78 100644
--- a/src/codegen/arm64/assembler-arm64.cc
+++ b/src/codegen/arm64/assembler-arm64.cc
@@ -4275,42 +4275,7 @@ bool Assembler::IsImmFP64(double imm) {
   return true;
 }
 
-void Assembler::FixOnHeapReferences(bool update_embedded_objects) {
-  Address base = reinterpret_cast<Address>(buffer_->start());
-  if (update_embedded_objects) {
-    for (auto p : saved_handles_for_raw_object_ptr_) {
-      Handle<HeapObject> object = GetEmbeddedObject(p.second);
-      WriteUnalignedValue(base + p.first, object->ptr());
-    }
-  }
-  for (auto p : saved_offsets_for_runtime_entries_) {
-    Instruction* instr = reinterpret_cast<Instruction*>(base + p.first);
-    Address target = p.second * kInstrSize + options().code_range_start;
-    DCHECK(is_int26(p.second));
-    DCHECK(instr->IsBranchAndLink() || instr->IsUnconditionalBranch());
-    instr->SetBranchImmTarget(reinterpret_cast<Instruction*>(target));
-  }
-}
-
-void Assembler::FixOnHeapReferencesToHandles() {
-  Address base = reinterpret_cast<Address>(buffer_->start());
-  for (auto p : saved_handles_for_raw_object_ptr_) {
-    WriteUnalignedValue(base + p.first, p.second);
-  }
-  saved_handles_for_raw_object_ptr_.clear();
-  for (auto p : saved_offsets_for_runtime_entries_) {
-    Instruction* instr = reinterpret_cast<Instruction*>(base + p.first);
-    DCHECK(is_int26(p.second));
-    DCHECK(instr->IsBranchAndLink() || instr->IsUnconditionalBranch());
-    instr->SetInstructionBits(instr->Mask(UnconditionalBranchMask) | p.second);
-  }
-  saved_offsets_for_runtime_entries_.clear();
-}
-
 void Assembler::GrowBuffer() {
-  bool previously_on_heap = buffer_->IsOnHeap();
-  int previous_on_heap_gc_count = OnHeapGCCount();
-
   // Compute new buffer size.
   int old_size = buffer_->size();
   int new_size = std::min(2 * old_size, old_size + 1 * MB);
@@ -4353,15 +4318,6 @@ void Assembler::GrowBuffer() {
     WriteUnalignedValue<intptr_t>(address, internal_ref);
   }
 
-  // Fix on-heap references.
-  if (previously_on_heap) {
-    if (buffer_->IsOnHeap()) {
-      FixOnHeapReferences(previous_on_heap_gc_count != OnHeapGCCount());
-    } else {
-      FixOnHeapReferencesToHandles();
-    }
-  }
-
   // Pending relocation entries are also relative, no need to relocate.
 }
 
