diff --git a/src/maglev/arm64/maglev-assembler-arm64.cc b/src/maglev/arm64/maglev-assembler-arm64.cc
index efc1c4bdf00..e1c771a1ae5 100644
--- a/src/maglev/arm64/maglev-assembler-arm64.cc
+++ b/src/maglev/arm64/maglev-assembler-arm64.cc
@@ -79,23 +79,6 @@ void MaglevAssembler::Allocate(RegisterSnapshot register_snapshot,
   bind(*done);
 }
 
-void MaglevAssembler::AllocateHeapNumber(RegisterSnapshot register_snapshot,
-                                         Register result,
-                                         DoubleRegister value) {
-  // In the case we need to call the runtime, we should spill the value
-  // register. Even if it is not live in the next node, otherwise the
-  // allocation call might trash it.
-  register_snapshot.live_double_registers.set(value);
-  Allocate(register_snapshot, result, HeapNumber::kSize);
-  // `Allocate` needs 2 scratch registers, so it's important to `Acquire` after
-  // `Allocate` is done and not before.
-  ScratchRegisterScope temps(this);
-  Register scratch = temps.Acquire();
-  LoadTaggedRoot(scratch, RootIndex::kHeapNumberMap);
-  StoreTaggedField(scratch, FieldMemOperand(result, HeapObject::kMapOffset));
-  Str(value, FieldMemOperand(result, HeapNumber::kValueOffset));
-}
-
 void MaglevAssembler::StoreTaggedFieldWithWriteBarrier(
     Register object, int offset, Register value,
     RegisterSnapshot register_snapshot, ValueIsCompressed value_is_compressed,
