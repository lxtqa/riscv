diff --git a/src/maglev/x64/maglev-assembler-x64-inl.h b/src/maglev/x64/maglev-assembler-x64-inl.h
index f7c1101c619..466426e30e7 100644
--- a/src/maglev/x64/maglev-assembler-x64-inl.h
+++ b/src/maglev/x64/maglev-assembler-x64-inl.h
@@ -39,6 +39,26 @@ constexpr Condition ConditionFor(Operation operation) {
   }
 }
 
+constexpr Condition ConditionForFloat64(Operation operation) {
+  switch (operation) {
+    case Operation::kEqual:
+    case Operation::kStrictEqual:
+      return equal;
+    case Operation::kLessThan:
+      return below;
+    case Operation::kLessThanOrEqual:
+      return below_equal;
+    case Operation::kGreaterThan:
+      return above;
+    case Operation::kGreaterThanOrEqual:
+      return above_equal;
+    default:
+      UNREACHABLE();
+  }
+}
+
+constexpr Condition ConditionForNaN() { return parity_even; }
+
 inline ScaleFactor ScaleFactorFromInt(int n) {
   switch (n) {
     case 1:
@@ -557,6 +577,11 @@ inline void MaglevAssembler::CompareInt32(Register src1, Register src2) {
   cmpl(src1, src2);
 }
 
+inline void MaglevAssembler::CompareFloat64(DoubleRegister src1,
+                                            DoubleRegister src2) {
+  Ucomisd(src1, src2);
+}
+
 inline void MaglevAssembler::CallSelf() {
   DCHECK(code_gen_state()->entry_label()->is_bound());
   Call(code_gen_state()->entry_label());
