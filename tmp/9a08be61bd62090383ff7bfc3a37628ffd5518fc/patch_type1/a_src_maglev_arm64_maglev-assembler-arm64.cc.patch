diff --git a/src/maglev/arm64/maglev-assembler-arm64.cc b/src/maglev/arm64/maglev-assembler-arm64.cc
index fda3931b7f0..8abac6b9aaa 100644
--- a/src/maglev/arm64/maglev-assembler-arm64.cc
+++ b/src/maglev/arm64/maglev-assembler-arm64.cc
@@ -156,24 +156,28 @@ void MaglevAssembler::StoreTaggedFieldWithWriteBarrier(
   bind(*done);
 }
 
-void MaglevAssembler::ToBoolean(Register value, ZoneLabelRef is_true,
-                                ZoneLabelRef is_false,
+void MaglevAssembler::ToBoolean(Register value, CheckType check_type,
+                                ZoneLabelRef is_true, ZoneLabelRef is_false,
                                 bool fallthrough_when_true) {
   ScratchRegisterScope temps(this);
   Register map = temps.Acquire();
 
-  // Check if {{value}} is Smi.
-  Condition is_smi = CheckSmi(value);
-  JumpToDeferredIf(
-      is_smi,
-      [](MaglevAssembler* masm, Register value, ZoneLabelRef is_true,
-         ZoneLabelRef is_false) {
-        // Check if {value} is not zero.
-        __ CmpTagged(value, Smi::FromInt(0));
-        __ JumpIf(eq, *is_false);
-        __ Jump(*is_true);
-      },
-      value, is_true, is_false);
+  if (check_type == CheckType::kCheckHeapObject) {
+    // Check if {{value}} is Smi.
+    Condition is_smi = CheckSmi(value);
+    JumpToDeferredIf(
+        is_smi,
+        [](MaglevAssembler* masm, Register value, ZoneLabelRef is_true,
+           ZoneLabelRef is_false) {
+          // Check if {value} is not zero.
+          __ CmpTagged(value, Smi::FromInt(0));
+          __ JumpIf(eq, *is_false);
+          __ Jump(*is_true);
+        },
+        value, is_true, is_false);
+  } else if (v8_flags.debug_code) {
+    AssertNotSmi(value);
+  }
 
   // Check if {{value}} is false.
   CompareRoot(value, RootIndex::kFalseValue);
