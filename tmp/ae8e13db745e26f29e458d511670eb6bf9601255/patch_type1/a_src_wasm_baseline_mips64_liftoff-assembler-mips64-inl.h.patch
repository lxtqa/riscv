diff --git a/src/wasm/baseline/mips64/liftoff-assembler-mips64-inl.h b/src/wasm/baseline/mips64/liftoff-assembler-mips64-inl.h
index 9b960cc25e1..5862e752a8a 100644
--- a/src/wasm/baseline/mips64/liftoff-assembler-mips64-inl.h
+++ b/src/wasm/baseline/mips64/liftoff-assembler-mips64-inl.h
@@ -377,10 +377,7 @@ void LiftoffAssembler::PatchPrepareStackFrame(
   Label continuation;
   if (frame_size < v8_flags.stack_size * 1024) {
     Register stack_limit = kScratchReg;
-    Ld(stack_limit,
-       FieldMemOperand(kWasmInstanceRegister,
-                       WasmInstanceObject::kRealStackLimitAddressOffset));
-    Ld(stack_limit, MemOperand(stack_limit));
+    LoadStackLimit(stack_limit, StackLimitKind::kRealStackLimit);
     Daddu(stack_limit, stack_limit, Operand(frame_size));
     Branch(&continuation, uge, sp, Operand(stack_limit));
   }
@@ -3559,9 +3556,10 @@ void LiftoffAssembler::emit_f64x2_qfms(LiftoffRegister dst,
   bailout(kRelaxedSimd, "emit_f64x2_qfms");
 }
 
-void LiftoffAssembler::StackCheck(Label* ool_code, Register limit_address) {
-  MacroAssembler::Uld(limit_address, MemOperand(limit_address));
-  MacroAssembler::Branch(ool_code, ule, sp, Operand(limit_address));
+void LiftoffAssembler::StackCheck(Label* ool_code) {
+  Register limit_address = kScratchReg;
+  LoadStackLimit(limit_address, StackLimitKind::kInterruptStackLimit);
+  Branch(ool_code, ule, sp, Operand(limit_address));
 }
 
 void LiftoffAssembler::AssertUnreachable(AbortReason reason) {
-- 
2.35.1

