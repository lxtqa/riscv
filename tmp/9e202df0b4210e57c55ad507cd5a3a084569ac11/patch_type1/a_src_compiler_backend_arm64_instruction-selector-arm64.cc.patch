diff --git a/src/compiler/backend/arm64/instruction-selector-arm64.cc b/src/compiler/backend/arm64/instruction-selector-arm64.cc
index 9e38b7520c5..aa409f84f34 100644
--- a/src/compiler/backend/arm64/instruction-selector-arm64.cc
+++ b/src/compiler/backend/arm64/instruction-selector-arm64.cc
@@ -1051,17 +1051,10 @@ void InstructionSelectorT<TurbofanAdapter>::VisitStore(Node* node) {
     inputs[input_count++] = g.UseUniqueRegister(value);
     RecordWriteMode record_write_mode =
         WriteBarrierKindToRecordWriteMode(write_barrier_kind);
-    InstructionCode code;
-    if (representation == MachineRepresentation::kIndirectPointer) {
-      DCHECK_EQ(node->opcode(), IrOpcode::kStoreIndirectPointer);
-      DCHECK_EQ(write_barrier_kind, kIndirectPointerWriteBarrier);
-      // In this case we need to add the IndirectPointerTag as additional input.
-      code = kArchStoreIndirectWithWriteBarrier;
-      Node* tag = node->InputAt(3);
-      inputs[input_count++] = g.UseImmediate(tag);
-    } else {
-      code = kArchStoreWithWriteBarrier;
-    }
+    InstructionCode code =
+        representation == MachineRepresentation::kIndirectPointer
+            ? kArchStoreIndirectWithWriteBarrier
+            : kArchStoreWithWriteBarrier;
     code |= AddressingModeField::encode(addressing_mode);
     code |= RecordWriteModeField::encode(record_write_mode);
     if (node->opcode() == IrOpcode::kStoreTrapOnNull) {
