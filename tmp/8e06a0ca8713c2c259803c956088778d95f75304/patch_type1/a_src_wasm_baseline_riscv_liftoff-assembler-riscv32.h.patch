diff --git a/src/wasm/baseline/riscv/liftoff-assembler-riscv32.h b/src/wasm/baseline/riscv/liftoff-assembler-riscv32.h
index 28810064600..37e8fbdbb0d 100644
--- a/src/wasm/baseline/riscv/liftoff-assembler-riscv32.h
+++ b/src/wasm/baseline/riscv/liftoff-assembler-riscv32.h
@@ -1692,13 +1692,6 @@ void LiftoffAssembler::emit_i32_cond_jumpi(Condition cond, Label* label,
   MacroAssembler::Branch(label, cond, lhs, Operand(imm));
 }
 
-void LiftoffAssembler::emit_i32_subi_jump_negative(
-    Register value, int subtrahend, Label* result_negative,
-    const FreezeCacheState& frozen) {
-  SubWord(value, value, Operand(subtrahend));
-  MacroAssembler::Branch(result_negative, lt, value, Operand(zero_reg));
-}
-
 void LiftoffAssembler::emit_i32_eqz(Register dst, Register src) {
   MacroAssembler::Sltu(dst, src, 1);
 }
@@ -2093,7 +2086,7 @@ void LiftoffAssembler::CallC(const std::initializer_list<VarState> args,
       }
       StoreWord(src, dst);
     } else {
-      DCHECK(value_kind_size(arg.kind()) == 4);
+      DCHECK_EQ(value_kind_size(arg.kind()), 4);
       MemOperand src = liftoff::GetStackSlot(arg.offset());
       auto scratch = temps.Acquire();
       Lw(scratch, src);
