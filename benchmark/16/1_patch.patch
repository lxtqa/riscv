--- ./benchmark/16/test1.cc	2024-01-28 21:16:35
+++ ./benchmark/16/test1_.cc	2024-01-28 21:16:35
@@ -2959,9 +2959,9 @@ void CodeGenerator::AssembleArchBinarySearchSwitch(Ins
 void CodeGenerator::AssembleArchBinarySearchSwitch(Instruction* instr) {
   Arm64OperandConverter i(this, instr);
   Register input = i.InputRegister32(0);
-  std::vector<std::pair<int32_t, Label*>> cases;
+  std::vector<std::pair<int32_t, RpoNumber>> cases;
   for (size_t index = 2; index < instr->InputCount(); index += 2) {
-    cases.push_back({i.InputInt32(index + 0), GetLabel(i.InputRpo(index + 1))});
+    cases.push_back({i.InputInt32(index + 0), i.InputRpo(index + 1)});
   }
   AssembleArchBinarySearchSwitchRange(input, i.InputRpo(1), cases.data(),
                                       cases.data() + cases.size());
