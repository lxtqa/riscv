unit [0,0]
    comment: // Copyright 2021 the V8 project authors. All rights reserved. [0,62]
    comment: // Use of this source code is governed by a BSD-style license that can be [63,136]
    comment: // found in the LICENSE file. [137,166]
    ifndef [168,225]
        directive: ifndef [169,175]
        name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [176,225]
    define [226,283]
        directive: define [227,233]
        macro [234,283]
            name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [234,283]
    include [285,329]
        directive: include [286,293]
        file: "src/baseline/baseline-assembler.h" [294,329]
    include [330,386]
        directive: include [331,338]
        file: "src/codegen/arm64/macro-assembler-arm64-inl.h" [339,386]
    include [387,433]
        directive: include [388,395]
        file: "src/codegen/interface-descriptors.h" [396,433]
    namespace [435,8564]
        name: v8 [445,447]
        block [448,8564]
            namespace [450,8324]
                block [469,8324]
                    namespace [471,1308]
                        name: baseline [481,489]
                        block [490,1308]
                            class [493,1035]
                                name [499,538]
                                    name: BaselineAssembler [499,516]
                                    operator: :: [516,518]
                                    name: ScratchRegisterScope [518,538]
                                block [539,1035]
                                    expr_stmt [542,1031]
                                        expr [542,641]
                                            specifier: public [542,548]
                                            operator: : [548,549]
                                            specifier: explicit [552,560]
                                            call [561,611]
                                                name: ScratchRegisterScope [561,581]
                                                argument_list [581,611]
                                                    argument [582,610]
                                                        expr [582,610]
                                                            name: BaselineAssembler [582,599]
                                                            operator: * [599,600]
                                                            name: assembler [601,610]
                                            operator: : [618,619]
                                            call [620,641]
                                                name: assembler_ [620,630]
                                                argument_list [630,641]
                                                    argument [631,640]
                                                        expr [631,640]
                                                            name: assembler [631,640]
                                        operator: , [641,642]
                                        expr [651,698]
                                            call [651,698]
                                                name: prev_scope_ [651,662]
                                                argument_list [662,698]
                                                    argument [663,697]
                                                        expr [663,697]
                                                            name [663,697]
                                                                name: assembler [663,672]
                                                                operator: -> [672,674]
                                                                name: scratch_register_scope_ [674,697]
                                        operator: , [698,699]
                                        macro [708,741]
                                            name: wrapped_scope_ [708,722]
                                            argument_list [722,741]
                                                argument [723,740]
                                        expr [742,1030]
                                            block [742,983]
                                                if_stmt [748,977]
                                                    if [748,977]
                                                        condition [751,789]
                                                            expr [752,788]
                                                                operator: ! [752,753]
                                                                name [753,788]
                                                                    name: assembler_ [753,763]
                                                                    operator: -> [763,765]
                                                                    name: scratch_register_scope_ [765,788]
                                                        block [790,977]
                                                            block_content [909,977]
                                                                comment: // If we haven't opened a scratch scope yet, for the first one add a [798,866]
                                                                comment: // couple of extra registers. [873,902]
                                                                expr_stmt [909,942]
                                                                    expr [909,941]
                                                                        call [909,941]
                                                                            name [909,931]
                                                                                name: wrapped_scope_ [909,923]
                                                                                operator: . [923,924]
                                                                                name: Include [924,931]
                                                                            argument_list [931,941]
                                                                                argument [932,935]
                                                                                    expr [932,935]
                                                                                        name: x14 [932,935]
                                                                                argument [937,940]
                                                                                    expr [937,940]
                                                                                        name: x15 [937,940]
                                                                expr_stmt [949,977]
                                                                    expr [949,976]
                                                                        call [949,976]
                                                                            name [949,971]
                                                                                name: wrapped_scope_ [949,963]
                                                                                operator: . [963,964]
                                                                                name: Include [964,971]
                                                                            argument_list [971,976]
                                                                                argument [972,975]
                                                                                    expr [972,975]
                                                                                        name: x19 [972,975]
                                                                expr_stmt [0,0]
                                            name [988,1023]
                                                name: assembler_ [988,998]
                                                operator: -> [998,1000]
                                                name: scratch_register_scope_ [1000,1023]
                                            operator: = [1024,1025]
                                            name: this [1026,1030]
                            destructor [1038,1116]
                                name: ~ScratchRegisterScope [1038,1059]
                                parameter_list [1059,1061]
                                block [1062,1116]
                                    block_content [1064,1114]
                                        expr_stmt [1064,1114]
                                            expr [1064,1113]
                                                name [1064,1099]
                                                    name: assembler_ [1064,1074]
                                                    operator: -> [1074,1076]
                                                    name: scratch_register_scope_ [1076,1099]
                                                operator: = [1100,1101]
                                                name: prev_scope_ [1102,1113]
                            function [1120,1183]
                                type [1120,1128]
                                    name: Register [1120,1128]
                                name: AcquireScratch [1129,1143]
                                parameter_list [1143,1145]
                                block [1146,1183]
                                    block_content [1148,1181]
                                        return [1148,1181]
                                            expr [1155,1180]
                                                call [1155,1180]
                                                    name [1155,1178]
                                                        name: wrapped_scope_ [1155,1169]
                                                        operator: . [1169,1170]
                                                        name: AcquireX [1170,1178]
                                                    argument_list [1178,1180]
                            expr_stmt [1186,1227]
                                expr [1186,1226]
                                    specifier: private [1186,1193]
                                    operator: : [1193,1194]
                                    name: BaselineAssembler [1197,1214]
                                    operator: * [1214,1215]
                                    name: assembler_ [1216,1226]
                            decl_stmt [1230,1264]
                                decl [1230,1263]
                                    type [1230,1251]
                                        name: ScratchRegisterScope [1230,1250]
                                        modifier: * [1250,1251]
                                    name: prev_scope_ [1252,1263]
                            decl_stmt [1267,1306]
                                decl [1267,1305]
                                    type [1267,1290]
                                        name: UseScratchRegisterScope [1267,1290]
                                    name: wrapped_scope_ [1291,1305]
                    empty_stmt [1308,1309]
                    comment: // TODO(v8:11461): Unify condition names in the MacroAssembler. [1311,1374]
                    enum [1375,1725]
                        class [1380,1724]
                            name: Condition [1386,1395]
                            super_list [1396,1406]
                                super [1398,1406]
                                    name: uint32_t [1398,1406]
                            block [1407,1724]
                                expr_stmt [1411,1722]
                                    expr [1411,1422]
                                        name: kEqual [1411,1417]
                                        operator: = [1418,1419]
                                        name: eq [1420,1422]
                                    operator: , [1422,1423]
                                    expr [1426,1440]
                                        name: kNotEqual [1426,1435]
                                        operator: = [1436,1437]
                                        name: ne [1438,1440]
                                    operator: , [1440,1441]
                                    expr [1445,1459]
                                        name: kLessThan [1445,1454]
                                        operator: = [1455,1456]
                                        name: lt [1457,1459]
                                    operator: , [1459,1460]
                                    expr [1463,1480]
                                        name: kGreaterThan [1463,1475]
                                        operator: = [1476,1477]
                                        name: gt [1478,1480]
                                    operator: , [1480,1481]
                                    expr [1484,1503]
                                        name: kLessThanEqual [1484,1498]
                                        operator: = [1499,1500]
                                        name: le [1501,1503]
                                    operator: , [1503,1504]
                                    expr [1507,1529]
                                        name: kGreaterThanEqual [1507,1524]
                                        operator: = [1525,1526]
                                        name: ge [1527,1529]
                                    operator: , [1529,1530]
                                    expr [1534,1556]
                                        name: kUnsignedLessThan [1534,1551]
                                        operator: = [1552,1553]
                                        name: lo [1554,1556]
                                    operator: , [1556,1557]
                                    expr [1560,1585]
                                        name: kUnsignedGreaterThan [1560,1580]
                                        operator: = [1581,1582]
                                        name: hi [1583,1585]
                                    operator: , [1585,1586]
                                    expr [1589,1616]
                                        name: kUnsignedLessThanEqual [1589,1611]
                                        operator: = [1612,1613]
                                        name: ls [1614,1616]
                                    operator: , [1616,1617]
                                    expr [1620,1650]
                                        name: kUnsignedGreaterThanEqual [1620,1645]
                                        operator: = [1646,1647]
                                        name: hs [1648,1650]
                                    operator: , [1650,1651]
                                    expr [1655,1669]
                                        name: kOverflow [1655,1664]
                                        operator: = [1665,1666]
                                        name: vs [1667,1669]
                                    operator: , [1669,1670]
                                    expr [1673,1689]
                                        name: kNoOverflow [1673,1684]
                                        operator: = [1685,1686]
                                        name: vc [1687,1689]
                                    operator: , [1689,1690]
                                    expr [1694,1704]
                                        name: kZero [1694,1699]
                                        operator: = [1700,1701]
                                        name: eq [1702,1704]
                                    operator: , [1704,1705]
                                    expr [1708,1721]
                                        name: kNotZero [1708,1716]
                                        operator: = [1717,1718]
                                        name: ne [1719,1721]
                                    operator: , [1721,1722]
                    function [1727,1838]
                        type [1727,1753]
                            specifier: inline [1727,1733]
                            specifier: internal [1734,1742]
                            name [1742,1753]
                                operator: :: [1742,1744]
                                name: Condition [1744,1753]
                        name: AsMasmCondition [1754,1769]
                        parameter_list [1769,1785]
                            parameter [1770,1784]
                                decl [1770,1784]
                                    type [1770,1779]
                                        name: Condition [1770,1779]
                                    name: cond [1780,1784]
                        block [1786,1838]
                            block_content [1790,1836]
                                return [1790,1836]
                                    expr [1797,1835]
                                        call [1797,1835]
                                            name [1797,1829]
                                                name: static_cast [1797,1808]
                                                argument_list [1808,1829]
                                                    argument [1809,1828]
                                                        specifier: internal [1809,1817]
                                                        name [1817,1828]
                                                            operator: :: [1817,1819]
                                                            name: Condition [1819,1828]
                                            argument_list [1829,1835]
                                                argument [1830,1834]
                                                    expr [1830,1834]
                                                        name: cond [1830,1834]
                    namespace [1840,2039]
                        name: detail [1850,1856]
                        block [1857,2039]
                            ifdef [1860,1872]
                                directive: ifdef [1861,1866]
                                name: DEBUG [1867,1872]
                            function [1873,1995]
                                type [1873,1884]
                                    specifier: inline [1873,1879]
                                    name: bool [1880,1884]
                                name: Clobbers [1885,1893]
                                parameter_list [1893,1925]
                                    parameter [1894,1909]
                                        decl [1894,1909]
                                            type [1894,1909]
                                                name: Register [1894,1902]
                                            name: target [1903,1909]
                                    parameter [1911,1924]
                                        decl [1911,1924]
                                            type [1911,1924]
                                                name: MemOperand [1911,1921]
                                            name: op [1922,1924]
                                block [1926,1995]
                                    block_content [1930,1985]
                                        return [1930,1985]
                                            expr [1937,1984]
                                                call [1937,1946]
                                                    name [1937,1944]
                                                        name: op [1937,1939]
                                                        operator: . [1939,1940]
                                                        name: base [1940,1944]
                                                    argument_list [1944,1946]
                                                operator: == [1947,1949]
                                                name: target [1950,1956]
                                                operator: || [1957,1959]
                                                call [1960,1974]
                                                    name [1960,1972]
                                                        name: op [1960,1962]
                                                        operator: . [1962,1963]
                                                        name: regoffset [1963,1972]
                                                    argument_list [1972,1974]
                                                operator: == [1975,1977]
                                                name: target [1978,1984]
                            endif [1988,1994]
                                directive: endif [1989,1994]
                    comment: // namespace detail [1999,2018]
                    define [2020,2038]
                        directive: define [2021,2027]
                        macro [2028,2030]
                            name: __ [2028,2030]
                        value [2031,2038]
                    function [2040,2223]
                        type [2040,2050]
                            name: MemOperand [2040,2050]
                        name [2051,2090]
                            name: BaselineAssembler [2051,2068]
                            operator: :: [2068,2070]
                            name: RegisterFrameOperand [2070,2090]
                        parameter_list [2090,2139]
                            parameter [2096,2138]
                                decl [2096,2138]
                                    type [2096,2117]
                                        name [2096,2117]
                                            name: interpreter [2096,2107]
                                            operator: :: [2107,2109]
                                            name: Register [2109,2117]
                                    name: interpreter_register [2118,2138]
                        block [2140,2223]
                            block_content [2144,2221]
                                return [2144,2221]
                                    expr [2151,2220]
                                        call [2151,2220]
                                            name: MemOperand [2151,2161]
                                            argument_list [2161,2220]
                                                argument [2162,2164]
                                                    expr [2162,2164]
                                                        name: fp [2162,2164]
                                                argument [2166,2219]
                                                    expr [2166,2219]
                                                        call [2166,2198]
                                                            name [2166,2196]
                                                                name: interpreter_register [2166,2186]
                                                                operator: . [2186,2187]
                                                                name: ToOperand [2187,2196]
                                                            argument_list [2196,2198]
                                                        operator: * [2199,2200]
                                                        name: kSystemPointerSize [2201,2219]
                    function [2224,2353]
                        type [2224,2234]
                            name: MemOperand [2224,2234]
                        name [2235,2275]
                            name: BaselineAssembler [2235,2252]
                            operator: :: [2252,2254]
                            name: FeedbackVectorOperand [2254,2275]
                        parameter_list [2275,2277]
                        block [2278,2353]
                            block_content [2282,2351]
                                return [2282,2351]
                                    expr [2289,2350]
                                        call [2289,2350]
                                            name: MemOperand [2289,2299]
                                            argument_list [2299,2350]
                                                argument [2300,2302]
                                                    expr [2300,2302]
                                                        name: fp [2300,2302]
                                                argument [2304,2349]
                                                    expr [2304,2349]
                                                        name [2304,2349]
                                                            name: BaselineFrameConstants [2304,2326]
                                                            operator: :: [2326,2328]
                                                            name: kFeedbackVectorFromFp [2328,2349]
                    function [2355,2507]
                        type [2355,2359]
                            name: void [2355,2359]
                        name [2360,2383]
                            name: BaselineAssembler [2360,2377]
                            operator: :: [2377,2379]
                            name: Bind [2379,2383]
                        parameter_list [2383,2397]
                            parameter [2384,2396]
                                decl [2384,2396]
                                    type [2384,2390]
                                        name: Label [2384,2389]
                                        modifier: * [2389,2390]
                                    name: label [2391,2396]
                        block [2398,2507]
                            block_content [2480,2505]
                                comment: // All baseline compiler binds on arm64 are assumed to be for jump targets. [2402,2477]
                                decl_stmt [2480,2505]
                                    decl [2480,2504]
                                        type [2480,2482]
                                            name: __ [2480,2482]
                                        name: BindJumpTarget [2483,2497]
                                        argument_list [2497,2504]
                                            argument [2498,2503]
                                                expr [2498,2503]
                                                    name: label [2498,2503]
                    function [2509,2588]
                        type [2509,2513]
                            name: void [2509,2513]
                        name [2514,2554]
                            name: BaselineAssembler [2514,2531]
                            operator: :: [2531,2533]
                            name: BindWithoutJumpTarget [2533,2554]
                        parameter_list [2554,2568]
                            parameter [2555,2567]
                                decl [2555,2567]
                                    type [2555,2561]
                                        name: Label [2555,2560]
                                        modifier: * [2560,2561]
                                    name: label [2562,2567]
                        block [2569,2588]
                            block_content [2571,2586]
                                decl_stmt [2571,2586]
                                    decl [2571,2585]
                                        type [2571,2573]
                                            name: __ [2571,2573]
                                        name: Bind [2574,2578]
                                        argument_list [2578,2585]
                                            argument [2579,2584]
                                                expr [2579,2584]
                                                    name: label [2579,2584]
                    function [2590,2647]
                        type [2590,2594]
                            name: void [2590,2594]
                        name [2595,2624]
                            name: BaselineAssembler [2595,2612]
                            operator: :: [2612,2614]
                            name: JumpTarget [2614,2624]
                        parameter_list [2624,2626]
                        block [2627,2647]
                            block_content [2629,2645]
                                function_decl [2629,2645]
                                    type [2629,2631]
                                        name: __ [2629,2631]
                                    name: JumpTarget [2632,2642]
                                    parameter_list [2642,2644]
                    function [2649,2738]
                        type [2649,2653]
                            name: void [2649,2653]
                        name [2654,2677]
                            name: BaselineAssembler [2654,2671]
                            operator: :: [2671,2673]
                            name: Jump [2673,2677]
                        parameter_list [2677,2718]
                            parameter [2678,2691]
                                decl [2678,2691]
                                    type [2678,2691]
                                        name: Label [2678,2683]
                                        modifier: * [2683,2684]
                                    name: target [2685,2691]
                            parameter [2693,2717]
                                decl [2693,2717]
                                    type [2693,2717]
                                        name [2693,2708]
                                            name: Label [2693,2698]
                                            operator: :: [2698,2700]
                                            name: Distance [2700,2708]
                                    name: distance [2709,2717]
                        block [2719,2738]
                            block_content [2723,2736]
                                decl_stmt [2723,2736]
                                    decl [2723,2735]
                                        type [2723,2725]
                                            name: __ [2723,2725]
                                        name: B [2726,2727]
                                        argument_list [2727,2735]
                                            argument [2728,2734]
                                                expr [2728,2734]
                                                    name: target [2728,2734]
                    function [2739,2856]
                        type [2739,2743]
                            name: void [2739,2743]
                        name [2744,2769]
                            name: BaselineAssembler [2744,2761]
                            operator: :: [2761,2763]
                            name: JumpIf [2763,2769]
                        parameter_list [2769,2815]
                            parameter [2770,2782]
                                decl [2770,2782]
                                    type [2770,2782]
                                        name: Condition [2770,2779]
                                    name: cc [2780,2782]
                            parameter [2784,2797]
                                decl [2784,2797]
                                    type [2784,2797]
                                        name: Label [2784,2789]
                                        modifier: * [2789,2790]
                                    name: target [2791,2797]
                            parameter [2799,2814]
                                decl [2799,2814]
                                    type [2799,2814]
                                        name [2799,2814]
                                            name: Label [2799,2804]
                                            operator: :: [2804,2806]
                                            name: Distance [2806,2814]
                        block [2816,2856]
                            block_content [2820,2854]
                                decl_stmt [2820,2854]
                                    decl [2820,2853]
                                        type [2820,2822]
                                            name: __ [2820,2822]
                                        name: B [2823,2824]
                                        argument_list [2824,2853]
                                            argument [2825,2844]
                                                expr [2825,2844]
                                                    call [2825,2844]
                                                        name: AsMasmCondition [2825,2840]
                                                        argument_list [2840,2844]
                                                            argument [2841,2843]
                                                                expr [2841,2843]
                                                                    name: cc [2841,2843]
                                            argument [2846,2852]
                                                expr [2846,2852]
                                                    name: target [2846,2852]
                    function [2857,3034]
                        type [2857,2861]
                            name: void [2857,2861]
                        name [2862,2891]
                            name: BaselineAssembler [2862,2879]
                            operator: :: [2879,2881]
                            name: JumpIfRoot [2881,2891]
                        parameter_list [2891,2991]
                            parameter [2892,2906]
                                decl [2892,2906]
                                    type [2892,2906]
                                        name: Register [2892,2900]
                                    name: value [2901,2906]
                            parameter [2908,2923]
                                decl [2908,2923]
                                    type [2908,2923]
                                        name: RootIndex [2908,2917]
                                    name: index [2918,2923]
                            parameter [2960,2973]
                                decl [2960,2973]
                                    type [2960,2973]
                                        name: Label [2960,2965]
                                        modifier: * [2965,2966]
                                    name: target [2967,2973]
                            parameter [2975,2990]
                                decl [2975,2990]
                                    type [2975,2990]
                                        name [2975,2990]
                                            name: Label [2975,2980]
                                            operator: :: [2980,2982]
                                            name: Distance [2982,2990]
                        block [2992,3034]
                            block_content [2996,3032]
                                decl_stmt [2996,3032]
                                    decl [2996,3031]
                                        type [2996,2998]
                                            name: __ [2996,2998]
                                        name: JumpIfRoot [2999,3009]
                                        argument_list [3009,3031]
                                            argument [3010,3015]
                                                expr [3010,3015]
                                                    name: value [3010,3015]
                                            argument [3017,3022]
                                                expr [3017,3022]
                                                    name: index [3017,3022]
                                            argument [3024,3030]
                                                expr [3024,3030]
                                                    name: target [3024,3030]
                    function [3035,3221]
                        type [3035,3039]
                            name: void [3035,3039]
                        name [3040,3072]
                            name: BaselineAssembler [3040,3057]
                            operator: :: [3057,3059]
                            name: JumpIfNotRoot [3059,3072]
                        parameter_list [3072,3175]
                            parameter [3073,3087]
                                decl [3073,3087]
                                    type [3073,3087]
                                        name: Register [3073,3081]
                                    name: value [3082,3087]
                            parameter [3089,3104]
                                decl [3089,3104]
                                    type [3089,3104]
                                        name: RootIndex [3089,3098]
                                    name: index [3099,3104]
                            parameter [3144,3157]
                                decl [3144,3157]
                                    type [3144,3157]
                                        name: Label [3144,3149]
                                        modifier: * [3149,3150]
                                    name: target [3151,3157]
                            parameter [3159,3174]
                                decl [3159,3174]
                                    type [3159,3174]
                                        name [3159,3174]
                                            name: Label [3159,3164]
                                            operator: :: [3164,3166]
                                            name: Distance [3166,3174]
                        block [3176,3221]
                            block_content [3180,3219]
                                decl_stmt [3180,3219]
                                    decl [3180,3218]
                                        type [3180,3182]
                                            name: __ [3180,3182]
                                        name: JumpIfNotRoot [3183,3196]
                                        argument_list [3196,3218]
                                            argument [3197,3202]
                                                expr [3197,3202]
                                                    name: value [3197,3202]
                                            argument [3204,3209]
                                                expr [3204,3209]
                                                    name: index [3204,3209]
                                            argument [3211,3217]
                                                expr [3211,3217]
                                                    name: target [3211,3217]
                    function [3222,3372]
                        type [3222,3226]
                            name: void [3222,3226]
                        name [3227,3255]
                            name: BaselineAssembler [3227,3244]
                            operator: :: [3244,3246]
                            name: JumpIfSmi [3246,3255]
                        parameter_list [3255,3337]
                            parameter [3256,3270]
                                decl [3256,3270]
                                    type [3256,3270]
                                        name: Register [3256,3264]
                                    name: value [3265,3270]
                            parameter [3272,3285]
                                decl [3272,3285]
                                    type [3272,3285]
                                        name: Label [3272,3277]
                                        modifier: * [3277,3278]
                                    name: target [3279,3285]
                            parameter [3321,3336]
                                decl [3321,3336]
                                    type [3321,3336]
                                        name [3321,3336]
                                            name: Label [3321,3326]
                                            operator: :: [3326,3328]
                                            name: Distance [3328,3336]
                        block [3338,3372]
                            block_content [3342,3370]
                                decl_stmt [3342,3370]
                                    decl [3342,3369]
                                        type [3342,3344]
                                            name: __ [3342,3344]
                                        name: JumpIfSmi [3345,3354]
                                        argument_list [3354,3369]
                                            argument [3355,3360]
                                                expr [3355,3360]
                                                    name: value [3355,3360]
                                            argument [3362,3368]
                                                expr [3362,3368]
                                                    name: target [3362,3368]
                    function [3373,3532]
                        type [3373,3377]
                            name: void [3373,3377]
                        name [3378,3409]
                            name: BaselineAssembler [3378,3395]
                            operator: :: [3395,3397]
                            name: JumpIfNotSmi [3397,3409]
                        parameter_list [3409,3494]
                            parameter [3410,3424]
                                decl [3410,3424]
                                    type [3410,3424]
                                        name: Register [3410,3418]
                                    name: value [3419,3424]
                            parameter [3426,3439]
                                decl [3426,3439]
                                    type [3426,3439]
                                        name: Label [3426,3431]
                                        modifier: * [3431,3432]
                                    name: target [3433,3439]
                            parameter [3478,3493]
                                decl [3478,3493]
                                    type [3478,3493]
                                        name [3478,3493]
                                            name: Label [3478,3483]
                                            operator: :: [3483,3485]
                                            name: Distance [3485,3493]
                        block [3495,3532]
                            block_content [3499,3530]
                                decl_stmt [3499,3530]
                                    decl [3499,3529]
                                        type [3499,3501]
                                            name: __ [3499,3501]
                                        name: JumpIfNotSmi [3502,3514]
                                        argument_list [3514,3529]
                                            argument [3515,3520]
                                                expr [3515,3520]
                                                    name: value [3515,3520]
                                            argument [3522,3528]
                                                expr [3522,3528]
                                                    name: target [3522,3528]
                    function [3534,3872]
                        type [3534,3538]
                            name: void [3534,3538]
                        name [3539,3569]
                            name: BaselineAssembler [3539,3556]
                            operator: :: [3556,3558]
                            name: CallBuiltin [3558,3569]
                        parameter_list [3569,3593]
                            parameter [3570,3592]
                                decl [3570,3592]
                                    type [3570,3584]
                                        name [3570,3584]
                                            name: Builtins [3570,3578]
                                            operator: :: [3578,3580]
                                            name: Name [3580,3584]
                                    name: builtin [3585,3592]
                        block [3594,3872]
                            block_content [3598,3870]
                                if_stmt [3598,3870]
                                    if [3598,3709]
                                        condition [3601,3640]
                                            expr [3602,3639]
                                                call [3602,3608]
                                                    name: masm [3602,3606]
                                                    argument_list [3606,3608]
                                                operator: -> [3608,3610]
                                                call [3610,3619]
                                                    name: options [3610,3617]
                                                    argument_list [3617,3619]
                                                operator: . [3619,3620]
                                                name: short_builtin_calls [3620,3639]
                                        block [3641,3709]
                                            block_content [3681,3705]
                                                comment: // Generate pc-relative call. [3647,3676]
                                                decl_stmt [3681,3705]
                                                    decl [3681,3704]
                                                        type [3681,3683]
                                                            name: __ [3681,3683]
                                                        name: CallBuiltin [3684,3695]
                                                        argument_list [3695,3704]
                                                            argument [3696,3703]
                                                                expr [3696,3703]
                                                                    name: builtin [3696,3703]
                                    else [3710,3870]
                                        block [3715,3870]
                                            block_content [3721,3866]
                                                decl_stmt [3721,3754]
                                                    decl [3721,3753]
                                                        type [3721,3741]
                                                            name: ScratchRegisterScope [3721,3741]
                                                        name: temps [3742,3747]
                                                        argument_list [3747,3753]
                                                            argument [3748,3752]
                                                                expr [3748,3752]
                                                                    name: this [3748,3752]
                                                decl_stmt [3759,3798]
                                                    decl [3759,3797]
                                                        type [3759,3767]
                                                            name: Register [3759,3767]
                                                        name: temp [3768,3772]
                                                        init [3773,3797]
                                                            expr [3775,3797]
                                                                call [3775,3797]
                                                                    name [3775,3795]
                                                                        name: temps [3775,3780]
                                                                        operator: . [3780,3781]
                                                                        name: AcquireScratch [3781,3795]
                                                                    argument_list [3795,3797]
                                                decl_stmt [3803,3847]
                                                    decl [3803,3846]
                                                        type [3803,3805]
                                                            name: __ [3803,3805]
                                                        name: LoadEntryFromBuiltinIndex [3806,3831]
                                                        argument_list [3831,3846]
                                                            argument [3832,3839]
                                                                expr [3832,3839]
                                                                    name: builtin [3832,3839]
                                                            argument [3841,3845]
                                                                expr [3841,3845]
                                                                    name: temp [3841,3845]
                                                decl_stmt [3852,3866]
                                                    decl [3852,3865]
                                                        type [3852,3854]
                                                            name: __ [3852,3854]
                                                        name: Call [3855,3859]
                                                        argument_list [3859,3865]
                                                            argument [3860,3864]
                                                                expr [3860,3864]
                                                                    name: temp [3860,3864]
                    function [3874,4916]
                        type [3874,3878]
                            name: void [3874,3878]
                        name [3879,3913]
                            name: BaselineAssembler [3879,3896]
                            operator: :: [3896,3898]
                            name: TailCallBuiltin [3898,3913]
                        parameter_list [3913,3937]
                            parameter [3914,3936]
                                decl [3914,3936]
                                    type [3914,3928]
                                        name [3914,3928]
                                            name: Builtins [3914,3922]
                                            operator: :: [3922,3924]
                                            name: Name [3924,3928]
                                    name: builtin [3929,3936]
                        block [3938,4916]
                            block_content [3942,4914]
                                if_stmt [3942,4914]
                                    if [3942,4057]
                                        condition [3945,3984]
                                            expr [3946,3983]
                                                call [3946,3952]
                                                    name: masm [3946,3950]
                                                    argument_list [3950,3952]
                                                operator: -> [3952,3954]
                                                call [3954,3963]
                                                    name: options [3954,3961]
                                                    argument_list [3961,3963]
                                                operator: . [3963,3964]
                                                name: short_builtin_calls [3964,3983]
                                        block [3985,4057]
                                            block_content [4025,4053]
                                                comment: // Generate pc-relative call. [3991,4020]
                                                decl_stmt [4025,4053]
                                                    decl [4025,4052]
                                                        type [4025,4027]
                                                            name: __ [4025,4027]
                                                        name: TailCallBuiltin [4028,4043]
                                                        argument_list [4043,4052]
                                                            argument [4044,4051]
                                                                expr [4044,4051]
                                                                    name: builtin [4044,4051]
                                    else [4058,4914]
                                        block [4063,4914]
                                            block_content [4689,4910]
                                                comment: // The control flow integrity (CFI) feature allows us to "sign" code entry [4069,4143]
                                                comment: // points as a target for calls, jumps or both. Arm64 has special [4148,4213]
                                                comment: // instructions for this purpose, so-called "landing pads" (see [4218,4281]
                                                comment: // TurboAssembler::CallTarget(), TurboAssembler::JumpTarget() and [4286,4351]
                                                comment: // TurboAssembler::JumpOrCallTarget()). Currently, we generate "Call" [4356,4425]
                                                comment: // landing pads for CPP builtins. In order to allow tail calling to those [4430,4503]
                                                comment: // builtins we have to use a workaround. [4508,4548]
                                                comment: // x17 is used to allow using "Call" (i.e. `bti c`) rather than "Jump" (i.e. [4553,4629]
                                                comment: // `bti j`) landing pads for the tail-called code. [4634,4684]
                                                decl_stmt [4689,4709]
                                                    decl [4689,4708]
                                                        type [4689,4697]
                                                            name: Register [4689,4697]
                                                        name: temp [4698,4702]
                                                        init [4703,4708]
                                                            expr [4705,4708]
                                                                name: x17 [4705,4708]
                                                comment: // Make sure we're don't use this register as a temporary. [4715,4773]
                                                decl_stmt [4778,4816]
                                                    decl [4778,4815]
                                                        type [4778,4801]
                                                            name: UseScratchRegisterScope [4778,4801]
                                                        name: temps [4802,4807]
                                                        argument_list [4807,4815]
                                                            argument [4808,4814]
                                                                expr [4808,4814]
                                                                    call [4808,4814]
                                                                        name: masm [4808,4812]
                                                                        argument_list [4812,4814]
                                                expr_stmt [4821,4841]
                                                    expr [4821,4840]
                                                        call [4821,4840]
                                                            name [4821,4834]
                                                                name: temps [4821,4826]
                                                                operator: . [4826,4827]
                                                                name: Exclude [4827,4834]
                                                            argument_list [4834,4840]
                                                                argument [4835,4839]
                                                                    expr [4835,4839]
                                                                        name: temp [4835,4839]
                                                decl_stmt [4847,4891]
                                                    decl [4847,4890]
                                                        type [4847,4849]
                                                            name: __ [4847,4849]
                                                        name: LoadEntryFromBuiltinIndex [4850,4875]
                                                        argument_list [4875,4890]
                                                            argument [4876,4883]
                                                                expr [4876,4883]
                                                                    name: builtin [4876,4883]
                                                            argument [4885,4889]
                                                                expr [4885,4889]
                                                                    name: temp [4885,4889]
                                                decl_stmt [4896,4910]
                                                    decl [4896,4909]
                                                        type [4896,4898]
                                                            name: __ [4896,4898]
                                                        name: Jump [4899,4903]
                                                        argument_list [4903,4909]
                                                            argument [4904,4908]
                                                                expr [4904,4908]
                                                                    name: temp [4904,4908]
                    function [4918,5010]
                        type [4918,4922]
                            name: void [4918,4922]
                        name [4923,4946]
                            name: BaselineAssembler [4923,4940]
                            operator: :: [4940,4942]
                            name: Test [4942,4946]
                        parameter_list [4946,4972]
                            parameter [4947,4961]
                                decl [4947,4961]
                                    type [4947,4961]
                                        name: Register [4947,4955]
                                    name: value [4956,4961]
                            parameter [4963,4971]
                                decl [4963,4971]
                                    type [4963,4971]
                                        name: int [4963,4966]
                                    name: mask [4967,4971]
                        block [4973,5010]
                            block_content [4977,5008]
                                decl_stmt [4977,5008]
                                    decl [4977,5007]
                                        type [4977,4979]
                                            name: __ [4977,4979]
                                        name: Tst [4980,4983]
                                        argument_list [4983,5007]
                                            argument [4984,4989]
                                                expr [4984,4989]
                                                    name: value [4984,4989]
                                            argument [4991,5006]
                                                expr [4991,5006]
                                                    call [4991,5006]
                                                        name: Immediate [4991,5000]
                                                        argument_list [5000,5006]
                                                            argument [5001,5005]
                                                                expr [5001,5005]
                                                                    name: mask [5001,5005]
                    function [5012,5324]
                        type [5012,5016]
                            name: void [5012,5016]
                        name [5017,5049]
                            name: BaselineAssembler [5017,5034]
                            operator: :: [5034,5036]
                            name: CmpObjectType [5036,5049]
                        parameter_list [5049,5184]
                            parameter [5050,5065]
                                decl [5050,5065]
                                    type [5050,5065]
                                        name: Register [5050,5058]
                                    name: object [5059,5065]
                            parameter [5105,5131]
                                decl [5105,5131]
                                    type [5105,5131]
                                        name: InstanceType [5105,5117]
                                    name: instance_type [5118,5131]
                            parameter [5171,5183]
                                decl [5171,5183]
                                    type [5171,5183]
                                        name: Register [5171,5179]
                                    name: map [5180,5183]
                        block [5185,5324]
                            block_content [5189,5322]
                                decl_stmt [5189,5222]
                                    decl [5189,5221]
                                        type [5189,5209]
                                            name: ScratchRegisterScope [5189,5209]
                                        name: temps [5210,5215]
                                        argument_list [5215,5221]
                                            argument [5216,5220]
                                                expr [5216,5220]
                                                    name: this [5216,5220]
                                decl_stmt [5225,5264]
                                    decl [5225,5263]
                                        type [5225,5233]
                                            name: Register [5225,5233]
                                        name: type [5234,5238]
                                        init [5239,5263]
                                            expr [5241,5263]
                                                call [5241,5263]
                                                    name [5241,5261]
                                                        name: temps [5241,5246]
                                                        operator: . [5246,5247]
                                                        name: AcquireScratch [5247,5261]
                                                    argument_list [5261,5263]
                                decl_stmt [5267,5322]
                                    decl [5267,5321]
                                        type [5267,5269]
                                            name: __ [5267,5269]
                                        name: CompareObjectType [5270,5287]
                                        argument_list [5287,5321]
                                            argument [5288,5294]
                                                expr [5288,5294]
                                                    name: object [5288,5294]
                                            argument [5296,5299]
                                                expr [5296,5299]
                                                    name: map [5296,5299]
                                            argument [5301,5305]
                                                expr [5301,5305]
                                                    name: type [5301,5305]
                                            argument [5307,5320]
                                                expr [5307,5320]
                                                    name: instance_type [5307,5320]
                    function [5325,5738]
                        type [5325,5329]
                            name: void [5325,5329]
                        name [5330,5364]
                            name: BaselineAssembler [5330,5347]
                            operator: :: [5347,5349]
                            name: CmpInstanceType [5349,5364]
                        parameter_list [5364,5446]
                            parameter [5365,5377]
                                decl [5365,5377]
                                    type [5365,5377]
                                        name: Register [5365,5373]
                                    name: map [5374,5377]
                            parameter [5419,5445]
                                decl [5419,5445]
                                    type [5419,5445]
                                        name: InstanceType [5419,5431]
                                    name: instance_type [5432,5445]
                        block [5447,5738]
                            block_content [5451,5736]
                                decl_stmt [5451,5484]
                                    decl [5451,5483]
                                        type [5451,5471]
                                            name: ScratchRegisterScope [5451,5471]
                                        name: temps [5472,5477]
                                        argument_list [5477,5483]
                                            argument [5478,5482]
                                                expr [5478,5482]
                                                    name: this [5478,5482]
                                decl_stmt [5487,5526]
                                    decl [5487,5525]
                                        type [5487,5495]
                                            name: Register [5487,5495]
                                        name: type [5496,5500]
                                        init [5501,5525]
                                            expr [5503,5525]
                                                call [5503,5525]
                                                    name [5503,5523]
                                                        name: temps [5503,5508]
                                                        operator: . [5508,5509]
                                                        name: AcquireScratch [5509,5523]
                                                    argument_list [5523,5525]
                                if_stmt [5529,5684]
                                    if [5529,5684]
                                        condition [5532,5549]
                                            expr [5533,5548]
                                                name: FLAG_debug_code [5533,5548]
                                        block [5550,5684]
                                            block_content [5556,5680]
                                                decl_stmt [5556,5577]
                                                    decl [5556,5576]
                                                        type [5556,5558]
                                                            name: __ [5556,5558]
                                                        name: AssertNotSmi [5559,5571]
                                                        argument_list [5571,5576]
                                                            argument [5572,5575]
                                                                expr [5572,5575]
                                                                    name: map [5572,5575]
                                                decl_stmt [5582,5630]
                                                    decl [5582,5629]
                                                        type [5582,5584]
                                                            name: __ [5582,5584]
                                                        name: CompareObjectType [5585,5602]
                                                        argument_list [5602,5629]
                                                            argument [5603,5606]
                                                                expr [5603,5606]
                                                                    name: map [5603,5606]
                                                            argument [5608,5612]
                                                                expr [5608,5612]
                                                                    name: type [5608,5612]
                                                            argument [5614,5618]
                                                                expr [5614,5618]
                                                                    name: type [5614,5618]
                                                            argument [5620,5628]
                                                                expr [5620,5628]
                                                                    name: MAP_TYPE [5620,5628]
                                                decl_stmt [5635,5680]
                                                    decl [5635,5679]
                                                        type [5635,5637]
                                                            name: __ [5635,5637]
                                                        name: Assert [5638,5644]
                                                        argument_list [5644,5679]
                                                            argument [5645,5647]
                                                                expr [5645,5647]
                                                                    name: eq [5645,5647]
                                                            argument [5649,5678]
                                                                expr [5649,5678]
                                                                    name [5649,5678]
                                                                        name: AbortReason [5649,5660]
                                                                        operator: :: [5660,5662]
                                                                        name: kUnexpectedValue [5662,5678]
                                decl_stmt [5687,5736]
                                    decl [5687,5735]
                                        type [5687,5689]
                                            name: __ [5687,5689]
                                        name: CompareInstanceType [5690,5709]
                                        argument_list [5709,5735]
                                            argument [5710,5713]
                                                expr [5710,5713]
                                                    name: map [5710,5713]
                                            argument [5715,5719]
                                                expr [5715,5719]
                                                    name: type [5715,5719]
                                            argument [5721,5734]
                                                expr [5721,5734]
                                                    name: instance_type [5721,5734]
                    function [5739,5815]
                        type [5739,5743]
                            name: void [5739,5743]
                        name [5744,5766]
                            name: BaselineAssembler [5744,5761]
                            operator: :: [5761,5763]
                            name: Cmp [5763,5766]
                        parameter_list [5766,5791]
                            parameter [5767,5781]
                                decl [5767,5781]
                                    type [5767,5781]
                                        name: Register [5767,5775]
                                    name: value [5776,5781]
                            parameter [5783,5790]
                                decl [5783,5790]
                                    type [5783,5790]
                                        name: Smi [5783,5786]
                                    name: smi [5787,5790]
                        block [5792,5815]
                            block_content [5794,5813]
                                decl_stmt [5794,5813]
                                    decl [5794,5812]
                                        type [5794,5796]
                                            name: __ [5794,5796]
                                        name: Cmp [5797,5800]
                                        argument_list [5800,5812]
                                            argument [5801,5806]
                                                expr [5801,5806]
                                                    name: value [5801,5806]
                                            argument [5808,5811]
                                                expr [5808,5811]
                                                    name: smi [5808,5811]
                    function [5816,6017]
                        type [5816,5820]
                            name: void [5816,5820]
                        name [5821,5854]
                            name: BaselineAssembler [5821,5838]
                            operator: :: [5838,5840]
                            name: ComparePointer [5840,5854]
                        parameter_list [5854,5890]
                            parameter [5855,5869]
                                decl [5855,5869]
                                    type [5855,5869]
                                        name: Register [5855,5863]
                                    name: value [5864,5869]
                            parameter [5871,5889]
                                decl [5871,5889]
                                    type [5871,5889]
                                        name: MemOperand [5871,5881]
                                    name: operand [5882,5889]
                        block [5891,6017]
                            block_content [5895,6015]
                                decl_stmt [5895,5928]
                                    decl [5895,5927]
                                        type [5895,5915]
                                            name: ScratchRegisterScope [5895,5915]
                                        name: temps [5916,5921]
                                        argument_list [5921,5927]
                                            argument [5922,5926]
                                                expr [5922,5926]
                                                    name: this [5922,5926]
                                decl_stmt [5931,5969]
                                    decl [5931,5968]
                                        type [5931,5939]
                                            name: Register [5931,5939]
                                        name: tmp [5940,5943]
                                        init [5944,5968]
                                            expr [5946,5968]
                                                call [5946,5968]
                                                    name [5946,5966]
                                                        name: temps [5946,5951]
                                                        operator: . [5951,5952]
                                                        name: AcquireScratch [5952,5966]
                                                    argument_list [5966,5968]
                                decl_stmt [5972,5993]
                                    decl [5972,5992]
                                        type [5972,5974]
                                            name: __ [5972,5974]
                                        name: Ldr [5975,5978]
                                        argument_list [5978,5992]
                                            argument [5979,5982]
                                                expr [5979,5982]
                                                    name: tmp [5979,5982]
                                            argument [5984,5991]
                                                expr [5984,5991]
                                                    name: operand [5984,5991]
                                decl_stmt [5996,6015]
                                    decl [5996,6014]
                                        type [5996,5998]
                                            name: __ [5996,5998]
                                        name: Cmp [5999,6002]
                                        argument_list [6002,6014]
                                            argument [6003,6008]
                                                expr [6003,6008]
                                                    name: value [6003,6008]
                                            argument [6010,6013]
                                                expr [6010,6013]
                                                    name: tmp [6010,6013]
                    function [6018,6152]
                        type [6018,6022]
                            name: void [6018,6022]
                        name [6023,6052]
                            name: BaselineAssembler [6023,6040]
                            operator: :: [6040,6042]
                            name: SmiCompare [6042,6052]
                        parameter_list [6052,6080]
                            parameter [6053,6065]
                                decl [6053,6065]
                                    type [6053,6065]
                                        name: Register [6053,6061]
                                    name: lhs [6062,6065]
                            parameter [6067,6079]
                                decl [6067,6079]
                                    type [6067,6079]
                                        name: Register [6067,6075]
                                    name: rhs [6076,6079]
                        block [6081,6152]
                            block_content [6085,6150]
                                decl_stmt [6085,6103]
                                    decl [6085,6102]
                                        type [6085,6087]
                                            name: __ [6085,6087]
                                        name: AssertSmi [6088,6097]
                                        argument_list [6097,6102]
                                            argument [6098,6101]
                                                expr [6098,6101]
                                                    name: lhs [6098,6101]
                                decl_stmt [6106,6124]
                                    decl [6106,6123]
                                        type [6106,6108]
                                            name: __ [6106,6108]
                                        name: AssertSmi [6109,6118]
                                        argument_list [6118,6123]
                                            argument [6119,6122]
                                                expr [6119,6122]
                                                    name: rhs [6119,6122]
                                decl_stmt [6127,6150]
                                    decl [6127,6149]
                                        type [6127,6129]
                                            name: __ [6127,6129]
                                        name: CmpTagged [6130,6139]
                                        argument_list [6139,6149]
                                            argument [6140,6143]
                                                expr [6140,6143]
                                                    name: lhs [6140,6143]
                                            argument [6145,6148]
                                                expr [6145,6148]
                                                    name: rhs [6145,6148]
                    function [6153,6359]
                        type [6153,6157]
                            name: void [6153,6157]
                        name [6158,6190]
                            name: BaselineAssembler [6158,6175]
                            operator: :: [6175,6177]
                            name: CompareTagged [6177,6190]
                        parameter_list [6190,6226]
                            parameter [6191,6205]
                                decl [6191,6205]
                                    type [6191,6205]
                                        name: Register [6191,6199]
                                    name: value [6200,6205]
                            parameter [6207,6225]
                                decl [6207,6225]
                                    type [6207,6225]
                                        name: MemOperand [6207,6217]
                                    name: operand [6218,6225]
                        block [6227,6359]
                            block_content [6231,6357]
                                decl_stmt [6231,6264]
                                    decl [6231,6263]
                                        type [6231,6251]
                                            name: ScratchRegisterScope [6231,6251]
                                        name: temps [6252,6257]
                                        argument_list [6257,6263]
                                            argument [6258,6262]
                                                expr [6258,6262]
                                                    name: this [6258,6262]
                                decl_stmt [6267,6305]
                                    decl [6267,6304]
                                        type [6267,6275]
                                            name: Register [6267,6275]
                                        name: tmp [6276,6279]
                                        init [6280,6304]
                                            expr [6282,6304]
                                                call [6282,6304]
                                                    name [6282,6302]
                                                        name: temps [6282,6287]
                                                        operator: . [6287,6288]
                                                        name: AcquireScratch [6288,6302]
                                                    argument_list [6302,6304]
                                decl_stmt [6308,6329]
                                    decl [6308,6328]
                                        type [6308,6310]
                                            name: __ [6308,6310]
                                        name: Ldr [6311,6314]
                                        argument_list [6314,6328]
                                            argument [6315,6318]
                                                expr [6315,6318]
                                                    name: tmp [6315,6318]
                                            argument [6320,6327]
                                                expr [6320,6327]
                                                    name: operand [6320,6327]
                                decl_stmt [6332,6357]
                                    decl [6332,6356]
                                        type [6332,6334]
                                            name: __ [6332,6334]
                                        name: CmpTagged [6335,6344]
                                        argument_list [6344,6356]
                                            argument [6345,6350]
                                                expr [6345,6350]
                                                    name: value [6345,6350]
                                            argument [6352,6355]
                                                expr [6352,6355]
                                                    name: tmp [6352,6355]
                    function [6360,6566]
                        type [6360,6364]
                            name: void [6360,6364]
                        name [6365,6397]
                            name: BaselineAssembler [6365,6382]
                            operator: :: [6382,6384]
                            name: CompareTagged [6384,6397]
                        parameter_list [6397,6433]
                            parameter [6398,6416]
                                decl [6398,6416]
                                    type [6398,6416]
                                        name: MemOperand [6398,6408]
                                    name: operand [6409,6416]
                            parameter [6418,6432]
                                decl [6418,6432]
                                    type [6418,6432]
                                        name: Register [6418,6426]
                                    name: value [6427,6432]
                        block [6434,6566]
                            block_content [6438,6564]
                                decl_stmt [6438,6471]
                                    decl [6438,6470]
                                        type [6438,6458]
                                            name: ScratchRegisterScope [6438,6458]
                                        name: temps [6459,6464]
                                        argument_list [6464,6470]
                                            argument [6465,6469]
                                                expr [6465,6469]
                                                    name: this [6465,6469]
                                decl_stmt [6474,6512]
                                    decl [6474,6511]
                                        type [6474,6482]
                                            name: Register [6474,6482]
                                        name: tmp [6483,6486]
                                        init [6487,6511]
                                            expr [6489,6511]
                                                call [6489,6511]
                                                    name [6489,6509]
                                                        name: temps [6489,6494]
                                                        operator: . [6494,6495]
                                                        name: AcquireScratch [6495,6509]
                                                    argument_list [6509,6511]
                                decl_stmt [6515,6536]
                                    decl [6515,6535]
                                        type [6515,6517]
                                            name: __ [6515,6517]
                                        name: Ldr [6518,6521]
                                        argument_list [6521,6535]
                                            argument [6522,6525]
                                                expr [6522,6525]
                                                    name: tmp [6522,6525]
                                            argument [6527,6534]
                                                expr [6527,6534]
                                                    name: operand [6527,6534]
                                decl_stmt [6539,6564]
                                    decl [6539,6563]
                                        type [6539,6541]
                                            name: __ [6539,6541]
                                        name: CmpTagged [6542,6551]
                                        argument_list [6551,6563]
                                            argument [6552,6555]
                                                expr [6552,6555]
                                                    name: tmp [6552,6555]
                                            argument [6557,6562]
                                                expr [6557,6562]
                                                    name: value [6557,6562]
                    function [6567,6670]
                        type [6567,6571]
                            name: void [6567,6571]
                        name [6572,6602]
                            name: BaselineAssembler [6572,6589]
                            operator: :: [6589,6591]
                            name: CompareByte [6591,6602]
                        parameter_list [6602,6632]
                            parameter [6603,6617]
                                decl [6603,6617]
                                    type [6603,6617]
                                        name: Register [6603,6611]
                                    name: value [6612,6617]
                            parameter [6619,6631]
                                decl [6619,6631]
                                    type [6619,6631]
                                        name: int32_t [6619,6626]
                                    name: byte [6627,6631]
                        block [6633,6670]
                            block_content [6637,6668]
                                decl_stmt [6637,6668]
                                    decl [6637,6667]
                                        type [6637,6639]
                                            name: __ [6637,6639]
                                        name: Cmp [6640,6643]
                                        argument_list [6643,6667]
                                            argument [6644,6649]
                                                expr [6644,6649]
                                                    name: value [6644,6649]
                                            argument [6651,6666]
                                                expr [6651,6666]
                                                    call [6651,6666]
                                                        name: Immediate [6651,6660]
                                                        argument_list [6660,6666]
                                                            argument [6661,6665]
                                                                expr [6661,6665]
                                                                    name: byte [6661,6665]
                    function [6672,6797]
                        type [6672,6676]
                            name: void [6672,6676]
                        name [6677,6700]
                            name: BaselineAssembler [6677,6694]
                            operator: :: [6694,6696]
                            name: Move [6696,6700]
                        parameter_list [6700,6747]
                            parameter [6701,6729]
                                decl [6701,6729]
                                    type [6701,6729]
                                        name [6701,6722]
                                            name: interpreter [6701,6712]
                                            operator: :: [6712,6714]
                                            name: Register [6714,6722]
                                    name: output [6723,6729]
                            parameter [6731,6746]
                                decl [6731,6746]
                                    type [6731,6746]
                                        name: Register [6731,6739]
                                    name: source [6740,6746]
                        block [6748,6797]
                            block_content [6752,6795]
                                expr_stmt [6752,6795]
                                    expr [6752,6794]
                                        call [6752,6794]
                                            name: Move [6752,6756]
                                            argument_list [6756,6794]
                                                argument [6757,6785]
                                                    expr [6757,6785]
                                                        call [6757,6785]
                                                            name: RegisterFrameOperand [6757,6777]
                                                            argument_list [6777,6785]
                                                                argument [6778,6784]
                                                                    expr [6778,6784]
                                                                        name: output [6778,6784]
                                                argument [6787,6793]
                                                    expr [6787,6793]
                                                        name: source [6787,6793]
                    function [6798,6908]
                        type [6798,6802]
                            name: void [6798,6802]
                        name [6803,6826]
                            name: BaselineAssembler [6803,6820]
                            operator: :: [6820,6822]
                            name: Move [6822,6826]
                        parameter_list [6826,6862]
                            parameter [6827,6842]
                                decl [6827,6842]
                                    type [6827,6842]
                                        name: Register [6827,6835]
                                    name: output [6836,6842]
                            parameter [6844,6861]
                                decl [6844,6861]
                                    type [6844,6861]
                                        name: TaggedIndex [6844,6855]
                                    name: value [6856,6861]
                        block [6863,6908]
                            block_content [6867,6906]
                                decl_stmt [6867,6906]
                                    decl [6867,6905]
                                        type [6867,6869]
                                            name: __ [6867,6869]
                                        name: Mov [6870,6873]
                                        argument_list [6873,6905]
                                            argument [6874,6880]
                                                expr [6874,6880]
                                                    name: output [6874,6880]
                                            argument [6882,6904]
                                                expr [6882,6904]
                                                    call [6882,6904]
                                                        name: Immediate [6882,6891]
                                                        argument_list [6891,6904]
                                                            argument [6892,6903]
                                                                expr [6892,6903]
                                                                    call [6892,6903]
                                                                        name [6892,6901]
                                                                            name: value [6892,6897]
                                                                            operator: . [6897,6898]
                                                                            name: ptr [6898,6901]
                                                                        argument_list [6901,6903]
                    function [6909,7003]
                        type [6909,6913]
                            name: void [6909,6913]
                        name [6914,6937]
                            name: BaselineAssembler [6914,6931]
                            operator: :: [6931,6933]
                            name: Move [6933,6937]
                        parameter_list [6937,6973]
                            parameter [6938,6955]
                                decl [6938,6955]
                                    type [6938,6955]
                                        name: MemOperand [6938,6948]
                                    name: output [6949,6955]
                            parameter [6957,6972]
                                decl [6957,6972]
                                    type [6957,6972]
                                        name: Register [6957,6965]
                                    name: source [6966,6972]
                        block [6974,7003]
                            block_content [6978,7001]
                                decl_stmt [6978,7001]
                                    decl [6978,7000]
                                        type [6978,6980]
                                            name: __ [6978,6980]
                                        name: Str [6981,6984]
                                        argument_list [6984,7000]
                                            argument [6985,6991]
                                                expr [6985,6991]
                                                    name: source [6985,6991]
                                            argument [6993,6999]
                                                expr [6993,6999]
                                                    name: output [6993,6999]
                    function [7004,7120]
                        type [7004,7008]
                            name: void [7004,7008]
                        name [7009,7032]
                            name: BaselineAssembler [7009,7026]
                            operator: :: [7026,7028]
                            name: Move [7028,7032]
                        parameter_list [7032,7078]
                            parameter [7033,7048]
                                decl [7033,7048]
                                    type [7033,7048]
                                        name: Register [7033,7041]
                                    name: output [7042,7048]
                            parameter [7050,7077]
                                decl [7050,7077]
                                    type [7050,7077]
                                        name: ExternalReference [7050,7067]
                                    name: reference [7068,7077]
                        block [7079,7120]
                            block_content [7083,7118]
                                decl_stmt [7083,7118]
                                    decl [7083,7117]
                                        type [7083,7085]
                                            name: __ [7083,7085]
                                        name: Mov [7086,7089]
                                        argument_list [7089,7117]
                                            argument [7090,7096]
                                                expr [7090,7096]
                                                    name: output [7090,7096]
                                            argument [7098,7116]
                                                expr [7098,7116]
                                                    call [7098,7116]
                                                        name: Operand [7098,7105]
                                                        argument_list [7105,7116]
                                                            argument [7106,7115]
                                                                expr [7106,7115]
                                                                    name: reference [7106,7115]
                    function [7121,7230]
                        type [7121,7125]
                            name: void [7121,7125]
                        name [7126,7149]
                            name: BaselineAssembler [7126,7143]
                            operator: :: [7143,7145]
                            name: Move [7145,7149]
                        parameter_list [7149,7192]
                            parameter [7150,7165]
                                decl [7150,7165]
                                    type [7150,7165]
                                        name: Register [7150,7158]
                                    name: output [7159,7165]
                            parameter [7167,7191]
                                decl [7167,7191]
                                    type [7167,7191]
                                        name [7167,7185]
                                            name: Handle [7167,7173]
                                            argument_list [7173,7185]
                                                argument [7174,7184]
                                                    name: HeapObject [7174,7184]
                                    name: value [7186,7191]
                        block [7193,7230]
                            block_content [7197,7228]
                                decl_stmt [7197,7228]
                                    decl [7197,7227]
                                        type [7197,7199]
                                            name: __ [7197,7199]
                                        name: Mov [7200,7203]
                                        argument_list [7203,7227]
                                            argument [7204,7210]
                                                expr [7204,7210]
                                                    name: output [7204,7210]
                                            argument [7212,7226]
                                                expr [7212,7226]
                                                    call [7212,7226]
                                                        name: Operand [7212,7219]
                                                        argument_list [7219,7226]
                                                            argument [7220,7225]
                                                                expr [7220,7225]
                                                                    name: value [7220,7225]
                    function [7231,7331]
                        type [7231,7235]
                            name: void [7231,7235]
                        name [7236,7259]
                            name: BaselineAssembler [7236,7253]
                            operator: :: [7253,7255]
                            name: Move [7255,7259]
                        parameter_list [7259,7291]
                            parameter [7260,7275]
                                decl [7260,7275]
                                    type [7260,7275]
                                        name: Register [7260,7268]
                                    name: output [7269,7275]
                            parameter [7277,7290]
                                decl [7277,7290]
                                    type [7277,7290]
                                        name: int32_t [7277,7284]
                                    name: value [7285,7290]
                        block [7292,7331]
                            block_content [7296,7329]
                                decl_stmt [7296,7329]
                                    decl [7296,7328]
                                        type [7296,7298]
                                            name: __ [7296,7298]
                                        name: Mov [7299,7302]
                                        argument_list [7302,7328]
                                            argument [7303,7309]
                                                expr [7303,7309]
                                                    name: output [7303,7309]
                                            argument [7311,7327]
                                                expr [7311,7327]
                                                    call [7311,7327]
                                                        name: Immediate [7311,7320]
                                                        argument_list [7320,7327]
                                                            argument [7321,7326]
                                                                expr [7321,7326]
                                                                    name: value [7321,7326]
                    function [7332,7432]
                        type [7332,7336]
                            name: void [7332,7336]
                        name [7337,7368]
                            name: BaselineAssembler [7337,7354]
                            operator: :: [7354,7356]
                            name: MoveMaybeSmi [7356,7368]
                        parameter_list [7368,7402]
                            parameter [7369,7384]
                                decl [7369,7384]
                                    type [7369,7384]
                                        name: Register [7369,7377]
                                    name: output [7378,7384]
                            parameter [7386,7401]
                                decl [7386,7401]
                                    type [7386,7401]
                                        name: Register [7386,7394]
                                    name: source [7395,7401]
                        block [7403,7432]
                            block_content [7407,7430]
                                decl_stmt [7407,7430]
                                    decl [7407,7429]
                                        type [7407,7409]
                                            name: __ [7407,7409]
                                        name: Mov [7410,7413]
                                        argument_list [7413,7429]
                                            argument [7414,7420]
                                                expr [7414,7420]
                                                    name: output [7414,7420]
                                            argument [7422,7428]
                                                expr [7422,7428]
                                                    name: source [7422,7428]
                    function [7433,7528]
                        type [7433,7437]
                            name: void [7433,7437]
                        name [7438,7464]
                            name: BaselineAssembler [7438,7455]
                            operator: :: [7455,7457]
                            name: MoveSmi [7457,7464]
                        parameter_list [7464,7498]
                            parameter [7465,7480]
                                decl [7465,7480]
                                    type [7465,7480]
                                        name: Register [7465,7473]
                                    name: output [7474,7480]
                            parameter [7482,7497]
                                decl [7482,7497]
                                    type [7482,7497]
                                        name: Register [7482,7490]
                                    name: source [7491,7497]
                        block [7499,7528]
                            block_content [7503,7526]
                                decl_stmt [7503,7526]
                                    decl [7503,7525]
                                        type [7503,7505]
                                            name: __ [7503,7505]
                                        name: Mov [7506,7509]
                                        argument_list [7509,7525]
                                            argument [7510,7516]
                                                expr [7510,7516]
                                                    name: output [7510,7516]
                                            argument [7518,7524]
                                                expr [7518,7524]
                                                    name: source [7518,7524]
                    namespace [7530,8135]
                        name: detail [7540,7546]
                        block [7547,8135]
                            function [7550,7820]
                                type [7550,7589]
                                    name [7550,7573]
                                        name: template [7550,7558]
                                        argument_list [7559,7573]
                                            argument [7560,7572]
                                                name: typename [7560,7568]
                                                name: Arg [7569,7572]
                                    specifier: inline [7574,7580]
                                    name: Register [7581,7589]
                                name: ToRegister [7590,7600]
                                parameter_list [7600,7736]
                                    parameter [7601,7624]
                                        decl [7601,7624]
                                            type [7601,7624]
                                                name: BaselineAssembler [7601,7618]
                                                modifier: * [7618,7619]
                                            name: basm [7620,7624]
                                    parameter [7653,7699]
                                        decl [7653,7699]
                                            type [7653,7699]
                                                name [7653,7692]
                                                    name: BaselineAssembler [7653,7670]
                                                    operator: :: [7670,7672]
                                                    name: ScratchRegisterScope [7672,7692]
                                                modifier: * [7692,7693]
                                            name: scope [7694,7699]
                                    parameter [7728,7735]
                                        decl [7728,7735]
                                            type [7728,7735]
                                                name: Arg [7728,7731]
                                            name: arg [7732,7735]
                                block [7737,7820]
                                    block_content [7741,7818]
                                        decl_stmt [7741,7780]
                                            decl [7741,7779]
                                                type [7741,7749]
                                                    name: Register [7741,7749]
                                                name: reg [7750,7753]
                                                init [7754,7779]
                                                    expr [7756,7779]
                                                        call [7756,7779]
                                                            name [7756,7777]
                                                                name: scope [7756,7761]
                                                                operator: -> [7761,7763]
                                                                name: AcquireScratch [7763,7777]
                                                            argument_list [7777,7779]
                                        expr_stmt [7783,7804]
                                            expr [7783,7803]
                                                call [7783,7803]
                                                    name [7783,7793]
                                                        name: basm [7783,7787]
                                                        operator: -> [7787,7789]
                                                        name: Move [7789,7793]
                                                    argument_list [7793,7803]
                                                        argument [7794,7797]
                                                            expr [7794,7797]
                                                                name: reg [7794,7797]
                                                        argument [7799,7802]
                                                            expr [7799,7802]
                                                                name: arg [7799,7802]
                                        return [7807,7818]
                                            expr [7814,7817]
                                                name: reg [7814,7817]
                            function [7821,8006]
                                type [7821,7836]
                                    specifier: inline [7821,7827]
                                    name: Register [7828,7836]
                                name: ToRegister [7837,7847]
                                parameter_list [7847,7988]
                                    parameter [7848,7871]
                                        decl [7848,7871]
                                            type [7848,7871]
                                                name: BaselineAssembler [7848,7865]
                                                modifier: * [7865,7866]
                                            name: basm [7867,7871]
                                    parameter [7900,7946]
                                        decl [7900,7946]
                                            type [7900,7946]
                                                name [7900,7939]
                                                    name: BaselineAssembler [7900,7917]
                                                    operator: :: [7917,7919]
                                                    name: ScratchRegisterScope [7919,7939]
                                                modifier: * [7939,7940]
                                            name: scope [7941,7946]
                                    parameter [7975,7987]
                                        decl [7975,7987]
                                            type [7975,7987]
                                                name: Register [7975,7983]
                                            name: reg [7984,7987]
                                block [7989,8006]
                                    block_content [7993,8004]
                                        return [7993,8004]
                                            expr [8000,8003]
                                                name: reg [8000,8003]
                            macro [8008,8016]
                                name: template [8008,8016]
                            expr_stmt [8017,8059]
                                expr [8017,8058]
                                    operator: < [8017,8018]
                                    name: typename [8018,8026]
                                    operator: ... [8026,8029]
                                    name: Args [8030,8034]
                                    operator: > [8034,8035]
                                    name: CountPushHelper [8043,8058]
                            macro [8060,8068]
                                name: template [8060,8068]
                            expr_stmt [8069,8133]
                                expr [8069,8133]
                                    operator: < [8069,8070]
                                    operator: > [8070,8071]
                                    name [8079,8096]
                                        name: CountPushHelper [8079,8094]
                                        argument_list [8094,8096]
                                    block [8097,8133]
                                        expr [8101,8131]
                                            specifier: static [8101,8107]
                                            name: int [8108,8111]
                                            macro [8112,8119]
                                                name: Count [8112,8117]
                                                argument_list [8117,8119]
                                            block [8120,8131]
                                                return [8122,8131]
                                                    expr [8129,8130]
                                                        literal: 0 [8129,8130]
                    empty_stmt [8135,8136]
                    macro [8137,8145]
                        name: template [8137,8145]
                    expr_stmt [8146,8322]
                        expr [8146,8159]
                            operator: < [8146,8147]
                            name: typename [8147,8155]
                            name: Arg [8156,8159]
                        operator: , [8159,8160]
                        expr [8161,8322]
                            name: typename [8161,8169]
                            operator: ... [8169,8172]
                            name: Args [8173,8177]
                            operator: > [8177,8178]
                            name [8186,8215]
                                name: CountPushHelper [8186,8201]
                                argument_list [8201,8215]
                                    argument [8202,8205]
                                        name: Arg [8202,8205]
                                    argument [8207,8214]
                                        name: Args [8207,8211]
                                        modifier: ... [8211,8214]
                            block [8216,8322]
                                expr [8220,8318]
                                    specifier: static [8220,8226]
                                    name: int [8227,8230]
                                    macro [8231,8259]
                                        name: Count [8231,8236]
                                        argument_list [8236,8259]
                                            argument [8237,8244]
                                            argument [8246,8258]
                                    block [8260,8318]
                                        return [8266,8318]
                                            expr [8273,8317]
                                                literal: 1 [8273,8276]
                                                operator: + [8275,8276]
                                                call [8277,8317]
                                                    name [8277,8308]
                                                        name [8277,8301]
                                                            name: CountPushHelper [8277,8292]
                                                            argument_list [8292,8301]
                                                                argument [8293,8300]
                                                                    name: Args [8293,8297]
                                                                    modifier: ... [8297,8300]
                                                        operator: :: [8301,8303]
                                                        name: Count [8303,8308]
                                                    argument_list [8308,8317]
                                                        argument [8309,8316]
                                                            expr [8309,8316]
                                                                name: args [8309,8313]
                                                                operator: ... [8313,8316]
            empty_stmt [8324,8325]
            macro [8326,8334]
                name: template [8326,8334]
            expr_stmt [8335,8562]
                expr [8335,8562]
                    operator: < [8335,8336]
                    name: typename [8336,8344]
                    operator: ... [8344,8347]
                    name: Args [8348,8352]
                    operator: > [8352,8353]
                    name [8361,8412]
                        name: CountPushHelper [8361,8376]
                        argument_list [8376,8412]
                            argument [8377,8402]
                                name [8377,8402]
                                    name: interpreter [8377,8388]
                                    operator: :: [8388,8390]
                                    name: RegisterList [8390,8402]
                            argument [8404,8411]
                                name: Args [8404,8408]
                                modifier: ... [8408,8411]
                    block [8413,8562]
                        expr [8417,8558]
                            specifier: static [8417,8423]
                            name: int [8424,8427]
                            macro [8428,8479]
                                name: Count [8428,8433]
                                argument_list [8433,8479]
                                    argument [8434,8464]
                                    argument [8466,8478]
                            block [8480,8558]
                                return [8486,8558]
                                    expr [8493,8557]
                                        call [8493,8514]
                                            name [8493,8512]
                                                name: list [8493,8497]
                                                operator: . [8497,8498]
                                                name: register_count [8498,8512]
                                            argument_list [8512,8514]
                                        operator: + [8515,8516]
                                        call [8517,8557]
                                            name [8517,8548]
                                                name [8517,8541]
                                                    name: CountPushHelper [8517,8532]
                                                    argument_list [8532,8541]
                                                        argument [8533,8540]
                                                            name: Args [8533,8537]
                                                            modifier: ... [8537,8540]
                                                operator: :: [8541,8543]
                                                name: Count [8543,8548]
                                            argument_list [8548,8557]
                                                argument [8549,8556]
                                                    expr [8549,8556]
                                                        name: args [8549,8553]
                                                        operator: ... [8553,8556]
    empty_stmt [8564,8565]
    macro [8567,8575]
        name: template [8567,8575]
    expr_stmt [8576,8616]
        expr [8576,8615]
            operator: < [8576,8577]
            name: typename [8577,8585]
            operator: ... [8585,8588]
            name: Args [8589,8593]
            operator: > [8593,8594]
            name: PushAllHelper [8602,8615]
    function [8617,8754]
        type [8617,8656]
            name [8617,8644]
                name: template [8617,8625]
                argument_list [8626,8644]
                    argument [8627,8643]
                        name: typename [8627,8635]
                        modifier: ... [8635,8638]
                        name: Args [8639,8643]
            specifier: inline [8645,8651]
            name: void [8652,8656]
        name: PushAll [8657,8664]
        parameter_list [8664,8703]
            parameter [8665,8688]
                decl [8665,8688]
                    type [8665,8688]
                        name: BaselineAssembler [8665,8682]
                        modifier: * [8682,8683]
                    name: basm [8684,8688]
            parameter [8690,8702]
                decl [8690,8702]
                    type [8690,8702]
                        name: Args [8690,8694]
                        modifier: ... [8694,8697]
                    name: args [8698,8702]
        block [8704,8754]
            block_content [8708,8752]
                expr_stmt [8708,8752]
                    expr [8708,8751]
                        call [8708,8751]
                            name [8708,8736]
                                name [8708,8730]
                                    name: PushAllHelper [8708,8721]
                                    argument_list [8721,8730]
                                        argument [8722,8729]
                                            name: Args [8722,8726]
                                            modifier: ... [8726,8729]
                                operator: :: [8730,8732]
                                name: Push [8732,8736]
                            argument_list [8736,8751]
                                argument [8737,8741]
                                    expr [8737,8741]
                                        name: basm [8737,8741]
                                argument [8743,8750]
                                    expr [8743,8750]
                                        name: args [8743,8747]
                                        operator: ... [8747,8750]
    function [8755,8906]
        type [8755,8794]
            name [8755,8782]
                name: template [8755,8763]
                argument_list [8764,8782]
                    argument [8765,8781]
                        name: typename [8765,8773]
                        modifier: ... [8773,8776]
                        name: Args [8777,8781]
            specifier: inline [8783,8789]
            name: void [8790,8794]
        name: PushAllReverse [8795,8809]
        parameter_list [8809,8848]
            parameter [8810,8833]
                decl [8810,8833]
                    type [8810,8833]
                        name: BaselineAssembler [8810,8827]
                        modifier: * [8827,8828]
                    name: basm [8829,8833]
            parameter [8835,8847]
                decl [8835,8847]
                    type [8835,8847]
                        name: Args [8835,8839]
                        modifier: ... [8839,8842]
                    name: args [8843,8847]
        block [8849,8906]
            block_content [8853,8904]
                expr_stmt [8853,8904]
                    expr [8853,8903]
                        call [8853,8903]
                            name [8853,8888]
                                name [8853,8875]
                                    name: PushAllHelper [8853,8866]
                                    argument_list [8866,8875]
                                        argument [8867,8874]
                                            name: Args [8867,8871]
                                            modifier: ... [8871,8874]
                                operator: :: [8875,8877]
                                name: PushReverse [8877,8888]
                            argument_list [8888,8903]
                                argument [8889,8893]
                                    expr [8889,8893]
                                        name: basm [8889,8893]
                                argument [8895,8902]
                                    expr [8895,8902]
                                        name: args [8895,8899]
                                        operator: ... [8899,8902]
    macro [8908,8916]
        name: template [8908,8916]
    expr_stmt [8917,9048]
        expr [8917,9047]
            operator: < [8917,8918]
            operator: > [8918,8919]
            name [8927,8942]
                name: PushAllHelper [8927,8940]
                argument_list [8940,8942]
            block [8943,9047]
                expr [8947,9045]
                    specifier: static [8947,8953]
                    name: void [8954,8958]
                    macro [8959,8988]
                        name: Push [8959,8963]
                        argument_list [8963,8988]
                            argument [8964,8987]
                    block [8989,8991]
                    specifier: static [8994,9000]
                    name: void [9001,9005]
                    macro [9006,9042]
                        name: PushReverse [9006,9017]
                        argument_list [9017,9042]
                            argument [9018,9041]
                    block [9043,9045]
    macro [9049,9057]
        name: template [9049,9057]
    expr_stmt [9058,9364]
        expr [9058,9364]
            operator: < [9058,9059]
            name: typename [9059,9067]
            name: Arg [9068,9071]
            operator: > [9071,9072]
            name [9080,9098]
                name: PushAllHelper [9080,9093]
                argument_list [9093,9098]
                    argument [9094,9097]
                        name: Arg [9094,9097]
            block [9099,9364]
                expr [9103,9360]
                    specifier: static [9103,9109]
                    name: void [9110,9114]
                    macro [9115,9149]
                        name: Push [9115,9119]
                        argument_list [9119,9149]
                            argument [9120,9143]
                            argument [9145,9148]
                    block [9150,9178]
                        expr [9152,9175]
                            call [9152,9175]
                                name: FATAL [9152,9157]
                                argument_list [9157,9175]
                                    argument [9158,9174]
                                        expr [9158,9174]
                                            literal: "Unaligned push" [9158,9174]
                    specifier: static [9181,9187]
                    name: void [9188,9192]
                    macro [9193,9238]
                        name: PushReverse [9193,9204]
                        argument_list [9204,9238]
                            argument [9205,9228]
                            argument [9230,9237]
                    block [9239,9360]
                        comment: // Push the padding register to round up the amount of values pushed. [9245,9314]
                        return [9319,9360]
                            expr [9326,9359]
                                call [9326,9359]
                                    name: PushAllReverse [9326,9340]
                                    argument_list [9340,9359]
                                        argument [9341,9345]
                                            expr [9341,9345]
                                                name: basm [9341,9345]
                                        argument [9347,9350]
                                            expr [9347,9350]
                                                name: arg [9347,9350]
                                        argument [9352,9358]
                                            expr [9352,9358]
                                                name: padreg [9352,9358]
    macro [9368,9376]
        name: template [9368,9376]
    expr_stmt [9377,10131]
        expr [9377,9391]
            operator: < [9377,9378]
            name: typename [9378,9386]
            name: Arg1 [9387,9391]
        operator: , [9391,9392]
        expr [9393,9406]
            name: typename [9393,9401]
            name: Arg2 [9402,9406]
        operator: , [9406,9407]
        expr [9408,10130]
            name: typename [9408,9416]
            operator: ... [9416,9419]
            name: Args [9420,9424]
            operator: > [9424,9425]
            name [9433,9467]
                name: PushAllHelper [9433,9446]
                argument_list [9446,9467]
                    argument [9447,9451]
                        name: Arg1 [9447,9451]
                    argument [9453,9457]
                        name: Arg2 [9453,9457]
                    argument [9459,9466]
                        name: Args [9459,9463]
                        modifier: ... [9463,9466]
            block [9468,10130]
                expr [9472,10128]
                    specifier: static [9472,9478]
                    name: void [9479,9483]
                    macro [9484,9568]
                        name: Push [9484,9488]
                        argument_list [9488,9568]
                            argument [9489,9512]
                            argument [9514,9523]
                            argument [9525,9534]
                            argument [9555,9567]
                    block [9569,9788]
                        expr [9575,9783]
                            block [9575,9756]
                                expr [9583,9634]
                                    name [9583,9622]
                                        name: BaselineAssembler [9583,9600]
                                        operator: :: [9600,9602]
                                        name: ScratchRegisterScope [9602,9622]
                                    call [9623,9634]
                                        name: scope [9623,9628]
                                        argument_list [9628,9634]
                                            argument [9629,9633]
                                                expr [9629,9633]
                                                    name: basm [9629,9633]
                                expr [9642,9749]
                                    call [9642,9654]
                                        name [9642,9652]
                                            name: basm [9642,9646]
                                            operator: -> [9646,9648]
                                            name: masm [9648,9652]
                                        argument_list [9652,9654]
                                    operator: -> [9654,9656]
                                    call [9656,9749]
                                        name: Push [9656,9660]
                                        argument_list [9660,9749]
                                            argument [9661,9691]
                                                expr [9661,9691]
                                                    call [9661,9691]
                                                        name: ToRegister [9661,9671]
                                                        argument_list [9671,9691]
                                                            argument [9672,9676]
                                                                expr [9672,9676]
                                                                    name: basm [9672,9676]
                                                            argument [9678,9684]
                                                                expr [9678,9684]
                                                                    operator: & [9678,9679]
                                                                    name: scope [9679,9684]
                                                            argument [9686,9690]
                                                                expr [9686,9690]
                                                                    name: arg1 [9686,9690]
                                            argument [9718,9748]
                                                expr [9718,9748]
                                                    call [9718,9748]
                                                        name: ToRegister [9718,9728]
                                                        argument_list [9728,9748]
                                                            argument [9729,9733]
                                                                expr [9729,9733]
                                                                    name: basm [9729,9733]
                                                            argument [9735,9741]
                                                                expr [9735,9741]
                                                                    operator: & [9735,9736]
                                                                    name: scope [9736,9741]
                                                            argument [9743,9747]
                                                                expr [9743,9747]
                                                                    name: arg2 [9743,9747]
                            call [9761,9783]
                                name: PushAll [9761,9768]
                                argument_list [9768,9783]
                                    argument [9769,9773]
                                        expr [9769,9773]
                                            name: basm [9769,9773]
                                    argument [9775,9782]
                                        expr [9775,9782]
                                            name: args [9775,9779]
                                            operator: ... [9779,9782]
                    specifier: static [9791,9797]
                    name: void [9798,9802]
                    macro [9803,9901]
                        name: PushReverse [9803,9814]
                        argument_list [9814,9901]
                            argument [9815,9838]
                            argument [9840,9849]
                            argument [9851,9860]
                            argument [9888,9900]
                    block [9902,10128]
                        expr [9908,9937]
                            call [9908,9937]
                                name: PushAllReverse [9908,9922]
                                argument_list [9922,9937]
                                    argument [9923,9927]
                                        expr [9923,9927]
                                            name: basm [9923,9927]
                                    argument [9929,9936]
                                        expr [9929,9936]
                                            name: args [9929,9933]
                                            operator: ... [9933,9936]
                        expr [9943,10124]
                            block [9943,10124]
                                expr [9951,10002]
                                    name [9951,9990]
                                        name: BaselineAssembler [9951,9968]
                                        operator: :: [9968,9970]
                                        name: ScratchRegisterScope [9970,9990]
                                    call [9991,10002]
                                        name: scope [9991,9996]
                                        argument_list [9996,10002]
                                            argument [9997,10001]
                                                expr [9997,10001]
                                                    name: basm [9997,10001]
                                expr [10010,10117]
                                    call [10010,10022]
                                        name [10010,10020]
                                            name: basm [10010,10014]
                                            operator: -> [10014,10016]
                                            name: masm [10016,10020]
                                        argument_list [10020,10022]
                                    operator: -> [10022,10024]
                                    call [10024,10117]
                                        name: Push [10024,10028]
                                        argument_list [10028,10117]
                                            argument [10029,10059]
                                                expr [10029,10059]
                                                    call [10029,10059]
                                                        name: ToRegister [10029,10039]
                                                        argument_list [10039,10059]
                                                            argument [10040,10044]
                                                                expr [10040,10044]
                                                                    name: basm [10040,10044]
                                                            argument [10046,10052]
                                                                expr [10046,10052]
                                                                    operator: & [10046,10047]
                                                                    name: scope [10047,10052]
                                                            argument [10054,10058]
                                                                expr [10054,10058]
                                                                    name: arg2 [10054,10058]
                                            argument [10086,10116]
                                                expr [10086,10116]
                                                    call [10086,10116]
                                                        name: ToRegister [10086,10096]
                                                        argument_list [10096,10116]
                                                            argument [10097,10101]
                                                                expr [10097,10101]
                                                                    name: basm [10097,10101]
                                                            argument [10103,10109]
                                                                expr [10103,10109]
                                                                    operator: & [10103,10104]
                                                                    name: scope [10104,10109]
                                                            argument [10111,10115]
                                                                expr [10111,10115]
                                                                    name: arg1 [10111,10115]
    comment: // Currently RegisterLists are always be the last argument, so we don't [10132,10203]
    comment: // specialize for the case where they're not. We do still specialise for the [10204,10280]
    comment: // aligned and unaligned cases. [10281,10312]
    macro [10313,10321]
        name: template [10313,10321]
    expr_stmt [10322,10863]
        expr [10322,10863]
            operator: < [10322,10323]
            name: typename [10323,10331]
            name: Arg [10332,10335]
            operator: > [10335,10336]
            name [10344,10389]
                name: PushAllHelper [10344,10357]
                argument_list [10357,10389]
                    argument [10358,10361]
                        name: Arg [10358,10361]
                    argument [10363,10388]
                        name [10363,10388]
                            name: interpreter [10363,10374]
                            operator: :: [10374,10376]
                            name: RegisterList [10376,10388]
            block [10390,10863]
                expr [10394,10792]
                    specifier: static [10394,10400]
                    name: void [10401,10405]
                    macro [10406,10495]
                        name: Push [10406,10410]
                        argument_list [10410,10495]
                            argument [10411,10434]
                            argument [10436,10443]
                            argument [10464,10494]
                    block [10496,10595]
                        expr [10502,10541]
                            call [10502,10541]
                                name: DCHECK_EQ [10502,10511]
                                argument_list [10511,10541]
                                    argument [10512,10537]
                                        expr [10512,10537]
                                            call [10512,10533]
                                                name [10512,10531]
                                                    name: list [10512,10516]
                                                    operator: . [10516,10517]
                                                    name: register_count [10517,10531]
                                                argument_list [10531,10533]
                                            operator: % [10534,10535]
                                            literal: 2 [10536,10537]
                                    argument [10539,10540]
                                        expr [10539,10540]
                                            literal: 1 [10539,10540]
                        expr [10547,10590]
                            call [10547,10590]
                                name: PushAll [10547,10554]
                                argument_list [10554,10590]
                                    argument [10555,10559]
                                        expr [10555,10559]
                                            name: basm [10555,10559]
                                    argument [10561,10564]
                                        expr [10561,10564]
                                            name: arg [10561,10564]
                                    argument [10566,10573]
                                        expr [10566,10573]
                                            name [10566,10573]
                                                name: list [10566,10570]
                                                index [10570,10573]
                                                    expr [10571,10572]
                                                        literal: 0 [10571,10572]
                                    argument [10575,10589]
                                        expr [10575,10589]
                                            call [10575,10589]
                                                name [10575,10587]
                                                    name: list [10575,10579]
                                                    operator: . [10579,10580]
                                                    name: PopLeft [10580,10587]
                                                argument_list [10587,10589]
                    specifier: static [10598,10604]
                    name: void [10605,10609]
                    macro [10610,10713]
                        name: PushReverse [10610,10621]
                        argument_list [10621,10713]
                            argument [10622,10645]
                            argument [10647,10654]
                            argument [10682,10712]
                    block [10714,10792]
                        if_stmt [10720,10786]
                            if [10720,10786]
                                condition [10723,10751]
                                    expr [10724,10750]
                                        call [10724,10745]
                                            name [10724,10743]
                                                name: list [10724,10728]
                                                operator: . [10728,10729]
                                                name: register_count [10729,10743]
                                            argument_list [10743,10745]
                                        operator: == [10746,10748]
                                        literal: 0 [10749,10750]
                                block [10752,10786]
                                    block_content [10760,10786]
                                        expr_stmt [10760,10786]
                                            expr [10760,10785]
                                                call [10760,10785]
                                                    name: PushAllReverse [10760,10774]
                                                    argument_list [10774,10785]
                                                        argument [10775,10779]
                                                            expr [10775,10779]
                                                                name: basm [10775,10779]
                                                        argument [10781,10784]
                                                            expr [10781,10784]
                                                                name: arg [10781,10784]
                                        expr_stmt [0,0]
                if_stmt [10793,10857]
                    else [10793,10857]
                        block [10798,10857]
                            block_content [10806,10857]
                                expr_stmt [10806,10857]
                                    expr [10806,10856]
                                        call [10806,10856]
                                            name: PushAllReverse [10806,10820]
                                            argument_list [10820,10856]
                                                argument [10821,10825]
                                                    expr [10821,10825]
                                                        name: basm [10821,10825]
                                                argument [10827,10830]
                                                    expr [10827,10830]
                                                        name: arg [10827,10830]
                                                argument [10832,10839]
                                                    expr [10832,10839]
                                                        name [10832,10839]
                                                            name: list [10832,10836]
                                                            index [10836,10839]
                                                                expr [10837,10838]
                                                                    literal: 0 [10837,10838]
                                                argument [10841,10855]
                                                    expr [10841,10855]
                                                        call [10841,10855]
                                                            name [10841,10853]
                                                                name: list [10841,10845]
                                                                operator: . [10845,10846]
                                                                name: PopLeft [10846,10853]
                                                            argument_list [10853,10855]
                                expr_stmt [0,0]
    empty_stmt [10869,10870]
    macro [10871,10879]
        name: template [10871,10879]
    expr_stmt [10880,11547]
        expr [10880,11547]
            operator: < [10880,10881]
            operator: > [10881,10882]
            name [10890,10930]
                name: PushAllHelper [10890,10903]
                argument_list [10903,10930]
                    argument [10904,10929]
                        name [10904,10929]
                            name: interpreter [10904,10915]
                            operator: :: [10915,10917]
                            name: RegisterList [10917,10929]
            block [10931,11205]
                expr [10935,11201]
                    specifier: static [10935,10941]
                    name: void [10942,10946]
                    macro [10947,11008]
                        name: Push [10947,10951]
                        argument_list [10951,11008]
                            argument [10952,10975]
                            argument [10977,11007]
                    block [11009,11201]
                        expr [11015,11054]
                            call [11015,11054]
                                name: DCHECK_EQ [11015,11024]
                                argument_list [11024,11054]
                                    argument [11025,11050]
                                        expr [11025,11050]
                                            call [11025,11046]
                                                name [11025,11044]
                                                    name: list [11025,11029]
                                                    operator: . [11029,11030]
                                                    name: register_count [11030,11044]
                                                argument_list [11044,11046]
                                            operator: % [11047,11048]
                                            literal: 2 [11049,11050]
                                    argument [11052,11053]
                                        expr [11052,11053]
                                            literal: 0 [11052,11053]
                        for [11060,11195]
                            control [11064,11134]
                                init [11065,11083]
                                    decl [11065,11082]
                                        type [11065,11068]
                                            name: int [11065,11068]
                                        name: reg_index [11069,11078]
                                        init [11079,11082]
                                            expr [11081,11082]
                                                literal: 0 [11081,11082]
                                condition [11084,11118]
                                    expr [11084,11117]
                                        name: reg_index [11084,11093]
                                        operator: < [11094,11095]
                                        call [11096,11117]
                                            name [11096,11115]
                                                name: list [11096,11100]
                                                operator: . [11100,11101]
                                                name: register_count [11101,11115]
                                            argument_list [11115,11117]
                                incr [11119,11133]
                                    expr [11119,11133]
                                        name: reg_index [11119,11128]
                                        operator: += [11129,11131]
                                        literal: 2 [11132,11133]
                            block [11135,11195]
                                block_content [11143,11195]
                                    expr_stmt [11143,11195]
                                        expr [11143,11194]
                                            call [11143,11194]
                                                name: PushAll [11143,11150]
                                                argument_list [11150,11194]
                                                    argument [11151,11155]
                                                        expr [11151,11155]
                                                            name: basm [11151,11155]
                                                    argument [11157,11172]
                                                        expr [11157,11172]
                                                            name [11157,11172]
                                                                name: list [11157,11161]
                                                                index [11161,11172]
                                                                    expr [11162,11171]
                                                                        name: reg_index [11162,11171]
                                                    argument [11174,11193]
                                                        expr [11174,11193]
                                                            name [11174,11193]
                                                                name: list [11174,11178]
                                                                index [11178,11193]
                                                                    expr [11179,11192]
                                                                        name: reg_index [11179,11188]
                                                                        operator: + [11189,11190]
                                                                        literal: 1 [11191,11192]
                                    expr_stmt [0,0]
            specifier: static [11208,11214]
            name: void [11215,11219]
            macro [11220,11314]
                name: PushReverse [11220,11231]
                argument_list [11231,11314]
                    argument [11232,11255]
                    argument [11283,11313]
            block [11315,11547]
                expr [11321,11362]
                    name: int [11321,11324]
                    name: reg_index [11325,11334]
                    operator: = [11335,11336]
                    call [11337,11358]
                        name [11337,11356]
                            name: list [11337,11341]
                            operator: . [11341,11342]
                            name: register_count [11342,11356]
                        argument_list [11356,11358]
                    operator: - [11359,11360]
                    literal: 1 [11361,11362]
                if_stmt [11368,11541]
                    if [11368,11541]
                        condition [11371,11391]
                            expr [11372,11390]
                                name: reg_index [11372,11381]
                                operator: % [11382,11383]
                                literal: 2 [11384,11385]
                                operator: == [11386,11388]
                                literal: 0 [11389,11390]
                        block [11392,11541]
                            block_content [11476,11541]
                                comment: // Push the padding register to round up the amount of values pushed. [11400,11469]
                                expr_stmt [11476,11522]
                                    expr [11476,11521]
                                        call [11476,11521]
                                            name: PushAllReverse [11476,11490]
                                            argument_list [11490,11521]
                                                argument [11491,11495]
                                                    expr [11491,11495]
                                                        name: basm [11491,11495]
                                                argument [11497,11512]
                                                    expr [11497,11512]
                                                        name [11497,11512]
                                                            name: list [11497,11501]
                                                            index [11501,11512]
                                                                expr [11502,11511]
                                                                    name: reg_index [11502,11511]
                                                argument [11514,11520]
                                                    expr [11514,11520]
                                                        name: padreg [11514,11520]
                                expr_stmt [11529,11541]
                                    expr [11529,11540]
                                        name: reg_index [11529,11538]
                                        operator: -- [11538,11540]
                                expr_stmt [0,0]
    for [11552,11664]
        control [11556,11590]
            init [11557,11558]
            condition [11559,11574]
                expr [11559,11573]
                    name: reg_index [11559,11568]
                    operator: >= [11569,11571]
                    literal: 1 [11572,11573]
            incr [11575,11589]
                expr [11575,11589]
                    name: reg_index [11575,11584]
                    operator: -= [11585,11587]
                    literal: 2 [11588,11589]
        block [11591,11664]
            block_content [11599,11658]
                expr_stmt [11599,11658]
                    expr [11599,11657]
                        call [11599,11657]
                            name: PushAllReverse [11599,11613]
                            argument_list [11613,11657]
                                argument [11614,11618]
                                    expr [11614,11618]
                                        name: basm [11614,11618]
                                argument [11620,11639]
                                    expr [11620,11639]
                                        name [11620,11639]
                                            name: list [11620,11624]
                                            index [11624,11639]
                                                expr [11625,11638]
                                                    name: reg_index [11625,11634]
                                                    operator: - [11635,11636]
                                                    literal: 1 [11637,11638]
                                argument [11641,11656]
                                    expr [11641,11656]
                                        name [11641,11656]
                                            name: list [11641,11645]
                                            index [11645,11656]
                                                expr [11646,11655]
                                                    name: reg_index [11646,11655]
    empty_stmt [11670,11671]
    macro [11673,11681]
        name: template [11673,11681]
    expr_stmt [11682,11718]
        expr [11682,11717]
            operator: < [11682,11683]
            name: typename [11683,11691]
            operator: ... [11691,11694]
            name: T [11695,11696]
            operator: > [11696,11697]
            name: PopAllHelper [11705,11717]
    macro [11719,11727]
        name: template [11719,11727]
    expr_stmt [11728,11803]
        expr [11728,11802]
            operator: < [11728,11729]
            operator: > [11729,11730]
            name [11738,11752]
                name: PopAllHelper [11738,11750]
                argument_list [11750,11752]
            block [11753,11802]
                expr [11757,11800]
                    specifier: static [11757,11763]
                    name: void [11764,11768]
                    macro [11769,11797]
                        name: Pop [11769,11772]
                        argument_list [11772,11797]
                            argument [11773,11796]
                    block [11798,11800]
    macro [11804,11812]
        name: template [11804,11812]
    expr_stmt [11813,11949]
        expr [11813,11948]
            operator: < [11813,11814]
            operator: > [11814,11815]
            name [11823,11845]
                name: PopAllHelper [11823,11835]
                argument_list [11835,11845]
                    argument [11836,11844]
                        name: Register [11836,11844]
            block [11846,11948]
                expr [11850,11946]
                    specifier: static [11850,11856]
                    name: void [11857,11861]
                    macro [11862,11904]
                        name: Pop [11862,11865]
                        argument_list [11865,11904]
                            argument [11866,11889]
                            argument [11891,11903]
                    block [11905,11946]
                        expr [11911,11941]
                            call [11911,11923]
                                name [11911,11921]
                                    name: basm [11911,11915]
                                    operator: -> [11915,11917]
                                    name: masm [11917,11921]
                                argument_list [11921,11923]
                            operator: -> [11923,11925]
                            call [11925,11941]
                                name: Pop [11925,11928]
                                argument_list [11928,11941]
                                    argument [11929,11932]
                                        expr [11929,11932]
                                            name: reg [11929,11932]
                                    argument [11934,11940]
                                        expr [11934,11940]
                                            name: padreg [11934,11940]
    macro [11950,11958]
        name: template [11950,11958]
    expr_stmt [11959,12212]
        expr [11959,12211]
            operator: < [11959,11960]
            name: typename [11960,11968]
            operator: ... [11968,11971]
            name: T [11972,11973]
            operator: > [11973,11974]
            name [11982,12020]
                name: PopAllHelper [11982,11994]
                argument_list [11994,12020]
                    argument [11995,12003]
                        name: Register [11995,12003]
                    argument [12005,12013]
                        name: Register [12005,12013]
                    argument [12015,12019]
                        name: T [12015,12016]
                        modifier: ... [12016,12019]
            block [12021,12211]
                expr [12025,12209]
                    specifier: static [12025,12031]
                    name: void [12032,12036]
                    macro [12037,12124]
                        name: Pop [12037,12040]
                        argument_list [12040,12124]
                            argument [12041,12064]
                            argument [12066,12079]
                            argument [12081,12094]
                            argument [12114,12123]
                    block [12125,12209]
                        expr [12131,12160]
                            call [12131,12143]
                                name [12131,12141]
                                    name: basm [12131,12135]
                                    operator: -> [12135,12137]
                                    name: masm [12137,12141]
                                argument_list [12141,12143]
                            operator: -> [12143,12145]
                            call [12145,12160]
                                name: Pop [12145,12148]
                                argument_list [12148,12160]
                                    argument [12149,12153]
                                        expr [12149,12153]
                                            name: reg1 [12149,12153]
                                    argument [12155,12159]
                                        expr [12155,12159]
                                            name: reg2 [12155,12159]
                        expr [12166,12204]
                            call [12166,12204]
                                name [12166,12189]
                                    name [12166,12184]
                                        name: PopAllHelper [12166,12178]
                                        argument_list [12178,12184]
                                            argument [12179,12183]
                                                name: T [12179,12180]
                                                modifier: ... [12180,12183]
                                    operator: :: [12184,12186]
                                    name: Pop [12186,12189]
                                argument_list [12189,12204]
                                    argument [12190,12194]
                                        expr [12190,12194]
                                            name: basm [12190,12194]
                                    argument [12196,12203]
                                        expr [12196,12203]
                                            name: tail [12196,12200]
                                            operator: ... [12200,12203]
    comment: // namespace detail [12217,12236]
    expr_stmt [12247,12539]
        expr [12247,12539]
            operator: < [12247,12248]
            name: typename [12248,12256]
            operator: ... [12256,12259]
            name: T [12260,12261]
            operator: > [12261,12262]
            name: int [12263,12266]
            macro [12267,12284]
                name: BaselineAssembler [12267,12284]
            name [12284,12290]
                operator: :: [12284,12286]
                name: Push [12286,12290]
            operator: ( [12290,12291]
            name: T [12291,12292]
            operator: ... [12292,12295]
            name: vals [12296,12300]
            operator: ) [12300,12301]
            block [12302,12539]
                comment: // We have to count the pushes first, to decide whether to add padding before [12306,12383]
                comment: // the first push. [12386,12404]
                expr [12407,12469]
                    name: int [12407,12410]
                    name: push_count [12411,12421]
                    operator: = [12422,12423]
                    call [12424,12469]
                        name [12424,12460]
                            name: detail [12424,12430]
                            operator: :: [12430,12432]
                            name [12432,12453]
                                name: CountPushHelper [12432,12447]
                                argument_list [12447,12453]
                                    argument [12448,12452]
                                        name: T [12448,12449]
                                        modifier: ... [12449,12452]
                            operator: :: [12453,12455]
                            name: Count [12455,12460]
                        argument_list [12460,12469]
                            argument [12461,12468]
                                expr [12461,12468]
                                    name: vals [12461,12465]
                                    operator: ... [12465,12468]
                if_stmt [12473,12535]
                    if [12473,12535]
                        condition [12476,12497]
                            expr [12477,12496]
                                name: push_count [12477,12487]
                                operator: % [12488,12489]
                                literal: 2 [12490,12491]
                                operator: == [12492,12494]
                                literal: 0 [12495,12496]
                        block [12498,12535]
                            block_content [12504,12535]
                                expr_stmt [12504,12535]
                                    expr [12504,12534]
                                        call [12504,12534]
                                            name [12504,12519]
                                                name: detail [12504,12510]
                                                operator: :: [12510,12512]
                                                name: PushAll [12512,12519]
                                            argument_list [12519,12534]
                                                argument [12520,12524]
                                                    expr [12520,12524]
                                                        name: this [12520,12524]
                                                argument [12526,12533]
                                                    expr [12526,12533]
                                                        name: vals [12526,12530]
                                                        operator: ... [12530,12533]
                                expr_stmt [0,0]
    if_stmt [12540,12594]
        else [12540,12594]
            block [12545,12594]
                block_content [12551,12590]
                    expr_stmt [12551,12590]
                        expr [12551,12589]
                            call [12551,12589]
                                name [12551,12566]
                                    name: detail [12551,12557]
                                    operator: :: [12557,12559]
                                    name: PushAll [12559,12566]
                                argument_list [12566,12589]
                                    argument [12567,12571]
                                        expr [12567,12571]
                                            name: this [12567,12571]
                                    argument [12573,12579]
                                        expr [12573,12579]
                                            name: padreg [12573,12579]
                                    argument [12581,12588]
                                        expr [12581,12588]
                                            name: vals [12581,12585]
                                            operator: ... [12585,12588]
    return [12597,12615]
        expr [12604,12614]
            name: push_count [12604,12614]
    expr_stmt [12628,16178]
        expr [12628,16178]
            operator: < [12628,12629]
            name: typename [12629,12637]
            operator: ... [12637,12640]
            name: T [12641,12642]
            operator: > [12642,12643]
            name: void [12644,12648]
            macro [12649,12666]
                name: BaselineAssembler [12649,12666]
            name [12666,12679]
                operator: :: [12666,12668]
                name: PushReverse [12668,12679]
            operator: ( [12679,12680]
            name: T [12680,12681]
            operator: ... [12681,12684]
            name: vals [12685,12689]
            operator: ) [12689,12690]
            block [12691,12735]
                expr [12695,12732]
                    call [12695,12732]
                        name [12695,12717]
                            name: detail [12695,12701]
                            operator: :: [12701,12703]
                            name: PushAllReverse [12703,12717]
                        argument_list [12717,12732]
                            argument [12718,12722]
                                expr [12718,12722]
                                    name: this [12718,12722]
                            argument [12724,12731]
                                expr [12724,12731]
                                    name: vals [12724,12728]
                                    operator: ... [12728,12731]
            name [12737,12761]
                name: template [12737,12745]
                argument_list [12746,12761]
                    argument [12747,12760]
                        name: typename [12747,12755]
                        modifier: ... [12755,12758]
                        name: T [12759,12760]
            name: void [12762,12766]
            macro [12767,12784]
                name: BaselineAssembler [12767,12784]
            name [12784,12789]
                operator: :: [12784,12786]
                name: Pop [12786,12789]
            operator: ( [12789,12790]
            name: T [12790,12791]
            operator: ... [12791,12794]
            name: registers [12795,12804]
            operator: ) [12804,12805]
            block [12806,12864]
                expr [12810,12861]
                    call [12810,12861]
                        name [12810,12841]
                            name: detail [12810,12816]
                            operator: :: [12816,12818]
                            name [12818,12836]
                                name: PopAllHelper [12818,12830]
                                argument_list [12830,12836]
                                    argument [12831,12835]
                                        name: T [12831,12832]
                                        modifier: ... [12832,12835]
                            operator: :: [12836,12838]
                            name: Pop [12838,12841]
                        argument_list [12841,12861]
                            argument [12842,12846]
                                expr [12842,12846]
                                    name: this [12842,12846]
                            argument [12848,12860]
                                expr [12848,12860]
                                    name: registers [12848,12857]
                                    operator: ... [12857,12860]
            name: void [12866,12870]
            macro [12871,12888]
                name: BaselineAssembler [12871,12888]
            name [12888,12912]
                operator: :: [12888,12890]
                name: LoadTaggedPointerField [12890,12912]
            operator: ( [12912,12913]
            name: Register [12913,12921]
            name: output [12922,12928]
            operator: , [12928,12929]
            name: Register [12930,12938]
            name: source [12939,12945]
            operator: , [12945,12946]
            name: int [12994,12997]
            name: offset [12998,13004]
            operator: ) [13004,13005]
            block [13006,13079]
                expr [13010,13076]
                    name: __ [13010,13012]
                    call [13013,13076]
                        name: LoadTaggedPointerField [13013,13035]
                        argument_list [13035,13076]
                            argument [13036,13042]
                                expr [13036,13042]
                                    name: output [13036,13042]
                            argument [13044,13075]
                                expr [13044,13075]
                                    call [13044,13075]
                                        name: FieldMemOperand [13044,13059]
                                        argument_list [13059,13075]
                                            argument [13060,13066]
                                                expr [13060,13066]
                                                    name: source [13060,13066]
                                            argument [13068,13074]
                                                expr [13068,13074]
                                                    name: offset [13068,13074]
            name: void [13080,13084]
            macro [13085,13102]
                name: BaselineAssembler [13085,13102]
            name [13102,13125]
                operator: :: [13102,13104]
                name: LoadTaggedSignedField [13104,13125]
            operator: ( [13125,13126]
            name: Register [13126,13134]
            name: output [13135,13141]
            operator: , [13141,13142]
            name: Register [13143,13151]
            name: source [13152,13158]
            operator: , [13158,13159]
            name: int [13206,13209]
            name: offset [13210,13216]
            operator: ) [13216,13217]
            block [13218,13290]
                expr [13222,13287]
                    name: __ [13222,13224]
                    call [13225,13287]
                        name: LoadTaggedSignedField [13225,13246]
                        argument_list [13246,13287]
                            argument [13247,13253]
                                expr [13247,13253]
                                    name: output [13247,13253]
                            argument [13255,13286]
                                expr [13255,13286]
                                    call [13255,13286]
                                        name: FieldMemOperand [13255,13270]
                                        argument_list [13270,13286]
                                            argument [13271,13277]
                                                expr [13271,13277]
                                                    name: source [13271,13277]
                                            argument [13279,13285]
                                                expr [13279,13285]
                                                    name: offset [13279,13285]
            name: void [13291,13295]
            macro [13296,13313]
                name: BaselineAssembler [13296,13313]
            name [13313,13333]
                operator: :: [13313,13315]
                name: LoadTaggedAnyField [13315,13333]
            operator: ( [13333,13334]
            name: Register [13334,13342]
            name: output [13343,13349]
            operator: , [13349,13350]
            name: Register [13351,13359]
            name: source [13360,13366]
            operator: , [13366,13367]
            name: int [13411,13414]
            name: offset [13415,13421]
            operator: ) [13421,13422]
            block [13423,13492]
                expr [13427,13489]
                    name: __ [13427,13429]
                    call [13430,13489]
                        name: LoadAnyTaggedField [13430,13448]
                        argument_list [13448,13489]
                            argument [13449,13455]
                                expr [13449,13455]
                                    name: output [13449,13455]
                            argument [13457,13488]
                                expr [13457,13488]
                                    call [13457,13488]
                                        name: FieldMemOperand [13457,13472]
                                        argument_list [13472,13488]
                                            argument [13473,13479]
                                                expr [13473,13479]
                                                    name: source [13473,13479]
                                            argument [13481,13487]
                                                expr [13481,13487]
                                                    name: offset [13481,13487]
            name: void [13493,13497]
            macro [13498,13515]
                name: BaselineAssembler [13498,13515]
            name [13515,13530]
                operator: :: [13515,13517]
                name: LoadByteField [13517,13530]
            operator: ( [13530,13531]
            name: Register [13531,13539]
            name: output [13540,13546]
            operator: , [13546,13547]
            name: Register [13548,13556]
            name: source [13557,13563]
            operator: , [13563,13564]
            name: int [13603,13606]
            name: offset [13607,13613]
            operator: ) [13613,13614]
            block [13615,13670]
                expr [13619,13667]
                    name: __ [13619,13621]
                    call [13622,13667]
                        name: Ldrb [13622,13626]
                        argument_list [13626,13667]
                            argument [13627,13633]
                                expr [13627,13633]
                                    name: output [13627,13633]
                            argument [13635,13666]
                                expr [13635,13666]
                                    call [13635,13666]
                                        name: FieldMemOperand [13635,13650]
                                        argument_list [13650,13666]
                                            argument [13651,13657]
                                                expr [13651,13657]
                                                    name: source [13651,13657]
                                            argument [13659,13665]
                                                expr [13659,13665]
                                                    name: offset [13659,13665]
            name: void [13671,13675]
            macro [13676,13693]
                name: BaselineAssembler [13676,13693]
            name [13693,13717]
                operator: :: [13693,13695]
                name: StoreTaggedSignedField [13695,13717]
            operator: ( [13717,13718]
            name: Register [13718,13726]
            name: target [13727,13733]
            operator: , [13733,13734]
            name: int [13735,13738]
            name: offset [13739,13745]
            operator: , [13745,13746]
            name: Smi [13794,13797]
            name: value [13798,13803]
            operator: ) [13803,13804]
            block [13805,13977]
                expr [13809,13841]
                    name: ScratchRegisterScope [13809,13829]
                    call [13830,13841]
                        name: temps [13830,13835]
                        argument_list [13835,13841]
                            argument [13836,13840]
                                expr [13836,13840]
                                    name: this [13836,13840]
                expr [13845,13882]
                    name: Register [13845,13853]
                    name: tmp [13854,13857]
                    operator: = [13858,13859]
                    call [13860,13882]
                        name [13860,13880]
                            name: temps [13860,13865]
                            operator: . [13865,13866]
                            name: AcquireScratch [13866,13880]
                        argument_list [13880,13882]
                expr [13886,13913]
                    name: __ [13886,13888]
                    call [13889,13913]
                        name: Mov [13889,13892]
                        argument_list [13892,13913]
                            argument [13893,13896]
                                expr [13893,13896]
                                    name: tmp [13893,13896]
                            argument [13898,13912]
                                expr [13898,13912]
                                    call [13898,13912]
                                        name: Operand [13898,13905]
                                        argument_list [13905,13912]
                                            argument [13906,13911]
                                                expr [13906,13911]
                                                    name: value [13906,13911]
                expr [13917,13974]
                    name: __ [13917,13919]
                    call [13920,13974]
                        name: StoreTaggedField [13920,13936]
                        argument_list [13936,13974]
                            argument [13937,13940]
                                expr [13937,13940]
                                    name: tmp [13937,13940]
                            argument [13942,13973]
                                expr [13942,13973]
                                    call [13942,13973]
                                        name: FieldMemOperand [13942,13957]
                                        argument_list [13957,13973]
                                            argument [13958,13964]
                                                expr [13958,13964]
                                                    name: target [13958,13964]
                                            argument [13966,13972]
                                                expr [13966,13972]
                                                    name: offset [13966,13972]
            name: void [13978,13982]
            macro [13983,14000]
                name: BaselineAssembler [13983,14000]
            name [14000,14034]
                operator: :: [14000,14002]
                name: StoreTaggedFieldWithWriteBarrier [14002,14034]
            operator: ( [14034,14035]
            name: Register [14035,14043]
            name: target [14044,14050]
            operator: , [14050,14051]
            name: int [14109,14112]
            name: offset [14113,14119]
            operator: , [14119,14120]
            name: Register [14178,14186]
            name: value [14187,14192]
            operator: ) [14192,14193]
            block [14194,14365]
                expr [14198,14257]
                    name: __ [14198,14200]
                    call [14201,14257]
                        name: StoreTaggedField [14201,14217]
                        argument_list [14217,14257]
                            argument [14218,14223]
                                expr [14218,14223]
                                    name: value [14218,14223]
                            argument [14225,14256]
                                expr [14225,14256]
                                    call [14225,14256]
                                        name: FieldMemOperand [14225,14240]
                                        argument_list [14240,14256]
                                            argument [14241,14247]
                                                expr [14241,14247]
                                                    name: target [14241,14247]
                                            argument [14249,14255]
                                                expr [14249,14255]
                                                    name: offset [14249,14255]
                expr [14261,14362]
                    name: __ [14261,14263]
                    call [14264,14362]
                        name: RecordWriteField [14264,14280]
                        argument_list [14280,14362]
                            argument [14281,14287]
                                expr [14281,14287]
                                    name: target [14281,14287]
                            argument [14289,14295]
                                expr [14289,14295]
                                    name: offset [14289,14295]
                            argument [14297,14302]
                                expr [14297,14302]
                                    name: value [14297,14302]
                            argument [14304,14322]
                                expr [14304,14322]
                                    name: kLRHasNotBeenSaved [14304,14322]
                            argument [14346,14361]
                                expr [14346,14361]
                                    name: kDontSaveFPRegs [14346,14361]
            name: void [14366,14370]
            macro [14371,14388]
                name: BaselineAssembler [14371,14388]
            name [14388,14420]
                operator: :: [14388,14390]
                name: StoreTaggedFieldNoWriteBarrier [14390,14420]
            operator: ( [14420,14421]
            name: Register [14421,14429]
            name: target [14430,14436]
            operator: , [14436,14437]
            name: int [14493,14496]
            name: offset [14497,14503]
            operator: , [14503,14504]
            name: Register [14560,14568]
            name: value [14569,14574]
            operator: ) [14574,14575]
            block [14576,14642]
                expr [14580,14639]
                    name: __ [14580,14582]
                    call [14583,14639]
                        name: StoreTaggedField [14583,14599]
                        argument_list [14599,14639]
                            argument [14600,14605]
                                expr [14600,14605]
                                    name: value [14600,14605]
                            argument [14607,14638]
                                expr [14607,14638]
                                    call [14607,14638]
                                        name: FieldMemOperand [14607,14622]
                                        argument_list [14622,14638]
                                            argument [14623,14629]
                                                expr [14623,14629]
                                                    name: target [14623,14629]
                                            argument [14631,14637]
                                                expr [14631,14637]
                                                    name: offset [14631,14637]
            name: void [14644,14648]
            macro [14649,14666]
                name: BaselineAssembler [14649,14666]
            name [14666,14688]
                operator: :: [14666,14668]
                name: AddToInterruptBudget [14668,14688]
            operator: ( [14688,14689]
            name: int32_t [14689,14696]
            name: weight [14697,14703]
            operator: ) [14703,14704]
            block [14705,15339]
                expr [14709,14749]
                    name: ScratchRegisterScope [14709,14729]
                    call [14730,14749]
                        name: scratch_scope [14730,14743]
                        argument_list [14743,14749]
                            argument [14744,14748]
                                expr [14744,14748]
                                    name: this [14744,14748]
                expr [14753,14808]
                    name: Register [14753,14761]
                    name: feedback_cell [14762,14775]
                    operator: = [14776,14777]
                    call [14778,14808]
                        name [14778,14806]
                            name: scratch_scope [14778,14791]
                            operator: . [14791,14792]
                            name: AcquireScratch [14792,14806]
                        argument_list [14806,14808]
                expr [14812,14839]
                    call [14812,14839]
                        name: LoadFunction [14812,14824]
                        argument_list [14824,14839]
                            argument [14825,14838]
                                expr [14825,14838]
                                    name: feedback_cell [14825,14838]
                expr [14843,14953]
                    call [14843,14953]
                        name: LoadTaggedPointerField [14843,14865]
                        argument_list [14865,14953]
                            argument [14866,14879]
                                expr [14866,14879]
                                    name: feedback_cell [14866,14879]
                            argument [14881,14894]
                                expr [14881,14894]
                                    name: feedback_cell [14881,14894]
                            argument [14921,14952]
                                expr [14921,14952]
                                    name [14921,14952]
                                        name: JSFunction [14921,14931]
                                        operator: :: [14931,14933]
                                        name: kFeedbackCellOffset [14933,14952]
                expr [14958,15020]
                    name: Register [14958,14966]
                    name: interrupt_budget [14967,14983]
                    operator: = [14984,14985]
                    call [14986,15016]
                        name [14986,15014]
                            name: scratch_scope [14986,14999]
                            operator: . [14999,15000]
                            name: AcquireScratch [15000,15014]
                        argument_list [15014,15016]
                    operator: . [15016,15017]
                    call [15017,15020]
                        name: W [15017,15018]
                        argument_list [15018,15020]
                expr [15024,15127]
                    name: __ [15024,15026]
                    call [15027,15127]
                        name: Ldr [15027,15030]
                        argument_list [15030,15127]
                            argument [15031,15047]
                                expr [15031,15047]
                                    name: interrupt_budget [15031,15047]
                            argument [15058,15126]
                                expr [15058,15126]
                                    call [15058,15126]
                                        name: FieldMemOperand [15058,15073]
                                        argument_list [15073,15126]
                                            argument [15074,15087]
                                                expr [15074,15087]
                                                    name: feedback_cell [15074,15087]
                                            argument [15089,15125]
                                                expr [15089,15125]
                                                    name [15089,15125]
                                                        name: FeedbackCell [15089,15101]
                                                        operator: :: [15101,15103]
                                                        name: kInterruptBudgetOffset [15103,15125]
                comment: // Remember to set flags as part of the add! [15131,15175]
                expr [15178,15229]
                    name: __ [15178,15180]
                    call [15181,15229]
                        name: Adds [15181,15185]
                        argument_list [15185,15229]
                            argument [15186,15202]
                                expr [15186,15202]
                                    name: interrupt_budget [15186,15202]
                            argument [15204,15220]
                                expr [15204,15220]
                                    name: interrupt_budget [15204,15220]
                            argument [15222,15228]
                                expr [15222,15228]
                                    name: weight [15222,15228]
                expr [15233,15336]
                    name: __ [15233,15235]
                    call [15236,15336]
                        name: Str [15236,15239]
                        argument_list [15239,15336]
                            argument [15240,15256]
                                expr [15240,15256]
                                    name: interrupt_budget [15240,15256]
                            argument [15267,15335]
                                expr [15267,15335]
                                    call [15267,15335]
                                        name: FieldMemOperand [15267,15282]
                                        argument_list [15282,15335]
                                            argument [15283,15296]
                                                expr [15283,15296]
                                                    name: feedback_cell [15283,15296]
                                            argument [15298,15334]
                                                expr [15298,15334]
                                                    name [15298,15334]
                                                        name: FeedbackCell [15298,15310]
                                                        operator: :: [15310,15312]
                                                        name: kInterruptBudgetOffset [15312,15334]
            name: void [15341,15345]
            macro [15346,15363]
                name: BaselineAssembler [15346,15363]
            name [15363,15385]
                operator: :: [15363,15365]
                name: AddToInterruptBudget [15365,15385]
            operator: ( [15385,15386]
            name: Register [15386,15394]
            name: weight [15395,15401]
            operator: ) [15401,15402]
            block [15403,16041]
                expr [15407,15447]
                    name: ScratchRegisterScope [15407,15427]
                    call [15428,15447]
                        name: scratch_scope [15428,15441]
                        argument_list [15441,15447]
                            argument [15442,15446]
                                expr [15442,15446]
                                    name: this [15442,15446]
                expr [15451,15506]
                    name: Register [15451,15459]
                    name: feedback_cell [15460,15473]
                    operator: = [15474,15475]
                    call [15476,15506]
                        name [15476,15504]
                            name: scratch_scope [15476,15489]
                            operator: . [15489,15490]
                            name: AcquireScratch [15490,15504]
                        argument_list [15504,15506]
                expr [15510,15537]
                    call [15510,15537]
                        name: LoadFunction [15510,15522]
                        argument_list [15522,15537]
                            argument [15523,15536]
                                expr [15523,15536]
                                    name: feedback_cell [15523,15536]
                expr [15541,15651]
                    call [15541,15651]
                        name: LoadTaggedPointerField [15541,15563]
                        argument_list [15563,15651]
                            argument [15564,15577]
                                expr [15564,15577]
                                    name: feedback_cell [15564,15577]
                            argument [15579,15592]
                                expr [15579,15592]
                                    name: feedback_cell [15579,15592]
                            argument [15619,15650]
                                expr [15619,15650]
                                    name [15619,15650]
                                        name: JSFunction [15619,15629]
                                        operator: :: [15629,15631]
                                        name: kFeedbackCellOffset [15631,15650]
                expr [15656,15718]
                    name: Register [15656,15664]
                    name: interrupt_budget [15665,15681]
                    operator: = [15682,15683]
                    call [15684,15714]
                        name [15684,15712]
                            name: scratch_scope [15684,15697]
                            operator: . [15697,15698]
                            name: AcquireScratch [15698,15712]
                        argument_list [15712,15714]
                    operator: . [15714,15715]
                    call [15715,15718]
                        name: W [15715,15716]
                        argument_list [15716,15718]
                expr [15722,15825]
                    name: __ [15722,15724]
                    call [15725,15825]
                        name: Ldr [15725,15728]
                        argument_list [15728,15825]
                            argument [15729,15745]
                                expr [15729,15745]
                                    name: interrupt_budget [15729,15745]
                            argument [15756,15824]
                                expr [15756,15824]
                                    call [15756,15824]
                                        name: FieldMemOperand [15756,15771]
                                        argument_list [15771,15824]
                                            argument [15772,15785]
                                                expr [15772,15785]
                                                    name: feedback_cell [15772,15785]
                                            argument [15787,15823]
                                                expr [15787,15823]
                                                    name [15787,15823]
                                                        name: FeedbackCell [15787,15799]
                                                        operator: :: [15799,15801]
                                                        name: kInterruptBudgetOffset [15801,15823]
                comment: // Remember to set flags as part of the add! [15829,15873]
                expr [15876,15931]
                    name: __ [15876,15878]
                    call [15879,15931]
                        name: Adds [15879,15883]
                        argument_list [15883,15931]
                            argument [15884,15900]
                                expr [15884,15900]
                                    name: interrupt_budget [15884,15900]
                            argument [15902,15918]
                                expr [15902,15918]
                                    name: interrupt_budget [15902,15918]
                            argument [15920,15930]
                                expr [15920,15930]
                                    call [15920,15930]
                                        name [15920,15928]
                                            name: weight [15920,15926]
                                            operator: . [15926,15927]
                                            name: W [15927,15928]
                                        argument_list [15928,15930]
                expr [15935,16038]
                    name: __ [15935,15937]
                    call [15938,16038]
                        name: Str [15938,15941]
                        argument_list [15941,16038]
                            argument [15942,15958]
                                expr [15942,15958]
                                    name: interrupt_budget [15942,15958]
                            argument [15969,16037]
                                expr [15969,16037]
                                    call [15969,16037]
                                        name: FieldMemOperand [15969,15984]
                                        argument_list [15984,16037]
                                            argument [15985,15998]
                                                expr [15985,15998]
                                                    name: feedback_cell [15985,15998]
                                            argument [16000,16036]
                                                expr [16000,16036]
                                                    name [16000,16036]
                                                        name: FeedbackCell [16000,16012]
                                                        operator: :: [16012,16014]
                                                        name: kInterruptBudgetOffset [16014,16036]
            name: void [16043,16047]
            macro [16048,16065]
                name: BaselineAssembler [16048,16065]
            name [16065,16073]
                operator: :: [16065,16067]
                name: AddSmi [16067,16073]
            operator: ( [16073,16074]
            name: Register [16074,16082]
            name: lhs [16083,16086]
            operator: , [16086,16087]
            name: Smi [16088,16091]
            name: rhs [16092,16095]
            operator: ) [16095,16096]
            block [16097,16178]
                if_stmt [16101,16174]
                    if [16101,16174]
                        condition [16104,16126]
                            expr [16105,16125]
                                call [16105,16125]
                                    name: SmiValuesAre31Bits [16105,16123]
                                    argument_list [16123,16125]
                        block [16127,16174]
                            block_content [16133,16174]
                                decl_stmt [16133,16174]
                                    decl [16133,16173]
                                        type [16133,16135]
                                            name: __ [16133,16135]
                                        name: Add [16136,16139]
                                        argument_list [16139,16173]
                                            argument [16140,16147]
                                                expr [16140,16147]
                                                    call [16140,16147]
                                                        name [16140,16145]
                                                            name: lhs [16140,16143]
                                                            operator: . [16143,16144]
                                                            name: W [16144,16145]
                                                        argument_list [16145,16147]
                                            argument [16149,16156]
                                                expr [16149,16156]
                                                    call [16149,16156]
                                                        name [16149,16154]
                                                            name: lhs [16149,16152]
                                                            operator: . [16152,16153]
                                                            name: W [16153,16154]
                                                        argument_list [16154,16156]
                                            argument [16158,16172]
                                                expr [16158,16172]
                                                    call [16158,16172]
                                                        name: Immediate [16158,16167]
                                                        argument_list [16167,16172]
                                                            argument [16168,16171]
                                                                expr [16168,16171]
                                                                    name: rhs [16168,16171]
                                expr_stmt [0,0]
    if_stmt [16179,16250]
        else [16179,16250]
            block [16184,16250]
                block_content [16190,16246]
                    expr_stmt [16190,16208]
                        expr [16190,16207]
                            call [16190,16207]
                                name: DCHECK [16190,16196]
                                argument_list [16196,16207]
                                    argument [16197,16206]
                                        expr [16197,16206]
                                            call [16197,16206]
                                                name [16197,16204]
                                                    name: lhs [16197,16200]
                                                    operator: . [16200,16201]
                                                    name: IsX [16201,16204]
                                                argument_list [16204,16206]
                    decl_stmt [16213,16246]
                        decl [16213,16245]
                            type [16213,16215]
                                name: __ [16213,16215]
                            name: Add [16216,16219]
                            argument_list [16219,16245]
                                argument [16220,16223]
                                    expr [16220,16223]
                                        name: lhs [16220,16223]
                                argument [16225,16228]
                                    expr [16225,16228]
                                        name: lhs [16225,16228]
                                argument [16230,16244]
                                    expr [16230,16244]
                                        call [16230,16244]
                                            name: Immediate [16230,16239]
                                            argument_list [16239,16244]
                                                argument [16240,16243]
                                                    expr [16240,16243]
                                                        name: rhs [16240,16243]
    macro [16259,16276]
        name: BaselineAssembler [16259,16276]
    expr_stmt [16276,16573]
        expr [16276,16572]
            name [16276,16284]
                operator: :: [16276,16278]
                name: Switch [16278,16284]
            operator: ( [16284,16285]
            name: Register [16285,16293]
            name: reg [16294,16297]
            operator: , [16297,16298]
            name: int [16299,16302]
            name: case_value_base [16303,16318]
            operator: , [16318,16319]
            name: Label [16351,16356]
            operator: * [16356,16357]
            operator: * [16357,16358]
            name: labels [16359,16365]
            operator: , [16365,16366]
            name: int [16367,16370]
            name: num_labels [16371,16381]
            operator: ) [16381,16382]
            block [16383,16488]
                expr [16387,16404]
                    name: Label [16387,16392]
                    name: fallthrough [16393,16404]
                if_stmt [16408,16484]
                    if [16408,16484]
                        condition [16411,16432]
                            expr [16412,16431]
                                name: case_value_base [16412,16427]
                                operator: > [16428,16429]
                                literal: 0 [16430,16431]
                        block [16433,16484]
                            block_content [16439,16484]
                                decl_stmt [16439,16484]
                                    decl [16439,16483]
                                        type [16439,16441]
                                            name: __ [16439,16441]
                                        name: Sub [16442,16445]
                                        argument_list [16445,16483]
                                            argument [16446,16449]
                                                expr [16446,16449]
                                                    name: reg [16446,16449]
                                            argument [16451,16454]
                                                expr [16451,16454]
                                                    name: reg [16451,16454]
                                            argument [16456,16482]
                                                expr [16456,16482]
                                                    call [16456,16482]
                                                        name: Immediate [16456,16465]
                                                        argument_list [16465,16482]
                                                            argument [16466,16481]
                                                                expr [16466,16481]
                                                                    name: case_value_base [16466,16481]
                                expr_stmt [0,0]
            comment: // Mostly copied from code-generator-arm64.cc [16492,16537]
            name: ScratchRegisterScope [16540,16560]
            call [16561,16572]
                name: scope [16561,16566]
                argument_list [16566,16572]
                    argument [16567,16571]
                        expr [16567,16571]
                            name: this [16567,16571]
    decl_stmt [16576,16615]
        decl [16576,16614]
            type [16576,16584]
                name: Register [16576,16584]
            name: temp [16585,16589]
            init [16590,16614]
                expr [16592,16614]
                    call [16592,16614]
                        name [16592,16612]
                            name: scope [16592,16597]
                            operator: . [16597,16598]
                            name: AcquireScratch [16598,16612]
                        argument_list [16612,16614]
    decl_stmt [16618,16630]
        decl [16618,16629]
            type [16618,16623]
                name: Label [16618,16623]
            name: table [16624,16629]
    function_decl [16633,16657]
        type [16633,16635]
            name: __ [16633,16635]
        name: Cmp [16636,16639]
        parameter_list [16639,16656]
            parameter [16640,16643]
                decl [16640,16643]
                    type [16640,16643]
                        name: reg [16640,16643]
            parameter [16645,16655]
                decl [16645,16655]
                    type [16645,16655]
                        name: num_labels [16645,16655]
    expr_stmt [16660,16719]
        expr [16660,16718]
            call [16660,16718]
                name: JumpIf [16660,16666]
                argument_list [16666,16718]
                    argument [16667,16703]
                        expr [16667,16703]
                            name [16667,16703]
                                name: Condition [16667,16676]
                                operator: :: [16676,16678]
                                name: kUnsignedGreaterThanEqual [16678,16703]
                    argument [16705,16717]
                        expr [16705,16717]
                            operator: & [16705,16706]
                            name: fallthrough [16706,16717]
    decl_stmt [16722,16743]
        decl [16722,16742]
            type [16722,16724]
                name: __ [16722,16724]
            name: Adr [16725,16728]
            argument_list [16728,16742]
                argument [16729,16733]
                    expr [16729,16733]
                        name: temp [16729,16733]
                argument [16735,16741]
                    expr [16735,16741]
                        operator: & [16735,16736]
                        name: table [16736,16741]
    decl_stmt [16746,16811]
        decl [16746,16769]
            type [16746,16749]
                name: int [16746,16749]
            name: entry_size_log2 [16750,16765]
            init [16766,16769]
                expr [16768,16769]
                    literal: 2 [16768,16769]
    ifdef [16771,16810]
        directive: ifdef [16772,16777]
        name: V8_ENABLE_CONTROL_FLOW_INTEGRITY [16778,16810]
    expr_stmt [16813,16860]
        expr [16813,16830]
            operator: ++ [16813,16815]
            name: entry_size_log2 [16815,16830]
    comment: // Account for BTI. [16833,16852]
    endif [16853,16859]
        directive: endif [16854,16859]
    decl_stmt [16862,16918]
        decl [16862,16917]
            type [16862,16864]
                name: __ [16862,16864]
            name: Add [16865,16868]
            argument_list [16868,16917]
                argument [16869,16873]
                    expr [16869,16873]
                        name: temp [16869,16873]
                argument [16875,16879]
                    expr [16875,16879]
                        name: temp [16875,16879]
                argument [16881,16916]
                    expr [16881,16916]
                        call [16881,16916]
                            name: Operand [16881,16888]
                            argument_list [16888,16916]
                                argument [16889,16892]
                                    expr [16889,16892]
                                        name: reg [16889,16892]
                                argument [16894,16898]
                                    expr [16894,16898]
                                        name: UXTW [16894,16898]
                                argument [16900,16915]
                                    expr [16900,16915]
                                        name: entry_size_log2 [16900,16915]
    function_decl [16921,16933]
        type [16921,16923]
            name: __ [16921,16923]
        name: Br [16924,16926]
        parameter_list [16926,16932]
            parameter [16927,16931]
                decl [16927,16931]
                    type [16927,16931]
                        name: temp [16927,16931]
    block [16936,17186]
        block_content [16942,17182]
            function_decl [16942,17018]
                type [16942,16973]
                    name [16942,16973]
                        name: TurboAssembler [16942,16956]
                        operator: :: [16956,16958]
                        name: BlockPoolsScope [16958,16973]
                name: block_pools [16974,16985]
                parameter_list [16985,17017]
                    parameter [16986,16991]
                        decl [16986,16991]
                            type [16986,16991]
                                name: masm_ [16986,16991]
                    parameter [16993,17016]
                        decl [16993,17016]
                            type [16993,17005]
                                name: num_labels [16993,17003]
                                modifier: * [17004,17005]
                            name: kInstrSize [17006,17016]
            decl_stmt [17023,17039]
                decl [17023,17038]
                    type [17023,17025]
                        name: __ [17023,17025]
                    name: Bind [17026,17030]
                    argument_list [17030,17038]
                        argument [17031,17037]
                            expr [17031,17037]
                                operator: & [17031,17032]
                                name: table [17032,17037]
            for [17044,17134]
                control [17048,17080]
                    init [17049,17059]
                        decl [17049,17058]
                            type [17049,17052]
                                name: int [17049,17052]
                            name: i [17053,17054]
                            init [17055,17058]
                                expr [17057,17058]
                                    literal: 0 [17057,17058]
                    condition [17060,17075]
                        expr [17060,17074]
                            name: i [17060,17061]
                            operator: < [17062,17063]
                            name: num_labels [17064,17074]
                    incr [17076,17079]
                        expr [17076,17079]
                            operator: ++ [17076,17078]
                            name: i [17078,17079]
                block [17081,17134]
                    block_content [17089,17128]
                        function_decl [17089,17105]
                            type [17089,17091]
                                name: __ [17089,17091]
                            name: JumpTarget [17092,17102]
                            parameter_list [17102,17104]
                        function_decl [17112,17128]
                            type [17112,17114]
                                name: __ [17112,17114]
                            name: B [17115,17116]
                            parameter_list [17116,17127]
                                parameter [17117,17126]
                                    decl [17117,17126]
                                        type [17117,17126]
                                            name [17117,17126]
                                                name: labels [17117,17123]
                                                index [17123,17126]
                                                    expr [17124,17125]
                                                        name: i [17124,17125]
            function_decl [17139,17155]
                type [17139,17141]
                    name: __ [17139,17141]
                name: JumpTarget [17142,17152]
                parameter_list [17152,17154]
            decl_stmt [17160,17182]
                decl [17160,17181]
                    type [17160,17162]
                        name: __ [17160,17162]
                    name: Bind [17163,17167]
                    argument_list [17167,17181]
                        argument [17168,17180]
                            expr [17168,17180]
                                operator: & [17168,17169]
                                name: fallthrough [17169,17180]
    undef [17190,17199]
        directive: undef [17191,17196]
        name: __ [17197,17199]
    define [17200,17216]
        directive: define [17201,17207]
        macro [17208,17210]
            name: __ [17208,17210]
        value [17211,17216]
    macro [17223,17240]
        name: BaselineAssembler [17223,17240]
    expr_stmt [17240,19039]
        expr [17240,19039]
            name [17240,17252]
                operator: :: [17240,17242]
                name: EmitReturn [17242,17252]
            operator: ( [17252,17253]
            name: MacroAssembler [17253,17267]
            operator: * [17267,17268]
            name: masm [17269,17273]
            operator: ) [17273,17274]
            block [17275,19039]
                expr [17279,17307]
                    name: BaselineAssembler [17279,17296]
                    call [17297,17307]
                        name: basm [17297,17301]
                        argument_list [17301,17307]
                            argument [17302,17306]
                                expr [17302,17306]
                                    name: masm [17302,17306]
                expr [17312,17376]
                    name: Register [17312,17320]
                    name: weight [17321,17327]
                    operator: = [17328,17329]
                    call [17330,17376]
                        name [17330,17374]
                            name: BaselineLeaveFrameDescriptor [17330,17358]
                            operator: :: [17358,17360]
                            name: WeightRegister [17360,17374]
                        argument_list [17374,17376]
                expr [17380,17453]
                    name: Register [17380,17388]
                    name: params_size [17389,17400]
                    operator: = [17401,17402]
                    call [17403,17453]
                        name [17403,17451]
                            name: BaselineLeaveFrameDescriptor [17403,17431]
                            operator: :: [17431,17433]
                            name: ParamsSizeRegister [17433,17451]
                        argument_list [17451,17453]
                expr [17458,17503]
                    name: __ [17458,17460]
                    call [17461,17503]
                        name: RecordComment [17461,17474]
                        argument_list [17474,17503]
                            argument [17475,17502]
                                expr [17475,17502]
                                    literal: "[ Update Interrupt Budget" [17475,17502]
                expr [17507,17538]
                    name: __ [17507,17509]
                    call [17510,17538]
                        name: AddToInterruptBudget [17510,17530]
                        argument_list [17530,17538]
                            argument [17531,17537]
                                expr [17531,17537]
                                    name: weight [17531,17537]
                comment: // Use compare flags set by add [17543,17574]
                expr [17577,17603]
                    name: Label [17577,17582]
                    name: skip_interrupt_label [17583,17603]
                expr [17607,17669]
                    name: __ [17607,17609]
                    call [17610,17669]
                        name: JumpIf [17610,17616]
                        argument_list [17616,17669]
                            argument [17617,17645]
                                expr [17617,17645]
                                    name [17617,17645]
                                        name: Condition [17617,17626]
                                        operator: :: [17626,17628]
                                        name: kGreaterThanEqual [17628,17645]
                            argument [17647,17668]
                                expr [17647,17668]
                                    operator: & [17647,17648]
                                    name: skip_interrupt_label [17648,17668]
                expr [17673,18111]
                    block [17673,18087]
                        expr [17679,17709]
                            name: __ [17679,17681]
                            call [17682,17688]
                                name: masm [17682,17686]
                                argument_list [17686,17688]
                            operator: -> [17688,17690]
                            call [17690,17709]
                                name: SmiTag [17690,17696]
                                argument_list [17696,17709]
                                    argument [17697,17708]
                                        expr [17697,17708]
                                            name: params_size [17697,17708]
                        expr [17715,17776]
                            name: __ [17715,17717]
                            call [17718,17724]
                                name: masm [17718,17722]
                                argument_list [17722,17724]
                            operator: -> [17724,17726]
                            call [17726,17776]
                                name: Push [17726,17730]
                                argument_list [17730,17776]
                                    argument [17731,17742]
                                        expr [17731,17742]
                                            name: params_size [17731,17742]
                                    argument [17744,17775]
                                        expr [17744,17775]
                                            name: kInterpreterAccumulatorRegister [17744,17775]
                        expr [17783,17815]
                            name: __ [17783,17785]
                            call [17786,17815]
                                name: LoadContext [17786,17797]
                                argument_list [17797,17815]
                                    argument [17798,17814]
                                        expr [17798,17814]
                                            name: kContextRegister [17798,17814]
                        expr [17821,17857]
                            name: __ [17821,17823]
                            call [17824,17857]
                                name: LoadFunction [17824,17836]
                                argument_list [17836,17857]
                                    argument [17837,17856]
                                        expr [17837,17856]
                                            name: kJSFunctionRegister [17837,17856]
                        expr [17863,17907]
                            name: __ [17863,17865]
                            call [17866,17872]
                                name: masm [17866,17870]
                                argument_list [17870,17872]
                            operator: -> [17872,17874]
                            call [17874,17907]
                                name: PushArgument [17874,17886]
                                argument_list [17886,17907]
                                    argument [17887,17906]
                                        expr [17887,17906]
                                            name: kJSFunctionRegister [17887,17906]
                        expr [17913,17977]
                            name: __ [17913,17915]
                            call [17916,17977]
                                name: CallRuntime [17916,17927]
                                argument_list [17927,17977]
                                    argument [17928,17973]
                                        expr [17928,17973]
                                            name [17928,17973]
                                                name: Runtime [17928,17935]
                                                operator: :: [17935,17937]
                                                name: kBytecodeBudgetInterruptFromBytecode [17937,17973]
                                    argument [17975,17976]
                                        expr [17975,17976]
                                            literal: 1 [17975,17976]
                        expr [17984,18044]
                            name: __ [17984,17986]
                            call [17987,17993]
                                name: masm [17987,17991]
                                argument_list [17991,17993]
                            operator: -> [17993,17995]
                            call [17995,18044]
                                name: Pop [17995,17998]
                                argument_list [17998,18044]
                                    argument [17999,18030]
                                        expr [17999,18030]
                                            name: kInterpreterAccumulatorRegister [17999,18030]
                                    argument [18032,18043]
                                        expr [18032,18043]
                                            name: params_size [18032,18043]
                        expr [18050,18082]
                            name: __ [18050,18052]
                            call [18053,18059]
                                name: masm [18053,18057]
                                argument_list [18057,18059]
                            operator: -> [18059,18061]
                            call [18061,18082]
                                name: SmiUntag [18061,18069]
                                argument_list [18069,18082]
                                    argument [18070,18081]
                                        expr [18070,18081]
                                            name: params_size [18070,18081]
                    name: __ [18090,18092]
                    call [18093,18111]
                        name: RecordComment [18093,18106]
                        argument_list [18106,18111]
                            argument [18107,18110]
                                expr [18107,18110]
                                    literal: "]" [18107,18110]
                expr [18116,18146]
                    name: __ [18116,18118]
                    call [18119,18146]
                        name: Bind [18119,18123]
                        argument_list [18123,18146]
                            argument [18124,18145]
                                expr [18124,18145]
                                    operator: & [18124,18125]
                                    name: skip_interrupt_label [18125,18145]
                expr [18151,18203]
                    name [18151,18190]
                        name: BaselineAssembler [18151,18168]
                        operator: :: [18168,18170]
                        name: ScratchRegisterScope [18170,18190]
                    call [18191,18203]
                        name: temps [18191,18196]
                        argument_list [18196,18203]
                            argument [18197,18202]
                                expr [18197,18202]
                                    operator: & [18197,18198]
                                    name: basm [18198,18202]
                expr [18207,18259]
                    name: Register [18207,18215]
                    name: actual_params_size [18216,18234]
                    operator: = [18235,18236]
                    call [18237,18259]
                        name [18237,18257]
                            name: temps [18237,18242]
                            operator: . [18242,18243]
                            name: AcquireScratch [18243,18257]
                        argument_list [18257,18259]
                comment: // Compute the size of the actual parameters + receiver (in bytes). [18263,18330]
                expr [18333,18423]
                    name: __ [18333,18335]
                    call [18336,18423]
                        name: Move [18336,18340]
                        argument_list [18340,18423]
                            argument [18341,18359]
                                expr [18341,18359]
                                    name: actual_params_size [18341,18359]
                            argument [18371,18422]
                                expr [18371,18422]
                                    call [18371,18422]
                                        name: MemOperand [18371,18381]
                                        argument_list [18381,18422]
                                            argument [18382,18384]
                                                expr [18382,18384]
                                                    name: fp [18382,18384]
                                            argument [18386,18421]
                                                expr [18386,18421]
                                                    name [18386,18421]
                                                        name: StandardFrameConstants [18386,18408]
                                                        operator: :: [18408,18410]
                                                        name: kArgCOffset [18410,18421]
                comment: // If actual is bigger than formal, then we should use it to free up the stack [18428,18506]
                comment: // arguments. [18509,18522]
                expr [18525,18551]
                    name: Label [18525,18530]
                    name: corrected_args_count [18531,18551]
                expr [18555,18602]
                    name: __ [18555,18557]
                    call [18558,18564]
                        name: masm [18558,18562]
                        argument_list [18562,18564]
                    operator: -> [18564,18566]
                    call [18566,18602]
                        name: Cmp [18566,18569]
                        argument_list [18569,18602]
                            argument [18570,18581]
                                expr [18570,18581]
                                    name: params_size [18570,18581]
                            argument [18583,18601]
                                expr [18583,18601]
                                    name: actual_params_size [18583,18601]
                expr [18606,18668]
                    name: __ [18606,18608]
                    call [18609,18668]
                        name: JumpIf [18609,18615]
                        argument_list [18615,18668]
                            argument [18616,18644]
                                expr [18616,18644]
                                    name [18616,18644]
                                        name: Condition [18616,18625]
                                        operator: :: [18625,18627]
                                        name: kGreaterThanEqual [18627,18644]
                            argument [18646,18667]
                                expr [18646,18667]
                                    operator: & [18646,18647]
                                    name: corrected_args_count [18647,18667]
                expr [18672,18719]
                    name: __ [18672,18674]
                    call [18675,18681]
                        name: masm [18675,18679]
                        argument_list [18679,18681]
                    operator: -> [18681,18683]
                    call [18683,18719]
                        name: Mov [18683,18686]
                        argument_list [18686,18719]
                            argument [18687,18698]
                                expr [18687,18698]
                                    name: params_size [18687,18698]
                            argument [18700,18718]
                                expr [18700,18718]
                                    name: actual_params_size [18700,18718]
                expr [18723,18753]
                    name: __ [18723,18725]
                    call [18726,18753]
                        name: Bind [18726,18730]
                        argument_list [18730,18753]
                            argument [18731,18752]
                                expr [18731,18752]
                                    operator: & [18731,18732]
                                    name: corrected_args_count [18732,18752]
                comment: // Leave the frame (also dropping the register file). [18758,18811]
                expr [18814,18857]
                    name: __ [18814,18816]
                    call [18817,18823]
                        name: masm [18817,18821]
                        argument_list [18821,18823]
                    operator: -> [18823,18825]
                    call [18825,18857]
                        name: LeaveFrame [18825,18835]
                        argument_list [18835,18857]
                            argument [18836,18856]
                                expr [18836,18856]
                                    name [18836,18856]
                                        name: StackFrame [18836,18846]
                                        operator: :: [18846,18848]
                                        name: BASELINE [18848,18856]
                comment: // Drop receiver + arguments. [18862,18891]
                expr [18894,18937]
                    name: __ [18894,18896]
                    call [18897,18903]
                        name: masm [18897,18901]
                        argument_list [18901,18903]
                    operator: -> [18903,18905]
                    call [18905,18937]
                        name: Add [18905,18908]
                        argument_list [18908,18937]
                            argument [18909,18920]
                                expr [18909,18920]
                                    name: params_size [18909,18920]
                            argument [18922,18933]
                                expr [18922,18933]
                                    name: params_size [18922,18933]
                            argument [18935,18936]
                                expr [18935,18936]
                                    literal: 1 [18935,18936]
                comment: // Include the receiver. [18940,18964]
                expr [18967,19004]
                    name: __ [18967,18969]
                    call [18970,18976]
                        name: masm [18970,18974]
                        argument_list [18974,18976]
                    operator: -> [18976,18978]
                    call [18978,19004]
                        name: DropArguments [18978,18991]
                        argument_list [18991,19004]
                            argument [18992,19003]
                                expr [18992,19003]
                                    name: params_size [18992,19003]
                expr [19008,19024]
                    name: __ [19008,19010]
                    call [19011,19017]
                        name: masm [19011,19015]
                        argument_list [19015,19017]
                    operator: -> [19017,19019]
                    call [19019,19024]
                        name: Ret [19019,19022]
                        argument_list [19022,19024]
    undef [19029,19038]
        directive: undef [19030,19035]
        name: __ [19036,19038]
    comment: // namespace baseline [19043,19064]
    comment: // namespace internal [19068,19089]
    comment: // namespace v8 [19093,19108]
    endif [19110,19116]
        directive: endif [19111,19116]
    comment: // V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [19118,19170]