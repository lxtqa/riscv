--- ./benchmark/15/test2.cc	2024-01-28 20:36:53
+++ ./benchmark/15/test2_.cc	2024-01-28 20:37:38
@@ -3452,10 +3452,8 @@ void Builtins::Generate_CallApiGetter(MacroAssembler* 
   ExternalReference thunk_ref =
       ExternalReference::invoke_accessor_getter_callback();
 
-  __ LoadTaggedPointerField(
-      scratch, FieldMemOperand(callback, AccessorInfo::kJsGetterOffset));
-  __ Ld(api_function_address,
-        FieldMemOperand(scratch, Foreign::kForeignAddressOffset));
+  __ LoadExternalPointerField( api_function_address,  FieldMemOperand(callback, AccessorInfo::kJsGetterOffset));
+  
 
   // +3 is to skip prolog, return address and name handle.
   MemOperand return_value_operand(
@@ -3703,7 +3701,7 @@ namespace {
 namespace {
 
 // Restarts execution either at the current or next (in execution order)
-// bytecode. If there is baseline code on the shared function info, converts an
+// bytecode. If there is baseline code on the shared funct, kAccessorInfoJsGetterTag, ion info, converts an
 // interpreter frame into a baseline frame and continues execution in baseline
 // code. Otherwise execution continues with bytecode.
 void Generate_BaselineOrInterpreterEntry(MacroAssembler* masm,
