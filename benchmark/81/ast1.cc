unit [0,0]
    comment: // Copyright 2014 the V8 project authors. All rights reserved. [0,62]
    comment: // Use of this source code is governed by a BSD-style license that can be [63,136]
    comment: // found in the LICENSE file. [137,166]
    ifndef [168,228]
        directive: ifndef [169,175]
        name: V8_COMPILER_BACKEND_ARM64_INSTRUCTION_CODES_ARM64_H_ [176,228]
    define [229,289]
        directive: define [230,236]
        macro [237,289]
            name: V8_COMPILER_BACKEND_ARM64_INSTRUCTION_CODES_ARM64_H_ [237,289]
    namespace [291,21285]
        name: v8 [301,303]
        block [304,21285]
            namespace [306,21177]
                block [325,21177]
                    namespace [327,21152]
                        name: compiler [337,345]
                        block [346,21152]
                            comment: // ARM64-specific opcodes that specify which assembly sequence to emit. [349,420]
                            comment: // Most opcodes specify a single instruction. [421,466]
                            define [467,19784]
                                directive: define [468,474]
                                macro [475,501]
                                    name: TARGET_ARCH_OPCODE_LIST [475,498]
                                    parameter_list [498,501]
                                        parameter [499,500]
                                            type [499,500]
                                                name: V [499,500]
                                value [515,19784]
                            comment: // Addressing modes represent the "shape" of inputs to an instruction. [19786,19856]
                            comment: // Many instructions support multiple addressing modes. Addressing modes [19857,19929]
                            comment: // are encoded into the InstructionCode of the instruction and tell the [19930,20001]
                            comment: // code generator after register allocation which assembler method to call. [20002,20077]
                            comment: // [20078,20080]
                            comment: // We use the following local notation for addressing modes: [20081,20141]
                            comment: // [20142,20144]
                            comment: // R = register [20145,20160]
                            comment: // O = register or stack slot [20161,20190]
                            comment: // D = double register [20191,20213]
                            comment: // I = immediate (handle, external, int32) [20214,20256]
                            comment: // MRI = [register + immediate] [20257,20288]
                            comment: // MRR = [register + register] [20289,20319]
                            define [20320,21121]
                                directive: define [20321,20327]
                                macro [20328,20358]
                                    name: TARGET_ADDRESSING_MODE_LIST [20328,20355]
                                    parameter_list [20355,20358]
                                        parameter [20356,20357]
                                            type [20356,20357]
                                                name: V [20356,20357]
                                value [20388,21121]
                                    comment: /* [%r0 + K] */ [20408,20423]
                                    comment: /* [%r0 + %r1] */ [20474,20491]
                                    comment: /* %r0 LSL K */ [20540,20555]
                                    comment: /* %r0 LSR K */ [20606,20621]
                                    comment: /* %r0 ASR K */ [20672,20687]
                                    comment: /* %r0 ROR K */ [20738,20753]
                                    comment: /* %r0 UXTB (unsigned extend byte) */ [20804,20841]
                                    comment: /* %r0 UXTH (unsigned extend halfword) */ [20870,20911]
                                    comment: /* %r0 SXTB (signed extend byte) */ [20936,20971]
                                    comment: /* %r0 SXTH (signed extend halfword) */ [21002,21041]
                                    comment: /* %r0 SXTW (signed extend word) */ [21068,21103]
                            comment: /* [%rr + K] */ [21134,21149]
                    comment: // namespace compiler [21154,21175]
            comment: // namespace internal [21179,21200]
    comment: // namespace v8 [21204,21219]
    endif [21221,21227]
        directive: endif [21222,21227]
    comment: // V8_COMPILER_BACKEND_ARM64_INSTRUCTION_CODES_ARM64_H_ [21229,21284]