--- ./benchmark/87/test2.cc	2024-03-04 15:35:00
+++ ./benchmark/87/test2_.cc	2024-03-04 15:35:10
@@ -1637,7 +1637,7 @@ void LiftoffAssembler::emit_i16x8_extadd_pairwise_i8x1
   vwaddu_vv(dst.fp().toV(), kSimd128ScratchReg, kSimd128ScratchReg2);
 }
 
-void LiftoffAssembler::CallC(const std::initializer_list<VarState> args,
+void  LiftoffAssembler::CallCWithStackBuffer (const std::initializer_list<VarState> args,
                              const LiftoffRegister* rets, ValueKind return_kind,
                              ValueKind out_argument_kind, int stack_bytes,
                              ExternalReference ext_ref) {
@@ -1733,6 +1733,21 @@ void LiftoffAssembler::CallC(const std::initializer_li
   AddWord(sp, sp, Operand(stack_bytes));
 }
 
+
+void LiftoffAssembler::CallC(const std::initializer_list<VarState> args,
+                             ExternalReference ext_ref) {
+  constexpr Register kArgRegs[] = {arg_reg_1, arg_reg_2, arg_reg_3, arg_reg_4};
+  DCHECK_LE(args.size(), arraysize(kArgRegs));
+  const Register* next_arg_reg = kArgRegs;
+  ParallelMove parallel_move{this};
+  for (const VarState& arg : args) {
+    parallel_move.LoadIntoRegister(LiftoffRegister{*next_arg_reg}, arg);
+    ++next_arg_reg;
+  }
+  parallel_move.Execute();
+  int num_args = static_cast<int>(args.size());
+  CallCFunction(ext_ref, num_args);
+}
 void LiftoffStackSlots::Construct(int param_slots) {
   DCHECK_LT(0, slots_.size());
   SortInPushOrder();
