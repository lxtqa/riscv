--- ./benchmark/17/test2.cc	2024-03-02 19:34:47
+++ ./benchmark/17/test2_.cc	2024-03-02 19:34:49
@@ -65,6 +65,40 @@ constexpr Register LoadWithVectorDescriptor::VectorReg
 constexpr Register LoadWithVectorDescriptor::VectorRegister() { return a3; }
 
 // static
+
+constexpr Register KeyedLoadBaselineDescriptor::ReceiverRegister() {
+  return x1;
+}
+
+
+constexpr Register KeyedLoadBaselineDescriptor::NameRegister() {
+  return kInterpreterAccumulatorRegister;
+}
+
+
+constexpr Register KeyedLoadBaselineDescriptor::SlotRegister() { return x2; }
+
+
+constexpr Register KeyedLoadWithVectorDescriptor::VectorRegister() {
+  return a3;
+}
+
+
+constexpr Register KeyedHasICBaselineDescriptor::ReceiverRegister() {
+  return kInterpreterAccumulatorRegister;
+}
+
+
+constexpr Register KeyedHasICBaselineDescriptor::NameRegister() { return x1; }
+
+
+constexpr Register KeyedHasICBaselineDescriptor::SlotRegister() { return x2; }
+
+
+constexpr Register KeyedHasICWithVectorDescriptor::VectorRegister() {
+  return x3;
+}
+
 constexpr Register
 LoadWithReceiverAndVectorDescriptor::LookupStartObjectRegister() {
   return a4;
@@ -107,7 +141,7 @@ constexpr Register TypeConversionDescriptor::ArgumentR
 constexpr Register TypeConversionDescriptor::ArgumentRegister() { return a0; }
 
 // static
-constexpr auto TypeofDescriptor::registers() { return RegisterArray(a3); }
+constexpr auto TypeofDescriptor::registers() { return RegisterArray( x0 ); }
 
 // static
 constexpr auto CallTrampolineDescriptor::registers() {
@@ -234,6 +268,11 @@ constexpr auto BinaryOp_BaselineDescriptor::registers(
 }
 
 // static
+
+constexpr auto BinarySmiOp_BaselineDescriptor::registers() {
+  return RegisterArray(x0, x1, x2);
+}
+
 constexpr auto ApiCallbackDescriptor::registers() {
   return RegisterArray(a1,   // kApiFunctionAddress
                        a2,   // kArgc
