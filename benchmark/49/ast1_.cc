unit [0,0]
    comment: // Copyright 2021 the V8 project authors. All rights reserved. [0,62]
    comment: // Use of this source code is governed by a BSD-style license that can be [63,136]
    comment: // found in the LICENSE file. [137,166]
    ifndef [168,225]
        directive: ifndef [169,175]
        name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [176,225]
    define [226,283]
        directive: define [227,233]
        macro [234,283]
            name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [234,283]
    include [285,329]
        directive: include [286,293]
        file: "src/baseline/baseline-assembler.h" [294,329]
    include [330,386]
        directive: include [331,338]
        file: "src/codegen/arm64/macro-assembler-arm64-inl.h" [339,386]
    include [387,433]
        directive: include [388,395]
        file: "src/codegen/interface-descriptors.h" [396,433]
    namespace [435,10235]
        name: v8 [445,447]
        block [448,10235]
            namespace [450,9995]
                block [469,9995]
                    namespace [471,1308]
                        name: baseline [481,489]
                        block [490,1308]
                            class [493,1035]
                                name [499,538]
                                    name: BaselineAssembler [499,516]
                                    operator: :: [516,518]
                                    name: ScratchRegisterScope [518,538]
                                block [539,1035]
                                    expr_stmt [542,1031]
                                        expr [542,641]
                                            specifier: public [542,548]
                                            operator: : [548,549]
                                            specifier: explicit [552,560]
                                            call [561,611]
                                                name: ScratchRegisterScope [561,581]
                                                argument_list [581,611]
                                                    argument [582,610]
                                                        expr [582,610]
                                                            name: BaselineAssembler [582,599]
                                                            operator: * [599,600]
                                                            name: assembler [601,610]
                                            operator: : [618,619]
                                            call [620,641]
                                                name: assembler_ [620,630]
                                                argument_list [630,641]
                                                    argument [631,640]
                                                        expr [631,640]
                                                            name: assembler [631,640]
                                        operator: , [641,642]
                                        expr [651,698]
                                            call [651,698]
                                                name: prev_scope_ [651,662]
                                                argument_list [662,698]
                                                    argument [663,697]
                                                        expr [663,697]
                                                            name [663,697]
                                                                name: assembler [663,672]
                                                                operator: -> [672,674]
                                                                name: scratch_register_scope_ [674,697]
                                        operator: , [698,699]
                                        macro [708,741]
                                            name: wrapped_scope_ [708,722]
                                            argument_list [722,741]
                                                argument [723,740]
                                        expr [742,1030]
                                            block [742,983]
                                                if_stmt [748,977]
                                                    if [748,977]
                                                        condition [751,789]
                                                            expr [752,788]
                                                                operator: ! [752,753]
                                                                name [753,788]
                                                                    name: assembler_ [753,763]
                                                                    operator: -> [763,765]
                                                                    name: scratch_register_scope_ [765,788]
                                                        block [790,977]
                                                            block_content [909,977]
                                                                comment: // If we haven't opened a scratch scope yet, for the first one add a [798,866]
                                                                comment: // couple of extra registers. [873,902]
                                                                expr_stmt [909,942]
                                                                    expr [909,941]
                                                                        call [909,941]
                                                                            name [909,931]
                                                                                name: wrapped_scope_ [909,923]
                                                                                operator: . [923,924]
                                                                                name: Include [924,931]
                                                                            argument_list [931,941]
                                                                                argument [932,935]
                                                                                    expr [932,935]
                                                                                        name: x14 [932,935]
                                                                                argument [937,940]
                                                                                    expr [937,940]
                                                                                        name: x15 [937,940]
                                                                expr_stmt [949,977]
                                                                    expr [949,976]
                                                                        call [949,976]
                                                                            name [949,971]
                                                                                name: wrapped_scope_ [949,963]
                                                                                operator: . [963,964]
                                                                                name: Include [964,971]
                                                                            argument_list [971,976]
                                                                                argument [972,975]
                                                                                    expr [972,975]
                                                                                        name: x19 [972,975]
                                                                expr_stmt [0,0]
                                            name [988,1023]
                                                name: assembler_ [988,998]
                                                operator: -> [998,1000]
                                                name: scratch_register_scope_ [1000,1023]
                                            operator: = [1024,1025]
                                            name: this [1026,1030]
                            destructor [1038,1116]
                                name: ~ScratchRegisterScope [1038,1059]
                                parameter_list [1059,1061]
                                block [1062,1116]
                                    block_content [1064,1114]
                                        expr_stmt [1064,1114]
                                            expr [1064,1113]
                                                name [1064,1099]
                                                    name: assembler_ [1064,1074]
                                                    operator: -> [1074,1076]
                                                    name: scratch_register_scope_ [1076,1099]
                                                operator: = [1100,1101]
                                                name: prev_scope_ [1102,1113]
                            function [1120,1183]
                                type [1120,1128]
                                    name: Register [1120,1128]
                                name: AcquireScratch [1129,1143]
                                parameter_list [1143,1145]
                                block [1146,1183]
                                    block_content [1148,1181]
                                        return [1148,1181]
                                            expr [1155,1180]
                                                call [1155,1180]
                                                    name [1155,1178]
                                                        name: wrapped_scope_ [1155,1169]
                                                        operator: . [1169,1170]
                                                        name: AcquireX [1170,1178]
                                                    argument_list [1178,1180]
                            expr_stmt [1186,1227]
                                expr [1186,1226]
                                    specifier: private [1186,1193]
                                    operator: : [1193,1194]
                                    name: BaselineAssembler [1197,1214]
                                    operator: * [1214,1215]
                                    name: assembler_ [1216,1226]
                            decl_stmt [1230,1264]
                                decl [1230,1263]
                                    type [1230,1251]
                                        name: ScratchRegisterScope [1230,1250]
                                        modifier: * [1250,1251]
                                    name: prev_scope_ [1252,1263]
                            decl_stmt [1267,1306]
                                decl [1267,1305]
                                    type [1267,1290]
                                        name: UseScratchRegisterScope [1267,1290]
                                    name: wrapped_scope_ [1291,1305]
                    empty_stmt [1308,1309]
                    comment: // TODO(v8:11461): Unify condition names in the MacroAssembler. [1311,1374]
                    enum [1375,1725]
                        class [1380,1724]
                            name: Condition [1386,1395]
                            super_list [1396,1406]
                                super [1398,1406]
                                    name: uint32_t [1398,1406]
                            block [1407,1724]
                                expr_stmt [1411,1722]
                                    expr [1411,1422]
                                        name: kEqual [1411,1417]
                                        operator: = [1418,1419]
                                        name: eq [1420,1422]
                                    operator: , [1422,1423]
                                    expr [1426,1440]
                                        name: kNotEqual [1426,1435]
                                        operator: = [1436,1437]
                                        name: ne [1438,1440]
                                    operator: , [1440,1441]
                                    expr [1445,1459]
                                        name: kLessThan [1445,1454]
                                        operator: = [1455,1456]
                                        name: lt [1457,1459]
                                    operator: , [1459,1460]
                                    expr [1463,1480]
                                        name: kGreaterThan [1463,1475]
                                        operator: = [1476,1477]
                                        name: gt [1478,1480]
                                    operator: , [1480,1481]
                                    expr [1484,1503]
                                        name: kLessThanEqual [1484,1498]
                                        operator: = [1499,1500]
                                        name: le [1501,1503]
                                    operator: , [1503,1504]
                                    expr [1507,1529]
                                        name: kGreaterThanEqual [1507,1524]
                                        operator: = [1525,1526]
                                        name: ge [1527,1529]
                                    operator: , [1529,1530]
                                    expr [1534,1556]
                                        name: kUnsignedLessThan [1534,1551]
                                        operator: = [1552,1553]
                                        name: lo [1554,1556]
                                    operator: , [1556,1557]
                                    expr [1560,1585]
                                        name: kUnsignedGreaterThan [1560,1580]
                                        operator: = [1581,1582]
                                        name: hi [1583,1585]
                                    operator: , [1585,1586]
                                    expr [1589,1616]
                                        name: kUnsignedLessThanEqual [1589,1611]
                                        operator: = [1612,1613]
                                        name: ls [1614,1616]
                                    operator: , [1616,1617]
                                    expr [1620,1650]
                                        name: kUnsignedGreaterThanEqual [1620,1645]
                                        operator: = [1646,1647]
                                        name: hs [1648,1650]
                                    operator: , [1650,1651]
                                    expr [1655,1669]
                                        name: kOverflow [1655,1664]
                                        operator: = [1665,1666]
                                        name: vs [1667,1669]
                                    operator: , [1669,1670]
                                    expr [1673,1689]
                                        name: kNoOverflow [1673,1684]
                                        operator: = [1685,1686]
                                        name: vc [1687,1689]
                                    operator: , [1689,1690]
                                    expr [1694,1704]
                                        name: kZero [1694,1699]
                                        operator: = [1700,1701]
                                        name: eq [1702,1704]
                                    operator: , [1704,1705]
                                    expr [1708,1721]
                                        name: kNotZero [1708,1716]
                                        operator: = [1717,1718]
                                        name: ne [1719,1721]
                                    operator: , [1721,1722]
                    function [1727,1838]
                        type [1727,1753]
                            specifier: inline [1727,1733]
                            specifier: internal [1734,1742]
                            name [1742,1753]
                                operator: :: [1742,1744]
                                name: Condition [1744,1753]
                        name: AsMasmCondition [1754,1769]
                        parameter_list [1769,1785]
                            parameter [1770,1784]
                                decl [1770,1784]
                                    type [1770,1779]
                                        name: Condition [1770,1779]
                                    name: cond [1780,1784]
                        block [1786,1838]
                            block_content [1790,1836]
                                return [1790,1836]
                                    expr [1797,1835]
                                        call [1797,1835]
                                            name [1797,1829]
                                                name: static_cast [1797,1808]
                                                argument_list [1808,1829]
                                                    argument [1809,1828]
                                                        specifier: internal [1809,1817]
                                                        name [1817,1828]
                                                            operator: :: [1817,1819]
                                                            name: Condition [1819,1828]
                                            argument_list [1829,1835]
                                                argument [1830,1834]
                                                    expr [1830,1834]
                                                        name: cond [1830,1834]
                    namespace [1840,2039]
                        name: detail [1850,1856]
                        block [1857,2039]
                            ifdef [1860,1872]
                                directive: ifdef [1861,1866]
                                name: DEBUG [1867,1872]
                            function [1873,1995]
                                type [1873,1884]
                                    specifier: inline [1873,1879]
                                    name: bool [1880,1884]
                                name: Clobbers [1885,1893]
                                parameter_list [1893,1925]
                                    parameter [1894,1909]
                                        decl [1894,1909]
                                            type [1894,1909]
                                                name: Register [1894,1902]
                                            name: target [1903,1909]
                                    parameter [1911,1924]
                                        decl [1911,1924]
                                            type [1911,1924]
                                                name: MemOperand [1911,1921]
                                            name: op [1922,1924]
                                block [1926,1995]
                                    block_content [1930,1985]
                                        return [1930,1985]
                                            expr [1937,1984]
                                                call [1937,1946]
                                                    name [1937,1944]
                                                        name: op [1937,1939]
                                                        operator: . [1939,1940]
                                                        name: base [1940,1944]
                                                    argument_list [1944,1946]
                                                operator: == [1947,1949]
                                                name: target [1950,1956]
                                                operator: || [1957,1959]
                                                call [1960,1974]
                                                    name [1960,1972]
                                                        name: op [1960,1962]
                                                        operator: . [1962,1963]
                                                        name: regoffset [1963,1972]
                                                    argument_list [1972,1974]
                                                operator: == [1975,1977]
                                                name: target [1978,1984]
                            endif [1988,1994]
                                directive: endif [1989,1994]
                    comment: // namespace detail [1999,2018]
                    define [2020,2038]
                        directive: define [2021,2027]
                        macro [2028,2030]
                            name: __ [2028,2030]
                        value [2031,2038]
                    function [2040,2223]
                        type [2040,2050]
                            name: MemOperand [2040,2050]
                        name [2051,2090]
                            name: BaselineAssembler [2051,2068]
                            operator: :: [2068,2070]
                            name: RegisterFrameOperand [2070,2090]
                        parameter_list [2090,2139]
                            parameter [2096,2138]
                                decl [2096,2138]
                                    type [2096,2117]
                                        name [2096,2117]
                                            name: interpreter [2096,2107]
                                            operator: :: [2107,2109]
                                            name: Register [2109,2117]
                                    name: interpreter_register [2118,2138]
                        block [2140,2223]
                            block_content [2144,2221]
                                return [2144,2221]
                                    expr [2151,2220]
                                        call [2151,2220]
                                            name: MemOperand [2151,2161]
                                            argument_list [2161,2220]
                                                argument [2162,2164]
                                                    expr [2162,2164]
                                                        name: fp [2162,2164]
                                                argument [2166,2219]
                                                    expr [2166,2219]
                                                        call [2166,2198]
                                                            name [2166,2196]
                                                                name: interpreter_register [2166,2186]
                                                                operator: . [2186,2187]
                                                                name: ToOperand [2187,2196]
                                                            argument_list [2196,2198]
                                                        operator: * [2199,2200]
                                                        name: kSystemPointerSize [2201,2219]
                    function [2224,2442]
                        type [2224,2228]
                            name: void [2224,2228]
                        name [2229,2268]
                            name: BaselineAssembler [2229,2246]
                            operator: :: [2246,2248]
                            name: RegisterFrameAddress [2248,2268]
                        parameter_list [2268,2336]
                            parameter [2274,2316]
                                decl [2274,2316]
                                    type [2274,2316]
                                        name [2274,2295]
                                            name: interpreter [2274,2285]
                                            operator: :: [2285,2287]
                                            name: Register [2287,2295]
                                    name: interpreter_register [2296,2316]
                            parameter [2318,2335]
                                decl [2318,2335]
                                    type [2318,2335]
                                        name: Register [2318,2326]
                                    name: rscratch [2327,2335]
                        block [2337,2442]
                            block_content [2341,2440]
                                return [2341,2440]
                                    expr [2348,2439]
                                        name: __ [2348,2350]
                                        call [2351,2439]
                                            name: Add [2351,2354]
                                            argument_list [2354,2439]
                                                argument [2355,2363]
                                                    expr [2355,2363]
                                                        name: rscratch [2355,2363]
                                                argument [2365,2367]
                                                    expr [2365,2367]
                                                        name: fp [2365,2367]
                                                argument [2385,2438]
                                                    expr [2385,2438]
                                                        call [2385,2417]
                                                            name [2385,2415]
                                                                name: interpreter_register [2385,2405]
                                                                operator: . [2405,2406]
                                                                name: ToOperand [2406,2415]
                                                            argument_list [2415,2417]
                                                        operator: * [2418,2419]
                                                        name: kSystemPointerSize [2420,2438]
                    function [2443,2572]
                        type [2443,2453]
                            name: MemOperand [2443,2453]
                        name [2454,2494]
                            name: BaselineAssembler [2454,2471]
                            operator: :: [2471,2473]
                            name: FeedbackVectorOperand [2473,2494]
                        parameter_list [2494,2496]
                        block [2497,2572]
                            block_content [2501,2570]
                                return [2501,2570]
                                    expr [2508,2569]
                                        call [2508,2569]
                                            name: MemOperand [2508,2518]
                                            argument_list [2518,2569]
                                                argument [2519,2521]
                                                    expr [2519,2521]
                                                        name: fp [2519,2521]
                                                argument [2523,2568]
                                                    expr [2523,2568]
                                                        name [2523,2568]
                                                            name: BaselineFrameConstants [2523,2545]
                                                            operator: :: [2545,2547]
                                                            name: kFeedbackVectorFromFp [2547,2568]
                    function [2574,2636]
                        type [2574,2578]
                            name: void [2574,2578]
                        name [2579,2602]
                            name: BaselineAssembler [2579,2596]
                            operator: :: [2596,2598]
                            name: Bind [2598,2602]
                        parameter_list [2602,2616]
                            parameter [2603,2615]
                                decl [2603,2615]
                                    type [2603,2609]
                                        name: Label [2603,2608]
                                        modifier: * [2608,2609]
                                    name: label [2610,2615]
                        block [2617,2636]
                            block_content [2619,2634]
                                decl_stmt [2619,2634]
                                    decl [2619,2633]
                                        type [2619,2621]
                                            name: __ [2619,2621]
                                        name: Bind [2622,2626]
                                        argument_list [2626,2633]
                                            argument [2627,2632]
                                                expr [2627,2632]
                                                    name: label [2627,2632]
                    function [2638,2695]
                        type [2638,2642]
                            name: void [2638,2642]
                        name [2643,2672]
                            name: BaselineAssembler [2643,2660]
                            operator: :: [2660,2662]
                            name: JumpTarget [2662,2672]
                        parameter_list [2672,2674]
                        block [2675,2695]
                            block_content [2677,2693]
                                function_decl [2677,2693]
                                    type [2677,2679]
                                        name: __ [2677,2679]
                                    name: JumpTarget [2680,2690]
                                    parameter_list [2690,2692]
                    function [2697,2786]
                        type [2697,2701]
                            name: void [2697,2701]
                        name [2702,2725]
                            name: BaselineAssembler [2702,2719]
                            operator: :: [2719,2721]
                            name: Jump [2721,2725]
                        parameter_list [2725,2766]
                            parameter [2726,2739]
                                decl [2726,2739]
                                    type [2726,2739]
                                        name: Label [2726,2731]
                                        modifier: * [2731,2732]
                                    name: target [2733,2739]
                            parameter [2741,2765]
                                decl [2741,2765]
                                    type [2741,2765]
                                        name [2741,2756]
                                            name: Label [2741,2746]
                                            operator: :: [2746,2748]
                                            name: Distance [2748,2756]
                                    name: distance [2757,2765]
                        block [2767,2786]
                            block_content [2771,2784]
                                decl_stmt [2771,2784]
                                    decl [2771,2783]
                                        type [2771,2773]
                                            name: __ [2771,2773]
                                        name: B [2774,2775]
                                        argument_list [2775,2783]
                                            argument [2776,2782]
                                                expr [2776,2782]
                                                    name: target [2776,2782]
                    function [2788,2965]
                        type [2788,2792]
                            name: void [2788,2792]
                        name [2793,2822]
                            name: BaselineAssembler [2793,2810]
                            operator: :: [2810,2812]
                            name: JumpIfRoot [2812,2822]
                        parameter_list [2822,2922]
                            parameter [2823,2837]
                                decl [2823,2837]
                                    type [2823,2837]
                                        name: Register [2823,2831]
                                    name: value [2832,2837]
                            parameter [2839,2854]
                                decl [2839,2854]
                                    type [2839,2854]
                                        name: RootIndex [2839,2848]
                                    name: index [2849,2854]
                            parameter [2891,2904]
                                decl [2891,2904]
                                    type [2891,2904]
                                        name: Label [2891,2896]
                                        modifier: * [2896,2897]
                                    name: target [2898,2904]
                            parameter [2906,2921]
                                decl [2906,2921]
                                    type [2906,2921]
                                        name [2906,2921]
                                            name: Label [2906,2911]
                                            operator: :: [2911,2913]
                                            name: Distance [2913,2921]
                        block [2923,2965]
                            block_content [2927,2963]
                                decl_stmt [2927,2963]
                                    decl [2927,2962]
                                        type [2927,2929]
                                            name: __ [2927,2929]
                                        name: JumpIfRoot [2930,2940]
                                        argument_list [2940,2962]
                                            argument [2941,2946]
                                                expr [2941,2946]
                                                    name: value [2941,2946]
                                            argument [2948,2953]
                                                expr [2948,2953]
                                                    name: index [2948,2953]
                                            argument [2955,2961]
                                                expr [2955,2961]
                                                    name: target [2955,2961]
                    function [2967,3153]
                        type [2967,2971]
                            name: void [2967,2971]
                        name [2972,3004]
                            name: BaselineAssembler [2972,2989]
                            operator: :: [2989,2991]
                            name: JumpIfNotRoot [2991,3004]
                        parameter_list [3004,3107]
                            parameter [3005,3019]
                                decl [3005,3019]
                                    type [3005,3019]
                                        name: Register [3005,3013]
                                    name: value [3014,3019]
                            parameter [3021,3036]
                                decl [3021,3036]
                                    type [3021,3036]
                                        name: RootIndex [3021,3030]
                                    name: index [3031,3036]
                            parameter [3076,3089]
                                decl [3076,3089]
                                    type [3076,3089]
                                        name: Label [3076,3081]
                                        modifier: * [3081,3082]
                                    name: target [3083,3089]
                            parameter [3091,3106]
                                decl [3091,3106]
                                    type [3091,3106]
                                        name [3091,3106]
                                            name: Label [3091,3096]
                                            operator: :: [3096,3098]
                                            name: Distance [3098,3106]
                        block [3108,3153]
                            block_content [3112,3151]
                                decl_stmt [3112,3151]
                                    decl [3112,3150]
                                        type [3112,3114]
                                            name: __ [3112,3114]
                                        name: JumpIfNotRoot [3115,3128]
                                        argument_list [3128,3150]
                                            argument [3129,3134]
                                                expr [3129,3134]
                                                    name: value [3129,3134]
                                            argument [3136,3141]
                                                expr [3136,3141]
                                                    name: index [3136,3141]
                                            argument [3143,3149]
                                                expr [3143,3149]
                                                    name: target [3143,3149]
                    function [3155,3305]
                        type [3155,3159]
                            name: void [3155,3159]
                        name [3160,3188]
                            name: BaselineAssembler [3160,3177]
                            operator: :: [3177,3179]
                            name: JumpIfSmi [3179,3188]
                        parameter_list [3188,3270]
                            parameter [3189,3203]
                                decl [3189,3203]
                                    type [3189,3203]
                                        name: Register [3189,3197]
                                    name: value [3198,3203]
                            parameter [3205,3218]
                                decl [3205,3218]
                                    type [3205,3218]
                                        name: Label [3205,3210]
                                        modifier: * [3210,3211]
                                    name: target [3212,3218]
                            parameter [3254,3269]
                                decl [3254,3269]
                                    type [3254,3269]
                                        name [3254,3269]
                                            name: Label [3254,3259]
                                            operator: :: [3259,3261]
                                            name: Distance [3261,3269]
                        block [3271,3305]
                            block_content [3275,3303]
                                decl_stmt [3275,3303]
                                    decl [3275,3302]
                                        type [3275,3277]
                                            name: __ [3275,3277]
                                        name: JumpIfSmi [3278,3287]
                                        argument_list [3287,3302]
                                            argument [3288,3293]
                                                expr [3288,3293]
                                                    name: value [3288,3293]
                                            argument [3295,3301]
                                                expr [3295,3301]
                                                    name: target [3295,3301]
                    function [3307,3466]
                        type [3307,3311]
                            name: void [3307,3311]
                        name [3312,3343]
                            name: BaselineAssembler [3312,3329]
                            operator: :: [3329,3331]
                            name: JumpIfNotSmi [3331,3343]
                        parameter_list [3343,3428]
                            parameter [3344,3358]
                                decl [3344,3358]
                                    type [3344,3358]
                                        name: Register [3344,3352]
                                    name: value [3353,3358]
                            parameter [3360,3373]
                                decl [3360,3373]
                                    type [3360,3373]
                                        name: Label [3360,3365]
                                        modifier: * [3365,3366]
                                    name: target [3367,3373]
                            parameter [3412,3427]
                                decl [3412,3427]
                                    type [3412,3427]
                                        name [3412,3427]
                                            name: Label [3412,3417]
                                            operator: :: [3417,3419]
                                            name: Distance [3419,3427]
                        block [3429,3466]
                            block_content [3433,3464]
                                decl_stmt [3433,3464]
                                    decl [3433,3463]
                                        type [3433,3435]
                                            name: __ [3433,3435]
                                        name: JumpIfNotSmi [3436,3448]
                                        argument_list [3448,3463]
                                            argument [3449,3454]
                                                expr [3449,3454]
                                                    name: value [3449,3454]
                                            argument [3456,3462]
                                                expr [3456,3462]
                                                    name: target [3456,3462]
                    function [3468,3728]
                        type [3468,3472]
                            name: void [3468,3472]
                        name [3473,3507]
                            name: BaselineAssembler [3473,3490]
                            operator: :: [3490,3492]
                            name: JumpIfImmediate [3492,3507]
                        parameter_list [3507,3668]
                            parameter [3508,3520]
                                decl [3508,3520]
                                    type [3508,3520]
                                        name: Condition [3508,3517]
                                    name: cc [3518,3520]
                            parameter [3522,3535]
                                decl [3522,3535]
                                    type [3522,3535]
                                        name: Register [3522,3530]
                                    name: left [3531,3535]
                            parameter [3537,3546]
                                decl [3537,3546]
                                    type [3537,3546]
                                        name: int [3537,3540]
                                    name: right [3541,3546]
                            parameter [3588,3601]
                                decl [3588,3601]
                                    type [3588,3601]
                                        name: Label [3588,3593]
                                        modifier: * [3593,3594]
                                    name: target [3595,3601]
                            parameter [3643,3667]
                                decl [3643,3667]
                                    type [3643,3667]
                                        name [3643,3658]
                                            name: Label [3643,3648]
                                            operator: :: [3648,3650]
                                            name: Distance [3650,3658]
                                    name: distance [3659,3667]
                        block [3669,3728]
                            block_content [3673,3726]
                                expr_stmt [3673,3726]
                                    expr [3673,3725]
                                        call [3673,3725]
                                            name: JumpIf [3673,3679]
                                            argument_list [3679,3725]
                                                argument [3680,3682]
                                                    expr [3680,3682]
                                                        name: cc [3680,3682]
                                                argument [3684,3688]
                                                    expr [3684,3688]
                                                        name: left [3684,3688]
                                                argument [3690,3706]
                                                    expr [3690,3706]
                                                        call [3690,3706]
                                                            name: Immediate [3690,3699]
                                                            argument_list [3699,3706]
                                                                argument [3700,3705]
                                                                    expr [3700,3705]
                                                                        name: right [3700,3705]
                                                argument [3708,3714]
                                                    expr [3708,3714]
                                                        name: target [3708,3714]
                                                argument [3716,3724]
                                                    expr [3716,3724]
                                                        name: distance [3716,3724]
                    function [3730,4056]
                        type [3730,3734]
                            name: void [3730,3734]
                        name [3735,3765]
                            name: BaselineAssembler [3735,3752]
                            operator: :: [3752,3754]
                            name: CallBuiltin [3754,3765]
                        parameter_list [3765,3782]
                            parameter [3766,3781]
                                decl [3766,3781]
                                    type [3766,3773]
                                        name: Builtin [3766,3773]
                                    name: builtin [3774,3781]
                        block [3783,4056]
                            block_content [3787,4054]
                                if_stmt [3787,4054]
                                    if [3787,3898]
                                        condition [3790,3829]
                                            expr [3791,3828]
                                                call [3791,3797]
                                                    name: masm [3791,3795]
                                                    argument_list [3795,3797]
                                                operator: -> [3797,3799]
                                                call [3799,3808]
                                                    name: options [3799,3806]
                                                    argument_list [3806,3808]
                                                operator: . [3808,3809]
                                                name: short_builtin_calls [3809,3828]
                                        block [3830,3898]
                                            block_content [3870,3894]
                                                comment: // Generate pc-relative call. [3836,3865]
                                                decl_stmt [3870,3894]
                                                    decl [3870,3893]
                                                        type [3870,3872]
                                                            name: __ [3870,3872]
                                                        name: CallBuiltin [3873,3884]
                                                        argument_list [3884,3893]
                                                            argument [3885,3892]
                                                                expr [3885,3892]
                                                                    name: builtin [3885,3892]
                                    else [3899,4054]
                                        block [3904,4054]
                                            block_content [3910,4050]
                                                decl_stmt [3910,3943]
                                                    decl [3910,3942]
                                                        type [3910,3930]
                                                            name: ScratchRegisterScope [3910,3930]
                                                        name: temps [3931,3936]
                                                        argument_list [3936,3942]
                                                            argument [3937,3941]
                                                                expr [3937,3941]
                                                                    name: this [3937,3941]
                                                decl_stmt [3948,3987]
                                                    decl [3948,3986]
                                                        type [3948,3956]
                                                            name: Register [3948,3956]
                                                        name: temp [3957,3961]
                                                        init [3962,3986]
                                                            expr [3964,3986]
                                                                call [3964,3986]
                                                                    name [3964,3984]
                                                                        name: temps [3964,3969]
                                                                        operator: . [3969,3970]
                                                                        name: AcquireScratch [3970,3984]
                                                                    argument_list [3984,3986]
                                                decl_stmt [3992,4031]
                                                    decl [3992,4030]
                                                        type [3992,3994]
                                                            name: __ [3992,3994]
                                                        name: LoadEntryFromBuiltin [3995,4015]
                                                        argument_list [4015,4030]
                                                            argument [4016,4023]
                                                                expr [4016,4023]
                                                                    name: builtin [4016,4023]
                                                            argument [4025,4029]
                                                                expr [4025,4029]
                                                                    name: temp [4025,4029]
                                                decl_stmt [4036,4050]
                                                    decl [4036,4049]
                                                        type [4036,4038]
                                                            name: __ [4036,4038]
                                                        name: Call [4039,4043]
                                                        argument_list [4043,4049]
                                                            argument [4044,4048]
                                                                expr [4044,4048]
                                                                    name: temp [4044,4048]
                    function [4058,5088]
                        type [4058,4062]
                            name: void [4058,4062]
                        name [4063,4097]
                            name: BaselineAssembler [4063,4080]
                            operator: :: [4080,4082]
                            name: TailCallBuiltin [4082,4097]
                        parameter_list [4097,4114]
                            parameter [4098,4113]
                                decl [4098,4113]
                                    type [4098,4105]
                                        name: Builtin [4098,4105]
                                    name: builtin [4106,4113]
                        block [4115,5088]
                            block_content [4119,5086]
                                if_stmt [4119,5086]
                                    if [4119,4234]
                                        condition [4122,4161]
                                            expr [4123,4160]
                                                call [4123,4129]
                                                    name: masm [4123,4127]
                                                    argument_list [4127,4129]
                                                operator: -> [4129,4131]
                                                call [4131,4140]
                                                    name: options [4131,4138]
                                                    argument_list [4138,4140]
                                                operator: . [4140,4141]
                                                name: short_builtin_calls [4141,4160]
                                        block [4162,4234]
                                            block_content [4202,4230]
                                                comment: // Generate pc-relative call. [4168,4197]
                                                decl_stmt [4202,4230]
                                                    decl [4202,4229]
                                                        type [4202,4204]
                                                            name: __ [4202,4204]
                                                        name: TailCallBuiltin [4205,4220]
                                                        argument_list [4220,4229]
                                                            argument [4221,4228]
                                                                expr [4221,4228]
                                                                    name: builtin [4221,4228]
                                    else [4235,5086]
                                        block [4240,5086]
                                            block_content [4866,5082]
                                                comment: // The control flow integrity (CFI) feature allows us to "sign" code entry [4246,4320]
                                                comment: // points as a target for calls, jumps or both. Arm64 has special [4325,4390]
                                                comment: // instructions for this purpose, so-called "landing pads" (see [4395,4458]
                                                comment: // TurboAssembler::CallTarget(), TurboAssembler::JumpTarget() and [4463,4528]
                                                comment: // TurboAssembler::JumpOrCallTarget()). Currently, we generate "Call" [4533,4602]
                                                comment: // landing pads for CPP builtins. In order to allow tail calling to those [4607,4680]
                                                comment: // builtins we have to use a workaround. [4685,4725]
                                                comment: // x17 is used to allow using "Call" (i.e. `bti c`) rather than "Jump" (i.e. [4730,4806]
                                                comment: // `bti j`) landing pads for the tail-called code. [4811,4861]
                                                decl_stmt [4866,4886]
                                                    decl [4866,4885]
                                                        type [4866,4874]
                                                            name: Register [4866,4874]
                                                        name: temp [4875,4879]
                                                        init [4880,4885]
                                                            expr [4882,4885]
                                                                name: x17 [4882,4885]
                                                comment: // Make sure we're don't use this register as a temporary. [4892,4950]
                                                decl_stmt [4955,4993]
                                                    decl [4955,4992]
                                                        type [4955,4978]
                                                            name: UseScratchRegisterScope [4955,4978]
                                                        name: temps [4979,4984]
                                                        argument_list [4984,4992]
                                                            argument [4985,4991]
                                                                expr [4985,4991]
                                                                    call [4985,4991]
                                                                        name: masm [4985,4989]
                                                                        argument_list [4989,4991]
                                                expr_stmt [4998,5018]
                                                    expr [4998,5017]
                                                        call [4998,5017]
                                                            name [4998,5011]
                                                                name: temps [4998,5003]
                                                                operator: . [5003,5004]
                                                                name: Exclude [5004,5011]
                                                            argument_list [5011,5017]
                                                                argument [5012,5016]
                                                                    expr [5012,5016]
                                                                        name: temp [5012,5016]
                                                decl_stmt [5024,5063]
                                                    decl [5024,5062]
                                                        type [5024,5026]
                                                            name: __ [5024,5026]
                                                        name: LoadEntryFromBuiltin [5027,5047]
                                                        argument_list [5047,5062]
                                                            argument [5048,5055]
                                                                expr [5048,5055]
                                                                    name: builtin [5048,5055]
                                                            argument [5057,5061]
                                                                expr [5057,5061]
                                                                    name: temp [5057,5061]
                                                decl_stmt [5068,5082]
                                                    decl [5068,5081]
                                                        type [5068,5070]
                                                            name: __ [5068,5070]
                                                        name: Jump [5071,5075]
                                                        argument_list [5075,5081]
                                                            argument [5076,5080]
                                                                expr [5076,5080]
                                                                    name: temp [5076,5080]
                    function [5090,5312]
                        type [5090,5094]
                            name: void [5090,5094]
                        name [5095,5127]
                            name: BaselineAssembler [5095,5112]
                            operator: :: [5112,5114]
                            name: TestAndBranch [5114,5127]
                        parameter_list [5127,5237]
                            parameter [5128,5142]
                                decl [5128,5142]
                                    type [5128,5142]
                                        name: Register [5128,5136]
                                    name: value [5137,5142]
                            parameter [5144,5152]
                                decl [5144,5152]
                                    type [5144,5152]
                                        name: int [5144,5147]
                                    name: mask [5148,5152]
                            parameter [5154,5166]
                                decl [5154,5166]
                                    type [5154,5166]
                                        name: Condition [5154,5163]
                                    name: cc [5164,5166]
                            parameter [5206,5219]
                                decl [5206,5219]
                                    type [5206,5219]
                                        name: Label [5206,5211]
                                        modifier: * [5211,5212]
                                    name: target [5213,5219]
                            parameter [5221,5236]
                                decl [5221,5236]
                                    type [5221,5236]
                                        name [5221,5236]
                                            name: Label [5221,5226]
                                            operator: :: [5226,5228]
                                            name: Distance [5228,5236]
                        block [5238,5312]
                            block_content [5242,5310]
                                decl_stmt [5242,5273]
                                    decl [5242,5272]
                                        type [5242,5244]
                                            name: __ [5242,5244]
                                        name: Tst [5245,5248]
                                        argument_list [5248,5272]
                                            argument [5249,5254]
                                                expr [5249,5254]
                                                    name: value [5249,5254]
                                            argument [5256,5271]
                                                expr [5256,5271]
                                                    call [5256,5271]
                                                        name: Immediate [5256,5265]
                                                        argument_list [5265,5271]
                                                            argument [5266,5270]
                                                                expr [5266,5270]
                                                                    name: mask [5266,5270]
                                decl_stmt [5276,5310]
                                    decl [5276,5309]
                                        type [5276,5278]
                                            name: __ [5276,5278]
                                        name: B [5279,5280]
                                        argument_list [5280,5309]
                                            argument [5281,5300]
                                                expr [5281,5300]
                                                    call [5281,5300]
                                                        name: AsMasmCondition [5281,5296]
                                                        argument_list [5296,5300]
                                                            argument [5297,5299]
                                                                expr [5297,5299]
                                                                    name: cc [5297,5299]
                                            argument [5302,5308]
                                                expr [5302,5308]
                                                    name: target [5302,5308]
                    function [5314,5521]
                        type [5314,5318]
                            name: void [5314,5318]
                        name [5319,5344]
                            name: BaselineAssembler [5319,5336]
                            operator: :: [5336,5338]
                            name: JumpIf [5338,5344]
                        parameter_list [5344,5455]
                            parameter [5345,5357]
                                decl [5345,5357]
                                    type [5345,5357]
                                        name: Condition [5345,5354]
                                    name: cc [5355,5357]
                            parameter [5359,5371]
                                decl [5359,5371]
                                    type [5359,5371]
                                        name: Register [5359,5367]
                                    name: lhs [5368,5371]
                            parameter [5373,5391]
                                decl [5373,5391]
                                    type [5373,5391]
                                        specifier: const [5373,5378]
                                        name: Operand [5379,5386]
                                        modifier: & [5386,5387]
                                    name: rhs [5388,5391]
                            parameter [5424,5437]
                                decl [5424,5437]
                                    type [5424,5437]
                                        name: Label [5424,5429]
                                        modifier: * [5429,5430]
                                    name: target [5431,5437]
                            parameter [5439,5454]
                                decl [5439,5454]
                                    type [5439,5454]
                                        name [5439,5454]
                                            name: Label [5439,5444]
                                            operator: :: [5444,5446]
                                            name: Distance [5446,5454]
                        block [5456,5521]
                            block_content [5460,5519]
                                decl_stmt [5460,5519]
                                    decl [5460,5518]
                                        type [5460,5462]
                                            name: __ [5460,5462]
                                        name: CompareAndBranch [5463,5479]
                                        argument_list [5479,5518]
                                            argument [5480,5483]
                                                expr [5480,5483]
                                                    name: lhs [5480,5483]
                                            argument [5485,5488]
                                                expr [5485,5488]
                                                    name: rhs [5485,5488]
                                            argument [5490,5509]
                                                expr [5490,5509]
                                                    call [5490,5509]
                                                        name: AsMasmCondition [5490,5505]
                                                        argument_list [5505,5509]
                                                            argument [5506,5508]
                                                                expr [5506,5508]
                                                                    name: cc [5506,5508]
                                            argument [5511,5517]
                                                expr [5511,5517]
                                                    name: target [5511,5517]
                    function [5522,6007]
                        type [5522,5526]
                            name: void [5522,5526]
                        name [5527,5562]
                            name: BaselineAssembler [5527,5544]
                            operator: :: [5544,5546]
                            name: JumpIfObjectType [5546,5562]
                        parameter_list [5562,5790]
                            parameter [5563,5575]
                                decl [5563,5575]
                                    type [5563,5575]
                                        name: Condition [5563,5572]
                                    name: cc [5573,5575]
                            parameter [5577,5592]
                                decl [5577,5592]
                                    type [5577,5592]
                                        name: Register [5577,5585]
                                    name: object [5586,5592]
                            parameter [5635,5661]
                                decl [5635,5661]
                                    type [5635,5661]
                                        name: InstanceType [5635,5647]
                                    name: instance_type [5648,5661]
                            parameter [5704,5716]
                                decl [5704,5716]
                                    type [5704,5716]
                                        name: Register [5704,5712]
                                    name: map [5713,5716]
                            parameter [5718,5731]
                                decl [5718,5731]
                                    type [5718,5731]
                                        name: Label [5718,5723]
                                        modifier: * [5723,5724]
                                    name: target [5725,5731]
                            parameter [5774,5789]
                                decl [5774,5789]
                                    type [5774,5789]
                                        name [5774,5789]
                                            name: Label [5774,5779]
                                            operator: :: [5779,5781]
                                            name: Distance [5781,5789]
                        block [5791,6007]
                            block_content [5795,6005]
                                decl_stmt [5795,5828]
                                    decl [5795,5827]
                                        type [5795,5815]
                                            name: ScratchRegisterScope [5795,5815]
                                        name: temps [5816,5821]
                                        argument_list [5821,5827]
                                            argument [5822,5826]
                                                expr [5822,5826]
                                                    name: this [5822,5826]
                                decl_stmt [5831,5870]
                                    decl [5831,5869]
                                        type [5831,5839]
                                            name: Register [5831,5839]
                                        name: type [5840,5844]
                                        init [5845,5869]
                                            expr [5847,5869]
                                                call [5847,5869]
                                                    name [5847,5867]
                                                        name: temps [5847,5852]
                                                        operator: . [5852,5853]
                                                        name: AcquireScratch [5853,5867]
                                                    argument_list [5867,5869]
                                decl_stmt [5873,5897]
                                    decl [5873,5896]
                                        type [5873,5875]
                                            name: __ [5873,5875]
                                        name: LoadMap [5876,5883]
                                        argument_list [5883,5896]
                                            argument [5884,5887]
                                                expr [5884,5887]
                                                    name: map [5884,5887]
                                            argument [5889,5895]
                                                expr [5889,5895]
                                                    name: object [5889,5895]
                                decl_stmt [5900,5962]
                                    decl [5900,5961]
                                        type [5900,5902]
                                            name: __ [5900,5902]
                                        name: Ldrh [5903,5907]
                                        argument_list [5907,5961]
                                            argument [5908,5912]
                                                expr [5908,5912]
                                                    name: type [5908,5912]
                                            argument [5914,5960]
                                                expr [5914,5960]
                                                    call [5914,5960]
                                                        name: FieldMemOperand [5914,5929]
                                                        argument_list [5929,5960]
                                                            argument [5930,5933]
                                                                expr [5930,5933]
                                                                    name: map [5930,5933]
                                                            argument [5935,5959]
                                                                expr [5935,5959]
                                                                    name [5935,5959]
                                                                        name: Map [5935,5938]
                                                                        operator: :: [5938,5940]
                                                                        name: kInstanceTypeOffset [5940,5959]
                                expr_stmt [5965,6005]
                                    expr [5965,6004]
                                        call [5965,6004]
                                            name: JumpIf [5965,5971]
                                            argument_list [5971,6004]
                                                argument [5972,5974]
                                                    expr [5972,5974]
                                                        name: cc [5972,5974]
                                                argument [5976,5980]
                                                    expr [5976,5980]
                                                        name: type [5976,5980]
                                                argument [5982,5995]
                                                    expr [5982,5995]
                                                        name: instance_type [5982,5995]
                                                argument [5997,6003]
                                                    expr [5997,6003]
                                                        name: target [5997,6003]
                    function [6008,6572]
                        type [6008,6012]
                            name: void [6008,6012]
                        name [6013,6050]
                            name: BaselineAssembler [6013,6030]
                            operator: :: [6030,6032]
                            name: JumpIfInstanceType [6032,6050]
                        parameter_list [6050,6224]
                            parameter [6051,6063]
                                decl [6051,6063]
                                    type [6051,6063]
                                        name: Condition [6051,6060]
                                    name: cc [6061,6063]
                            parameter [6065,6077]
                                decl [6065,6077]
                                    type [6065,6077]
                                        name: Register [6065,6073]
                                    name: map [6074,6077]
                            parameter [6122,6148]
                                decl [6122,6148]
                                    type [6122,6148]
                                        name: InstanceType [6122,6134]
                                    name: instance_type [6135,6148]
                            parameter [6193,6206]
                                decl [6193,6206]
                                    type [6193,6206]
                                        name: Label [6193,6198]
                                        modifier: * [6198,6199]
                                    name: target [6200,6206]
                            parameter [6208,6223]
                                decl [6208,6223]
                                    type [6208,6223]
                                        name [6208,6223]
                                            name: Label [6208,6213]
                                            operator: :: [6213,6215]
                                            name: Distance [6215,6223]
                        block [6225,6572]
                            block_content [6229,6570]
                                decl_stmt [6229,6262]
                                    decl [6229,6261]
                                        type [6229,6249]
                                            name: ScratchRegisterScope [6229,6249]
                                        name: temps [6250,6255]
                                        argument_list [6255,6261]
                                            argument [6256,6260]
                                                expr [6256,6260]
                                                    name: this [6256,6260]
                                decl_stmt [6265,6304]
                                    decl [6265,6303]
                                        type [6265,6273]
                                            name: Register [6265,6273]
                                        name: type [6274,6278]
                                        init [6279,6303]
                                            expr [6281,6303]
                                                call [6281,6303]
                                                    name [6281,6301]
                                                        name: temps [6281,6286]
                                                        operator: . [6286,6287]
                                                        name: AcquireScratch [6287,6301]
                                                    argument_list [6301,6303]
                                if_stmt [6307,6462]
                                    if [6307,6462]
                                        condition [6310,6327]
                                            expr [6311,6326]
                                                name: FLAG_debug_code [6311,6326]
                                        block [6328,6462]
                                            block_content [6334,6458]
                                                decl_stmt [6334,6355]
                                                    decl [6334,6354]
                                                        type [6334,6336]
                                                            name: __ [6334,6336]
                                                        name: AssertNotSmi [6337,6349]
                                                        argument_list [6349,6354]
                                                            argument [6350,6353]
                                                                expr [6350,6353]
                                                                    name: map [6350,6353]
                                                decl_stmt [6360,6408]
                                                    decl [6360,6407]
                                                        type [6360,6362]
                                                            name: __ [6360,6362]
                                                        name: CompareObjectType [6363,6380]
                                                        argument_list [6380,6407]
                                                            argument [6381,6384]
                                                                expr [6381,6384]
                                                                    name: map [6381,6384]
                                                            argument [6386,6390]
                                                                expr [6386,6390]
                                                                    name: type [6386,6390]
                                                            argument [6392,6396]
                                                                expr [6392,6396]
                                                                    name: type [6392,6396]
                                                            argument [6398,6406]
                                                                expr [6398,6406]
                                                                    name: MAP_TYPE [6398,6406]
                                                decl_stmt [6413,6458]
                                                    decl [6413,6457]
                                                        type [6413,6415]
                                                            name: __ [6413,6415]
                                                        name: Assert [6416,6422]
                                                        argument_list [6422,6457]
                                                            argument [6423,6425]
                                                                expr [6423,6425]
                                                                    name: eq [6423,6425]
                                                            argument [6427,6456]
                                                                expr [6427,6456]
                                                                    name [6427,6456]
                                                                        name: AbortReason [6427,6438]
                                                                        operator: :: [6438,6440]
                                                                        name: kUnexpectedValue [6440,6456]
                                decl_stmt [6465,6527]
                                    decl [6465,6526]
                                        type [6465,6467]
                                            name: __ [6465,6467]
                                        name: Ldrh [6468,6472]
                                        argument_list [6472,6526]
                                            argument [6473,6477]
                                                expr [6473,6477]
                                                    name: type [6473,6477]
                                            argument [6479,6525]
                                                expr [6479,6525]
                                                    call [6479,6525]
                                                        name: FieldMemOperand [6479,6494]
                                                        argument_list [6494,6525]
                                                            argument [6495,6498]
                                                                expr [6495,6498]
                                                                    name: map [6495,6498]
                                                            argument [6500,6524]
                                                                expr [6500,6524]
                                                                    name [6500,6524]
                                                                        name: Map [6500,6503]
                                                                        operator: :: [6503,6505]
                                                                        name: kInstanceTypeOffset [6505,6524]
                                expr_stmt [6530,6570]
                                    expr [6530,6569]
                                        call [6530,6569]
                                            name: JumpIf [6530,6536]
                                            argument_list [6536,6569]
                                                argument [6537,6539]
                                                    expr [6537,6539]
                                                        name: cc [6537,6539]
                                                argument [6541,6545]
                                                    expr [6541,6545]
                                                        name: type [6541,6545]
                                                argument [6547,6560]
                                                    expr [6547,6560]
                                                        name: instance_type [6547,6560]
                                                argument [6562,6568]
                                                    expr [6562,6568]
                                                        name: target [6562,6568]
                    function [6573,6907]
                        type [6573,6577]
                            name: void [6573,6577]
                        name [6578,6610]
                            name: BaselineAssembler [6578,6595]
                            operator: :: [6595,6597]
                            name: JumpIfPointer [6597,6610]
                        parameter_list [6610,6768]
                            parameter [6611,6623]
                                decl [6611,6623]
                                    type [6611,6623]
                                        name: Condition [6611,6620]
                                    name: cc [6621,6623]
                            parameter [6625,6639]
                                decl [6625,6639]
                                    type [6625,6639]
                                        name: Register [6625,6633]
                                    name: value [6634,6639]
                            parameter [6679,6697]
                                decl [6679,6697]
                                    type [6679,6697]
                                        name: MemOperand [6679,6689]
                                    name: operand [6690,6697]
                            parameter [6699,6712]
                                decl [6699,6712]
                                    type [6699,6712]
                                        name: Label [6699,6704]
                                        modifier: * [6704,6705]
                                    name: target [6706,6712]
                            parameter [6752,6767]
                                decl [6752,6767]
                                    type [6752,6767]
                                        name [6752,6767]
                                            name: Label [6752,6757]
                                            operator: :: [6757,6759]
                                            name: Distance [6759,6767]
                        block [6769,6907]
                            block_content [6773,6905]
                                decl_stmt [6773,6806]
                                    decl [6773,6805]
                                        type [6773,6793]
                                            name: ScratchRegisterScope [6773,6793]
                                        name: temps [6794,6799]
                                        argument_list [6799,6805]
                                            argument [6800,6804]
                                                expr [6800,6804]
                                                    name: this [6800,6804]
                                decl_stmt [6809,6847]
                                    decl [6809,6846]
                                        type [6809,6817]
                                            name: Register [6809,6817]
                                        name: tmp [6818,6821]
                                        init [6822,6846]
                                            expr [6824,6846]
                                                call [6824,6846]
                                                    name [6824,6844]
                                                        name: temps [6824,6829]
                                                        operator: . [6829,6830]
                                                        name: AcquireScratch [6830,6844]
                                                    argument_list [6844,6846]
                                decl_stmt [6850,6871]
                                    decl [6850,6870]
                                        type [6850,6852]
                                            name: __ [6850,6852]
                                        name: Ldr [6853,6856]
                                        argument_list [6856,6870]
                                            argument [6857,6860]
                                                expr [6857,6860]
                                                    name: tmp [6857,6860]
                                            argument [6862,6869]
                                                expr [6862,6869]
                                                    name: operand [6862,6869]
                                expr_stmt [6874,6905]
                                    expr [6874,6904]
                                        call [6874,6904]
                                            name: JumpIf [6874,6880]
                                            argument_list [6880,6904]
                                                argument [6881,6883]
                                                    expr [6881,6883]
                                                        name: cc [6881,6883]
                                                argument [6885,6890]
                                                    expr [6885,6890]
                                                        name: value [6885,6890]
                                                argument [6892,6895]
                                                    expr [6892,6895]
                                                        name: tmp [6892,6895]
                                                argument [6897,6903]
                                                    expr [6897,6903]
                                                        name: target [6897,6903]
                    function [6908,7152]
                        type [6908,6912]
                            name: void [6908,6912]
                        name [6913,6941]
                            name: BaselineAssembler [6913,6930]
                            operator: :: [6930,6932]
                            name: JumpIfSmi [6932,6941]
                        parameter_list [6941,7055]
                            parameter [6942,6954]
                                decl [6942,6954]
                                    type [6942,6954]
                                        name: Condition [6942,6951]
                                    name: cc [6952,6954]
                            parameter [6956,6970]
                                decl [6956,6970]
                                    type [6956,6970]
                                        name: Register [6956,6964]
                                    name: value [6965,6970]
                            parameter [6972,6979]
                                decl [6972,6979]
                                    type [6972,6979]
                                        name: Smi [6972,6975]
                                    name: smi [6976,6979]
                            parameter [7015,7028]
                                decl [7015,7028]
                                    type [7015,7028]
                                        name: Label [7015,7020]
                                        modifier: * [7020,7021]
                                    name: target [7022,7028]
                            parameter [7030,7054]
                                decl [7030,7054]
                                    type [7030,7054]
                                        name [7030,7045]
                                            name: Label [7030,7035]
                                            operator: :: [7035,7037]
                                            name: Distance [7037,7045]
                                    name: distance [7046,7054]
                        block [7056,7152]
                            block_content [7060,7150]
                                decl_stmt [7060,7080]
                                    decl [7060,7079]
                                        type [7060,7062]
                                            name: __ [7060,7062]
                                        name: AssertSmi [7063,7072]
                                        argument_list [7072,7079]
                                            argument [7073,7078]
                                                expr [7073,7078]
                                                    name: value [7073,7078]
                                decl_stmt [7083,7150]
                                    decl [7083,7149]
                                        type [7083,7085]
                                            name: __ [7083,7085]
                                        name: CompareTaggedAndBranch [7086,7108]
                                        argument_list [7108,7149]
                                            argument [7109,7114]
                                                expr [7109,7114]
                                                    name: value [7109,7114]
                                            argument [7116,7119]
                                                expr [7116,7119]
                                                    name: smi [7116,7119]
                                            argument [7121,7140]
                                                expr [7121,7140]
                                                    call [7121,7140]
                                                        name: AsMasmCondition [7121,7136]
                                                        argument_list [7136,7140]
                                                            argument [7137,7139]
                                                                expr [7137,7139]
                                                                    name: cc [7137,7139]
                                            argument [7142,7148]
                                                expr [7142,7148]
                                                    name: target [7142,7148]
                    function [7154,7409]
                        type [7154,7158]
                            name: void [7154,7158]
                        name [7159,7187]
                            name: BaselineAssembler [7159,7176]
                            operator: :: [7176,7178]
                            name: JumpIfSmi [7178,7187]
                        parameter_list [7187,7295]
                            parameter [7188,7200]
                                decl [7188,7200]
                                    type [7188,7200]
                                        name: Condition [7188,7197]
                                    name: cc [7198,7200]
                            parameter [7202,7214]
                                decl [7202,7214]
                                    type [7202,7214]
                                        name: Register [7202,7210]
                                    name: lhs [7211,7214]
                            parameter [7216,7228]
                                decl [7216,7228]
                                    type [7216,7228]
                                        name: Register [7216,7224]
                                    name: rhs [7225,7228]
                            parameter [7264,7277]
                                decl [7264,7277]
                                    type [7264,7277]
                                        name: Label [7264,7269]
                                        modifier: * [7269,7270]
                                    name: target [7271,7277]
                            parameter [7279,7294]
                                decl [7279,7294]
                                    type [7279,7294]
                                        name [7279,7294]
                                            name: Label [7279,7284]
                                            operator: :: [7284,7286]
                                            name: Distance [7286,7294]
                        block [7296,7409]
                            block_content [7300,7407]
                                decl_stmt [7300,7318]
                                    decl [7300,7317]
                                        type [7300,7302]
                                            name: __ [7300,7302]
                                        name: AssertSmi [7303,7312]
                                        argument_list [7312,7317]
                                            argument [7313,7316]
                                                expr [7313,7316]
                                                    name: lhs [7313,7316]
                                decl_stmt [7321,7339]
                                    decl [7321,7338]
                                        type [7321,7323]
                                            name: __ [7321,7323]
                                        name: AssertSmi [7324,7333]
                                        argument_list [7333,7338]
                                            argument [7334,7337]
                                                expr [7334,7337]
                                                    name: rhs [7334,7337]
                                decl_stmt [7342,7407]
                                    decl [7342,7406]
                                        type [7342,7344]
                                            name: __ [7342,7344]
                                        name: CompareTaggedAndBranch [7345,7367]
                                        argument_list [7367,7406]
                                            argument [7368,7371]
                                                expr [7368,7371]
                                                    name: lhs [7368,7371]
                                            argument [7373,7376]
                                                expr [7373,7376]
                                                    name: rhs [7373,7376]
                                            argument [7378,7397]
                                                expr [7378,7397]
                                                    call [7378,7397]
                                                        name: AsMasmCondition [7378,7393]
                                                        argument_list [7393,7397]
                                                            argument [7394,7396]
                                                                expr [7394,7396]
                                                                    name: cc [7394,7396]
                                            argument [7399,7405]
                                                expr [7399,7405]
                                                    name: target [7399,7405]
                    function [7410,7777]
                        type [7410,7414]
                            name: void [7410,7414]
                        name [7415,7446]
                            name: BaselineAssembler [7415,7432]
                            operator: :: [7432,7434]
                            name: JumpIfTagged [7434,7446]
                        parameter_list [7446,7602]
                            parameter [7447,7459]
                                decl [7447,7459]
                                    type [7447,7459]
                                        name: Condition [7447,7456]
                                    name: cc [7457,7459]
                            parameter [7461,7475]
                                decl [7461,7475]
                                    type [7461,7475]
                                        name: Register [7461,7469]
                                    name: value [7470,7475]
                            parameter [7514,7532]
                                decl [7514,7532]
                                    type [7514,7532]
                                        name: MemOperand [7514,7524]
                                    name: operand [7525,7532]
                            parameter [7534,7547]
                                decl [7534,7547]
                                    type [7534,7547]
                                        name: Label [7534,7539]
                                        modifier: * [7539,7540]
                                    name: target [7541,7547]
                            parameter [7586,7601]
                                decl [7586,7601]
                                    type [7586,7601]
                                        name [7586,7601]
                                            name: Label [7586,7591]
                                            operator: :: [7591,7593]
                                            name: Distance [7593,7601]
                        block [7603,7777]
                            block_content [7607,7775]
                                decl_stmt [7607,7640]
                                    decl [7607,7639]
                                        type [7607,7627]
                                            name: ScratchRegisterScope [7607,7627]
                                        name: temps [7628,7633]
                                        argument_list [7633,7639]
                                            argument [7634,7638]
                                                expr [7634,7638]
                                                    name: this [7634,7638]
                                decl_stmt [7643,7681]
                                    decl [7643,7680]
                                        type [7643,7651]
                                            name: Register [7643,7651]
                                        name: tmp [7652,7655]
                                        init [7656,7680]
                                            expr [7658,7680]
                                                call [7658,7680]
                                                    name [7658,7678]
                                                        name: temps [7658,7663]
                                                        operator: . [7663,7664]
                                                        name: AcquireScratch [7664,7678]
                                                    argument_list [7678,7680]
                                decl_stmt [7684,7705]
                                    decl [7684,7704]
                                        type [7684,7686]
                                            name: __ [7684,7686]
                                        name: Ldr [7687,7690]
                                        argument_list [7690,7704]
                                            argument [7691,7694]
                                                expr [7691,7694]
                                                    name: tmp [7691,7694]
                                            argument [7696,7703]
                                                expr [7696,7703]
                                                    name: operand [7696,7703]
                                decl_stmt [7708,7775]
                                    decl [7708,7774]
                                        type [7708,7710]
                                            name: __ [7708,7710]
                                        name: CompareTaggedAndBranch [7711,7733]
                                        argument_list [7733,7774]
                                            argument [7734,7739]
                                                expr [7734,7739]
                                                    name: value [7734,7739]
                                            argument [7741,7744]
                                                expr [7741,7744]
                                                    name: tmp [7741,7744]
                                            argument [7746,7765]
                                                expr [7746,7765]
                                                    call [7746,7765]
                                                        name: AsMasmCondition [7746,7761]
                                                        argument_list [7761,7765]
                                                            argument [7762,7764]
                                                                expr [7762,7764]
                                                                    name: cc [7762,7764]
                                            argument [7767,7773]
                                                expr [7767,7773]
                                                    name: target [7767,7773]
                    function [7778,8145]
                        type [7778,7782]
                            name: void [7778,7782]
                        name [7783,7814]
                            name: BaselineAssembler [7783,7800]
                            operator: :: [7800,7802]
                            name: JumpIfTagged [7802,7814]
                        parameter_list [7814,7970]
                            parameter [7815,7827]
                                decl [7815,7827]
                                    type [7815,7827]
                                        name: Condition [7815,7824]
                                    name: cc [7825,7827]
                            parameter [7829,7847]
                                decl [7829,7847]
                                    type [7829,7847]
                                        name: MemOperand [7829,7839]
                                    name: operand [7840,7847]
                            parameter [7886,7900]
                                decl [7886,7900]
                                    type [7886,7900]
                                        name: Register [7886,7894]
                                    name: value [7895,7900]
                            parameter [7902,7915]
                                decl [7902,7915]
                                    type [7902,7915]
                                        name: Label [7902,7907]
                                        modifier: * [7907,7908]
                                    name: target [7909,7915]
                            parameter [7954,7969]
                                decl [7954,7969]
                                    type [7954,7969]
                                        name [7954,7969]
                                            name: Label [7954,7959]
                                            operator: :: [7959,7961]
                                            name: Distance [7961,7969]
                        block [7971,8145]
                            block_content [7975,8143]
                                decl_stmt [7975,8008]
                                    decl [7975,8007]
                                        type [7975,7995]
                                            name: ScratchRegisterScope [7975,7995]
                                        name: temps [7996,8001]
                                        argument_list [8001,8007]
                                            argument [8002,8006]
                                                expr [8002,8006]
                                                    name: this [8002,8006]
                                decl_stmt [8011,8049]
                                    decl [8011,8048]
                                        type [8011,8019]
                                            name: Register [8011,8019]
                                        name: tmp [8020,8023]
                                        init [8024,8048]
                                            expr [8026,8048]
                                                call [8026,8048]
                                                    name [8026,8046]
                                                        name: temps [8026,8031]
                                                        operator: . [8031,8032]
                                                        name: AcquireScratch [8032,8046]
                                                    argument_list [8046,8048]
                                decl_stmt [8052,8073]
                                    decl [8052,8072]
                                        type [8052,8054]
                                            name: __ [8052,8054]
                                        name: Ldr [8055,8058]
                                        argument_list [8058,8072]
                                            argument [8059,8062]
                                                expr [8059,8062]
                                                    name: tmp [8059,8062]
                                            argument [8064,8071]
                                                expr [8064,8071]
                                                    name: operand [8064,8071]
                                decl_stmt [8076,8143]
                                    decl [8076,8142]
                                        type [8076,8078]
                                            name: __ [8076,8078]
                                        name: CompareTaggedAndBranch [8079,8101]
                                        argument_list [8101,8142]
                                            argument [8102,8105]
                                                expr [8102,8105]
                                                    name: tmp [8102,8105]
                                            argument [8107,8112]
                                                expr [8107,8112]
                                                    name: value [8107,8112]
                                            argument [8114,8133]
                                                expr [8114,8133]
                                                    call [8114,8133]
                                                        name: AsMasmCondition [8114,8129]
                                                        argument_list [8129,8133]
                                                            argument [8130,8132]
                                                                expr [8130,8132]
                                                                    name: cc [8130,8132]
                                            argument [8135,8141]
                                                expr [8135,8141]
                                                    name: target [8135,8141]
                    function [8146,8341]
                        type [8146,8150]
                            name: void [8146,8150]
                        name [8151,8180]
                            name: BaselineAssembler [8151,8168]
                            operator: :: [8168,8170]
                            name: JumpIfByte [8170,8180]
                        parameter_list [8180,8291]
                            parameter [8181,8193]
                                decl [8181,8193]
                                    type [8181,8193]
                                        name: Condition [8181,8190]
                                    name: cc [8191,8193]
                            parameter [8195,8209]
                                decl [8195,8209]
                                    type [8195,8209]
                                        name: Register [8195,8203]
                                    name: value [8204,8209]
                            parameter [8211,8223]
                                decl [8211,8223]
                                    type [8211,8223]
                                        name: int32_t [8211,8218]
                                    name: byte [8219,8223]
                            parameter [8260,8273]
                                decl [8260,8273]
                                    type [8260,8273]
                                        name: Label [8260,8265]
                                        modifier: * [8265,8266]
                                    name: target [8267,8273]
                            parameter [8275,8290]
                                decl [8275,8290]
                                    type [8275,8290]
                                        name [8275,8290]
                                            name: Label [8275,8280]
                                            operator: :: [8280,8282]
                                            name: Distance [8282,8290]
                        block [8292,8341]
                            block_content [8296,8339]
                                expr_stmt [8296,8339]
                                    expr [8296,8338]
                                        call [8296,8338]
                                            name: JumpIf [8296,8302]
                                            argument_list [8302,8338]
                                                argument [8303,8305]
                                                    expr [8303,8305]
                                                        name: cc [8303,8305]
                                                argument [8307,8312]
                                                    expr [8307,8312]
                                                        name: value [8307,8312]
                                                argument [8314,8329]
                                                    expr [8314,8329]
                                                        call [8314,8329]
                                                            name: Immediate [8314,8323]
                                                            argument_list [8323,8329]
                                                                argument [8324,8328]
                                                                    expr [8324,8328]
                                                                        name: byte [8324,8328]
                                                argument [8331,8337]
                                                    expr [8331,8337]
                                                        name: target [8331,8337]
                    function [8343,8468]
                        type [8343,8347]
                            name: void [8343,8347]
                        name [8348,8371]
                            name: BaselineAssembler [8348,8365]
                            operator: :: [8365,8367]
                            name: Move [8367,8371]
                        parameter_list [8371,8418]
                            parameter [8372,8400]
                                decl [8372,8400]
                                    type [8372,8400]
                                        name [8372,8393]
                                            name: interpreter [8372,8383]
                                            operator: :: [8383,8385]
                                            name: Register [8385,8393]
                                    name: output [8394,8400]
                            parameter [8402,8417]
                                decl [8402,8417]
                                    type [8402,8417]
                                        name: Register [8402,8410]
                                    name: source [8411,8417]
                        block [8419,8468]
                            block_content [8423,8466]
                                expr_stmt [8423,8466]
                                    expr [8423,8465]
                                        call [8423,8465]
                                            name: Move [8423,8427]
                                            argument_list [8427,8465]
                                                argument [8428,8456]
                                                    expr [8428,8456]
                                                        call [8428,8456]
                                                            name: RegisterFrameOperand [8428,8448]
                                                            argument_list [8448,8456]
                                                                argument [8449,8455]
                                                                    expr [8449,8455]
                                                                        name: output [8449,8455]
                                                argument [8458,8464]
                                                    expr [8458,8464]
                                                        name: source [8458,8464]
                    function [8469,8579]
                        type [8469,8473]
                            name: void [8469,8473]
                        name [8474,8497]
                            name: BaselineAssembler [8474,8491]
                            operator: :: [8491,8493]
                            name: Move [8493,8497]
                        parameter_list [8497,8533]
                            parameter [8498,8513]
                                decl [8498,8513]
                                    type [8498,8513]
                                        name: Register [8498,8506]
                                    name: output [8507,8513]
                            parameter [8515,8532]
                                decl [8515,8532]
                                    type [8515,8532]
                                        name: TaggedIndex [8515,8526]
                                    name: value [8527,8532]
                        block [8534,8579]
                            block_content [8538,8577]
                                decl_stmt [8538,8577]
                                    decl [8538,8576]
                                        type [8538,8540]
                                            name: __ [8538,8540]
                                        name: Mov [8541,8544]
                                        argument_list [8544,8576]
                                            argument [8545,8551]
                                                expr [8545,8551]
                                                    name: output [8545,8551]
                                            argument [8553,8575]
                                                expr [8553,8575]
                                                    call [8553,8575]
                                                        name: Immediate [8553,8562]
                                                        argument_list [8562,8575]
                                                            argument [8563,8574]
                                                                expr [8563,8574]
                                                                    call [8563,8574]
                                                                        name [8563,8572]
                                                                            name: value [8563,8568]
                                                                            operator: . [8568,8569]
                                                                            name: ptr [8569,8572]
                                                                        argument_list [8572,8574]
                    function [8580,8674]
                        type [8580,8584]
                            name: void [8580,8584]
                        name [8585,8608]
                            name: BaselineAssembler [8585,8602]
                            operator: :: [8602,8604]
                            name: Move [8604,8608]
                        parameter_list [8608,8644]
                            parameter [8609,8626]
                                decl [8609,8626]
                                    type [8609,8626]
                                        name: MemOperand [8609,8619]
                                    name: output [8620,8626]
                            parameter [8628,8643]
                                decl [8628,8643]
                                    type [8628,8643]
                                        name: Register [8628,8636]
                                    name: source [8637,8643]
                        block [8645,8674]
                            block_content [8649,8672]
                                decl_stmt [8649,8672]
                                    decl [8649,8671]
                                        type [8649,8651]
                                            name: __ [8649,8651]
                                        name: Str [8652,8655]
                                        argument_list [8655,8671]
                                            argument [8656,8662]
                                                expr [8656,8662]
                                                    name: source [8656,8662]
                                            argument [8664,8670]
                                                expr [8664,8670]
                                                    name: output [8664,8670]
                    function [8675,8791]
                        type [8675,8679]
                            name: void [8675,8679]
                        name [8680,8703]
                            name: BaselineAssembler [8680,8697]
                            operator: :: [8697,8699]
                            name: Move [8699,8703]
                        parameter_list [8703,8749]
                            parameter [8704,8719]
                                decl [8704,8719]
                                    type [8704,8719]
                                        name: Register [8704,8712]
                                    name: output [8713,8719]
                            parameter [8721,8748]
                                decl [8721,8748]
                                    type [8721,8748]
                                        name: ExternalReference [8721,8738]
                                    name: reference [8739,8748]
                        block [8750,8791]
                            block_content [8754,8789]
                                decl_stmt [8754,8789]
                                    decl [8754,8788]
                                        type [8754,8756]
                                            name: __ [8754,8756]
                                        name: Mov [8757,8760]
                                        argument_list [8760,8788]
                                            argument [8761,8767]
                                                expr [8761,8767]
                                                    name: output [8761,8767]
                                            argument [8769,8787]
                                                expr [8769,8787]
                                                    call [8769,8787]
                                                        name: Operand [8769,8776]
                                                        argument_list [8776,8787]
                                                            argument [8777,8786]
                                                                expr [8777,8786]
                                                                    name: reference [8777,8786]
                    function [8792,8901]
                        type [8792,8796]
                            name: void [8792,8796]
                        name [8797,8820]
                            name: BaselineAssembler [8797,8814]
                            operator: :: [8814,8816]
                            name: Move [8816,8820]
                        parameter_list [8820,8863]
                            parameter [8821,8836]
                                decl [8821,8836]
                                    type [8821,8836]
                                        name: Register [8821,8829]
                                    name: output [8830,8836]
                            parameter [8838,8862]
                                decl [8838,8862]
                                    type [8838,8862]
                                        name [8838,8856]
                                            name: Handle [8838,8844]
                                            argument_list [8844,8856]
                                                argument [8845,8855]
                                                    name: HeapObject [8845,8855]
                                    name: value [8857,8862]
                        block [8864,8901]
                            block_content [8868,8899]
                                decl_stmt [8868,8899]
                                    decl [8868,8898]
                                        type [8868,8870]
                                            name: __ [8868,8870]
                                        name: Mov [8871,8874]
                                        argument_list [8874,8898]
                                            argument [8875,8881]
                                                expr [8875,8881]
                                                    name: output [8875,8881]
                                            argument [8883,8897]
                                                expr [8883,8897]
                                                    call [8883,8897]
                                                        name: Operand [8883,8890]
                                                        argument_list [8890,8897]
                                                            argument [8891,8896]
                                                                expr [8891,8896]
                                                                    name: value [8891,8896]
                    function [8902,9002]
                        type [8902,8906]
                            name: void [8902,8906]
                        name [8907,8930]
                            name: BaselineAssembler [8907,8924]
                            operator: :: [8924,8926]
                            name: Move [8926,8930]
                        parameter_list [8930,8962]
                            parameter [8931,8946]
                                decl [8931,8946]
                                    type [8931,8946]
                                        name: Register [8931,8939]
                                    name: output [8940,8946]
                            parameter [8948,8961]
                                decl [8948,8961]
                                    type [8948,8961]
                                        name: int32_t [8948,8955]
                                    name: value [8956,8961]
                        block [8963,9002]
                            block_content [8967,9000]
                                decl_stmt [8967,9000]
                                    decl [8967,8999]
                                        type [8967,8969]
                                            name: __ [8967,8969]
                                        name: Mov [8970,8973]
                                        argument_list [8973,8999]
                                            argument [8974,8980]
                                                expr [8974,8980]
                                                    name: output [8974,8980]
                                            argument [8982,8998]
                                                expr [8982,8998]
                                                    call [8982,8998]
                                                        name: Immediate [8982,8991]
                                                        argument_list [8991,8998]
                                                            argument [8992,8997]
                                                                expr [8992,8997]
                                                                    name: value [8992,8997]
                    function [9003,9103]
                        type [9003,9007]
                            name: void [9003,9007]
                        name [9008,9039]
                            name: BaselineAssembler [9008,9025]
                            operator: :: [9025,9027]
                            name: MoveMaybeSmi [9027,9039]
                        parameter_list [9039,9073]
                            parameter [9040,9055]
                                decl [9040,9055]
                                    type [9040,9055]
                                        name: Register [9040,9048]
                                    name: output [9049,9055]
                            parameter [9057,9072]
                                decl [9057,9072]
                                    type [9057,9072]
                                        name: Register [9057,9065]
                                    name: source [9066,9072]
                        block [9074,9103]
                            block_content [9078,9101]
                                decl_stmt [9078,9101]
                                    decl [9078,9100]
                                        type [9078,9080]
                                            name: __ [9078,9080]
                                        name: Mov [9081,9084]
                                        argument_list [9084,9100]
                                            argument [9085,9091]
                                                expr [9085,9091]
                                                    name: output [9085,9091]
                                            argument [9093,9099]
                                                expr [9093,9099]
                                                    name: source [9093,9099]
                    function [9104,9199]
                        type [9104,9108]
                            name: void [9104,9108]
                        name [9109,9135]
                            name: BaselineAssembler [9109,9126]
                            operator: :: [9126,9128]
                            name: MoveSmi [9128,9135]
                        parameter_list [9135,9169]
                            parameter [9136,9151]
                                decl [9136,9151]
                                    type [9136,9151]
                                        name: Register [9136,9144]
                                    name: output [9145,9151]
                            parameter [9153,9168]
                                decl [9153,9168]
                                    type [9153,9168]
                                        name: Register [9153,9161]
                                    name: source [9162,9168]
                        block [9170,9199]
                            block_content [9174,9197]
                                decl_stmt [9174,9197]
                                    decl [9174,9196]
                                        type [9174,9176]
                                            name: __ [9174,9176]
                                        name: Mov [9177,9180]
                                        argument_list [9180,9196]
                                            argument [9181,9187]
                                                expr [9181,9187]
                                                    name: output [9181,9187]
                                            argument [9189,9195]
                                                expr [9189,9195]
                                                    name: source [9189,9195]
                    namespace [9201,9806]
                        name: detail [9211,9217]
                        block [9218,9806]
                            function [9221,9491]
                                type [9221,9260]
                                    name [9221,9244]
                                        name: template [9221,9229]
                                        argument_list [9230,9244]
                                            argument [9231,9243]
                                                name: typename [9231,9239]
                                                name: Arg [9240,9243]
                                    specifier: inline [9245,9251]
                                    name: Register [9252,9260]
                                name: ToRegister [9261,9271]
                                parameter_list [9271,9407]
                                    parameter [9272,9295]
                                        decl [9272,9295]
                                            type [9272,9295]
                                                name: BaselineAssembler [9272,9289]
                                                modifier: * [9289,9290]
                                            name: basm [9291,9295]
                                    parameter [9324,9370]
                                        decl [9324,9370]
                                            type [9324,9370]
                                                name [9324,9363]
                                                    name: BaselineAssembler [9324,9341]
                                                    operator: :: [9341,9343]
                                                    name: ScratchRegisterScope [9343,9363]
                                                modifier: * [9363,9364]
                                            name: scope [9365,9370]
                                    parameter [9399,9406]
                                        decl [9399,9406]
                                            type [9399,9406]
                                                name: Arg [9399,9402]
                                            name: arg [9403,9406]
                                block [9408,9491]
                                    block_content [9412,9489]
                                        decl_stmt [9412,9451]
                                            decl [9412,9450]
                                                type [9412,9420]
                                                    name: Register [9412,9420]
                                                name: reg [9421,9424]
                                                init [9425,9450]
                                                    expr [9427,9450]
                                                        call [9427,9450]
                                                            name [9427,9448]
                                                                name: scope [9427,9432]
                                                                operator: -> [9432,9434]
                                                                name: AcquireScratch [9434,9448]
                                                            argument_list [9448,9450]
                                        expr_stmt [9454,9475]
                                            expr [9454,9474]
                                                call [9454,9474]
                                                    name [9454,9464]
                                                        name: basm [9454,9458]
                                                        operator: -> [9458,9460]
                                                        name: Move [9460,9464]
                                                    argument_list [9464,9474]
                                                        argument [9465,9468]
                                                            expr [9465,9468]
                                                                name: reg [9465,9468]
                                                        argument [9470,9473]
                                                            expr [9470,9473]
                                                                name: arg [9470,9473]
                                        return [9478,9489]
                                            expr [9485,9488]
                                                name: reg [9485,9488]
                            function [9492,9677]
                                type [9492,9507]
                                    specifier: inline [9492,9498]
                                    name: Register [9499,9507]
                                name: ToRegister [9508,9518]
                                parameter_list [9518,9659]
                                    parameter [9519,9542]
                                        decl [9519,9542]
                                            type [9519,9542]
                                                name: BaselineAssembler [9519,9536]
                                                modifier: * [9536,9537]
                                            name: basm [9538,9542]
                                    parameter [9571,9617]
                                        decl [9571,9617]
                                            type [9571,9617]
                                                name [9571,9610]
                                                    name: BaselineAssembler [9571,9588]
                                                    operator: :: [9588,9590]
                                                    name: ScratchRegisterScope [9590,9610]
                                                modifier: * [9610,9611]
                                            name: scope [9612,9617]
                                    parameter [9646,9658]
                                        decl [9646,9658]
                                            type [9646,9658]
                                                name: Register [9646,9654]
                                            name: reg [9655,9658]
                                block [9660,9677]
                                    block_content [9664,9675]
                                        return [9664,9675]
                                            expr [9671,9674]
                                                name: reg [9671,9674]
                            macro [9679,9687]
                                name: template [9679,9687]
                            expr_stmt [9688,9730]
                                expr [9688,9729]
                                    operator: < [9688,9689]
                                    name: typename [9689,9697]
                                    operator: ... [9697,9700]
                                    name: Args [9701,9705]
                                    operator: > [9705,9706]
                                    name: CountPushHelper [9714,9729]
                            macro [9731,9739]
                                name: template [9731,9739]
                            expr_stmt [9740,9804]
                                expr [9740,9804]
                                    operator: < [9740,9741]
                                    operator: > [9741,9742]
                                    name [9750,9767]
                                        name: CountPushHelper [9750,9765]
                                        argument_list [9765,9767]
                                    block [9768,9804]
                                        expr [9772,9802]
                                            specifier: static [9772,9778]
                                            name: int [9779,9782]
                                            macro [9783,9790]
                                                name: Count [9783,9788]
                                                argument_list [9788,9790]
                                            block [9791,9802]
                                                return [9793,9802]
                                                    expr [9800,9801]
                                                        literal: 0 [9800,9801]
                    empty_stmt [9806,9807]
                    macro [9808,9816]
                        name: template [9808,9816]
                    expr_stmt [9817,9993]
                        expr [9817,9830]
                            operator: < [9817,9818]
                            name: typename [9818,9826]
                            name: Arg [9827,9830]
                        operator: , [9830,9831]
                        expr [9832,9993]
                            name: typename [9832,9840]
                            operator: ... [9840,9843]
                            name: Args [9844,9848]
                            operator: > [9848,9849]
                            name [9857,9886]
                                name: CountPushHelper [9857,9872]
                                argument_list [9872,9886]
                                    argument [9873,9876]
                                        name: Arg [9873,9876]
                                    argument [9878,9885]
                                        name: Args [9878,9882]
                                        modifier: ... [9882,9885]
                            block [9887,9993]
                                expr [9891,9989]
                                    specifier: static [9891,9897]
                                    name: int [9898,9901]
                                    macro [9902,9930]
                                        name: Count [9902,9907]
                                        argument_list [9907,9930]
                                            argument [9908,9915]
                                            argument [9917,9929]
                                    block [9931,9989]
                                        return [9937,9989]
                                            expr [9944,9988]
                                                literal: 1 [9944,9947]
                                                operator: + [9946,9947]
                                                call [9948,9988]
                                                    name [9948,9979]
                                                        name [9948,9972]
                                                            name: CountPushHelper [9948,9963]
                                                            argument_list [9963,9972]
                                                                argument [9964,9971]
                                                                    name: Args [9964,9968]
                                                                    modifier: ... [9968,9971]
                                                        operator: :: [9972,9974]
                                                        name: Count [9974,9979]
                                                    argument_list [9979,9988]
                                                        argument [9980,9987]
                                                            expr [9980,9987]
                                                                name: args [9980,9984]
                                                                operator: ... [9984,9987]
            empty_stmt [9995,9996]
            macro [9997,10005]
                name: template [9997,10005]
            expr_stmt [10006,10233]
                expr [10006,10233]
                    operator: < [10006,10007]
                    name: typename [10007,10015]
                    operator: ... [10015,10018]
                    name: Args [10019,10023]
                    operator: > [10023,10024]
                    name [10032,10083]
                        name: CountPushHelper [10032,10047]
                        argument_list [10047,10083]
                            argument [10048,10073]
                                name [10048,10073]
                                    name: interpreter [10048,10059]
                                    operator: :: [10059,10061]
                                    name: RegisterList [10061,10073]
                            argument [10075,10082]
                                name: Args [10075,10079]
                                modifier: ... [10079,10082]
                    block [10084,10233]
                        expr [10088,10229]
                            specifier: static [10088,10094]
                            name: int [10095,10098]
                            macro [10099,10150]
                                name: Count [10099,10104]
                                argument_list [10104,10150]
                                    argument [10105,10135]
                                    argument [10137,10149]
                            block [10151,10229]
                                return [10157,10229]
                                    expr [10164,10228]
                                        call [10164,10185]
                                            name [10164,10183]
                                                name: list [10164,10168]
                                                operator: . [10168,10169]
                                                name: register_count [10169,10183]
                                            argument_list [10183,10185]
                                        operator: + [10186,10187]
                                        call [10188,10228]
                                            name [10188,10219]
                                                name [10188,10212]
                                                    name: CountPushHelper [10188,10203]
                                                    argument_list [10203,10212]
                                                        argument [10204,10211]
                                                            name: Args [10204,10208]
                                                            modifier: ... [10208,10211]
                                                operator: :: [10212,10214]
                                                name: Count [10214,10219]
                                            argument_list [10219,10228]
                                                argument [10220,10227]
                                                    expr [10220,10227]
                                                        name: args [10220,10224]
                                                        operator: ... [10224,10227]
    empty_stmt [10235,10236]
    macro [10238,10246]
        name: template [10238,10246]
    expr_stmt [10247,10287]
        expr [10247,10286]
            operator: < [10247,10248]
            name: typename [10248,10256]
            operator: ... [10256,10259]
            name: Args [10260,10264]
            operator: > [10264,10265]
            name: PushAllHelper [10273,10286]
    function [10288,10425]
        type [10288,10327]
            name [10288,10315]
                name: template [10288,10296]
                argument_list [10297,10315]
                    argument [10298,10314]
                        name: typename [10298,10306]
                        modifier: ... [10306,10309]
                        name: Args [10310,10314]
            specifier: inline [10316,10322]
            name: void [10323,10327]
        name: PushAll [10328,10335]
        parameter_list [10335,10374]
            parameter [10336,10359]
                decl [10336,10359]
                    type [10336,10359]
                        name: BaselineAssembler [10336,10353]
                        modifier: * [10353,10354]
                    name: basm [10355,10359]
            parameter [10361,10373]
                decl [10361,10373]
                    type [10361,10373]
                        name: Args [10361,10365]
                        modifier: ... [10365,10368]
                    name: args [10369,10373]
        block [10375,10425]
            block_content [10379,10423]
                expr_stmt [10379,10423]
                    expr [10379,10422]
                        call [10379,10422]
                            name [10379,10407]
                                name [10379,10401]
                                    name: PushAllHelper [10379,10392]
                                    argument_list [10392,10401]
                                        argument [10393,10400]
                                            name: Args [10393,10397]
                                            modifier: ... [10397,10400]
                                operator: :: [10401,10403]
                                name: Push [10403,10407]
                            argument_list [10407,10422]
                                argument [10408,10412]
                                    expr [10408,10412]
                                        name: basm [10408,10412]
                                argument [10414,10421]
                                    expr [10414,10421]
                                        name: args [10414,10418]
                                        operator: ... [10418,10421]
    function [10426,10577]
        type [10426,10465]
            name [10426,10453]
                name: template [10426,10434]
                argument_list [10435,10453]
                    argument [10436,10452]
                        name: typename [10436,10444]
                        modifier: ... [10444,10447]
                        name: Args [10448,10452]
            specifier: inline [10454,10460]
            name: void [10461,10465]
        name: PushAllReverse [10466,10480]
        parameter_list [10480,10519]
            parameter [10481,10504]
                decl [10481,10504]
                    type [10481,10504]
                        name: BaselineAssembler [10481,10498]
                        modifier: * [10498,10499]
                    name: basm [10500,10504]
            parameter [10506,10518]
                decl [10506,10518]
                    type [10506,10518]
                        name: Args [10506,10510]
                        modifier: ... [10510,10513]
                    name: args [10514,10518]
        block [10520,10577]
            block_content [10524,10575]
                expr_stmt [10524,10575]
                    expr [10524,10574]
                        call [10524,10574]
                            name [10524,10559]
                                name [10524,10546]
                                    name: PushAllHelper [10524,10537]
                                    argument_list [10537,10546]
                                        argument [10538,10545]
                                            name: Args [10538,10542]
                                            modifier: ... [10542,10545]
                                operator: :: [10546,10548]
                                name: PushReverse [10548,10559]
                            argument_list [10559,10574]
                                argument [10560,10564]
                                    expr [10560,10564]
                                        name: basm [10560,10564]
                                argument [10566,10573]
                                    expr [10566,10573]
                                        name: args [10566,10570]
                                        operator: ... [10570,10573]
    macro [10579,10587]
        name: template [10579,10587]
    expr_stmt [10588,10719]
        expr [10588,10718]
            operator: < [10588,10589]
            operator: > [10589,10590]
            name [10598,10613]
                name: PushAllHelper [10598,10611]
                argument_list [10611,10613]
            block [10614,10718]
                expr [10618,10716]
                    specifier: static [10618,10624]
                    name: void [10625,10629]
                    macro [10630,10659]
                        name: Push [10630,10634]
                        argument_list [10634,10659]
                            argument [10635,10658]
                    block [10660,10662]
                    specifier: static [10665,10671]
                    name: void [10672,10676]
                    macro [10677,10713]
                        name: PushReverse [10677,10688]
                        argument_list [10688,10713]
                            argument [10689,10712]
                    block [10714,10716]
    macro [10720,10728]
        name: template [10720,10728]
    expr_stmt [10729,11035]
        expr [10729,11035]
            operator: < [10729,10730]
            name: typename [10730,10738]
            name: Arg [10739,10742]
            operator: > [10742,10743]
            name [10751,10769]
                name: PushAllHelper [10751,10764]
                argument_list [10764,10769]
                    argument [10765,10768]
                        name: Arg [10765,10768]
            block [10770,11035]
                expr [10774,11031]
                    specifier: static [10774,10780]
                    name: void [10781,10785]
                    macro [10786,10820]
                        name: Push [10786,10790]
                        argument_list [10790,10820]
                            argument [10791,10814]
                            argument [10816,10819]
                    block [10821,10849]
                        expr [10823,10846]
                            call [10823,10846]
                                name: FATAL [10823,10828]
                                argument_list [10828,10846]
                                    argument [10829,10845]
                                        expr [10829,10845]
                                            literal: "Unaligned push" [10829,10845]
                    specifier: static [10852,10858]
                    name: void [10859,10863]
                    macro [10864,10909]
                        name: PushReverse [10864,10875]
                        argument_list [10875,10909]
                            argument [10876,10899]
                            argument [10901,10908]
                    block [10910,11031]
                        comment: // Push the padding register to round up the amount of values pushed. [10916,10985]
                        return [10990,11031]
                            expr [10997,11030]
                                call [10997,11030]
                                    name: PushAllReverse [10997,11011]
                                    argument_list [11011,11030]
                                        argument [11012,11016]
                                            expr [11012,11016]
                                                name: basm [11012,11016]
                                        argument [11018,11021]
                                            expr [11018,11021]
                                                name: arg [11018,11021]
                                        argument [11023,11029]
                                            expr [11023,11029]
                                                name: padreg [11023,11029]
    macro [11039,11047]
        name: template [11039,11047]
    expr_stmt [11048,11802]
        expr [11048,11062]
            operator: < [11048,11049]
            name: typename [11049,11057]
            name: Arg1 [11058,11062]
        operator: , [11062,11063]
        expr [11064,11077]
            name: typename [11064,11072]
            name: Arg2 [11073,11077]
        operator: , [11077,11078]
        expr [11079,11801]
            name: typename [11079,11087]
            operator: ... [11087,11090]
            name: Args [11091,11095]
            operator: > [11095,11096]
            name [11104,11138]
                name: PushAllHelper [11104,11117]
                argument_list [11117,11138]
                    argument [11118,11122]
                        name: Arg1 [11118,11122]
                    argument [11124,11128]
                        name: Arg2 [11124,11128]
                    argument [11130,11137]
                        name: Args [11130,11134]
                        modifier: ... [11134,11137]
            block [11139,11801]
                expr [11143,11799]
                    specifier: static [11143,11149]
                    name: void [11150,11154]
                    macro [11155,11239]
                        name: Push [11155,11159]
                        argument_list [11159,11239]
                            argument [11160,11183]
                            argument [11185,11194]
                            argument [11196,11205]
                            argument [11226,11238]
                    block [11240,11459]
                        expr [11246,11454]
                            block [11246,11427]
                                expr [11254,11305]
                                    name [11254,11293]
                                        name: BaselineAssembler [11254,11271]
                                        operator: :: [11271,11273]
                                        name: ScratchRegisterScope [11273,11293]
                                    call [11294,11305]
                                        name: scope [11294,11299]
                                        argument_list [11299,11305]
                                            argument [11300,11304]
                                                expr [11300,11304]
                                                    name: basm [11300,11304]
                                expr [11313,11420]
                                    call [11313,11325]
                                        name [11313,11323]
                                            name: basm [11313,11317]
                                            operator: -> [11317,11319]
                                            name: masm [11319,11323]
                                        argument_list [11323,11325]
                                    operator: -> [11325,11327]
                                    call [11327,11420]
                                        name: Push [11327,11331]
                                        argument_list [11331,11420]
                                            argument [11332,11362]
                                                expr [11332,11362]
                                                    call [11332,11362]
                                                        name: ToRegister [11332,11342]
                                                        argument_list [11342,11362]
                                                            argument [11343,11347]
                                                                expr [11343,11347]
                                                                    name: basm [11343,11347]
                                                            argument [11349,11355]
                                                                expr [11349,11355]
                                                                    operator: & [11349,11350]
                                                                    name: scope [11350,11355]
                                                            argument [11357,11361]
                                                                expr [11357,11361]
                                                                    name: arg1 [11357,11361]
                                            argument [11389,11419]
                                                expr [11389,11419]
                                                    call [11389,11419]
                                                        name: ToRegister [11389,11399]
                                                        argument_list [11399,11419]
                                                            argument [11400,11404]
                                                                expr [11400,11404]
                                                                    name: basm [11400,11404]
                                                            argument [11406,11412]
                                                                expr [11406,11412]
                                                                    operator: & [11406,11407]
                                                                    name: scope [11407,11412]
                                                            argument [11414,11418]
                                                                expr [11414,11418]
                                                                    name: arg2 [11414,11418]
                            call [11432,11454]
                                name: PushAll [11432,11439]
                                argument_list [11439,11454]
                                    argument [11440,11444]
                                        expr [11440,11444]
                                            name: basm [11440,11444]
                                    argument [11446,11453]
                                        expr [11446,11453]
                                            name: args [11446,11450]
                                            operator: ... [11450,11453]
                    specifier: static [11462,11468]
                    name: void [11469,11473]
                    macro [11474,11572]
                        name: PushReverse [11474,11485]
                        argument_list [11485,11572]
                            argument [11486,11509]
                            argument [11511,11520]
                            argument [11522,11531]
                            argument [11559,11571]
                    block [11573,11799]
                        expr [11579,11608]
                            call [11579,11608]
                                name: PushAllReverse [11579,11593]
                                argument_list [11593,11608]
                                    argument [11594,11598]
                                        expr [11594,11598]
                                            name: basm [11594,11598]
                                    argument [11600,11607]
                                        expr [11600,11607]
                                            name: args [11600,11604]
                                            operator: ... [11604,11607]
                        expr [11614,11795]
                            block [11614,11795]
                                expr [11622,11673]
                                    name [11622,11661]
                                        name: BaselineAssembler [11622,11639]
                                        operator: :: [11639,11641]
                                        name: ScratchRegisterScope [11641,11661]
                                    call [11662,11673]
                                        name: scope [11662,11667]
                                        argument_list [11667,11673]
                                            argument [11668,11672]
                                                expr [11668,11672]
                                                    name: basm [11668,11672]
                                expr [11681,11788]
                                    call [11681,11693]
                                        name [11681,11691]
                                            name: basm [11681,11685]
                                            operator: -> [11685,11687]
                                            name: masm [11687,11691]
                                        argument_list [11691,11693]
                                    operator: -> [11693,11695]
                                    call [11695,11788]
                                        name: Push [11695,11699]
                                        argument_list [11699,11788]
                                            argument [11700,11730]
                                                expr [11700,11730]
                                                    call [11700,11730]
                                                        name: ToRegister [11700,11710]
                                                        argument_list [11710,11730]
                                                            argument [11711,11715]
                                                                expr [11711,11715]
                                                                    name: basm [11711,11715]
                                                            argument [11717,11723]
                                                                expr [11717,11723]
                                                                    operator: & [11717,11718]
                                                                    name: scope [11718,11723]
                                                            argument [11725,11729]
                                                                expr [11725,11729]
                                                                    name: arg2 [11725,11729]
                                            argument [11757,11787]
                                                expr [11757,11787]
                                                    call [11757,11787]
                                                        name: ToRegister [11757,11767]
                                                        argument_list [11767,11787]
                                                            argument [11768,11772]
                                                                expr [11768,11772]
                                                                    name: basm [11768,11772]
                                                            argument [11774,11780]
                                                                expr [11774,11780]
                                                                    operator: & [11774,11775]
                                                                    name: scope [11775,11780]
                                                            argument [11782,11786]
                                                                expr [11782,11786]
                                                                    name: arg1 [11782,11786]
    comment: // Currently RegisterLists are always be the last argument, so we don't [11803,11874]
    comment: // specialize for the case where they're not. We do still specialise for the [11875,11951]
    comment: // aligned and unaligned cases. [11952,11983]
    macro [11984,11992]
        name: template [11984,11992]
    expr_stmt [11993,12534]
        expr [11993,12534]
            operator: < [11993,11994]
            name: typename [11994,12002]
            name: Arg [12003,12006]
            operator: > [12006,12007]
            name [12015,12060]
                name: PushAllHelper [12015,12028]
                argument_list [12028,12060]
                    argument [12029,12032]
                        name: Arg [12029,12032]
                    argument [12034,12059]
                        name [12034,12059]
                            name: interpreter [12034,12045]
                            operator: :: [12045,12047]
                            name: RegisterList [12047,12059]
            block [12061,12534]
                expr [12065,12463]
                    specifier: static [12065,12071]
                    name: void [12072,12076]
                    macro [12077,12166]
                        name: Push [12077,12081]
                        argument_list [12081,12166]
                            argument [12082,12105]
                            argument [12107,12114]
                            argument [12135,12165]
                    block [12167,12266]
                        expr [12173,12212]
                            call [12173,12212]
                                name: DCHECK_EQ [12173,12182]
                                argument_list [12182,12212]
                                    argument [12183,12208]
                                        expr [12183,12208]
                                            call [12183,12204]
                                                name [12183,12202]
                                                    name: list [12183,12187]
                                                    operator: . [12187,12188]
                                                    name: register_count [12188,12202]
                                                argument_list [12202,12204]
                                            operator: % [12205,12206]
                                            literal: 2 [12207,12208]
                                    argument [12210,12211]
                                        expr [12210,12211]
                                            literal: 1 [12210,12211]
                        expr [12218,12261]
                            call [12218,12261]
                                name: PushAll [12218,12225]
                                argument_list [12225,12261]
                                    argument [12226,12230]
                                        expr [12226,12230]
                                            name: basm [12226,12230]
                                    argument [12232,12235]
                                        expr [12232,12235]
                                            name: arg [12232,12235]
                                    argument [12237,12244]
                                        expr [12237,12244]
                                            name [12237,12244]
                                                name: list [12237,12241]
                                                index [12241,12244]
                                                    expr [12242,12243]
                                                        literal: 0 [12242,12243]
                                    argument [12246,12260]
                                        expr [12246,12260]
                                            call [12246,12260]
                                                name [12246,12258]
                                                    name: list [12246,12250]
                                                    operator: . [12250,12251]
                                                    name: PopLeft [12251,12258]
                                                argument_list [12258,12260]
                    specifier: static [12269,12275]
                    name: void [12276,12280]
                    macro [12281,12384]
                        name: PushReverse [12281,12292]
                        argument_list [12292,12384]
                            argument [12293,12316]
                            argument [12318,12325]
                            argument [12353,12383]
                    block [12385,12463]
                        if_stmt [12391,12457]
                            if [12391,12457]
                                condition [12394,12422]
                                    expr [12395,12421]
                                        call [12395,12416]
                                            name [12395,12414]
                                                name: list [12395,12399]
                                                operator: . [12399,12400]
                                                name: register_count [12400,12414]
                                            argument_list [12414,12416]
                                        operator: == [12417,12419]
                                        literal: 0 [12420,12421]
                                block [12423,12457]
                                    block_content [12431,12457]
                                        expr_stmt [12431,12457]
                                            expr [12431,12456]
                                                call [12431,12456]
                                                    name: PushAllReverse [12431,12445]
                                                    argument_list [12445,12456]
                                                        argument [12446,12450]
                                                            expr [12446,12450]
                                                                name: basm [12446,12450]
                                                        argument [12452,12455]
                                                            expr [12452,12455]
                                                                name: arg [12452,12455]
                                        expr_stmt [0,0]
                if_stmt [12464,12528]
                    else [12464,12528]
                        block [12469,12528]
                            block_content [12477,12528]
                                expr_stmt [12477,12528]
                                    expr [12477,12527]
                                        call [12477,12527]
                                            name: PushAllReverse [12477,12491]
                                            argument_list [12491,12527]
                                                argument [12492,12496]
                                                    expr [12492,12496]
                                                        name: basm [12492,12496]
                                                argument [12498,12501]
                                                    expr [12498,12501]
                                                        name: arg [12498,12501]
                                                argument [12503,12510]
                                                    expr [12503,12510]
                                                        name [12503,12510]
                                                            name: list [12503,12507]
                                                            index [12507,12510]
                                                                expr [12508,12509]
                                                                    literal: 0 [12508,12509]
                                                argument [12512,12526]
                                                    expr [12512,12526]
                                                        call [12512,12526]
                                                            name [12512,12524]
                                                                name: list [12512,12516]
                                                                operator: . [12516,12517]
                                                                name: PopLeft [12517,12524]
                                                            argument_list [12524,12526]
                                expr_stmt [0,0]
    empty_stmt [12540,12541]
    macro [12542,12550]
        name: template [12542,12550]
    expr_stmt [12551,13218]
        expr [12551,13218]
            operator: < [12551,12552]
            operator: > [12552,12553]
            name [12561,12601]
                name: PushAllHelper [12561,12574]
                argument_list [12574,12601]
                    argument [12575,12600]
                        name [12575,12600]
                            name: interpreter [12575,12586]
                            operator: :: [12586,12588]
                            name: RegisterList [12588,12600]
            block [12602,12876]
                expr [12606,12872]
                    specifier: static [12606,12612]
                    name: void [12613,12617]
                    macro [12618,12679]
                        name: Push [12618,12622]
                        argument_list [12622,12679]
                            argument [12623,12646]
                            argument [12648,12678]
                    block [12680,12872]
                        expr [12686,12725]
                            call [12686,12725]
                                name: DCHECK_EQ [12686,12695]
                                argument_list [12695,12725]
                                    argument [12696,12721]
                                        expr [12696,12721]
                                            call [12696,12717]
                                                name [12696,12715]
                                                    name: list [12696,12700]
                                                    operator: . [12700,12701]
                                                    name: register_count [12701,12715]
                                                argument_list [12715,12717]
                                            operator: % [12718,12719]
                                            literal: 2 [12720,12721]
                                    argument [12723,12724]
                                        expr [12723,12724]
                                            literal: 0 [12723,12724]
                        for [12731,12866]
                            control [12735,12805]
                                init [12736,12754]
                                    decl [12736,12753]
                                        type [12736,12739]
                                            name: int [12736,12739]
                                        name: reg_index [12740,12749]
                                        init [12750,12753]
                                            expr [12752,12753]
                                                literal: 0 [12752,12753]
                                condition [12755,12789]
                                    expr [12755,12788]
                                        name: reg_index [12755,12764]
                                        operator: < [12765,12766]
                                        call [12767,12788]
                                            name [12767,12786]
                                                name: list [12767,12771]
                                                operator: . [12771,12772]
                                                name: register_count [12772,12786]
                                            argument_list [12786,12788]
                                incr [12790,12804]
                                    expr [12790,12804]
                                        name: reg_index [12790,12799]
                                        operator: += [12800,12802]
                                        literal: 2 [12803,12804]
                            block [12806,12866]
                                block_content [12814,12866]
                                    expr_stmt [12814,12866]
                                        expr [12814,12865]
                                            call [12814,12865]
                                                name: PushAll [12814,12821]
                                                argument_list [12821,12865]
                                                    argument [12822,12826]
                                                        expr [12822,12826]
                                                            name: basm [12822,12826]
                                                    argument [12828,12843]
                                                        expr [12828,12843]
                                                            name [12828,12843]
                                                                name: list [12828,12832]
                                                                index [12832,12843]
                                                                    expr [12833,12842]
                                                                        name: reg_index [12833,12842]
                                                    argument [12845,12864]
                                                        expr [12845,12864]
                                                            name [12845,12864]
                                                                name: list [12845,12849]
                                                                index [12849,12864]
                                                                    expr [12850,12863]
                                                                        name: reg_index [12850,12859]
                                                                        operator: + [12860,12861]
                                                                        literal: 1 [12862,12863]
                                    expr_stmt [0,0]
            specifier: static [12879,12885]
            name: void [12886,12890]
            macro [12891,12985]
                name: PushReverse [12891,12902]
                argument_list [12902,12985]
                    argument [12903,12926]
                    argument [12954,12984]
            block [12986,13218]
                expr [12992,13033]
                    name: int [12992,12995]
                    name: reg_index [12996,13005]
                    operator: = [13006,13007]
                    call [13008,13029]
                        name [13008,13027]
                            name: list [13008,13012]
                            operator: . [13012,13013]
                            name: register_count [13013,13027]
                        argument_list [13027,13029]
                    operator: - [13030,13031]
                    literal: 1 [13032,13033]
                if_stmt [13039,13212]
                    if [13039,13212]
                        condition [13042,13062]
                            expr [13043,13061]
                                name: reg_index [13043,13052]
                                operator: % [13053,13054]
                                literal: 2 [13055,13056]
                                operator: == [13057,13059]
                                literal: 0 [13060,13061]
                        block [13063,13212]
                            block_content [13147,13212]
                                comment: // Push the padding register to round up the amount of values pushed. [13071,13140]
                                expr_stmt [13147,13193]
                                    expr [13147,13192]
                                        call [13147,13192]
                                            name: PushAllReverse [13147,13161]
                                            argument_list [13161,13192]
                                                argument [13162,13166]
                                                    expr [13162,13166]
                                                        name: basm [13162,13166]
                                                argument [13168,13183]
                                                    expr [13168,13183]
                                                        name [13168,13183]
                                                            name: list [13168,13172]
                                                            index [13172,13183]
                                                                expr [13173,13182]
                                                                    name: reg_index [13173,13182]
                                                argument [13185,13191]
                                                    expr [13185,13191]
                                                        name: padreg [13185,13191]
                                expr_stmt [13200,13212]
                                    expr [13200,13211]
                                        name: reg_index [13200,13209]
                                        operator: -- [13209,13211]
                                expr_stmt [0,0]
    for [13223,13335]
        control [13227,13261]
            init [13228,13229]
            condition [13230,13245]
                expr [13230,13244]
                    name: reg_index [13230,13239]
                    operator: >= [13240,13242]
                    literal: 1 [13243,13244]
            incr [13246,13260]
                expr [13246,13260]
                    name: reg_index [13246,13255]
                    operator: -= [13256,13258]
                    literal: 2 [13259,13260]
        block [13262,13335]
            block_content [13270,13329]
                expr_stmt [13270,13329]
                    expr [13270,13328]
                        call [13270,13328]
                            name: PushAllReverse [13270,13284]
                            argument_list [13284,13328]
                                argument [13285,13289]
                                    expr [13285,13289]
                                        name: basm [13285,13289]
                                argument [13291,13310]
                                    expr [13291,13310]
                                        name [13291,13310]
                                            name: list [13291,13295]
                                            index [13295,13310]
                                                expr [13296,13309]
                                                    name: reg_index [13296,13305]
                                                    operator: - [13306,13307]
                                                    literal: 1 [13308,13309]
                                argument [13312,13327]
                                    expr [13312,13327]
                                        name [13312,13327]
                                            name: list [13312,13316]
                                            index [13316,13327]
                                                expr [13317,13326]
                                                    name: reg_index [13317,13326]
    empty_stmt [13341,13342]
    macro [13344,13352]
        name: template [13344,13352]
    expr_stmt [13353,13389]
        expr [13353,13388]
            operator: < [13353,13354]
            name: typename [13354,13362]
            operator: ... [13362,13365]
            name: T [13366,13367]
            operator: > [13367,13368]
            name: PopAllHelper [13376,13388]
    macro [13390,13398]
        name: template [13390,13398]
    expr_stmt [13399,13474]
        expr [13399,13473]
            operator: < [13399,13400]
            operator: > [13400,13401]
            name [13409,13423]
                name: PopAllHelper [13409,13421]
                argument_list [13421,13423]
            block [13424,13473]
                expr [13428,13471]
                    specifier: static [13428,13434]
                    name: void [13435,13439]
                    macro [13440,13468]
                        name: Pop [13440,13443]
                        argument_list [13443,13468]
                            argument [13444,13467]
                    block [13469,13471]
    macro [13475,13483]
        name: template [13475,13483]
    expr_stmt [13484,13620]
        expr [13484,13619]
            operator: < [13484,13485]
            operator: > [13485,13486]
            name [13494,13516]
                name: PopAllHelper [13494,13506]
                argument_list [13506,13516]
                    argument [13507,13515]
                        name: Register [13507,13515]
            block [13517,13619]
                expr [13521,13617]
                    specifier: static [13521,13527]
                    name: void [13528,13532]
                    macro [13533,13575]
                        name: Pop [13533,13536]
                        argument_list [13536,13575]
                            argument [13537,13560]
                            argument [13562,13574]
                    block [13576,13617]
                        expr [13582,13612]
                            call [13582,13594]
                                name [13582,13592]
                                    name: basm [13582,13586]
                                    operator: -> [13586,13588]
                                    name: masm [13588,13592]
                                argument_list [13592,13594]
                            operator: -> [13594,13596]
                            call [13596,13612]
                                name: Pop [13596,13599]
                                argument_list [13599,13612]
                                    argument [13600,13603]
                                        expr [13600,13603]
                                            name: reg [13600,13603]
                                    argument [13605,13611]
                                        expr [13605,13611]
                                            name: padreg [13605,13611]
    macro [13621,13629]
        name: template [13621,13629]
    expr_stmt [13630,13883]
        expr [13630,13882]
            operator: < [13630,13631]
            name: typename [13631,13639]
            operator: ... [13639,13642]
            name: T [13643,13644]
            operator: > [13644,13645]
            name [13653,13691]
                name: PopAllHelper [13653,13665]
                argument_list [13665,13691]
                    argument [13666,13674]
                        name: Register [13666,13674]
                    argument [13676,13684]
                        name: Register [13676,13684]
                    argument [13686,13690]
                        name: T [13686,13687]
                        modifier: ... [13687,13690]
            block [13692,13882]
                expr [13696,13880]
                    specifier: static [13696,13702]
                    name: void [13703,13707]
                    macro [13708,13795]
                        name: Pop [13708,13711]
                        argument_list [13711,13795]
                            argument [13712,13735]
                            argument [13737,13750]
                            argument [13752,13765]
                            argument [13785,13794]
                    block [13796,13880]
                        expr [13802,13831]
                            call [13802,13814]
                                name [13802,13812]
                                    name: basm [13802,13806]
                                    operator: -> [13806,13808]
                                    name: masm [13808,13812]
                                argument_list [13812,13814]
                            operator: -> [13814,13816]
                            call [13816,13831]
                                name: Pop [13816,13819]
                                argument_list [13819,13831]
                                    argument [13820,13824]
                                        expr [13820,13824]
                                            name: reg1 [13820,13824]
                                    argument [13826,13830]
                                        expr [13826,13830]
                                            name: reg2 [13826,13830]
                        expr [13837,13875]
                            call [13837,13875]
                                name [13837,13860]
                                    name [13837,13855]
                                        name: PopAllHelper [13837,13849]
                                        argument_list [13849,13855]
                                            argument [13850,13854]
                                                name: T [13850,13851]
                                                modifier: ... [13851,13854]
                                    operator: :: [13855,13857]
                                    name: Pop [13857,13860]
                                argument_list [13860,13875]
                                    argument [13861,13865]
                                        expr [13861,13865]
                                            name: basm [13861,13865]
                                    argument [13867,13874]
                                        expr [13867,13874]
                                            name: tail [13867,13871]
                                            operator: ... [13871,13874]
    comment: // namespace detail [13888,13907]
    expr_stmt [13918,14210]
        expr [13918,14210]
            operator: < [13918,13919]
            name: typename [13919,13927]
            operator: ... [13927,13930]
            name: T [13931,13932]
            operator: > [13932,13933]
            name: int [13934,13937]
            macro [13938,13955]
                name: BaselineAssembler [13938,13955]
            name [13955,13961]
                operator: :: [13955,13957]
                name: Push [13957,13961]
            operator: ( [13961,13962]
            name: T [13962,13963]
            operator: ... [13963,13966]
            name: vals [13967,13971]
            operator: ) [13971,13972]
            block [13973,14210]
                comment: // We have to count the pushes first, to decide whether to add padding before [13977,14054]
                comment: // the first push. [14057,14075]
                expr [14078,14140]
                    name: int [14078,14081]
                    name: push_count [14082,14092]
                    operator: = [14093,14094]
                    call [14095,14140]
                        name [14095,14131]
                            name: detail [14095,14101]
                            operator: :: [14101,14103]
                            name [14103,14124]
                                name: CountPushHelper [14103,14118]
                                argument_list [14118,14124]
                                    argument [14119,14123]
                                        name: T [14119,14120]
                                        modifier: ... [14120,14123]
                            operator: :: [14124,14126]
                            name: Count [14126,14131]
                        argument_list [14131,14140]
                            argument [14132,14139]
                                expr [14132,14139]
                                    name: vals [14132,14136]
                                    operator: ... [14136,14139]
                if_stmt [14144,14206]
                    if [14144,14206]
                        condition [14147,14168]
                            expr [14148,14167]
                                name: push_count [14148,14158]
                                operator: % [14159,14160]
                                literal: 2 [14161,14162]
                                operator: == [14163,14165]
                                literal: 0 [14166,14167]
                        block [14169,14206]
                            block_content [14175,14206]
                                expr_stmt [14175,14206]
                                    expr [14175,14205]
                                        call [14175,14205]
                                            name [14175,14190]
                                                name: detail [14175,14181]
                                                operator: :: [14181,14183]
                                                name: PushAll [14183,14190]
                                            argument_list [14190,14205]
                                                argument [14191,14195]
                                                    expr [14191,14195]
                                                        name: this [14191,14195]
                                                argument [14197,14204]
                                                    expr [14197,14204]
                                                        name: vals [14197,14201]
                                                        operator: ... [14201,14204]
                                expr_stmt [0,0]
    if_stmt [14211,14265]
        else [14211,14265]
            block [14216,14265]
                block_content [14222,14261]
                    expr_stmt [14222,14261]
                        expr [14222,14260]
                            call [14222,14260]
                                name [14222,14237]
                                    name: detail [14222,14228]
                                    operator: :: [14228,14230]
                                    name: PushAll [14230,14237]
                                argument_list [14237,14260]
                                    argument [14238,14242]
                                        expr [14238,14242]
                                            name: this [14238,14242]
                                    argument [14244,14250]
                                        expr [14244,14250]
                                            name: padreg [14244,14250]
                                    argument [14252,14259]
                                        expr [14252,14259]
                                            name: vals [14252,14256]
                                            operator: ... [14256,14259]
    return [14268,14286]
        expr [14275,14285]
            name: push_count [14275,14285]
    expr_stmt [14299,18598]
        expr [14299,18598]
            operator: < [14299,14300]
            name: typename [14300,14308]
            operator: ... [14308,14311]
            name: T [14312,14313]
            operator: > [14313,14314]
            name: void [14315,14319]
            macro [14320,14337]
                name: BaselineAssembler [14320,14337]
            name [14337,14350]
                operator: :: [14337,14339]
                name: PushReverse [14339,14350]
            operator: ( [14350,14351]
            name: T [14351,14352]
            operator: ... [14352,14355]
            name: vals [14356,14360]
            operator: ) [14360,14361]
            block [14362,14406]
                expr [14366,14403]
                    call [14366,14403]
                        name [14366,14388]
                            name: detail [14366,14372]
                            operator: :: [14372,14374]
                            name: PushAllReverse [14374,14388]
                        argument_list [14388,14403]
                            argument [14389,14393]
                                expr [14389,14393]
                                    name: this [14389,14393]
                            argument [14395,14402]
                                expr [14395,14402]
                                    name: vals [14395,14399]
                                    operator: ... [14399,14402]
            name [14408,14432]
                name: template [14408,14416]
                argument_list [14417,14432]
                    argument [14418,14431]
                        name: typename [14418,14426]
                        modifier: ... [14426,14429]
                        name: T [14430,14431]
            name: void [14433,14437]
            macro [14438,14455]
                name: BaselineAssembler [14438,14455]
            name [14455,14460]
                operator: :: [14455,14457]
                name: Pop [14457,14460]
            operator: ( [14460,14461]
            name: T [14461,14462]
            operator: ... [14462,14465]
            name: registers [14466,14475]
            operator: ) [14475,14476]
            block [14477,14535]
                expr [14481,14532]
                    call [14481,14532]
                        name [14481,14512]
                            name: detail [14481,14487]
                            operator: :: [14487,14489]
                            name [14489,14507]
                                name: PopAllHelper [14489,14501]
                                argument_list [14501,14507]
                                    argument [14502,14506]
                                        name: T [14502,14503]
                                        modifier: ... [14503,14506]
                            operator: :: [14507,14509]
                            name: Pop [14509,14512]
                        argument_list [14512,14532]
                            argument [14513,14517]
                                expr [14513,14517]
                                    name: this [14513,14517]
                            argument [14519,14531]
                                expr [14519,14531]
                                    name: registers [14519,14528]
                                    operator: ... [14528,14531]
            name: void [14537,14541]
            macro [14542,14559]
                name: BaselineAssembler [14542,14559]
            name [14559,14583]
                operator: :: [14559,14561]
                name: LoadTaggedPointerField [14561,14583]
            operator: ( [14583,14584]
            name: Register [14584,14592]
            name: output [14593,14599]
            operator: , [14599,14600]
            name: Register [14601,14609]
            name: source [14610,14616]
            operator: , [14616,14617]
            name: int [14665,14668]
            name: offset [14669,14675]
            operator: ) [14675,14676]
            block [14677,14750]
                expr [14681,14747]
                    name: __ [14681,14683]
                    call [14684,14747]
                        name: LoadTaggedPointerField [14684,14706]
                        argument_list [14706,14747]
                            argument [14707,14713]
                                expr [14707,14713]
                                    name: output [14707,14713]
                            argument [14715,14746]
                                expr [14715,14746]
                                    call [14715,14746]
                                        name: FieldMemOperand [14715,14730]
                                        argument_list [14730,14746]
                                            argument [14731,14737]
                                                expr [14731,14737]
                                                    name: source [14731,14737]
                                            argument [14739,14745]
                                                expr [14739,14745]
                                                    name: offset [14739,14745]
            name: void [14752,14756]
            macro [14757,14774]
                name: BaselineAssembler [14757,14774]
            name [14774,14797]
                operator: :: [14774,14776]
                name: LoadTaggedSignedField [14776,14797]
            operator: ( [14797,14798]
            name: Register [14798,14806]
            name: output [14807,14813]
            operator: , [14813,14814]
            name: Register [14815,14823]
            name: source [14824,14830]
            operator: , [14830,14831]
            name: int [14878,14881]
            name: offset [14882,14888]
            operator: ) [14888,14889]
            block [14890,14962]
                expr [14894,14959]
                    name: __ [14894,14896]
                    call [14897,14959]
                        name: LoadTaggedSignedField [14897,14918]
                        argument_list [14918,14959]
                            argument [14919,14925]
                                expr [14919,14925]
                                    name: output [14919,14925]
                            argument [14927,14958]
                                expr [14927,14958]
                                    call [14927,14958]
                                        name: FieldMemOperand [14927,14942]
                                        argument_list [14942,14958]
                                            argument [14943,14949]
                                                expr [14943,14949]
                                                    name: source [14943,14949]
                                            argument [14951,14957]
                                                expr [14951,14957]
                                                    name: offset [14951,14957]
            name: void [14964,14968]
            macro [14969,14986]
                name: BaselineAssembler [14969,14986]
            name [14986,15006]
                operator: :: [14986,14988]
                name: LoadTaggedAnyField [14988,15006]
            operator: ( [15006,15007]
            name: Register [15007,15015]
            name: output [15016,15022]
            operator: , [15022,15023]
            name: Register [15024,15032]
            name: source [15033,15039]
            operator: , [15039,15040]
            name: int [15084,15087]
            name: offset [15088,15094]
            operator: ) [15094,15095]
            block [15096,15165]
                expr [15100,15162]
                    name: __ [15100,15102]
                    call [15103,15162]
                        name: LoadAnyTaggedField [15103,15121]
                        argument_list [15121,15162]
                            argument [15122,15128]
                                expr [15122,15128]
                                    name: output [15122,15128]
                            argument [15130,15161]
                                expr [15130,15161]
                                    call [15130,15161]
                                        name: FieldMemOperand [15130,15145]
                                        argument_list [15145,15161]
                                            argument [15146,15152]
                                                expr [15146,15152]
                                                    name: source [15146,15152]
                                            argument [15154,15160]
                                                expr [15154,15160]
                                                    name: offset [15154,15160]
            name: void [15167,15171]
            macro [15172,15189]
                name: BaselineAssembler [15172,15189]
            name [15189,15216]
                operator: :: [15189,15191]
                name: LoadWord16FieldZeroExtend [15191,15216]
            operator: ( [15216,15217]
            name: Register [15217,15225]
            name: output [15226,15232]
            operator: , [15232,15233]
            name: Register [15284,15292]
            name: source [15293,15299]
            operator: , [15299,15300]
            name: int [15301,15304]
            name: offset [15305,15311]
            operator: ) [15311,15312]
            block [15313,15368]
                expr [15317,15365]
                    name: __ [15317,15319]
                    call [15320,15365]
                        name: Ldrh [15320,15324]
                        argument_list [15324,15365]
                            argument [15325,15331]
                                expr [15325,15331]
                                    name: output [15325,15331]
                            argument [15333,15364]
                                expr [15333,15364]
                                    call [15333,15364]
                                        name: FieldMemOperand [15333,15348]
                                        argument_list [15348,15364]
                                            argument [15349,15355]
                                                expr [15349,15355]
                                                    name: source [15349,15355]
                                            argument [15357,15363]
                                                expr [15357,15363]
                                                    name: offset [15357,15363]
            name: void [15370,15374]
            macro [15375,15392]
                name: BaselineAssembler [15375,15392]
            name [15392,15408]
                operator: :: [15392,15394]
                name: LoadWord8Field [15394,15408]
            operator: ( [15408,15409]
            name: Register [15409,15417]
            name: output [15418,15424]
            operator: , [15424,15425]
            name: Register [15426,15434]
            name: source [15435,15441]
            operator: , [15441,15442]
            name: int [15482,15485]
            name: offset [15486,15492]
            operator: ) [15492,15493]
            block [15494,15549]
                expr [15498,15546]
                    name: __ [15498,15500]
                    call [15501,15546]
                        name: Ldrb [15501,15505]
                        argument_list [15505,15546]
                            argument [15506,15512]
                                expr [15506,15512]
                                    name: output [15506,15512]
                            argument [15514,15545]
                                expr [15514,15545]
                                    call [15514,15545]
                                        name: FieldMemOperand [15514,15529]
                                        argument_list [15529,15545]
                                            argument [15530,15536]
                                                expr [15530,15536]
                                                    name: source [15530,15536]
                                            argument [15538,15544]
                                                expr [15538,15544]
                                                    name: offset [15538,15544]
            name: void [15551,15555]
            macro [15556,15573]
                name: BaselineAssembler [15556,15573]
            name [15573,15597]
                operator: :: [15573,15575]
                name: StoreTaggedSignedField [15575,15597]
            operator: ( [15597,15598]
            name: Register [15598,15606]
            name: target [15607,15613]
            operator: , [15613,15614]
            name: int [15615,15618]
            name: offset [15619,15625]
            operator: , [15625,15626]
            name: Smi [15674,15677]
            name: value [15678,15683]
            operator: ) [15683,15684]
            block [15685,15884]
                expr [15689,15712]
                    call [15689,15712]
                        name: ASM_CODE_COMMENT [15689,15705]
                        argument_list [15705,15712]
                            argument [15706,15711]
                                expr [15706,15711]
                                    name: masm_ [15706,15711]
                expr [15716,15748]
                    name: ScratchRegisterScope [15716,15736]
                    call [15737,15748]
                        name: temps [15737,15742]
                        argument_list [15742,15748]
                            argument [15743,15747]
                                expr [15743,15747]
                                    name: this [15743,15747]
                expr [15752,15789]
                    name: Register [15752,15760]
                    name: tmp [15761,15764]
                    operator: = [15765,15766]
                    call [15767,15789]
                        name [15767,15787]
                            name: temps [15767,15772]
                            operator: . [15772,15773]
                            name: AcquireScratch [15773,15787]
                        argument_list [15787,15789]
                expr [15793,15820]
                    name: __ [15793,15795]
                    call [15796,15820]
                        name: Mov [15796,15799]
                        argument_list [15799,15820]
                            argument [15800,15803]
                                expr [15800,15803]
                                    name: tmp [15800,15803]
                            argument [15805,15819]
                                expr [15805,15819]
                                    call [15805,15819]
                                        name: Operand [15805,15812]
                                        argument_list [15812,15819]
                                            argument [15813,15818]
                                                expr [15813,15818]
                                                    name: value [15813,15818]
                expr [15824,15881]
                    name: __ [15824,15826]
                    call [15827,15881]
                        name: StoreTaggedField [15827,15843]
                        argument_list [15843,15881]
                            argument [15844,15847]
                                expr [15844,15847]
                                    name: tmp [15844,15847]
                            argument [15849,15880]
                                expr [15849,15880]
                                    call [15849,15880]
                                        name: FieldMemOperand [15849,15864]
                                        argument_list [15864,15880]
                                            argument [15865,15871]
                                                expr [15865,15871]
                                                    name: target [15865,15871]
                                            argument [15873,15879]
                                                expr [15873,15879]
                                                    name: offset [15873,15879]
            name: void [15886,15890]
            macro [15891,15908]
                name: BaselineAssembler [15891,15908]
            name [15908,15942]
                operator: :: [15908,15910]
                name: StoreTaggedFieldWithWriteBarrier [15910,15942]
            operator: ( [15942,15943]
            name: Register [15943,15951]
            name: target [15952,15958]
            operator: , [15958,15959]
            name: int [16017,16020]
            name: offset [16021,16027]
            operator: , [16027,16028]
            name: Register [16086,16094]
            name: value [16095,16100]
            operator: ) [16100,16101]
            block [16102,16308]
                expr [16106,16129]
                    call [16106,16129]
                        name: ASM_CODE_COMMENT [16106,16122]
                        argument_list [16122,16129]
                            argument [16123,16128]
                                expr [16123,16128]
                                    name: masm_ [16123,16128]
                expr [16133,16192]
                    name: __ [16133,16135]
                    call [16136,16192]
                        name: StoreTaggedField [16136,16152]
                        argument_list [16152,16192]
                            argument [16153,16158]
                                expr [16153,16158]
                                    name: value [16153,16158]
                            argument [16160,16191]
                                expr [16160,16191]
                                    call [16160,16191]
                                        name: FieldMemOperand [16160,16175]
                                        argument_list [16175,16191]
                                            argument [16176,16182]
                                                expr [16176,16182]
                                                    name: target [16176,16182]
                                            argument [16184,16190]
                                                expr [16184,16190]
                                                    name: offset [16184,16190]
                expr [16196,16305]
                    name: __ [16196,16198]
                    call [16199,16305]
                        name: RecordWriteField [16199,16215]
                        argument_list [16215,16305]
                            argument [16216,16222]
                                expr [16216,16222]
                                    name: target [16216,16222]
                            argument [16224,16230]
                                expr [16224,16230]
                                    name: offset [16224,16230]
                            argument [16232,16237]
                                expr [16232,16237]
                                    name: value [16232,16237]
                            argument [16239,16257]
                                expr [16239,16257]
                                    name: kLRHasNotBeenSaved [16239,16257]
                            argument [16281,16304]
                                expr [16281,16304]
                                    name [16281,16304]
                                        name: SaveFPRegsMode [16281,16295]
                                        operator: :: [16295,16297]
                                        name: kIgnore [16297,16304]
            name: void [16310,16314]
            macro [16315,16332]
                name: BaselineAssembler [16315,16332]
            name [16332,16364]
                operator: :: [16332,16334]
                name: StoreTaggedFieldNoWriteBarrier [16334,16364]
            operator: ( [16364,16365]
            name: Register [16365,16373]
            name: target [16374,16380]
            operator: , [16380,16381]
            name: int [16437,16440]
            name: offset [16441,16447]
            operator: , [16447,16448]
            name: Register [16504,16512]
            name: value [16513,16518]
            operator: ) [16518,16519]
            block [16520,16586]
                expr [16524,16583]
                    name: __ [16524,16526]
                    call [16527,16583]
                        name: StoreTaggedField [16527,16543]
                        argument_list [16543,16583]
                            argument [16544,16549]
                                expr [16544,16549]
                                    name: value [16544,16549]
                            argument [16551,16582]
                                expr [16551,16582]
                                    call [16551,16582]
                                        name: FieldMemOperand [16551,16566]
                                        argument_list [16566,16582]
                                            argument [16567,16573]
                                                expr [16567,16573]
                                                    name: target [16567,16573]
                                            argument [16575,16581]
                                                expr [16575,16581]
                                                    name: offset [16575,16581]
            name: void [16588,16592]
            macro [16593,16610]
                name: BaselineAssembler [16593,16610]
            name [16610,16635]
                operator: :: [16610,16612]
                name: TryLoadOptimizedOsrCode [16612,16635]
            operator: ( [16635,16636]
            name: Register [16636,16644]
            name: scratch_and_result [16645,16663]
            operator: , [16663,16664]
            name: Register [16713,16721]
            name: feedback_vector [16722,16737]
            operator: , [16737,16738]
            name: FeedbackSlot [16787,16799]
            name: slot [16800,16804]
            operator: , [16804,16805]
            name: Label [16854,16859]
            operator: * [16859,16860]
            name: on_result [16861,16870]
            operator: , [16870,16871]
            name [16920,16935]
                name: Label [16920,16925]
                operator: :: [16925,16927]
                name: Distance [16927,16935]
            operator: ) [16935,16936]
            block [16937,17689]
                expr [16941,16958]
                    name: Label [16941,16946]
                    name: fallthrough [16947,16958]
                expr [16960,16970]
                    name: clear_slot [16960,16970]
                expr [16974,17107]
                    call [16974,17107]
                        name: LoadTaggedPointerField [16974,16996]
                        argument_list [16996,17107]
                            argument [16997,17015]
                                expr [16997,17015]
                                    name: scratch_and_result [16997,17015]
                            argument [17017,17032]
                                expr [17017,17032]
                                    name: feedback_vector [17017,17032]
                            argument [17059,17106]
                                expr [17059,17106]
                                    call [17059,17106]
                                        name [17059,17092]
                                            name: FeedbackVector [17059,17073]
                                            operator: :: [17073,17075]
                                            name: OffsetOfElementAt [17075,17092]
                                        argument_list [17092,17106]
                                            argument [17093,17105]
                                                expr [17093,17105]
                                                    call [17093,17105]
                                                        name [17093,17103]
                                                            name: slot [17093,17097]
                                                            operator: . [17097,17098]
                                                            name: ToInt [17098,17103]
                                                        argument_list [17103,17105]
                expr [17111,17181]
                    name: __ [17111,17113]
                    call [17114,17181]
                        name: LoadWeakValue [17114,17127]
                        argument_list [17127,17181]
                            argument [17128,17146]
                                expr [17128,17146]
                                    name: scratch_and_result [17128,17146]
                            argument [17148,17166]
                                expr [17148,17166]
                                    name: scratch_and_result [17148,17166]
                            argument [17168,17180]
                                expr [17168,17180]
                                    operator: & [17168,17169]
                                    name: fallthrough [17169,17180]
                comment: // Is it marked_for_deoptimization? If yes, clear the slot. [17186,17245]
                expr [17248,17447]
                    block [17248,17423]
                        expr [17254,17286]
                            name: ScratchRegisterScope [17254,17274]
                            call [17275,17286]
                                name: temps [17275,17280]
                                argument_list [17280,17286]
                                    argument [17281,17285]
                                        expr [17281,17285]
                                            name: this [17281,17285]
                        expr [17292,17397]
                            name: __ [17292,17294]
                            call [17295,17397]
                                name: JumpIfCodeTIsMarkedForDeoptimization [17295,17331]
                                argument_list [17331,17397]
                                    argument [17341,17359]
                                        expr [17341,17359]
                                            name: scratch_and_result [17341,17359]
                                    argument [17361,17383]
                                        expr [17361,17383]
                                            call [17361,17383]
                                                name [17361,17381]
                                                    name: temps [17361,17366]
                                                    operator: . [17366,17367]
                                                    name: AcquireScratch [17367,17381]
                                                argument_list [17381,17383]
                                    argument [17385,17396]
                                        expr [17385,17396]
                                            operator: & [17385,17386]
                                            name: clear_slot [17386,17396]
                        expr [17403,17418]
                            name: __ [17403,17405]
                            call [17406,17418]
                                name: B [17406,17407]
                                argument_list [17407,17418]
                                    argument [17408,17417]
                                        expr [17408,17417]
                                            name: on_result [17408,17417]
                    name: __ [17427,17429]
                    call [17430,17447]
                        name: bind [17430,17434]
                        argument_list [17434,17447]
                            argument [17435,17446]
                                expr [17435,17446]
                                    operator: & [17435,17436]
                                    name: clear_slot [17436,17446]
                expr [17451,17496]
                    name: __ [17451,17453]
                    macro [17454,17496]
                        name: Mov [17454,17457]
                        argument_list [17457,17496]
                            argument [17458,17476]
                            argument [17478,17495]
                expr [17500,17629]
                    call [17500,17629]
                        name: StoreTaggedFieldNoWriteBarrier [17500,17530]
                        argument_list [17530,17629]
                            argument [17538,17553]
                                expr [17538,17553]
                                    name: feedback_vector [17538,17553]
                            argument [17555,17602]
                                expr [17555,17602]
                                    call [17555,17602]
                                        name [17555,17588]
                                            name: FeedbackVector [17555,17569]
                                            operator: :: [17569,17571]
                                            name: OffsetOfElementAt [17571,17588]
                                        argument_list [17588,17602]
                                            argument [17589,17601]
                                                expr [17589,17601]
                                                    call [17589,17601]
                                                        name [17589,17599]
                                                            name: slot [17589,17593]
                                                            operator: . [17593,17594]
                                                            name: ToInt [17594,17599]
                                                        argument_list [17599,17601]
                            argument [17610,17628]
                                expr [17610,17628]
                                    name: scratch_and_result [17610,17628]
                expr [17634,17655]
                    name: __ [17634,17636]
                    call [17637,17655]
                        name: bind [17637,17641]
                        argument_list [17641,17655]
                            argument [17642,17654]
                                expr [17642,17654]
                                    operator: & [17642,17643]
                                    name: fallthrough [17643,17654]
                expr [17659,17686]
                    call [17659,17686]
                        name: Move [17659,17663]
                        argument_list [17663,17686]
                            argument [17664,17682]
                                expr [17664,17682]
                                    name: scratch_and_result [17664,17682]
                            argument [17684,17685]
                                expr [17684,17685]
                                    literal: 0 [17684,17685]
            name: void [17691,17695]
            macro [17696,17713]
                name: BaselineAssembler [17696,17713]
            name [17713,17755]
                operator: :: [17713,17715]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [17715,17755]
            operator: ( [17755,17756]
            name: int32_t [17761,17768]
            name: weight [17769,17775]
            operator: , [17775,17776]
            name: Label [17777,17782]
            operator: * [17782,17783]
            name: skip_interrupt_label [17784,17804]
            operator: ) [17804,17805]
            block [17806,18598]
                expr [17810,17833]
                    call [17810,17833]
                        name: ASM_CODE_COMMENT [17810,17826]
                        argument_list [17826,17833]
                            argument [17827,17832]
                                expr [17827,17832]
                                    name: masm_ [17827,17832]
                expr [17837,17877]
                    name: ScratchRegisterScope [17837,17857]
                    call [17858,17877]
                        name: scratch_scope [17858,17871]
                        argument_list [17871,17877]
                            argument [17872,17876]
                                expr [17872,17876]
                                    name: this [17872,17876]
                expr [17881,17936]
                    name: Register [17881,17889]
                    name: feedback_cell [17890,17903]
                    operator: = [17904,17905]
                    call [17906,17936]
                        name [17906,17934]
                            name: scratch_scope [17906,17919]
                            operator: . [17919,17920]
                            name: AcquireScratch [17920,17934]
                        argument_list [17934,17936]
                expr [17940,17967]
                    call [17940,17967]
                        name: LoadFunction [17940,17952]
                        argument_list [17952,17967]
                            argument [17953,17966]
                                expr [17953,17966]
                                    name: feedback_cell [17953,17966]
                expr [17971,18081]
                    call [17971,18081]
                        name: LoadTaggedPointerField [17971,17993]
                        argument_list [17993,18081]
                            argument [17994,18007]
                                expr [17994,18007]
                                    name: feedback_cell [17994,18007]
                            argument [18009,18022]
                                expr [18009,18022]
                                    name: feedback_cell [18009,18022]
                            argument [18049,18080]
                                expr [18049,18080]
                                    name [18049,18080]
                                        name: JSFunction [18049,18059]
                                        operator: :: [18059,18061]
                                        name: kFeedbackCellOffset [18061,18080]
                expr [18086,18148]
                    name: Register [18086,18094]
                    name: interrupt_budget [18095,18111]
                    operator: = [18112,18113]
                    call [18114,18144]
                        name [18114,18142]
                            name: scratch_scope [18114,18127]
                            operator: . [18127,18128]
                            name: AcquireScratch [18128,18142]
                        argument_list [18142,18144]
                    operator: . [18144,18145]
                    call [18145,18148]
                        name: W [18145,18146]
                        argument_list [18146,18148]
                expr [18152,18255]
                    name: __ [18152,18154]
                    call [18155,18255]
                        name: Ldr [18155,18158]
                        argument_list [18158,18255]
                            argument [18159,18175]
                                expr [18159,18175]
                                    name: interrupt_budget [18159,18175]
                            argument [18186,18254]
                                expr [18186,18254]
                                    call [18186,18254]
                                        name: FieldMemOperand [18186,18201]
                                        argument_list [18201,18254]
                                            argument [18202,18215]
                                                expr [18202,18215]
                                                    name: feedback_cell [18202,18215]
                                            argument [18217,18253]
                                                expr [18217,18253]
                                                    name [18217,18253]
                                                        name: FeedbackCell [18217,18229]
                                                        operator: :: [18229,18231]
                                                        name: kInterruptBudgetOffset [18231,18253]
                comment: // Remember to set flags as part of the add! [18259,18303]
                expr [18306,18357]
                    name: __ [18306,18308]
                    call [18309,18357]
                        name: Adds [18309,18313]
                        argument_list [18313,18357]
                            argument [18314,18330]
                                expr [18314,18330]
                                    name: interrupt_budget [18314,18330]
                            argument [18332,18348]
                                expr [18332,18348]
                                    name: interrupt_budget [18332,18348]
                            argument [18350,18356]
                                expr [18350,18356]
                                    name: weight [18350,18356]
                expr [18361,18464]
                    name: __ [18361,18363]
                    call [18364,18464]
                        name: Str [18364,18367]
                        argument_list [18367,18464]
                            argument [18368,18384]
                                expr [18368,18384]
                                    name: interrupt_budget [18368,18384]
                            argument [18395,18463]
                                expr [18395,18463]
                                    call [18395,18463]
                                        name: FieldMemOperand [18395,18410]
                                        argument_list [18410,18463]
                                            argument [18411,18424]
                                                expr [18411,18424]
                                                    name: feedback_cell [18411,18424]
                                            argument [18426,18462]
                                                expr [18426,18462]
                                                    name [18426,18462]
                                                        name: FeedbackCell [18426,18438]
                                                        operator: :: [18438,18440]
                                                        name: kInterruptBudgetOffset [18440,18462]
                if_stmt [18468,18594]
                    if [18468,18594]
                        condition [18471,18493]
                            expr [18472,18492]
                                name: skip_interrupt_label [18472,18492]
                        block [18494,18594]
                            block_content [18537,18594]
                                comment: // Use compare flags set by Adds [18500,18532]
                                expr_stmt [18537,18558]
                                    expr [18537,18557]
                                        call [18537,18557]
                                            name: DCHECK_LT [18537,18546]
                                            argument_list [18546,18557]
                                                argument [18547,18553]
                                                    expr [18547,18553]
                                                        name: weight [18547,18553]
                                                argument [18555,18556]
                                                    expr [18555,18556]
                                                        literal: 0 [18555,18556]
                                function_decl [18563,18594]
                                    type [18563,18565]
                                        name: __ [18563,18565]
                                    name: B [18566,18567]
                                    parameter_list [18567,18593]
                                        parameter [18568,18570]
                                            decl [18568,18570]
                                                type [18568,18570]
                                                    name: ge [18568,18570]
                                        parameter [18572,18592]
                                            decl [18572,18592]
                                                type [18572,18592]
                                                    name: skip_interrupt_label [18572,18592]
                                expr_stmt [0,0]
    macro [18607,18624]
        name: BaselineAssembler [18607,18624]
    expr_stmt [18624,19443]
        expr [18624,19443]
            name [18624,18666]
                operator: :: [18624,18626]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [18626,18666]
            operator: ( [18666,18667]
            name: Register [18672,18680]
            name: weight [18681,18687]
            operator: , [18687,18688]
            name: Label [18689,18694]
            operator: * [18694,18695]
            name: skip_interrupt_label [18696,18716]
            operator: ) [18716,18717]
            block [18718,19443]
                expr [18722,18745]
                    call [18722,18745]
                        name: ASM_CODE_COMMENT [18722,18738]
                        argument_list [18738,18745]
                            argument [18739,18744]
                                expr [18739,18744]
                                    name: masm_ [18739,18744]
                expr [18749,18789]
                    name: ScratchRegisterScope [18749,18769]
                    call [18770,18789]
                        name: scratch_scope [18770,18783]
                        argument_list [18783,18789]
                            argument [18784,18788]
                                expr [18784,18788]
                                    name: this [18784,18788]
                expr [18793,18848]
                    name: Register [18793,18801]
                    name: feedback_cell [18802,18815]
                    operator: = [18816,18817]
                    call [18818,18848]
                        name [18818,18846]
                            name: scratch_scope [18818,18831]
                            operator: . [18831,18832]
                            name: AcquireScratch [18832,18846]
                        argument_list [18846,18848]
                expr [18852,18879]
                    call [18852,18879]
                        name: LoadFunction [18852,18864]
                        argument_list [18864,18879]
                            argument [18865,18878]
                                expr [18865,18878]
                                    name: feedback_cell [18865,18878]
                expr [18883,18993]
                    call [18883,18993]
                        name: LoadTaggedPointerField [18883,18905]
                        argument_list [18905,18993]
                            argument [18906,18919]
                                expr [18906,18919]
                                    name: feedback_cell [18906,18919]
                            argument [18921,18934]
                                expr [18921,18934]
                                    name: feedback_cell [18921,18934]
                            argument [18961,18992]
                                expr [18961,18992]
                                    name [18961,18992]
                                        name: JSFunction [18961,18971]
                                        operator: :: [18971,18973]
                                        name: kFeedbackCellOffset [18973,18992]
                expr [18998,19060]
                    name: Register [18998,19006]
                    name: interrupt_budget [19007,19023]
                    operator: = [19024,19025]
                    call [19026,19056]
                        name [19026,19054]
                            name: scratch_scope [19026,19039]
                            operator: . [19039,19040]
                            name: AcquireScratch [19040,19054]
                        argument_list [19054,19056]
                    operator: . [19056,19057]
                    call [19057,19060]
                        name: W [19057,19058]
                        argument_list [19058,19060]
                expr [19064,19167]
                    name: __ [19064,19066]
                    call [19067,19167]
                        name: Ldr [19067,19070]
                        argument_list [19070,19167]
                            argument [19071,19087]
                                expr [19071,19087]
                                    name: interrupt_budget [19071,19087]
                            argument [19098,19166]
                                expr [19098,19166]
                                    call [19098,19166]
                                        name: FieldMemOperand [19098,19113]
                                        argument_list [19113,19166]
                                            argument [19114,19127]
                                                expr [19114,19127]
                                                    name: feedback_cell [19114,19127]
                                            argument [19129,19165]
                                                expr [19129,19165]
                                                    name [19129,19165]
                                                        name: FeedbackCell [19129,19141]
                                                        operator: :: [19141,19143]
                                                        name: kInterruptBudgetOffset [19143,19165]
                comment: // Remember to set flags as part of the add! [19171,19215]
                expr [19218,19273]
                    name: __ [19218,19220]
                    call [19221,19273]
                        name: Adds [19221,19225]
                        argument_list [19225,19273]
                            argument [19226,19242]
                                expr [19226,19242]
                                    name: interrupt_budget [19226,19242]
                            argument [19244,19260]
                                expr [19244,19260]
                                    name: interrupt_budget [19244,19260]
                            argument [19262,19272]
                                expr [19262,19272]
                                    call [19262,19272]
                                        name [19262,19270]
                                            name: weight [19262,19268]
                                            operator: . [19268,19269]
                                            name: W [19269,19270]
                                        argument_list [19270,19272]
                expr [19277,19380]
                    name: __ [19277,19279]
                    call [19280,19380]
                        name: Str [19280,19283]
                        argument_list [19283,19380]
                            argument [19284,19300]
                                expr [19284,19300]
                                    name: interrupt_budget [19284,19300]
                            argument [19311,19379]
                                expr [19311,19379]
                                    call [19311,19379]
                                        name: FieldMemOperand [19311,19326]
                                        argument_list [19326,19379]
                                            argument [19327,19340]
                                                expr [19327,19340]
                                                    name: feedback_cell [19327,19340]
                                            argument [19342,19378]
                                                expr [19342,19378]
                                                    name [19342,19378]
                                                        name: FeedbackCell [19342,19354]
                                                        operator: :: [19354,19356]
                                                        name: kInterruptBudgetOffset [19356,19378]
                if_stmt [19384,19441]
                    if [19384,19441]
                        condition [19387,19409]
                            expr [19388,19408]
                                name: skip_interrupt_label [19388,19408]
                        block [19410,19441]
                            block_content [19410,19441]
                                function_decl [19410,19441]
                                    type [19410,19412]
                                        name: __ [19410,19412]
                                    name: B [19413,19414]
                                    parameter_list [19414,19440]
                                        parameter [19415,19417]
                                            decl [19415,19417]
                                                type [19415,19417]
                                                    name: ge [19415,19417]
                                        parameter [19419,19439]
                                            decl [19419,19439]
                                                type [19419,19439]
                                                    name: skip_interrupt_label [19419,19439]
    function [19445,19654]
        type [19445,19449]
            name: void [19445,19449]
        name [19450,19475]
            name: BaselineAssembler [19450,19467]
            operator: :: [19467,19469]
            name: AddSmi [19469,19475]
        parameter_list [19475,19498]
            parameter [19476,19488]
                decl [19476,19488]
                    type [19476,19488]
                        name: Register [19476,19484]
                    name: lhs [19485,19488]
            parameter [19490,19497]
                decl [19490,19497]
                    type [19490,19497]
                        name: Smi [19490,19493]
                    name: rhs [19494,19497]
        block [19499,19654]
            block_content [19503,19652]
                if_stmt [19503,19652]
                    if [19503,19580]
                        condition [19506,19528]
                            expr [19507,19527]
                                call [19507,19527]
                                    name: SmiValuesAre31Bits [19507,19525]
                                    argument_list [19525,19527]
                        block [19529,19580]
                            block_content [19535,19576]
                                decl_stmt [19535,19576]
                                    decl [19535,19575]
                                        type [19535,19537]
                                            name: __ [19535,19537]
                                        name: Add [19538,19541]
                                        argument_list [19541,19575]
                                            argument [19542,19549]
                                                expr [19542,19549]
                                                    call [19542,19549]
                                                        name [19542,19547]
                                                            name: lhs [19542,19545]
                                                            operator: . [19545,19546]
                                                            name: W [19546,19547]
                                                        argument_list [19547,19549]
                                            argument [19551,19558]
                                                expr [19551,19558]
                                                    call [19551,19558]
                                                        name [19551,19556]
                                                            name: lhs [19551,19554]
                                                            operator: . [19554,19555]
                                                            name: W [19555,19556]
                                                        argument_list [19556,19558]
                                            argument [19560,19574]
                                                expr [19560,19574]
                                                    call [19560,19574]
                                                        name: Immediate [19560,19569]
                                                        argument_list [19569,19574]
                                                            argument [19570,19573]
                                                                expr [19570,19573]
                                                                    name: rhs [19570,19573]
                    else [19581,19652]
                        block [19586,19652]
                            block_content [19592,19648]
                                expr_stmt [19592,19610]
                                    expr [19592,19609]
                                        call [19592,19609]
                                            name: DCHECK [19592,19598]
                                            argument_list [19598,19609]
                                                argument [19599,19608]
                                                    expr [19599,19608]
                                                        call [19599,19608]
                                                            name [19599,19606]
                                                                name: lhs [19599,19602]
                                                                operator: . [19602,19603]
                                                                name: IsX [19603,19606]
                                                            argument_list [19606,19608]
                                decl_stmt [19615,19648]
                                    decl [19615,19647]
                                        type [19615,19617]
                                            name: __ [19615,19617]
                                        name: Add [19618,19621]
                                        argument_list [19621,19647]
                                            argument [19622,19625]
                                                expr [19622,19625]
                                                    name: lhs [19622,19625]
                                            argument [19627,19630]
                                                expr [19627,19630]
                                                    name: lhs [19627,19630]
                                            argument [19632,19646]
                                                expr [19632,19646]
                                                    call [19632,19646]
                                                        name: Immediate [19632,19641]
                                                        argument_list [19641,19646]
                                                            argument [19642,19645]
                                                                expr [19642,19645]
                                                                    name: rhs [19642,19645]
    function [19656,19772]
        type [19656,19660]
            name: void [19656,19660]
        name [19661,19689]
            name: BaselineAssembler [19661,19678]
            operator: :: [19678,19680]
            name: Word32And [19680,19689]
        parameter_list [19689,19729]
            parameter [19690,19705]
                decl [19690,19705]
                    type [19690,19705]
                        name: Register [19690,19698]
                    name: output [19699,19705]
            parameter [19707,19719]
                decl [19707,19719]
                    type [19707,19719]
                        name: Register [19707,19715]
                    name: lhs [19716,19719]
            parameter [19721,19728]
                decl [19721,19728]
                    type [19721,19728]
                        name: int [19721,19724]
                    name: rhs [19725,19728]
        block [19730,19772]
            block_content [19734,19770]
                decl_stmt [19734,19770]
                    decl [19734,19769]
                        type [19734,19736]
                            name: __ [19734,19736]
                        name: And [19737,19740]
                        argument_list [19740,19769]
                            argument [19741,19747]
                                expr [19741,19747]
                                    name: output [19741,19747]
                            argument [19749,19752]
                                expr [19749,19752]
                                    name: lhs [19749,19752]
                            argument [19754,19768]
                                expr [19754,19768]
                                    call [19754,19768]
                                        name: Immediate [19754,19763]
                                        argument_list [19763,19768]
                                            argument [19764,19767]
                                                expr [19764,19767]
                                                    name: rhs [19764,19767]
    function [19774,20755]
        type [19774,19778]
            name: void [19774,19778]
        name [19779,19804]
            name: BaselineAssembler [19779,19796]
            operator: :: [19796,19798]
            name: Switch [19798,19804]
        parameter_list [19804,19902]
            parameter [19805,19817]
                decl [19805,19817]
                    type [19805,19817]
                        name: Register [19805,19813]
                    name: reg [19814,19817]
            parameter [19819,19838]
                decl [19819,19838]
                    type [19819,19838]
                        name: int [19819,19822]
                    name: case_value_base [19823,19838]
            parameter [19871,19885]
                decl [19871,19885]
                    type [19871,19885]
                        name: Label [19871,19876]
                        modifier: * [19876,19877]
                        modifier: * [19877,19878]
                    name: labels [19879,19885]
            parameter [19887,19901]
                decl [19887,19901]
                    type [19887,19901]
                        name: int [19887,19890]
                    name: num_labels [19891,19901]
        block [19903,20755]
            block_content [19907,20724]
                expr_stmt [19907,19931]
                    expr [19907,19930]
                        call [19907,19930]
                            name: ASM_CODE_COMMENT [19907,19923]
                            argument_list [19923,19930]
                                argument [19924,19929]
                                    expr [19924,19929]
                                        name: masm_ [19924,19929]
                decl_stmt [19934,19952]
                    decl [19934,19951]
                        type [19934,19939]
                            name: Label [19934,19939]
                        name: fallthrough [19940,19951]
                if_stmt [19955,20036]
                    if [19955,20036]
                        condition [19958,19980]
                            expr [19959,19979]
                                name: case_value_base [19959,19974]
                                operator: != [19975,19977]
                                literal: 0 [19978,19979]
                        block [19981,20036]
                            block_content [19987,20032]
                                decl_stmt [19987,20032]
                                    decl [19987,20031]
                                        type [19987,19989]
                                            name: __ [19987,19989]
                                        name: Sub [19990,19993]
                                        argument_list [19993,20031]
                                            argument [19994,19997]
                                                expr [19994,19997]
                                                    name: reg [19994,19997]
                                            argument [19999,20002]
                                                expr [19999,20002]
                                                    name: reg [19999,20002]
                                            argument [20004,20030]
                                                expr [20004,20030]
                                                    call [20004,20030]
                                                        name: Immediate [20004,20013]
                                                        argument_list [20013,20030]
                                                            argument [20014,20029]
                                                                expr [20014,20029]
                                                                    name: case_value_base [20014,20029]
                comment: // Mostly copied from code-generator-arm64.cc [20040,20085]
                decl_stmt [20088,20121]
                    decl [20088,20120]
                        type [20088,20108]
                            name: ScratchRegisterScope [20088,20108]
                        name: scope [20109,20114]
                        argument_list [20114,20120]
                            argument [20115,20119]
                                expr [20115,20119]
                                    name: this [20115,20119]
                decl_stmt [20124,20163]
                    decl [20124,20162]
                        type [20124,20132]
                            name: Register [20124,20132]
                        name: temp [20133,20137]
                        init [20138,20162]
                            expr [20140,20162]
                                call [20140,20162]
                                    name [20140,20160]
                                        name: scope [20140,20145]
                                        operator: . [20145,20146]
                                        name: AcquireScratch [20146,20160]
                                    argument_list [20160,20162]
                decl_stmt [20166,20178]
                    decl [20166,20177]
                        type [20166,20171]
                            name: Label [20166,20171]
                        name: table [20172,20177]
                expr_stmt [20181,20257]
                    expr [20181,20256]
                        call [20181,20256]
                            name: JumpIf [20181,20187]
                            argument_list [20187,20256]
                                argument [20188,20224]
                                    expr [20188,20224]
                                        name [20188,20224]
                                            name: Condition [20188,20197]
                                            operator: :: [20197,20199]
                                            name: kUnsignedGreaterThanEqual [20199,20224]
                                argument [20226,20229]
                                    expr [20226,20229]
                                        name: reg [20226,20229]
                                argument [20231,20241]
                                    expr [20231,20241]
                                        name: num_labels [20231,20241]
                                argument [20243,20255]
                                    expr [20243,20255]
                                        operator: & [20243,20244]
                                        name: fallthrough [20244,20255]
                decl_stmt [20260,20281]
                    decl [20260,20280]
                        type [20260,20262]
                            name: __ [20260,20262]
                        name: Adr [20263,20266]
                        argument_list [20266,20280]
                            argument [20267,20271]
                                expr [20267,20271]
                                    name: temp [20267,20271]
                            argument [20273,20279]
                                expr [20273,20279]
                                    operator: & [20273,20274]
                                    name: table [20274,20279]
                decl_stmt [20284,20349]
                    decl [20284,20307]
                        type [20284,20287]
                            name: int [20284,20287]
                        name: entry_size_log2 [20288,20303]
                        init [20304,20307]
                            expr [20306,20307]
                                literal: 2 [20306,20307]
                ifdef [20309,20348]
                    directive: ifdef [20310,20315]
                    name: V8_ENABLE_CONTROL_FLOW_INTEGRITY [20316,20348]
                expr_stmt [20351,20398]
                    expr [20351,20368]
                        operator: ++ [20351,20353]
                        name: entry_size_log2 [20353,20368]
                comment: // Account for BTI. [20371,20390]
                endif [20391,20397]
                    directive: endif [20392,20397]
                decl_stmt [20400,20456]
                    decl [20400,20455]
                        type [20400,20402]
                            name: __ [20400,20402]
                        name: Add [20403,20406]
                        argument_list [20406,20455]
                            argument [20407,20411]
                                expr [20407,20411]
                                    name: temp [20407,20411]
                            argument [20413,20417]
                                expr [20413,20417]
                                    name: temp [20413,20417]
                            argument [20419,20454]
                                expr [20419,20454]
                                    call [20419,20454]
                                        name: Operand [20419,20426]
                                        argument_list [20426,20454]
                                            argument [20427,20430]
                                                expr [20427,20430]
                                                    name: reg [20427,20430]
                                            argument [20432,20436]
                                                expr [20432,20436]
                                                    name: UXTW [20432,20436]
                                            argument [20438,20453]
                                                expr [20438,20453]
                                                    name: entry_size_log2 [20438,20453]
                decl_stmt [20459,20471]
                    decl [20459,20470]
                        type [20459,20461]
                            name: __ [20459,20461]
                        name: Br [20462,20464]
                        argument_list [20464,20470]
                            argument [20465,20469]
                                expr [20465,20469]
                                    name: temp [20465,20469]
                block [20474,20724]
                    block_content [20480,20720]
                        decl_stmt [20480,20556]
                            decl [20480,20555]
                                type [20480,20511]
                                    name [20480,20511]
                                        name: TurboAssembler [20480,20494]
                                        operator: :: [20494,20496]
                                        name: BlockPoolsScope [20496,20511]
                                name: block_pools [20512,20523]
                                argument_list [20523,20555]
                                    argument [20524,20529]
                                        expr [20524,20529]
                                            name: masm_ [20524,20529]
                                    argument [20531,20554]
                                        expr [20531,20554]
                                            name: num_labels [20531,20541]
                                            operator: * [20542,20543]
                                            name: kInstrSize [20544,20554]
                        decl_stmt [20561,20577]
                            decl [20561,20576]
                                type [20561,20563]
                                    name: __ [20561,20563]
                                name: Bind [20564,20568]
                                argument_list [20568,20576]
                                    argument [20569,20575]
                                        expr [20569,20575]
                                            operator: & [20569,20570]
                                            name: table [20570,20575]
                        for [20582,20672]
                            control [20586,20618]
                                init [20587,20597]
                                    decl [20587,20596]
                                        type [20587,20590]
                                            name: int [20587,20590]
                                        name: i [20591,20592]
                                        init [20593,20596]
                                            expr [20595,20596]
                                                literal: 0 [20595,20596]
                                condition [20598,20613]
                                    expr [20598,20612]
                                        name: i [20598,20599]
                                        operator: < [20600,20601]
                                        name: num_labels [20602,20612]
                                incr [20614,20617]
                                    expr [20614,20617]
                                        operator: ++ [20614,20616]
                                        name: i [20616,20617]
                            block [20619,20672]
                                block_content [20627,20666]
                                    function_decl [20627,20643]
                                        type [20627,20629]
                                            name: __ [20627,20629]
                                        name: JumpTarget [20630,20640]
                                        parameter_list [20640,20642]
                                    decl_stmt [20650,20666]
                                        decl [20650,20665]
                                            type [20650,20652]
                                                name: __ [20650,20652]
                                            name: B [20653,20654]
                                            argument_list [20654,20665]
                                                argument [20655,20664]
                                                    expr [20655,20664]
                                                        name [20655,20664]
                                                            name: labels [20655,20661]
                                                            index [20661,20664]
                                                                expr [20662,20663]
                                                                    name: i [20662,20663]
                        function_decl [20677,20693]
                            type [20677,20679]
                                name: __ [20677,20679]
                            name: JumpTarget [20680,20690]
                            parameter_list [20690,20692]
                        decl_stmt [20698,20720]
                            decl [20698,20719]
                                type [20698,20700]
                                    name: __ [20698,20700]
                                name: Bind [20701,20705]
                                argument_list [20705,20719]
                                    argument [20706,20718]
                                        expr [20706,20718]
                                            operator: & [20706,20707]
                                            name: fallthrough [20707,20718]
    undef [20728,20737]
        directive: undef [20729,20734]
        name: __ [20735,20737]
    define [20738,20754]
        directive: define [20739,20745]
        macro [20746,20748]
            name: __ [20746,20748]
        value [20749,20754]
    function [20756,22487]
        type [20756,20760]
            name: void [20756,20760]
        name [20761,20790]
            name: BaselineAssembler [20761,20778]
            operator: :: [20778,20780]
            name: EmitReturn [20780,20790]
        parameter_list [20790,20812]
            parameter [20791,20811]
                decl [20791,20811]
                    type [20791,20806]
                        name: MacroAssembler [20791,20805]
                        modifier: * [20805,20806]
                    name: masm [20807,20811]
        block [20813,22487]
            block_content [20817,22473]
                expr_stmt [20817,20840]
                    expr [20817,20839]
                        call [20817,20839]
                            name: ASM_CODE_COMMENT [20817,20833]
                            argument_list [20833,20839]
                                argument [20834,20838]
                                    expr [20834,20838]
                                        name: masm [20834,20838]
                decl_stmt [20843,20872]
                    decl [20843,20871]
                        type [20843,20860]
                            name: BaselineAssembler [20843,20860]
                        name: basm [20861,20865]
                        argument_list [20865,20871]
                            argument [20866,20870]
                                expr [20866,20870]
                                    name: masm [20866,20870]
                decl_stmt [20876,20941]
                    decl [20876,20940]
                        type [20876,20884]
                            name: Register [20876,20884]
                        name: weight [20885,20891]
                        init [20892,20940]
                            expr [20894,20940]
                                call [20894,20940]
                                    name [20894,20938]
                                        name: BaselineLeaveFrameDescriptor [20894,20922]
                                        operator: :: [20922,20924]
                                        name: WeightRegister [20924,20938]
                                    argument_list [20938,20940]
                decl_stmt [20944,21018]
                    decl [20944,21017]
                        type [20944,20952]
                            name: Register [20944,20952]
                        name: params_size [20953,20964]
                        init [20965,21017]
                            expr [20967,21017]
                                call [20967,21017]
                                    name [20967,21015]
                                        name: BaselineLeaveFrameDescriptor [20967,20995]
                                        operator: :: [20995,20997]
                                        name: ParamsSizeRegister [20997,21015]
                                    argument_list [21015,21017]
                block [21022,21634]
                    block_content [21028,21630]
                        expr_stmt [21028,21085]
                            expr [21028,21084]
                                call [21028,21084]
                                    name: ASM_CODE_COMMENT_STRING [21028,21051]
                                    argument_list [21051,21084]
                                        argument [21052,21056]
                                            expr [21052,21056]
                                                name: masm [21052,21056]
                                        argument [21058,21083]
                                            expr [21058,21083]
                                                literal: "Update Interrupt Budget" [21058,21083]
                        decl_stmt [21091,21118]
                            decl [21091,21117]
                                type [21091,21096]
                                    name: Label [21091,21096]
                                name: skip_interrupt_label [21097,21117]
                        decl_stmt [21123,21198]
                            decl [21123,21197]
                                type [21123,21125]
                                    name: __ [21123,21125]
                                name: AddToInterruptBudgetAndJumpIfNotExceeded [21126,21166]
                                argument_list [21166,21197]
                                    argument [21167,21173]
                                        expr [21167,21173]
                                            name: weight [21167,21173]
                                    argument [21175,21196]
                                        expr [21175,21196]
                                            operator: & [21175,21176]
                                            name: skip_interrupt_label [21176,21196]
                        expr_stmt [21203,21234]
                            expr [21203,21233]
                                name: __ [21203,21205]
                                call [21206,21212]
                                    name: masm [21206,21210]
                                    argument_list [21210,21212]
                                operator: -> [21212,21214]
                                call [21214,21233]
                                    name: SmiTag [21214,21220]
                                    argument_list [21220,21233]
                                        argument [21221,21232]
                                            expr [21221,21232]
                                                name: params_size [21221,21232]
                        expr_stmt [21239,21301]
                            expr [21239,21300]
                                name: __ [21239,21241]
                                call [21242,21248]
                                    name: masm [21242,21246]
                                    argument_list [21246,21248]
                                operator: -> [21248,21250]
                                call [21250,21300]
                                    name: Push [21250,21254]
                                    argument_list [21254,21300]
                                        argument [21255,21266]
                                            expr [21255,21266]
                                                name: params_size [21255,21266]
                                        argument [21268,21299]
                                            expr [21268,21299]
                                                name: kInterpreterAccumulatorRegister [21268,21299]
                        decl_stmt [21307,21340]
                            decl [21307,21339]
                                type [21307,21309]
                                    name: __ [21307,21309]
                                name: LoadContext [21310,21321]
                                argument_list [21321,21339]
                                    argument [21322,21338]
                                        expr [21322,21338]
                                            name: kContextRegister [21322,21338]
                        decl_stmt [21345,21382]
                            decl [21345,21381]
                                type [21345,21347]
                                    name: __ [21345,21347]
                                name: LoadFunction [21348,21360]
                                argument_list [21360,21381]
                                    argument [21361,21380]
                                        expr [21361,21380]
                                            name: kJSFunctionRegister [21361,21380]
                        expr_stmt [21387,21432]
                            expr [21387,21431]
                                name: __ [21387,21389]
                                call [21390,21396]
                                    name: masm [21390,21394]
                                    argument_list [21394,21396]
                                operator: -> [21396,21398]
                                call [21398,21431]
                                    name: PushArgument [21398,21410]
                                    argument_list [21410,21431]
                                        argument [21411,21430]
                                            expr [21411,21430]
                                                name: kJSFunctionRegister [21411,21430]
                        decl_stmt [21437,21490]
                            decl [21437,21489]
                                type [21437,21439]
                                    name: __ [21437,21439]
                                name: CallRuntime [21440,21451]
                                argument_list [21451,21489]
                                    argument [21452,21485]
                                        expr [21452,21485]
                                            name [21452,21485]
                                                name: Runtime [21452,21459]
                                                operator: :: [21459,21461]
                                                name: kBytecodeBudgetInterrupt [21461,21485]
                                    argument [21487,21488]
                                        expr [21487,21488]
                                            literal: 1 [21487,21488]
                        expr_stmt [21496,21557]
                            expr [21496,21556]
                                name: __ [21496,21498]
                                call [21499,21505]
                                    name: masm [21499,21503]
                                    argument_list [21503,21505]
                                operator: -> [21505,21507]
                                call [21507,21556]
                                    name: Pop [21507,21510]
                                    argument_list [21510,21556]
                                        argument [21511,21542]
                                            expr [21511,21542]
                                                name: kInterpreterAccumulatorRegister [21511,21542]
                                        argument [21544,21555]
                                            expr [21544,21555]
                                                name: params_size [21544,21555]
                        expr_stmt [21562,21595]
                            expr [21562,21594]
                                name: __ [21562,21564]
                                call [21565,21571]
                                    name: masm [21565,21569]
                                    argument_list [21569,21571]
                                operator: -> [21571,21573]
                                call [21573,21594]
                                    name: SmiUntag [21573,21581]
                                    argument_list [21581,21594]
                                        argument [21582,21593]
                                            expr [21582,21593]
                                                name: params_size [21582,21593]
                        decl_stmt [21599,21630]
                            decl [21599,21629]
                                type [21599,21601]
                                    name: __ [21599,21601]
                                name: Bind [21602,21606]
                                argument_list [21606,21629]
                                    argument [21607,21628]
                                        expr [21607,21628]
                                            operator: & [21607,21608]
                                            name: skip_interrupt_label [21608,21628]
                decl_stmt [21638,21691]
                    decl [21638,21690]
                        type [21638,21677]
                            name [21638,21677]
                                name: BaselineAssembler [21638,21655]
                                operator: :: [21655,21657]
                                name: ScratchRegisterScope [21657,21677]
                        name: temps [21678,21683]
                        argument_list [21683,21690]
                            argument [21684,21689]
                                expr [21684,21689]
                                    operator: & [21684,21685]
                                    name: basm [21685,21689]
                decl_stmt [21694,21747]
                    decl [21694,21746]
                        type [21694,21702]
                            name: Register [21694,21702]
                        name: actual_params_size [21703,21721]
                        init [21722,21746]
                            expr [21724,21746]
                                call [21724,21746]
                                    name [21724,21744]
                                        name: temps [21724,21729]
                                        operator: . [21729,21730]
                                        name: AcquireScratch [21730,21744]
                                    argument_list [21744,21746]
                comment: // Compute the size of the actual parameters + receiver (in bytes). [21750,21817]
                decl_stmt [21820,21911]
                    decl [21820,21910]
                        type [21820,21822]
                            name: __ [21820,21822]
                        name: Move [21823,21827]
                        argument_list [21827,21910]
                            argument [21828,21846]
                                expr [21828,21846]
                                    name: actual_params_size [21828,21846]
                            argument [21858,21909]
                                expr [21858,21909]
                                    call [21858,21909]
                                        name: MemOperand [21858,21868]
                                        argument_list [21868,21909]
                                            argument [21869,21871]
                                                expr [21869,21871]
                                                    name: fp [21869,21871]
                                            argument [21873,21908]
                                                expr [21873,21908]
                                                    name [21873,21908]
                                                        name: StandardFrameConstants [21873,21895]
                                                        operator: :: [21895,21897]
                                                        name: kArgCOffset [21897,21908]
                comment: // If actual is bigger than formal, then we should use it to free up the stack [21915,21993]
                comment: // arguments. [21996,22009]
                decl_stmt [22012,22039]
                    decl [22012,22038]
                        type [22012,22017]
                            name: Label [22012,22017]
                        name: corrected_args_count [22018,22038]
                decl_stmt [22042,22150]
                    decl [22042,22149]
                        type [22042,22044]
                            name: __ [22042,22044]
                        name: JumpIf [22045,22051]
                        argument_list [22051,22149]
                            argument [22052,22080]
                                expr [22052,22080]
                                    name [22052,22080]
                                        name: Condition [22052,22061]
                                        operator: :: [22061,22063]
                                        name: kGreaterThanEqual [22063,22080]
                            argument [22082,22093]
                                expr [22082,22093]
                                    name: params_size [22082,22093]
                            argument [22095,22113]
                                expr [22095,22113]
                                    name: actual_params_size [22095,22113]
                            argument [22127,22148]
                                expr [22127,22148]
                                    operator: & [22127,22128]
                                    name: corrected_args_count [22128,22148]
                expr_stmt [22153,22201]
                    expr [22153,22200]
                        name: __ [22153,22155]
                        call [22156,22162]
                            name: masm [22156,22160]
                            argument_list [22160,22162]
                        operator: -> [22162,22164]
                        call [22164,22200]
                            name: Mov [22164,22167]
                            argument_list [22167,22200]
                                argument [22168,22179]
                                    expr [22168,22179]
                                        name: params_size [22168,22179]
                                argument [22181,22199]
                                    expr [22181,22199]
                                        name: actual_params_size [22181,22199]
                decl_stmt [22204,22235]
                    decl [22204,22234]
                        type [22204,22206]
                            name: __ [22204,22206]
                        name: Bind [22207,22211]
                        argument_list [22211,22234]
                            argument [22212,22233]
                                expr [22212,22233]
                                    operator: & [22212,22213]
                                    name: corrected_args_count [22213,22233]
                comment: // Leave the frame (also dropping the register file). [22239,22292]
                expr_stmt [22295,22339]
                    expr [22295,22338]
                        name: __ [22295,22297]
                        call [22298,22304]
                            name: masm [22298,22302]
                            argument_list [22302,22304]
                        operator: -> [22304,22306]
                        call [22306,22338]
                            name: LeaveFrame [22306,22316]
                            argument_list [22316,22338]
                                argument [22317,22337]
                                    expr [22317,22337]
                                        name [22317,22337]
                                            name: StackFrame [22317,22327]
                                            operator: :: [22327,22329]
                                            name: BASELINE [22329,22337]
                comment: // Drop receiver + arguments. [22343,22372]
                expr_stmt [22375,22453]
                    expr [22375,22452]
                        name: __ [22375,22377]
                        call [22378,22384]
                            name: masm [22378,22382]
                            argument_list [22382,22384]
                        operator: -> [22384,22386]
                        call [22386,22452]
                            name: DropArguments [22386,22399]
                            argument_list [22399,22452]
                                argument [22400,22411]
                                    expr [22400,22411]
                                        name: params_size [22400,22411]
                                argument [22413,22451]
                                    expr [22413,22451]
                                        name [22413,22451]
                                            name: TurboAssembler [22413,22427]
                                            operator: :: [22427,22429]
                                            name: kCountIncludesReceiver [22429,22451]
                expr_stmt [22456,22473]
                    expr [22456,22472]
                        name: __ [22456,22458]
                        call [22459,22465]
                            name: masm [22459,22463]
                            argument_list [22463,22465]
                        operator: -> [22465,22467]
                        call [22467,22472]
                            name: Ret [22467,22470]
                            argument_list [22470,22472]
    undef [22477,22486]
        directive: undef [22478,22483]
        name: __ [22484,22486]
    function [22488,22716]
        type [22488,22499]
            specifier: inline [22488,22494]
            name: void [22495,22499]
        name [22500,22557]
            name: EnsureAccumulatorPreservedScope [22500,22531]
            operator: :: [22531,22533]
            name: AssertEqualToAccumulator [22533,22557]
        parameter_list [22557,22576]
            parameter [22563,22575]
                decl [22563,22575]
                    type [22563,22571]
                        name: Register [22563,22571]
                    name: reg [22572,22575]
        block [22577,22716]
            block_content [22581,22714]
                expr_stmt [22581,22649]
                    expr [22581,22648]
                        call [22581,22599]
                            name [22581,22597]
                                name: assembler_ [22581,22591]
                                operator: -> [22591,22593]
                                name: masm [22593,22597]
                            argument_list [22597,22599]
                        operator: -> [22599,22601]
                        call [22601,22648]
                            name: CmpTagged [22601,22610]
                            argument_list [22610,22648]
                                argument [22611,22614]
                                    expr [22611,22614]
                                        name: reg [22611,22614]
                                argument [22616,22647]
                                    expr [22616,22647]
                                        name: kInterpreterAccumulatorRegister [22616,22647]
                expr_stmt [22652,22714]
                    expr [22652,22713]
                        call [22652,22670]
                            name [22652,22668]
                                name: assembler_ [22652,22662]
                                operator: -> [22662,22664]
                                name: masm [22664,22668]
                            argument_list [22668,22670]
                        operator: -> [22670,22672]
                        call [22672,22713]
                            name: Assert [22672,22678]
                            argument_list [22678,22713]
                                argument [22679,22681]
                                    expr [22679,22681]
                                        name: eq [22679,22681]
                                argument [22683,22712]
                                    expr [22683,22712]
                                        name [22683,22712]
                                            name: AbortReason [22683,22694]
                                            operator: :: [22694,22696]
                                            name: kUnexpectedValue [22696,22712]
    comment: // namespace baseline [22721,22742]
    comment: // namespace internal [22746,22767]
    comment: // namespace v8 [22771,22786]
    endif [22788,22794]
        directive: endif [22789,22794]
    comment: // V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [22796,22848]