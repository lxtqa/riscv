unit [0,0]
    comment: // Copyright 2021 the V8 project authors. All rights reserved. [0,62]
    comment: // Use of this source code is governed by a BSD-style license that can be [63,136]
    comment: // found in the LICENSE file. [137,166]
    ifndef [168,225]
        directive: ifndef [169,175]
        name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [176,225]
    define [226,283]
        directive: define [227,233]
        macro [234,283]
            name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [234,283]
    include [285,329]
        directive: include [286,293]
        file: "src/baseline/baseline-assembler.h" [294,329]
    include [330,386]
        directive: include [331,338]
        file: "src/codegen/arm64/macro-assembler-arm64-inl.h" [339,386]
    include [387,433]
        directive: include [388,395]
        file: "src/codegen/interface-descriptors.h" [396,433]
    namespace [435,10406]
        name: v8 [445,447]
        block [448,10406]
            namespace [450,10166]
                block [469,10166]
                    namespace [471,1308]
                        name: baseline [481,489]
                        block [490,1308]
                            class [493,1035]
                                name [499,538]
                                    name: BaselineAssembler [499,516]
                                    operator: :: [516,518]
                                    name: ScratchRegisterScope [518,538]
                                block [539,1035]
                                    expr_stmt [542,1031]
                                        expr [542,641]
                                            specifier: public [542,548]
                                            operator: : [548,549]
                                            specifier: explicit [552,560]
                                            call [561,611]
                                                name: ScratchRegisterScope [561,581]
                                                argument_list [581,611]
                                                    argument [582,610]
                                                        expr [582,610]
                                                            name: BaselineAssembler [582,599]
                                                            operator: * [599,600]
                                                            name: assembler [601,610]
                                            operator: : [618,619]
                                            call [620,641]
                                                name: assembler_ [620,630]
                                                argument_list [630,641]
                                                    argument [631,640]
                                                        expr [631,640]
                                                            name: assembler [631,640]
                                        operator: , [641,642]
                                        expr [651,698]
                                            call [651,698]
                                                name: prev_scope_ [651,662]
                                                argument_list [662,698]
                                                    argument [663,697]
                                                        expr [663,697]
                                                            name [663,697]
                                                                name: assembler [663,672]
                                                                operator: -> [672,674]
                                                                name: scratch_register_scope_ [674,697]
                                        operator: , [698,699]
                                        macro [708,741]
                                            name: wrapped_scope_ [708,722]
                                            argument_list [722,741]
                                                argument [723,740]
                                        expr [742,1030]
                                            block [742,983]
                                                if_stmt [748,977]
                                                    if [748,977]
                                                        condition [751,789]
                                                            expr [752,788]
                                                                operator: ! [752,753]
                                                                name [753,788]
                                                                    name: assembler_ [753,763]
                                                                    operator: -> [763,765]
                                                                    name: scratch_register_scope_ [765,788]
                                                        block [790,977]
                                                            block_content [909,977]
                                                                comment: // If we haven't opened a scratch scope yet, for the first one add a [798,866]
                                                                comment: // couple of extra registers. [873,902]
                                                                expr_stmt [909,942]
                                                                    expr [909,941]
                                                                        call [909,941]
                                                                            name [909,931]
                                                                                name: wrapped_scope_ [909,923]
                                                                                operator: . [923,924]
                                                                                name: Include [924,931]
                                                                            argument_list [931,941]
                                                                                argument [932,935]
                                                                                    expr [932,935]
                                                                                        name: x14 [932,935]
                                                                                argument [937,940]
                                                                                    expr [937,940]
                                                                                        name: x15 [937,940]
                                                                expr_stmt [949,977]
                                                                    expr [949,976]
                                                                        call [949,976]
                                                                            name [949,971]
                                                                                name: wrapped_scope_ [949,963]
                                                                                operator: . [963,964]
                                                                                name: Include [964,971]
                                                                            argument_list [971,976]
                                                                                argument [972,975]
                                                                                    expr [972,975]
                                                                                        name: x19 [972,975]
                                                                expr_stmt [0,0]
                                            name [988,1023]
                                                name: assembler_ [988,998]
                                                operator: -> [998,1000]
                                                name: scratch_register_scope_ [1000,1023]
                                            operator: = [1024,1025]
                                            name: this [1026,1030]
                            destructor [1038,1116]
                                name: ~ScratchRegisterScope [1038,1059]
                                parameter_list [1059,1061]
                                block [1062,1116]
                                    block_content [1064,1114]
                                        expr_stmt [1064,1114]
                                            expr [1064,1113]
                                                name [1064,1099]
                                                    name: assembler_ [1064,1074]
                                                    operator: -> [1074,1076]
                                                    name: scratch_register_scope_ [1076,1099]
                                                operator: = [1100,1101]
                                                name: prev_scope_ [1102,1113]
                            function [1120,1183]
                                type [1120,1128]
                                    name: Register [1120,1128]
                                name: AcquireScratch [1129,1143]
                                parameter_list [1143,1145]
                                block [1146,1183]
                                    block_content [1148,1181]
                                        return [1148,1181]
                                            expr [1155,1180]
                                                call [1155,1180]
                                                    name [1155,1178]
                                                        name: wrapped_scope_ [1155,1169]
                                                        operator: . [1169,1170]
                                                        name: AcquireX [1170,1178]
                                                    argument_list [1178,1180]
                            expr_stmt [1186,1227]
                                expr [1186,1226]
                                    specifier: private [1186,1193]
                                    operator: : [1193,1194]
                                    name: BaselineAssembler [1197,1214]
                                    operator: * [1214,1215]
                                    name: assembler_ [1216,1226]
                            decl_stmt [1230,1264]
                                decl [1230,1263]
                                    type [1230,1251]
                                        name: ScratchRegisterScope [1230,1250]
                                        modifier: * [1250,1251]
                                    name: prev_scope_ [1252,1263]
                            decl_stmt [1267,1306]
                                decl [1267,1305]
                                    type [1267,1290]
                                        name: UseScratchRegisterScope [1267,1290]
                                    name: wrapped_scope_ [1291,1305]
                    empty_stmt [1308,1309]
                    comment: // TODO(v8:11461): Unify condition names in the MacroAssembler. [1311,1374]
                    enum [1375,1725]
                        class [1380,1724]
                            name: Condition [1386,1395]
                            super_list [1396,1406]
                                super [1398,1406]
                                    name: uint32_t [1398,1406]
                            block [1407,1724]
                                expr_stmt [1411,1722]
                                    expr [1411,1422]
                                        name: kEqual [1411,1417]
                                        operator: = [1418,1419]
                                        name: eq [1420,1422]
                                    operator: , [1422,1423]
                                    expr [1426,1440]
                                        name: kNotEqual [1426,1435]
                                        operator: = [1436,1437]
                                        name: ne [1438,1440]
                                    operator: , [1440,1441]
                                    expr [1445,1459]
                                        name: kLessThan [1445,1454]
                                        operator: = [1455,1456]
                                        name: lt [1457,1459]
                                    operator: , [1459,1460]
                                    expr [1463,1480]
                                        name: kGreaterThan [1463,1475]
                                        operator: = [1476,1477]
                                        name: gt [1478,1480]
                                    operator: , [1480,1481]
                                    expr [1484,1503]
                                        name: kLessThanEqual [1484,1498]
                                        operator: = [1499,1500]
                                        name: le [1501,1503]
                                    operator: , [1503,1504]
                                    expr [1507,1529]
                                        name: kGreaterThanEqual [1507,1524]
                                        operator: = [1525,1526]
                                        name: ge [1527,1529]
                                    operator: , [1529,1530]
                                    expr [1534,1556]
                                        name: kUnsignedLessThan [1534,1551]
                                        operator: = [1552,1553]
                                        name: lo [1554,1556]
                                    operator: , [1556,1557]
                                    expr [1560,1585]
                                        name: kUnsignedGreaterThan [1560,1580]
                                        operator: = [1581,1582]
                                        name: hi [1583,1585]
                                    operator: , [1585,1586]
                                    expr [1589,1616]
                                        name: kUnsignedLessThanEqual [1589,1611]
                                        operator: = [1612,1613]
                                        name: ls [1614,1616]
                                    operator: , [1616,1617]
                                    expr [1620,1650]
                                        name: kUnsignedGreaterThanEqual [1620,1645]
                                        operator: = [1646,1647]
                                        name: hs [1648,1650]
                                    operator: , [1650,1651]
                                    expr [1655,1669]
                                        name: kOverflow [1655,1664]
                                        operator: = [1665,1666]
                                        name: vs [1667,1669]
                                    operator: , [1669,1670]
                                    expr [1673,1689]
                                        name: kNoOverflow [1673,1684]
                                        operator: = [1685,1686]
                                        name: vc [1687,1689]
                                    operator: , [1689,1690]
                                    expr [1694,1704]
                                        name: kZero [1694,1699]
                                        operator: = [1700,1701]
                                        name: eq [1702,1704]
                                    operator: , [1704,1705]
                                    expr [1708,1721]
                                        name: kNotZero [1708,1716]
                                        operator: = [1717,1718]
                                        name: ne [1719,1721]
                                    operator: , [1721,1722]
                    function [1727,1838]
                        type [1727,1753]
                            specifier: inline [1727,1733]
                            specifier: internal [1734,1742]
                            name [1742,1753]
                                operator: :: [1742,1744]
                                name: Condition [1744,1753]
                        name: AsMasmCondition [1754,1769]
                        parameter_list [1769,1785]
                            parameter [1770,1784]
                                decl [1770,1784]
                                    type [1770,1779]
                                        name: Condition [1770,1779]
                                    name: cond [1780,1784]
                        block [1786,1838]
                            block_content [1790,1836]
                                return [1790,1836]
                                    expr [1797,1835]
                                        call [1797,1835]
                                            name [1797,1829]
                                                name: static_cast [1797,1808]
                                                argument_list [1808,1829]
                                                    argument [1809,1828]
                                                        specifier: internal [1809,1817]
                                                        name [1817,1828]
                                                            operator: :: [1817,1819]
                                                            name: Condition [1819,1828]
                                            argument_list [1829,1835]
                                                argument [1830,1834]
                                                    expr [1830,1834]
                                                        name: cond [1830,1834]
                    namespace [1840,2039]
                        name: detail [1850,1856]
                        block [1857,2039]
                            ifdef [1860,1872]
                                directive: ifdef [1861,1866]
                                name: DEBUG [1867,1872]
                            function [1873,1995]
                                type [1873,1884]
                                    specifier: inline [1873,1879]
                                    name: bool [1880,1884]
                                name: Clobbers [1885,1893]
                                parameter_list [1893,1925]
                                    parameter [1894,1909]
                                        decl [1894,1909]
                                            type [1894,1909]
                                                name: Register [1894,1902]
                                            name: target [1903,1909]
                                    parameter [1911,1924]
                                        decl [1911,1924]
                                            type [1911,1924]
                                                name: MemOperand [1911,1921]
                                            name: op [1922,1924]
                                block [1926,1995]
                                    block_content [1930,1985]
                                        return [1930,1985]
                                            expr [1937,1984]
                                                call [1937,1946]
                                                    name [1937,1944]
                                                        name: op [1937,1939]
                                                        operator: . [1939,1940]
                                                        name: base [1940,1944]
                                                    argument_list [1944,1946]
                                                operator: == [1947,1949]
                                                name: target [1950,1956]
                                                operator: || [1957,1959]
                                                call [1960,1974]
                                                    name [1960,1972]
                                                        name: op [1960,1962]
                                                        operator: . [1962,1963]
                                                        name: regoffset [1963,1972]
                                                    argument_list [1972,1974]
                                                operator: == [1975,1977]
                                                name: target [1978,1984]
                            endif [1988,1994]
                                directive: endif [1989,1994]
                    comment: // namespace detail [1999,2018]
                    define [2020,2038]
                        directive: define [2021,2027]
                        macro [2028,2030]
                            name: __ [2028,2030]
                        value [2031,2038]
                    function [2040,2223]
                        type [2040,2050]
                            name: MemOperand [2040,2050]
                        name [2051,2090]
                            name: BaselineAssembler [2051,2068]
                            operator: :: [2068,2070]
                            name: RegisterFrameOperand [2070,2090]
                        parameter_list [2090,2139]
                            parameter [2096,2138]
                                decl [2096,2138]
                                    type [2096,2117]
                                        name [2096,2117]
                                            name: interpreter [2096,2107]
                                            operator: :: [2107,2109]
                                            name: Register [2109,2117]
                                    name: interpreter_register [2118,2138]
                        block [2140,2223]
                            block_content [2144,2221]
                                return [2144,2221]
                                    expr [2151,2220]
                                        call [2151,2220]
                                            name: MemOperand [2151,2161]
                                            argument_list [2161,2220]
                                                argument [2162,2164]
                                                    expr [2162,2164]
                                                        name: fp [2162,2164]
                                                argument [2166,2219]
                                                    expr [2166,2219]
                                                        call [2166,2198]
                                                            name [2166,2196]
                                                                name: interpreter_register [2166,2186]
                                                                operator: . [2186,2187]
                                                                name: ToOperand [2187,2196]
                                                            argument_list [2196,2198]
                                                        operator: * [2199,2200]
                                                        name: kSystemPointerSize [2201,2219]
                    function [2224,2442]
                        type [2224,2228]
                            name: void [2224,2228]
                        name [2229,2268]
                            name: BaselineAssembler [2229,2246]
                            operator: :: [2246,2248]
                            name: RegisterFrameAddress [2248,2268]
                        parameter_list [2268,2336]
                            parameter [2274,2316]
                                decl [2274,2316]
                                    type [2274,2316]
                                        name [2274,2295]
                                            name: interpreter [2274,2285]
                                            operator: :: [2285,2287]
                                            name: Register [2287,2295]
                                    name: interpreter_register [2296,2316]
                            parameter [2318,2335]
                                decl [2318,2335]
                                    type [2318,2335]
                                        name: Register [2318,2326]
                                    name: rscratch [2327,2335]
                        block [2337,2442]
                            block_content [2341,2440]
                                return [2341,2440]
                                    expr [2348,2439]
                                        name: __ [2348,2350]
                                        call [2351,2439]
                                            name: Add [2351,2354]
                                            argument_list [2354,2439]
                                                argument [2355,2363]
                                                    expr [2355,2363]
                                                        name: rscratch [2355,2363]
                                                argument [2365,2367]
                                                    expr [2365,2367]
                                                        name: fp [2365,2367]
                                                argument [2385,2438]
                                                    expr [2385,2438]
                                                        call [2385,2417]
                                                            name [2385,2415]
                                                                name: interpreter_register [2385,2405]
                                                                operator: . [2405,2406]
                                                                name: ToOperand [2406,2415]
                                                            argument_list [2415,2417]
                                                        operator: * [2418,2419]
                                                        name: kSystemPointerSize [2420,2438]
                    function [2443,2572]
                        type [2443,2453]
                            name: MemOperand [2443,2453]
                        name [2454,2494]
                            name: BaselineAssembler [2454,2471]
                            operator: :: [2471,2473]
                            name: FeedbackVectorOperand [2473,2494]
                        parameter_list [2494,2496]
                        block [2497,2572]
                            block_content [2501,2570]
                                return [2501,2570]
                                    expr [2508,2569]
                                        call [2508,2569]
                                            name: MemOperand [2508,2518]
                                            argument_list [2518,2569]
                                                argument [2519,2521]
                                                    expr [2519,2521]
                                                        name: fp [2519,2521]
                                                argument [2523,2568]
                                                    expr [2523,2568]
                                                        name [2523,2568]
                                                            name: BaselineFrameConstants [2523,2545]
                                                            operator: :: [2545,2547]
                                                            name: kFeedbackVectorFromFp [2547,2568]
                    function [2574,2726]
                        type [2574,2578]
                            name: void [2574,2578]
                        name [2579,2602]
                            name: BaselineAssembler [2579,2596]
                            operator: :: [2596,2598]
                            name: Bind [2598,2602]
                        parameter_list [2602,2616]
                            parameter [2603,2615]
                                decl [2603,2615]
                                    type [2603,2609]
                                        name: Label [2603,2608]
                                        modifier: * [2608,2609]
                                    name: label [2610,2615]
                        block [2617,2726]
                            block_content [2699,2724]
                                comment: // All baseline compiler binds on arm64 are assumed to be for jump targets. [2621,2696]
                                decl_stmt [2699,2724]
                                    decl [2699,2723]
                                        type [2699,2701]
                                            name: __ [2699,2701]
                                        name: BindJumpTarget [2702,2716]
                                        argument_list [2716,2723]
                                            argument [2717,2722]
                                                expr [2717,2722]
                                                    name: label [2717,2722]
                    function [2728,2807]
                        type [2728,2732]
                            name: void [2728,2732]
                        name [2733,2773]
                            name: BaselineAssembler [2733,2750]
                            operator: :: [2750,2752]
                            name: BindWithoutJumpTarget [2752,2773]
                        parameter_list [2773,2787]
                            parameter [2774,2786]
                                decl [2774,2786]
                                    type [2774,2780]
                                        name: Label [2774,2779]
                                        modifier: * [2779,2780]
                                    name: label [2781,2786]
                        block [2788,2807]
                            block_content [2790,2805]
                                decl_stmt [2790,2805]
                                    decl [2790,2804]
                                        type [2790,2792]
                                            name: __ [2790,2792]
                                        name: Bind [2793,2797]
                                        argument_list [2797,2804]
                                            argument [2798,2803]
                                                expr [2798,2803]
                                                    name: label [2798,2803]
                    function [2809,2866]
                        type [2809,2813]
                            name: void [2809,2813]
                        name [2814,2843]
                            name: BaselineAssembler [2814,2831]
                            operator: :: [2831,2833]
                            name: JumpTarget [2833,2843]
                        parameter_list [2843,2845]
                        block [2846,2866]
                            block_content [2848,2864]
                                function_decl [2848,2864]
                                    type [2848,2850]
                                        name: __ [2848,2850]
                                    name: JumpTarget [2851,2861]
                                    parameter_list [2861,2863]
                    function [2868,2957]
                        type [2868,2872]
                            name: void [2868,2872]
                        name [2873,2896]
                            name: BaselineAssembler [2873,2890]
                            operator: :: [2890,2892]
                            name: Jump [2892,2896]
                        parameter_list [2896,2937]
                            parameter [2897,2910]
                                decl [2897,2910]
                                    type [2897,2910]
                                        name: Label [2897,2902]
                                        modifier: * [2902,2903]
                                    name: target [2904,2910]
                            parameter [2912,2936]
                                decl [2912,2936]
                                    type [2912,2936]
                                        name [2912,2927]
                                            name: Label [2912,2917]
                                            operator: :: [2917,2919]
                                            name: Distance [2919,2927]
                                    name: distance [2928,2936]
                        block [2938,2957]
                            block_content [2942,2955]
                                decl_stmt [2942,2955]
                                    decl [2942,2954]
                                        type [2942,2944]
                                            name: __ [2942,2944]
                                        name: B [2945,2946]
                                        argument_list [2946,2954]
                                            argument [2947,2953]
                                                expr [2947,2953]
                                                    name: target [2947,2953]
                    function [2959,3136]
                        type [2959,2963]
                            name: void [2959,2963]
                        name [2964,2993]
                            name: BaselineAssembler [2964,2981]
                            operator: :: [2981,2983]
                            name: JumpIfRoot [2983,2993]
                        parameter_list [2993,3093]
                            parameter [2994,3008]
                                decl [2994,3008]
                                    type [2994,3008]
                                        name: Register [2994,3002]
                                    name: value [3003,3008]
                            parameter [3010,3025]
                                decl [3010,3025]
                                    type [3010,3025]
                                        name: RootIndex [3010,3019]
                                    name: index [3020,3025]
                            parameter [3062,3075]
                                decl [3062,3075]
                                    type [3062,3075]
                                        name: Label [3062,3067]
                                        modifier: * [3067,3068]
                                    name: target [3069,3075]
                            parameter [3077,3092]
                                decl [3077,3092]
                                    type [3077,3092]
                                        name [3077,3092]
                                            name: Label [3077,3082]
                                            operator: :: [3082,3084]
                                            name: Distance [3084,3092]
                        block [3094,3136]
                            block_content [3098,3134]
                                decl_stmt [3098,3134]
                                    decl [3098,3133]
                                        type [3098,3100]
                                            name: __ [3098,3100]
                                        name: JumpIfRoot [3101,3111]
                                        argument_list [3111,3133]
                                            argument [3112,3117]
                                                expr [3112,3117]
                                                    name: value [3112,3117]
                                            argument [3119,3124]
                                                expr [3119,3124]
                                                    name: index [3119,3124]
                                            argument [3126,3132]
                                                expr [3126,3132]
                                                    name: target [3126,3132]
                    function [3138,3324]
                        type [3138,3142]
                            name: void [3138,3142]
                        name [3143,3175]
                            name: BaselineAssembler [3143,3160]
                            operator: :: [3160,3162]
                            name: JumpIfNotRoot [3162,3175]
                        parameter_list [3175,3278]
                            parameter [3176,3190]
                                decl [3176,3190]
                                    type [3176,3190]
                                        name: Register [3176,3184]
                                    name: value [3185,3190]
                            parameter [3192,3207]
                                decl [3192,3207]
                                    type [3192,3207]
                                        name: RootIndex [3192,3201]
                                    name: index [3202,3207]
                            parameter [3247,3260]
                                decl [3247,3260]
                                    type [3247,3260]
                                        name: Label [3247,3252]
                                        modifier: * [3252,3253]
                                    name: target [3254,3260]
                            parameter [3262,3277]
                                decl [3262,3277]
                                    type [3262,3277]
                                        name [3262,3277]
                                            name: Label [3262,3267]
                                            operator: :: [3267,3269]
                                            name: Distance [3269,3277]
                        block [3279,3324]
                            block_content [3283,3322]
                                decl_stmt [3283,3322]
                                    decl [3283,3321]
                                        type [3283,3285]
                                            name: __ [3283,3285]
                                        name: JumpIfNotRoot [3286,3299]
                                        argument_list [3299,3321]
                                            argument [3300,3305]
                                                expr [3300,3305]
                                                    name: value [3300,3305]
                                            argument [3307,3312]
                                                expr [3307,3312]
                                                    name: index [3307,3312]
                                            argument [3314,3320]
                                                expr [3314,3320]
                                                    name: target [3314,3320]
                    function [3326,3476]
                        type [3326,3330]
                            name: void [3326,3330]
                        name [3331,3359]
                            name: BaselineAssembler [3331,3348]
                            operator: :: [3348,3350]
                            name: JumpIfSmi [3350,3359]
                        parameter_list [3359,3441]
                            parameter [3360,3374]
                                decl [3360,3374]
                                    type [3360,3374]
                                        name: Register [3360,3368]
                                    name: value [3369,3374]
                            parameter [3376,3389]
                                decl [3376,3389]
                                    type [3376,3389]
                                        name: Label [3376,3381]
                                        modifier: * [3381,3382]
                                    name: target [3383,3389]
                            parameter [3425,3440]
                                decl [3425,3440]
                                    type [3425,3440]
                                        name [3425,3440]
                                            name: Label [3425,3430]
                                            operator: :: [3430,3432]
                                            name: Distance [3432,3440]
                        block [3442,3476]
                            block_content [3446,3474]
                                decl_stmt [3446,3474]
                                    decl [3446,3473]
                                        type [3446,3448]
                                            name: __ [3446,3448]
                                        name: JumpIfSmi [3449,3458]
                                        argument_list [3458,3473]
                                            argument [3459,3464]
                                                expr [3459,3464]
                                                    name: value [3459,3464]
                                            argument [3466,3472]
                                                expr [3466,3472]
                                                    name: target [3466,3472]
                    function [3478,3637]
                        type [3478,3482]
                            name: void [3478,3482]
                        name [3483,3514]
                            name: BaselineAssembler [3483,3500]
                            operator: :: [3500,3502]
                            name: JumpIfNotSmi [3502,3514]
                        parameter_list [3514,3599]
                            parameter [3515,3529]
                                decl [3515,3529]
                                    type [3515,3529]
                                        name: Register [3515,3523]
                                    name: value [3524,3529]
                            parameter [3531,3544]
                                decl [3531,3544]
                                    type [3531,3544]
                                        name: Label [3531,3536]
                                        modifier: * [3536,3537]
                                    name: target [3538,3544]
                            parameter [3583,3598]
                                decl [3583,3598]
                                    type [3583,3598]
                                        name [3583,3598]
                                            name: Label [3583,3588]
                                            operator: :: [3588,3590]
                                            name: Distance [3590,3598]
                        block [3600,3637]
                            block_content [3604,3635]
                                decl_stmt [3604,3635]
                                    decl [3604,3634]
                                        type [3604,3606]
                                            name: __ [3604,3606]
                                        name: JumpIfNotSmi [3607,3619]
                                        argument_list [3619,3634]
                                            argument [3620,3625]
                                                expr [3620,3625]
                                                    name: value [3620,3625]
                                            argument [3627,3633]
                                                expr [3627,3633]
                                                    name: target [3627,3633]
                    function [3639,3899]
                        type [3639,3643]
                            name: void [3639,3643]
                        name [3644,3678]
                            name: BaselineAssembler [3644,3661]
                            operator: :: [3661,3663]
                            name: JumpIfImmediate [3663,3678]
                        parameter_list [3678,3839]
                            parameter [3679,3691]
                                decl [3679,3691]
                                    type [3679,3691]
                                        name: Condition [3679,3688]
                                    name: cc [3689,3691]
                            parameter [3693,3706]
                                decl [3693,3706]
                                    type [3693,3706]
                                        name: Register [3693,3701]
                                    name: left [3702,3706]
                            parameter [3708,3717]
                                decl [3708,3717]
                                    type [3708,3717]
                                        name: int [3708,3711]
                                    name: right [3712,3717]
                            parameter [3759,3772]
                                decl [3759,3772]
                                    type [3759,3772]
                                        name: Label [3759,3764]
                                        modifier: * [3764,3765]
                                    name: target [3766,3772]
                            parameter [3814,3838]
                                decl [3814,3838]
                                    type [3814,3838]
                                        name [3814,3829]
                                            name: Label [3814,3819]
                                            operator: :: [3819,3821]
                                            name: Distance [3821,3829]
                                    name: distance [3830,3838]
                        block [3840,3899]
                            block_content [3844,3897]
                                expr_stmt [3844,3897]
                                    expr [3844,3896]
                                        call [3844,3896]
                                            name: JumpIf [3844,3850]
                                            argument_list [3850,3896]
                                                argument [3851,3853]
                                                    expr [3851,3853]
                                                        name: cc [3851,3853]
                                                argument [3855,3859]
                                                    expr [3855,3859]
                                                        name: left [3855,3859]
                                                argument [3861,3877]
                                                    expr [3861,3877]
                                                        call [3861,3877]
                                                            name: Immediate [3861,3870]
                                                            argument_list [3870,3877]
                                                                argument [3871,3876]
                                                                    expr [3871,3876]
                                                                        name: right [3871,3876]
                                                argument [3879,3885]
                                                    expr [3879,3885]
                                                        name: target [3879,3885]
                                                argument [3887,3895]
                                                    expr [3887,3895]
                                                        name: distance [3887,3895]
                    function [3901,4227]
                        type [3901,3905]
                            name: void [3901,3905]
                        name [3906,3936]
                            name: BaselineAssembler [3906,3923]
                            operator: :: [3923,3925]
                            name: CallBuiltin [3925,3936]
                        parameter_list [3936,3953]
                            parameter [3937,3952]
                                decl [3937,3952]
                                    type [3937,3944]
                                        name: Builtin [3937,3944]
                                    name: builtin [3945,3952]
                        block [3954,4227]
                            block_content [3958,4225]
                                if_stmt [3958,4225]
                                    if [3958,4069]
                                        condition [3961,4000]
                                            expr [3962,3999]
                                                call [3962,3968]
                                                    name: masm [3962,3966]
                                                    argument_list [3966,3968]
                                                operator: -> [3968,3970]
                                                call [3970,3979]
                                                    name: options [3970,3977]
                                                    argument_list [3977,3979]
                                                operator: . [3979,3980]
                                                name: short_builtin_calls [3980,3999]
                                        block [4001,4069]
                                            block_content [4041,4065]
                                                comment: // Generate pc-relative call. [4007,4036]
                                                decl_stmt [4041,4065]
                                                    decl [4041,4064]
                                                        type [4041,4043]
                                                            name: __ [4041,4043]
                                                        name: CallBuiltin [4044,4055]
                                                        argument_list [4055,4064]
                                                            argument [4056,4063]
                                                                expr [4056,4063]
                                                                    name: builtin [4056,4063]
                                    else [4070,4225]
                                        block [4075,4225]
                                            block_content [4081,4221]
                                                decl_stmt [4081,4114]
                                                    decl [4081,4113]
                                                        type [4081,4101]
                                                            name: ScratchRegisterScope [4081,4101]
                                                        name: temps [4102,4107]
                                                        argument_list [4107,4113]
                                                            argument [4108,4112]
                                                                expr [4108,4112]
                                                                    name: this [4108,4112]
                                                decl_stmt [4119,4158]
                                                    decl [4119,4157]
                                                        type [4119,4127]
                                                            name: Register [4119,4127]
                                                        name: temp [4128,4132]
                                                        init [4133,4157]
                                                            expr [4135,4157]
                                                                call [4135,4157]
                                                                    name [4135,4155]
                                                                        name: temps [4135,4140]
                                                                        operator: . [4140,4141]
                                                                        name: AcquireScratch [4141,4155]
                                                                    argument_list [4155,4157]
                                                decl_stmt [4163,4202]
                                                    decl [4163,4201]
                                                        type [4163,4165]
                                                            name: __ [4163,4165]
                                                        name: LoadEntryFromBuiltin [4166,4186]
                                                        argument_list [4186,4201]
                                                            argument [4187,4194]
                                                                expr [4187,4194]
                                                                    name: builtin [4187,4194]
                                                            argument [4196,4200]
                                                                expr [4196,4200]
                                                                    name: temp [4196,4200]
                                                decl_stmt [4207,4221]
                                                    decl [4207,4220]
                                                        type [4207,4209]
                                                            name: __ [4207,4209]
                                                        name: Call [4210,4214]
                                                        argument_list [4214,4220]
                                                            argument [4215,4219]
                                                                expr [4215,4219]
                                                                    name: temp [4215,4219]
                    function [4229,5259]
                        type [4229,4233]
                            name: void [4229,4233]
                        name [4234,4268]
                            name: BaselineAssembler [4234,4251]
                            operator: :: [4251,4253]
                            name: TailCallBuiltin [4253,4268]
                        parameter_list [4268,4285]
                            parameter [4269,4284]
                                decl [4269,4284]
                                    type [4269,4276]
                                        name: Builtin [4269,4276]
                                    name: builtin [4277,4284]
                        block [4286,5259]
                            block_content [4290,5257]
                                if_stmt [4290,5257]
                                    if [4290,4405]
                                        condition [4293,4332]
                                            expr [4294,4331]
                                                call [4294,4300]
                                                    name: masm [4294,4298]
                                                    argument_list [4298,4300]
                                                operator: -> [4300,4302]
                                                call [4302,4311]
                                                    name: options [4302,4309]
                                                    argument_list [4309,4311]
                                                operator: . [4311,4312]
                                                name: short_builtin_calls [4312,4331]
                                        block [4333,4405]
                                            block_content [4373,4401]
                                                comment: // Generate pc-relative call. [4339,4368]
                                                decl_stmt [4373,4401]
                                                    decl [4373,4400]
                                                        type [4373,4375]
                                                            name: __ [4373,4375]
                                                        name: TailCallBuiltin [4376,4391]
                                                        argument_list [4391,4400]
                                                            argument [4392,4399]
                                                                expr [4392,4399]
                                                                    name: builtin [4392,4399]
                                    else [4406,5257]
                                        block [4411,5257]
                                            block_content [5037,5253]
                                                comment: // The control flow integrity (CFI) feature allows us to "sign" code entry [4417,4491]
                                                comment: // points as a target for calls, jumps or both. Arm64 has special [4496,4561]
                                                comment: // instructions for this purpose, so-called "landing pads" (see [4566,4629]
                                                comment: // TurboAssembler::CallTarget(), TurboAssembler::JumpTarget() and [4634,4699]
                                                comment: // TurboAssembler::JumpOrCallTarget()). Currently, we generate "Call" [4704,4773]
                                                comment: // landing pads for CPP builtins. In order to allow tail calling to those [4778,4851]
                                                comment: // builtins we have to use a workaround. [4856,4896]
                                                comment: // x17 is used to allow using "Call" (i.e. `bti c`) rather than "Jump" (i.e. [4901,4977]
                                                comment: // `bti j`) landing pads for the tail-called code. [4982,5032]
                                                decl_stmt [5037,5057]
                                                    decl [5037,5056]
                                                        type [5037,5045]
                                                            name: Register [5037,5045]
                                                        name: temp [5046,5050]
                                                        init [5051,5056]
                                                            expr [5053,5056]
                                                                name: x17 [5053,5056]
                                                comment: // Make sure we're don't use this register as a temporary. [5063,5121]
                                                decl_stmt [5126,5164]
                                                    decl [5126,5163]
                                                        type [5126,5149]
                                                            name: UseScratchRegisterScope [5126,5149]
                                                        name: temps [5150,5155]
                                                        argument_list [5155,5163]
                                                            argument [5156,5162]
                                                                expr [5156,5162]
                                                                    call [5156,5162]
                                                                        name: masm [5156,5160]
                                                                        argument_list [5160,5162]
                                                expr_stmt [5169,5189]
                                                    expr [5169,5188]
                                                        call [5169,5188]
                                                            name [5169,5182]
                                                                name: temps [5169,5174]
                                                                operator: . [5174,5175]
                                                                name: Exclude [5175,5182]
                                                            argument_list [5182,5188]
                                                                argument [5183,5187]
                                                                    expr [5183,5187]
                                                                        name: temp [5183,5187]
                                                decl_stmt [5195,5234]
                                                    decl [5195,5233]
                                                        type [5195,5197]
                                                            name: __ [5195,5197]
                                                        name: LoadEntryFromBuiltin [5198,5218]
                                                        argument_list [5218,5233]
                                                            argument [5219,5226]
                                                                expr [5219,5226]
                                                                    name: builtin [5219,5226]
                                                            argument [5228,5232]
                                                                expr [5228,5232]
                                                                    name: temp [5228,5232]
                                                decl_stmt [5239,5253]
                                                    decl [5239,5252]
                                                        type [5239,5241]
                                                            name: __ [5239,5241]
                                                        name: Jump [5242,5246]
                                                        argument_list [5246,5252]
                                                            argument [5247,5251]
                                                                expr [5247,5251]
                                                                    name: temp [5247,5251]
                    function [5261,5483]
                        type [5261,5265]
                            name: void [5261,5265]
                        name [5266,5298]
                            name: BaselineAssembler [5266,5283]
                            operator: :: [5283,5285]
                            name: TestAndBranch [5285,5298]
                        parameter_list [5298,5408]
                            parameter [5299,5313]
                                decl [5299,5313]
                                    type [5299,5313]
                                        name: Register [5299,5307]
                                    name: value [5308,5313]
                            parameter [5315,5323]
                                decl [5315,5323]
                                    type [5315,5323]
                                        name: int [5315,5318]
                                    name: mask [5319,5323]
                            parameter [5325,5337]
                                decl [5325,5337]
                                    type [5325,5337]
                                        name: Condition [5325,5334]
                                    name: cc [5335,5337]
                            parameter [5377,5390]
                                decl [5377,5390]
                                    type [5377,5390]
                                        name: Label [5377,5382]
                                        modifier: * [5382,5383]
                                    name: target [5384,5390]
                            parameter [5392,5407]
                                decl [5392,5407]
                                    type [5392,5407]
                                        name [5392,5407]
                                            name: Label [5392,5397]
                                            operator: :: [5397,5399]
                                            name: Distance [5399,5407]
                        block [5409,5483]
                            block_content [5413,5481]
                                decl_stmt [5413,5444]
                                    decl [5413,5443]
                                        type [5413,5415]
                                            name: __ [5413,5415]
                                        name: Tst [5416,5419]
                                        argument_list [5419,5443]
                                            argument [5420,5425]
                                                expr [5420,5425]
                                                    name: value [5420,5425]
                                            argument [5427,5442]
                                                expr [5427,5442]
                                                    call [5427,5442]
                                                        name: Immediate [5427,5436]
                                                        argument_list [5436,5442]
                                                            argument [5437,5441]
                                                                expr [5437,5441]
                                                                    name: mask [5437,5441]
                                decl_stmt [5447,5481]
                                    decl [5447,5480]
                                        type [5447,5449]
                                            name: __ [5447,5449]
                                        name: B [5450,5451]
                                        argument_list [5451,5480]
                                            argument [5452,5471]
                                                expr [5452,5471]
                                                    call [5452,5471]
                                                        name: AsMasmCondition [5452,5467]
                                                        argument_list [5467,5471]
                                                            argument [5468,5470]
                                                                expr [5468,5470]
                                                                    name: cc [5468,5470]
                                            argument [5473,5479]
                                                expr [5473,5479]
                                                    name: target [5473,5479]
                    function [5485,5692]
                        type [5485,5489]
                            name: void [5485,5489]
                        name [5490,5515]
                            name: BaselineAssembler [5490,5507]
                            operator: :: [5507,5509]
                            name: JumpIf [5509,5515]
                        parameter_list [5515,5626]
                            parameter [5516,5528]
                                decl [5516,5528]
                                    type [5516,5528]
                                        name: Condition [5516,5525]
                                    name: cc [5526,5528]
                            parameter [5530,5542]
                                decl [5530,5542]
                                    type [5530,5542]
                                        name: Register [5530,5538]
                                    name: lhs [5539,5542]
                            parameter [5544,5562]
                                decl [5544,5562]
                                    type [5544,5562]
                                        specifier: const [5544,5549]
                                        name: Operand [5550,5557]
                                        modifier: & [5557,5558]
                                    name: rhs [5559,5562]
                            parameter [5595,5608]
                                decl [5595,5608]
                                    type [5595,5608]
                                        name: Label [5595,5600]
                                        modifier: * [5600,5601]
                                    name: target [5602,5608]
                            parameter [5610,5625]
                                decl [5610,5625]
                                    type [5610,5625]
                                        name [5610,5625]
                                            name: Label [5610,5615]
                                            operator: :: [5615,5617]
                                            name: Distance [5617,5625]
                        block [5627,5692]
                            block_content [5631,5690]
                                decl_stmt [5631,5690]
                                    decl [5631,5689]
                                        type [5631,5633]
                                            name: __ [5631,5633]
                                        name: CompareAndBranch [5634,5650]
                                        argument_list [5650,5689]
                                            argument [5651,5654]
                                                expr [5651,5654]
                                                    name: lhs [5651,5654]
                                            argument [5656,5659]
                                                expr [5656,5659]
                                                    name: rhs [5656,5659]
                                            argument [5661,5680]
                                                expr [5661,5680]
                                                    call [5661,5680]
                                                        name: AsMasmCondition [5661,5676]
                                                        argument_list [5676,5680]
                                                            argument [5677,5679]
                                                                expr [5677,5679]
                                                                    name: cc [5677,5679]
                                            argument [5682,5688]
                                                expr [5682,5688]
                                                    name: target [5682,5688]
                    function [5693,6178]
                        type [5693,5697]
                            name: void [5693,5697]
                        name [5698,5733]
                            name: BaselineAssembler [5698,5715]
                            operator: :: [5715,5717]
                            name: JumpIfObjectType [5717,5733]
                        parameter_list [5733,5961]
                            parameter [5734,5746]
                                decl [5734,5746]
                                    type [5734,5746]
                                        name: Condition [5734,5743]
                                    name: cc [5744,5746]
                            parameter [5748,5763]
                                decl [5748,5763]
                                    type [5748,5763]
                                        name: Register [5748,5756]
                                    name: object [5757,5763]
                            parameter [5806,5832]
                                decl [5806,5832]
                                    type [5806,5832]
                                        name: InstanceType [5806,5818]
                                    name: instance_type [5819,5832]
                            parameter [5875,5887]
                                decl [5875,5887]
                                    type [5875,5887]
                                        name: Register [5875,5883]
                                    name: map [5884,5887]
                            parameter [5889,5902]
                                decl [5889,5902]
                                    type [5889,5902]
                                        name: Label [5889,5894]
                                        modifier: * [5894,5895]
                                    name: target [5896,5902]
                            parameter [5945,5960]
                                decl [5945,5960]
                                    type [5945,5960]
                                        name [5945,5960]
                                            name: Label [5945,5950]
                                            operator: :: [5950,5952]
                                            name: Distance [5952,5960]
                        block [5962,6178]
                            block_content [5966,6176]
                                decl_stmt [5966,5999]
                                    decl [5966,5998]
                                        type [5966,5986]
                                            name: ScratchRegisterScope [5966,5986]
                                        name: temps [5987,5992]
                                        argument_list [5992,5998]
                                            argument [5993,5997]
                                                expr [5993,5997]
                                                    name: this [5993,5997]
                                decl_stmt [6002,6041]
                                    decl [6002,6040]
                                        type [6002,6010]
                                            name: Register [6002,6010]
                                        name: type [6011,6015]
                                        init [6016,6040]
                                            expr [6018,6040]
                                                call [6018,6040]
                                                    name [6018,6038]
                                                        name: temps [6018,6023]
                                                        operator: . [6023,6024]
                                                        name: AcquireScratch [6024,6038]
                                                    argument_list [6038,6040]
                                decl_stmt [6044,6068]
                                    decl [6044,6067]
                                        type [6044,6046]
                                            name: __ [6044,6046]
                                        name: LoadMap [6047,6054]
                                        argument_list [6054,6067]
                                            argument [6055,6058]
                                                expr [6055,6058]
                                                    name: map [6055,6058]
                                            argument [6060,6066]
                                                expr [6060,6066]
                                                    name: object [6060,6066]
                                decl_stmt [6071,6133]
                                    decl [6071,6132]
                                        type [6071,6073]
                                            name: __ [6071,6073]
                                        name: Ldrh [6074,6078]
                                        argument_list [6078,6132]
                                            argument [6079,6083]
                                                expr [6079,6083]
                                                    name: type [6079,6083]
                                            argument [6085,6131]
                                                expr [6085,6131]
                                                    call [6085,6131]
                                                        name: FieldMemOperand [6085,6100]
                                                        argument_list [6100,6131]
                                                            argument [6101,6104]
                                                                expr [6101,6104]
                                                                    name: map [6101,6104]
                                                            argument [6106,6130]
                                                                expr [6106,6130]
                                                                    name [6106,6130]
                                                                        name: Map [6106,6109]
                                                                        operator: :: [6109,6111]
                                                                        name: kInstanceTypeOffset [6111,6130]
                                expr_stmt [6136,6176]
                                    expr [6136,6175]
                                        call [6136,6175]
                                            name: JumpIf [6136,6142]
                                            argument_list [6142,6175]
                                                argument [6143,6145]
                                                    expr [6143,6145]
                                                        name: cc [6143,6145]
                                                argument [6147,6151]
                                                    expr [6147,6151]
                                                        name: type [6147,6151]
                                                argument [6153,6166]
                                                    expr [6153,6166]
                                                        name: instance_type [6153,6166]
                                                argument [6168,6174]
                                                    expr [6168,6174]
                                                        name: target [6168,6174]
                    function [6179,6743]
                        type [6179,6183]
                            name: void [6179,6183]
                        name [6184,6221]
                            name: BaselineAssembler [6184,6201]
                            operator: :: [6201,6203]
                            name: JumpIfInstanceType [6203,6221]
                        parameter_list [6221,6395]
                            parameter [6222,6234]
                                decl [6222,6234]
                                    type [6222,6234]
                                        name: Condition [6222,6231]
                                    name: cc [6232,6234]
                            parameter [6236,6248]
                                decl [6236,6248]
                                    type [6236,6248]
                                        name: Register [6236,6244]
                                    name: map [6245,6248]
                            parameter [6293,6319]
                                decl [6293,6319]
                                    type [6293,6319]
                                        name: InstanceType [6293,6305]
                                    name: instance_type [6306,6319]
                            parameter [6364,6377]
                                decl [6364,6377]
                                    type [6364,6377]
                                        name: Label [6364,6369]
                                        modifier: * [6369,6370]
                                    name: target [6371,6377]
                            parameter [6379,6394]
                                decl [6379,6394]
                                    type [6379,6394]
                                        name [6379,6394]
                                            name: Label [6379,6384]
                                            operator: :: [6384,6386]
                                            name: Distance [6386,6394]
                        block [6396,6743]
                            block_content [6400,6741]
                                decl_stmt [6400,6433]
                                    decl [6400,6432]
                                        type [6400,6420]
                                            name: ScratchRegisterScope [6400,6420]
                                        name: temps [6421,6426]
                                        argument_list [6426,6432]
                                            argument [6427,6431]
                                                expr [6427,6431]
                                                    name: this [6427,6431]
                                decl_stmt [6436,6475]
                                    decl [6436,6474]
                                        type [6436,6444]
                                            name: Register [6436,6444]
                                        name: type [6445,6449]
                                        init [6450,6474]
                                            expr [6452,6474]
                                                call [6452,6474]
                                                    name [6452,6472]
                                                        name: temps [6452,6457]
                                                        operator: . [6457,6458]
                                                        name: AcquireScratch [6458,6472]
                                                    argument_list [6472,6474]
                                if_stmt [6478,6633]
                                    if [6478,6633]
                                        condition [6481,6498]
                                            expr [6482,6497]
                                                name: FLAG_debug_code [6482,6497]
                                        block [6499,6633]
                                            block_content [6505,6629]
                                                decl_stmt [6505,6526]
                                                    decl [6505,6525]
                                                        type [6505,6507]
                                                            name: __ [6505,6507]
                                                        name: AssertNotSmi [6508,6520]
                                                        argument_list [6520,6525]
                                                            argument [6521,6524]
                                                                expr [6521,6524]
                                                                    name: map [6521,6524]
                                                decl_stmt [6531,6579]
                                                    decl [6531,6578]
                                                        type [6531,6533]
                                                            name: __ [6531,6533]
                                                        name: CompareObjectType [6534,6551]
                                                        argument_list [6551,6578]
                                                            argument [6552,6555]
                                                                expr [6552,6555]
                                                                    name: map [6552,6555]
                                                            argument [6557,6561]
                                                                expr [6557,6561]
                                                                    name: type [6557,6561]
                                                            argument [6563,6567]
                                                                expr [6563,6567]
                                                                    name: type [6563,6567]
                                                            argument [6569,6577]
                                                                expr [6569,6577]
                                                                    name: MAP_TYPE [6569,6577]
                                                decl_stmt [6584,6629]
                                                    decl [6584,6628]
                                                        type [6584,6586]
                                                            name: __ [6584,6586]
                                                        name: Assert [6587,6593]
                                                        argument_list [6593,6628]
                                                            argument [6594,6596]
                                                                expr [6594,6596]
                                                                    name: eq [6594,6596]
                                                            argument [6598,6627]
                                                                expr [6598,6627]
                                                                    name [6598,6627]
                                                                        name: AbortReason [6598,6609]
                                                                        operator: :: [6609,6611]
                                                                        name: kUnexpectedValue [6611,6627]
                                decl_stmt [6636,6698]
                                    decl [6636,6697]
                                        type [6636,6638]
                                            name: __ [6636,6638]
                                        name: Ldrh [6639,6643]
                                        argument_list [6643,6697]
                                            argument [6644,6648]
                                                expr [6644,6648]
                                                    name: type [6644,6648]
                                            argument [6650,6696]
                                                expr [6650,6696]
                                                    call [6650,6696]
                                                        name: FieldMemOperand [6650,6665]
                                                        argument_list [6665,6696]
                                                            argument [6666,6669]
                                                                expr [6666,6669]
                                                                    name: map [6666,6669]
                                                            argument [6671,6695]
                                                                expr [6671,6695]
                                                                    name [6671,6695]
                                                                        name: Map [6671,6674]
                                                                        operator: :: [6674,6676]
                                                                        name: kInstanceTypeOffset [6676,6695]
                                expr_stmt [6701,6741]
                                    expr [6701,6740]
                                        call [6701,6740]
                                            name: JumpIf [6701,6707]
                                            argument_list [6707,6740]
                                                argument [6708,6710]
                                                    expr [6708,6710]
                                                        name: cc [6708,6710]
                                                argument [6712,6716]
                                                    expr [6712,6716]
                                                        name: type [6712,6716]
                                                argument [6718,6731]
                                                    expr [6718,6731]
                                                        name: instance_type [6718,6731]
                                                argument [6733,6739]
                                                    expr [6733,6739]
                                                        name: target [6733,6739]
                    function [6744,7078]
                        type [6744,6748]
                            name: void [6744,6748]
                        name [6749,6781]
                            name: BaselineAssembler [6749,6766]
                            operator: :: [6766,6768]
                            name: JumpIfPointer [6768,6781]
                        parameter_list [6781,6939]
                            parameter [6782,6794]
                                decl [6782,6794]
                                    type [6782,6794]
                                        name: Condition [6782,6791]
                                    name: cc [6792,6794]
                            parameter [6796,6810]
                                decl [6796,6810]
                                    type [6796,6810]
                                        name: Register [6796,6804]
                                    name: value [6805,6810]
                            parameter [6850,6868]
                                decl [6850,6868]
                                    type [6850,6868]
                                        name: MemOperand [6850,6860]
                                    name: operand [6861,6868]
                            parameter [6870,6883]
                                decl [6870,6883]
                                    type [6870,6883]
                                        name: Label [6870,6875]
                                        modifier: * [6875,6876]
                                    name: target [6877,6883]
                            parameter [6923,6938]
                                decl [6923,6938]
                                    type [6923,6938]
                                        name [6923,6938]
                                            name: Label [6923,6928]
                                            operator: :: [6928,6930]
                                            name: Distance [6930,6938]
                        block [6940,7078]
                            block_content [6944,7076]
                                decl_stmt [6944,6977]
                                    decl [6944,6976]
                                        type [6944,6964]
                                            name: ScratchRegisterScope [6944,6964]
                                        name: temps [6965,6970]
                                        argument_list [6970,6976]
                                            argument [6971,6975]
                                                expr [6971,6975]
                                                    name: this [6971,6975]
                                decl_stmt [6980,7018]
                                    decl [6980,7017]
                                        type [6980,6988]
                                            name: Register [6980,6988]
                                        name: tmp [6989,6992]
                                        init [6993,7017]
                                            expr [6995,7017]
                                                call [6995,7017]
                                                    name [6995,7015]
                                                        name: temps [6995,7000]
                                                        operator: . [7000,7001]
                                                        name: AcquireScratch [7001,7015]
                                                    argument_list [7015,7017]
                                decl_stmt [7021,7042]
                                    decl [7021,7041]
                                        type [7021,7023]
                                            name: __ [7021,7023]
                                        name: Ldr [7024,7027]
                                        argument_list [7027,7041]
                                            argument [7028,7031]
                                                expr [7028,7031]
                                                    name: tmp [7028,7031]
                                            argument [7033,7040]
                                                expr [7033,7040]
                                                    name: operand [7033,7040]
                                expr_stmt [7045,7076]
                                    expr [7045,7075]
                                        call [7045,7075]
                                            name: JumpIf [7045,7051]
                                            argument_list [7051,7075]
                                                argument [7052,7054]
                                                    expr [7052,7054]
                                                        name: cc [7052,7054]
                                                argument [7056,7061]
                                                    expr [7056,7061]
                                                        name: value [7056,7061]
                                                argument [7063,7066]
                                                    expr [7063,7066]
                                                        name: tmp [7063,7066]
                                                argument [7068,7074]
                                                    expr [7068,7074]
                                                        name: target [7068,7074]
                    function [7079,7323]
                        type [7079,7083]
                            name: void [7079,7083]
                        name [7084,7112]
                            name: BaselineAssembler [7084,7101]
                            operator: :: [7101,7103]
                            name: JumpIfSmi [7103,7112]
                        parameter_list [7112,7226]
                            parameter [7113,7125]
                                decl [7113,7125]
                                    type [7113,7125]
                                        name: Condition [7113,7122]
                                    name: cc [7123,7125]
                            parameter [7127,7141]
                                decl [7127,7141]
                                    type [7127,7141]
                                        name: Register [7127,7135]
                                    name: value [7136,7141]
                            parameter [7143,7150]
                                decl [7143,7150]
                                    type [7143,7150]
                                        name: Smi [7143,7146]
                                    name: smi [7147,7150]
                            parameter [7186,7199]
                                decl [7186,7199]
                                    type [7186,7199]
                                        name: Label [7186,7191]
                                        modifier: * [7191,7192]
                                    name: target [7193,7199]
                            parameter [7201,7225]
                                decl [7201,7225]
                                    type [7201,7225]
                                        name [7201,7216]
                                            name: Label [7201,7206]
                                            operator: :: [7206,7208]
                                            name: Distance [7208,7216]
                                    name: distance [7217,7225]
                        block [7227,7323]
                            block_content [7231,7321]
                                decl_stmt [7231,7251]
                                    decl [7231,7250]
                                        type [7231,7233]
                                            name: __ [7231,7233]
                                        name: AssertSmi [7234,7243]
                                        argument_list [7243,7250]
                                            argument [7244,7249]
                                                expr [7244,7249]
                                                    name: value [7244,7249]
                                decl_stmt [7254,7321]
                                    decl [7254,7320]
                                        type [7254,7256]
                                            name: __ [7254,7256]
                                        name: CompareTaggedAndBranch [7257,7279]
                                        argument_list [7279,7320]
                                            argument [7280,7285]
                                                expr [7280,7285]
                                                    name: value [7280,7285]
                                            argument [7287,7290]
                                                expr [7287,7290]
                                                    name: smi [7287,7290]
                                            argument [7292,7311]
                                                expr [7292,7311]
                                                    call [7292,7311]
                                                        name: AsMasmCondition [7292,7307]
                                                        argument_list [7307,7311]
                                                            argument [7308,7310]
                                                                expr [7308,7310]
                                                                    name: cc [7308,7310]
                                            argument [7313,7319]
                                                expr [7313,7319]
                                                    name: target [7313,7319]
                    function [7325,7580]
                        type [7325,7329]
                            name: void [7325,7329]
                        name [7330,7358]
                            name: BaselineAssembler [7330,7347]
                            operator: :: [7347,7349]
                            name: JumpIfSmi [7349,7358]
                        parameter_list [7358,7466]
                            parameter [7359,7371]
                                decl [7359,7371]
                                    type [7359,7371]
                                        name: Condition [7359,7368]
                                    name: cc [7369,7371]
                            parameter [7373,7385]
                                decl [7373,7385]
                                    type [7373,7385]
                                        name: Register [7373,7381]
                                    name: lhs [7382,7385]
                            parameter [7387,7399]
                                decl [7387,7399]
                                    type [7387,7399]
                                        name: Register [7387,7395]
                                    name: rhs [7396,7399]
                            parameter [7435,7448]
                                decl [7435,7448]
                                    type [7435,7448]
                                        name: Label [7435,7440]
                                        modifier: * [7440,7441]
                                    name: target [7442,7448]
                            parameter [7450,7465]
                                decl [7450,7465]
                                    type [7450,7465]
                                        name [7450,7465]
                                            name: Label [7450,7455]
                                            operator: :: [7455,7457]
                                            name: Distance [7457,7465]
                        block [7467,7580]
                            block_content [7471,7578]
                                decl_stmt [7471,7489]
                                    decl [7471,7488]
                                        type [7471,7473]
                                            name: __ [7471,7473]
                                        name: AssertSmi [7474,7483]
                                        argument_list [7483,7488]
                                            argument [7484,7487]
                                                expr [7484,7487]
                                                    name: lhs [7484,7487]
                                decl_stmt [7492,7510]
                                    decl [7492,7509]
                                        type [7492,7494]
                                            name: __ [7492,7494]
                                        name: AssertSmi [7495,7504]
                                        argument_list [7504,7509]
                                            argument [7505,7508]
                                                expr [7505,7508]
                                                    name: rhs [7505,7508]
                                decl_stmt [7513,7578]
                                    decl [7513,7577]
                                        type [7513,7515]
                                            name: __ [7513,7515]
                                        name: CompareTaggedAndBranch [7516,7538]
                                        argument_list [7538,7577]
                                            argument [7539,7542]
                                                expr [7539,7542]
                                                    name: lhs [7539,7542]
                                            argument [7544,7547]
                                                expr [7544,7547]
                                                    name: rhs [7544,7547]
                                            argument [7549,7568]
                                                expr [7549,7568]
                                                    call [7549,7568]
                                                        name: AsMasmCondition [7549,7564]
                                                        argument_list [7564,7568]
                                                            argument [7565,7567]
                                                                expr [7565,7567]
                                                                    name: cc [7565,7567]
                                            argument [7570,7576]
                                                expr [7570,7576]
                                                    name: target [7570,7576]
                    function [7581,7948]
                        type [7581,7585]
                            name: void [7581,7585]
                        name [7586,7617]
                            name: BaselineAssembler [7586,7603]
                            operator: :: [7603,7605]
                            name: JumpIfTagged [7605,7617]
                        parameter_list [7617,7773]
                            parameter [7618,7630]
                                decl [7618,7630]
                                    type [7618,7630]
                                        name: Condition [7618,7627]
                                    name: cc [7628,7630]
                            parameter [7632,7646]
                                decl [7632,7646]
                                    type [7632,7646]
                                        name: Register [7632,7640]
                                    name: value [7641,7646]
                            parameter [7685,7703]
                                decl [7685,7703]
                                    type [7685,7703]
                                        name: MemOperand [7685,7695]
                                    name: operand [7696,7703]
                            parameter [7705,7718]
                                decl [7705,7718]
                                    type [7705,7718]
                                        name: Label [7705,7710]
                                        modifier: * [7710,7711]
                                    name: target [7712,7718]
                            parameter [7757,7772]
                                decl [7757,7772]
                                    type [7757,7772]
                                        name [7757,7772]
                                            name: Label [7757,7762]
                                            operator: :: [7762,7764]
                                            name: Distance [7764,7772]
                        block [7774,7948]
                            block_content [7778,7946]
                                decl_stmt [7778,7811]
                                    decl [7778,7810]
                                        type [7778,7798]
                                            name: ScratchRegisterScope [7778,7798]
                                        name: temps [7799,7804]
                                        argument_list [7804,7810]
                                            argument [7805,7809]
                                                expr [7805,7809]
                                                    name: this [7805,7809]
                                decl_stmt [7814,7852]
                                    decl [7814,7851]
                                        type [7814,7822]
                                            name: Register [7814,7822]
                                        name: tmp [7823,7826]
                                        init [7827,7851]
                                            expr [7829,7851]
                                                call [7829,7851]
                                                    name [7829,7849]
                                                        name: temps [7829,7834]
                                                        operator: . [7834,7835]
                                                        name: AcquireScratch [7835,7849]
                                                    argument_list [7849,7851]
                                decl_stmt [7855,7876]
                                    decl [7855,7875]
                                        type [7855,7857]
                                            name: __ [7855,7857]
                                        name: Ldr [7858,7861]
                                        argument_list [7861,7875]
                                            argument [7862,7865]
                                                expr [7862,7865]
                                                    name: tmp [7862,7865]
                                            argument [7867,7874]
                                                expr [7867,7874]
                                                    name: operand [7867,7874]
                                decl_stmt [7879,7946]
                                    decl [7879,7945]
                                        type [7879,7881]
                                            name: __ [7879,7881]
                                        name: CompareTaggedAndBranch [7882,7904]
                                        argument_list [7904,7945]
                                            argument [7905,7910]
                                                expr [7905,7910]
                                                    name: value [7905,7910]
                                            argument [7912,7915]
                                                expr [7912,7915]
                                                    name: tmp [7912,7915]
                                            argument [7917,7936]
                                                expr [7917,7936]
                                                    call [7917,7936]
                                                        name: AsMasmCondition [7917,7932]
                                                        argument_list [7932,7936]
                                                            argument [7933,7935]
                                                                expr [7933,7935]
                                                                    name: cc [7933,7935]
                                            argument [7938,7944]
                                                expr [7938,7944]
                                                    name: target [7938,7944]
                    function [7949,8316]
                        type [7949,7953]
                            name: void [7949,7953]
                        name [7954,7985]
                            name: BaselineAssembler [7954,7971]
                            operator: :: [7971,7973]
                            name: JumpIfTagged [7973,7985]
                        parameter_list [7985,8141]
                            parameter [7986,7998]
                                decl [7986,7998]
                                    type [7986,7998]
                                        name: Condition [7986,7995]
                                    name: cc [7996,7998]
                            parameter [8000,8018]
                                decl [8000,8018]
                                    type [8000,8018]
                                        name: MemOperand [8000,8010]
                                    name: operand [8011,8018]
                            parameter [8057,8071]
                                decl [8057,8071]
                                    type [8057,8071]
                                        name: Register [8057,8065]
                                    name: value [8066,8071]
                            parameter [8073,8086]
                                decl [8073,8086]
                                    type [8073,8086]
                                        name: Label [8073,8078]
                                        modifier: * [8078,8079]
                                    name: target [8080,8086]
                            parameter [8125,8140]
                                decl [8125,8140]
                                    type [8125,8140]
                                        name [8125,8140]
                                            name: Label [8125,8130]
                                            operator: :: [8130,8132]
                                            name: Distance [8132,8140]
                        block [8142,8316]
                            block_content [8146,8314]
                                decl_stmt [8146,8179]
                                    decl [8146,8178]
                                        type [8146,8166]
                                            name: ScratchRegisterScope [8146,8166]
                                        name: temps [8167,8172]
                                        argument_list [8172,8178]
                                            argument [8173,8177]
                                                expr [8173,8177]
                                                    name: this [8173,8177]
                                decl_stmt [8182,8220]
                                    decl [8182,8219]
                                        type [8182,8190]
                                            name: Register [8182,8190]
                                        name: tmp [8191,8194]
                                        init [8195,8219]
                                            expr [8197,8219]
                                                call [8197,8219]
                                                    name [8197,8217]
                                                        name: temps [8197,8202]
                                                        operator: . [8202,8203]
                                                        name: AcquireScratch [8203,8217]
                                                    argument_list [8217,8219]
                                decl_stmt [8223,8244]
                                    decl [8223,8243]
                                        type [8223,8225]
                                            name: __ [8223,8225]
                                        name: Ldr [8226,8229]
                                        argument_list [8229,8243]
                                            argument [8230,8233]
                                                expr [8230,8233]
                                                    name: tmp [8230,8233]
                                            argument [8235,8242]
                                                expr [8235,8242]
                                                    name: operand [8235,8242]
                                decl_stmt [8247,8314]
                                    decl [8247,8313]
                                        type [8247,8249]
                                            name: __ [8247,8249]
                                        name: CompareTaggedAndBranch [8250,8272]
                                        argument_list [8272,8313]
                                            argument [8273,8276]
                                                expr [8273,8276]
                                                    name: tmp [8273,8276]
                                            argument [8278,8283]
                                                expr [8278,8283]
                                                    name: value [8278,8283]
                                            argument [8285,8304]
                                                expr [8285,8304]
                                                    call [8285,8304]
                                                        name: AsMasmCondition [8285,8300]
                                                        argument_list [8300,8304]
                                                            argument [8301,8303]
                                                                expr [8301,8303]
                                                                    name: cc [8301,8303]
                                            argument [8306,8312]
                                                expr [8306,8312]
                                                    name: target [8306,8312]
                    function [8317,8512]
                        type [8317,8321]
                            name: void [8317,8321]
                        name [8322,8351]
                            name: BaselineAssembler [8322,8339]
                            operator: :: [8339,8341]
                            name: JumpIfByte [8341,8351]
                        parameter_list [8351,8462]
                            parameter [8352,8364]
                                decl [8352,8364]
                                    type [8352,8364]
                                        name: Condition [8352,8361]
                                    name: cc [8362,8364]
                            parameter [8366,8380]
                                decl [8366,8380]
                                    type [8366,8380]
                                        name: Register [8366,8374]
                                    name: value [8375,8380]
                            parameter [8382,8394]
                                decl [8382,8394]
                                    type [8382,8394]
                                        name: int32_t [8382,8389]
                                    name: byte [8390,8394]
                            parameter [8431,8444]
                                decl [8431,8444]
                                    type [8431,8444]
                                        name: Label [8431,8436]
                                        modifier: * [8436,8437]
                                    name: target [8438,8444]
                            parameter [8446,8461]
                                decl [8446,8461]
                                    type [8446,8461]
                                        name [8446,8461]
                                            name: Label [8446,8451]
                                            operator: :: [8451,8453]
                                            name: Distance [8453,8461]
                        block [8463,8512]
                            block_content [8467,8510]
                                expr_stmt [8467,8510]
                                    expr [8467,8509]
                                        call [8467,8509]
                                            name: JumpIf [8467,8473]
                                            argument_list [8473,8509]
                                                argument [8474,8476]
                                                    expr [8474,8476]
                                                        name: cc [8474,8476]
                                                argument [8478,8483]
                                                    expr [8478,8483]
                                                        name: value [8478,8483]
                                                argument [8485,8500]
                                                    expr [8485,8500]
                                                        call [8485,8500]
                                                            name: Immediate [8485,8494]
                                                            argument_list [8494,8500]
                                                                argument [8495,8499]
                                                                    expr [8495,8499]
                                                                        name: byte [8495,8499]
                                                argument [8502,8508]
                                                    expr [8502,8508]
                                                        name: target [8502,8508]
                    function [8514,8639]
                        type [8514,8518]
                            name: void [8514,8518]
                        name [8519,8542]
                            name: BaselineAssembler [8519,8536]
                            operator: :: [8536,8538]
                            name: Move [8538,8542]
                        parameter_list [8542,8589]
                            parameter [8543,8571]
                                decl [8543,8571]
                                    type [8543,8571]
                                        name [8543,8564]
                                            name: interpreter [8543,8554]
                                            operator: :: [8554,8556]
                                            name: Register [8556,8564]
                                    name: output [8565,8571]
                            parameter [8573,8588]
                                decl [8573,8588]
                                    type [8573,8588]
                                        name: Register [8573,8581]
                                    name: source [8582,8588]
                        block [8590,8639]
                            block_content [8594,8637]
                                expr_stmt [8594,8637]
                                    expr [8594,8636]
                                        call [8594,8636]
                                            name: Move [8594,8598]
                                            argument_list [8598,8636]
                                                argument [8599,8627]
                                                    expr [8599,8627]
                                                        call [8599,8627]
                                                            name: RegisterFrameOperand [8599,8619]
                                                            argument_list [8619,8627]
                                                                argument [8620,8626]
                                                                    expr [8620,8626]
                                                                        name: output [8620,8626]
                                                argument [8629,8635]
                                                    expr [8629,8635]
                                                        name: source [8629,8635]
                    function [8640,8750]
                        type [8640,8644]
                            name: void [8640,8644]
                        name [8645,8668]
                            name: BaselineAssembler [8645,8662]
                            operator: :: [8662,8664]
                            name: Move [8664,8668]
                        parameter_list [8668,8704]
                            parameter [8669,8684]
                                decl [8669,8684]
                                    type [8669,8684]
                                        name: Register [8669,8677]
                                    name: output [8678,8684]
                            parameter [8686,8703]
                                decl [8686,8703]
                                    type [8686,8703]
                                        name: TaggedIndex [8686,8697]
                                    name: value [8698,8703]
                        block [8705,8750]
                            block_content [8709,8748]
                                decl_stmt [8709,8748]
                                    decl [8709,8747]
                                        type [8709,8711]
                                            name: __ [8709,8711]
                                        name: Mov [8712,8715]
                                        argument_list [8715,8747]
                                            argument [8716,8722]
                                                expr [8716,8722]
                                                    name: output [8716,8722]
                                            argument [8724,8746]
                                                expr [8724,8746]
                                                    call [8724,8746]
                                                        name: Immediate [8724,8733]
                                                        argument_list [8733,8746]
                                                            argument [8734,8745]
                                                                expr [8734,8745]
                                                                    call [8734,8745]
                                                                        name [8734,8743]
                                                                            name: value [8734,8739]
                                                                            operator: . [8739,8740]
                                                                            name: ptr [8740,8743]
                                                                        argument_list [8743,8745]
                    function [8751,8845]
                        type [8751,8755]
                            name: void [8751,8755]
                        name [8756,8779]
                            name: BaselineAssembler [8756,8773]
                            operator: :: [8773,8775]
                            name: Move [8775,8779]
                        parameter_list [8779,8815]
                            parameter [8780,8797]
                                decl [8780,8797]
                                    type [8780,8797]
                                        name: MemOperand [8780,8790]
                                    name: output [8791,8797]
                            parameter [8799,8814]
                                decl [8799,8814]
                                    type [8799,8814]
                                        name: Register [8799,8807]
                                    name: source [8808,8814]
                        block [8816,8845]
                            block_content [8820,8843]
                                decl_stmt [8820,8843]
                                    decl [8820,8842]
                                        type [8820,8822]
                                            name: __ [8820,8822]
                                        name: Str [8823,8826]
                                        argument_list [8826,8842]
                                            argument [8827,8833]
                                                expr [8827,8833]
                                                    name: source [8827,8833]
                                            argument [8835,8841]
                                                expr [8835,8841]
                                                    name: output [8835,8841]
                    function [8846,8962]
                        type [8846,8850]
                            name: void [8846,8850]
                        name [8851,8874]
                            name: BaselineAssembler [8851,8868]
                            operator: :: [8868,8870]
                            name: Move [8870,8874]
                        parameter_list [8874,8920]
                            parameter [8875,8890]
                                decl [8875,8890]
                                    type [8875,8890]
                                        name: Register [8875,8883]
                                    name: output [8884,8890]
                            parameter [8892,8919]
                                decl [8892,8919]
                                    type [8892,8919]
                                        name: ExternalReference [8892,8909]
                                    name: reference [8910,8919]
                        block [8921,8962]
                            block_content [8925,8960]
                                decl_stmt [8925,8960]
                                    decl [8925,8959]
                                        type [8925,8927]
                                            name: __ [8925,8927]
                                        name: Mov [8928,8931]
                                        argument_list [8931,8959]
                                            argument [8932,8938]
                                                expr [8932,8938]
                                                    name: output [8932,8938]
                                            argument [8940,8958]
                                                expr [8940,8958]
                                                    call [8940,8958]
                                                        name: Operand [8940,8947]
                                                        argument_list [8947,8958]
                                                            argument [8948,8957]
                                                                expr [8948,8957]
                                                                    name: reference [8948,8957]
                    function [8963,9072]
                        type [8963,8967]
                            name: void [8963,8967]
                        name [8968,8991]
                            name: BaselineAssembler [8968,8985]
                            operator: :: [8985,8987]
                            name: Move [8987,8991]
                        parameter_list [8991,9034]
                            parameter [8992,9007]
                                decl [8992,9007]
                                    type [8992,9007]
                                        name: Register [8992,9000]
                                    name: output [9001,9007]
                            parameter [9009,9033]
                                decl [9009,9033]
                                    type [9009,9033]
                                        name [9009,9027]
                                            name: Handle [9009,9015]
                                            argument_list [9015,9027]
                                                argument [9016,9026]
                                                    name: HeapObject [9016,9026]
                                    name: value [9028,9033]
                        block [9035,9072]
                            block_content [9039,9070]
                                decl_stmt [9039,9070]
                                    decl [9039,9069]
                                        type [9039,9041]
                                            name: __ [9039,9041]
                                        name: Mov [9042,9045]
                                        argument_list [9045,9069]
                                            argument [9046,9052]
                                                expr [9046,9052]
                                                    name: output [9046,9052]
                                            argument [9054,9068]
                                                expr [9054,9068]
                                                    call [9054,9068]
                                                        name: Operand [9054,9061]
                                                        argument_list [9061,9068]
                                                            argument [9062,9067]
                                                                expr [9062,9067]
                                                                    name: value [9062,9067]
                    function [9073,9173]
                        type [9073,9077]
                            name: void [9073,9077]
                        name [9078,9101]
                            name: BaselineAssembler [9078,9095]
                            operator: :: [9095,9097]
                            name: Move [9097,9101]
                        parameter_list [9101,9133]
                            parameter [9102,9117]
                                decl [9102,9117]
                                    type [9102,9117]
                                        name: Register [9102,9110]
                                    name: output [9111,9117]
                            parameter [9119,9132]
                                decl [9119,9132]
                                    type [9119,9132]
                                        name: int32_t [9119,9126]
                                    name: value [9127,9132]
                        block [9134,9173]
                            block_content [9138,9171]
                                decl_stmt [9138,9171]
                                    decl [9138,9170]
                                        type [9138,9140]
                                            name: __ [9138,9140]
                                        name: Mov [9141,9144]
                                        argument_list [9144,9170]
                                            argument [9145,9151]
                                                expr [9145,9151]
                                                    name: output [9145,9151]
                                            argument [9153,9169]
                                                expr [9153,9169]
                                                    call [9153,9169]
                                                        name: Immediate [9153,9162]
                                                        argument_list [9162,9169]
                                                            argument [9163,9168]
                                                                expr [9163,9168]
                                                                    name: value [9163,9168]
                    function [9174,9274]
                        type [9174,9178]
                            name: void [9174,9178]
                        name [9179,9210]
                            name: BaselineAssembler [9179,9196]
                            operator: :: [9196,9198]
                            name: MoveMaybeSmi [9198,9210]
                        parameter_list [9210,9244]
                            parameter [9211,9226]
                                decl [9211,9226]
                                    type [9211,9226]
                                        name: Register [9211,9219]
                                    name: output [9220,9226]
                            parameter [9228,9243]
                                decl [9228,9243]
                                    type [9228,9243]
                                        name: Register [9228,9236]
                                    name: source [9237,9243]
                        block [9245,9274]
                            block_content [9249,9272]
                                decl_stmt [9249,9272]
                                    decl [9249,9271]
                                        type [9249,9251]
                                            name: __ [9249,9251]
                                        name: Mov [9252,9255]
                                        argument_list [9255,9271]
                                            argument [9256,9262]
                                                expr [9256,9262]
                                                    name: output [9256,9262]
                                            argument [9264,9270]
                                                expr [9264,9270]
                                                    name: source [9264,9270]
                    function [9275,9370]
                        type [9275,9279]
                            name: void [9275,9279]
                        name [9280,9306]
                            name: BaselineAssembler [9280,9297]
                            operator: :: [9297,9299]
                            name: MoveSmi [9299,9306]
                        parameter_list [9306,9340]
                            parameter [9307,9322]
                                decl [9307,9322]
                                    type [9307,9322]
                                        name: Register [9307,9315]
                                    name: output [9316,9322]
                            parameter [9324,9339]
                                decl [9324,9339]
                                    type [9324,9339]
                                        name: Register [9324,9332]
                                    name: source [9333,9339]
                        block [9341,9370]
                            block_content [9345,9368]
                                decl_stmt [9345,9368]
                                    decl [9345,9367]
                                        type [9345,9347]
                                            name: __ [9345,9347]
                                        name: Mov [9348,9351]
                                        argument_list [9351,9367]
                                            argument [9352,9358]
                                                expr [9352,9358]
                                                    name: output [9352,9358]
                                            argument [9360,9366]
                                                expr [9360,9366]
                                                    name: source [9360,9366]
                    namespace [9372,9977]
                        name: detail [9382,9388]
                        block [9389,9977]
                            function [9392,9662]
                                type [9392,9431]
                                    name [9392,9415]
                                        name: template [9392,9400]
                                        argument_list [9401,9415]
                                            argument [9402,9414]
                                                name: typename [9402,9410]
                                                name: Arg [9411,9414]
                                    specifier: inline [9416,9422]
                                    name: Register [9423,9431]
                                name: ToRegister [9432,9442]
                                parameter_list [9442,9578]
                                    parameter [9443,9466]
                                        decl [9443,9466]
                                            type [9443,9466]
                                                name: BaselineAssembler [9443,9460]
                                                modifier: * [9460,9461]
                                            name: basm [9462,9466]
                                    parameter [9495,9541]
                                        decl [9495,9541]
                                            type [9495,9541]
                                                name [9495,9534]
                                                    name: BaselineAssembler [9495,9512]
                                                    operator: :: [9512,9514]
                                                    name: ScratchRegisterScope [9514,9534]
                                                modifier: * [9534,9535]
                                            name: scope [9536,9541]
                                    parameter [9570,9577]
                                        decl [9570,9577]
                                            type [9570,9577]
                                                name: Arg [9570,9573]
                                            name: arg [9574,9577]
                                block [9579,9662]
                                    block_content [9583,9660]
                                        decl_stmt [9583,9622]
                                            decl [9583,9621]
                                                type [9583,9591]
                                                    name: Register [9583,9591]
                                                name: reg [9592,9595]
                                                init [9596,9621]
                                                    expr [9598,9621]
                                                        call [9598,9621]
                                                            name [9598,9619]
                                                                name: scope [9598,9603]
                                                                operator: -> [9603,9605]
                                                                name: AcquireScratch [9605,9619]
                                                            argument_list [9619,9621]
                                        expr_stmt [9625,9646]
                                            expr [9625,9645]
                                                call [9625,9645]
                                                    name [9625,9635]
                                                        name: basm [9625,9629]
                                                        operator: -> [9629,9631]
                                                        name: Move [9631,9635]
                                                    argument_list [9635,9645]
                                                        argument [9636,9639]
                                                            expr [9636,9639]
                                                                name: reg [9636,9639]
                                                        argument [9641,9644]
                                                            expr [9641,9644]
                                                                name: arg [9641,9644]
                                        return [9649,9660]
                                            expr [9656,9659]
                                                name: reg [9656,9659]
                            function [9663,9848]
                                type [9663,9678]
                                    specifier: inline [9663,9669]
                                    name: Register [9670,9678]
                                name: ToRegister [9679,9689]
                                parameter_list [9689,9830]
                                    parameter [9690,9713]
                                        decl [9690,9713]
                                            type [9690,9713]
                                                name: BaselineAssembler [9690,9707]
                                                modifier: * [9707,9708]
                                            name: basm [9709,9713]
                                    parameter [9742,9788]
                                        decl [9742,9788]
                                            type [9742,9788]
                                                name [9742,9781]
                                                    name: BaselineAssembler [9742,9759]
                                                    operator: :: [9759,9761]
                                                    name: ScratchRegisterScope [9761,9781]
                                                modifier: * [9781,9782]
                                            name: scope [9783,9788]
                                    parameter [9817,9829]
                                        decl [9817,9829]
                                            type [9817,9829]
                                                name: Register [9817,9825]
                                            name: reg [9826,9829]
                                block [9831,9848]
                                    block_content [9835,9846]
                                        return [9835,9846]
                                            expr [9842,9845]
                                                name: reg [9842,9845]
                            macro [9850,9858]
                                name: template [9850,9858]
                            expr_stmt [9859,9901]
                                expr [9859,9900]
                                    operator: < [9859,9860]
                                    name: typename [9860,9868]
                                    operator: ... [9868,9871]
                                    name: Args [9872,9876]
                                    operator: > [9876,9877]
                                    name: CountPushHelper [9885,9900]
                            macro [9902,9910]
                                name: template [9902,9910]
                            expr_stmt [9911,9975]
                                expr [9911,9975]
                                    operator: < [9911,9912]
                                    operator: > [9912,9913]
                                    name [9921,9938]
                                        name: CountPushHelper [9921,9936]
                                        argument_list [9936,9938]
                                    block [9939,9975]
                                        expr [9943,9973]
                                            specifier: static [9943,9949]
                                            name: int [9950,9953]
                                            macro [9954,9961]
                                                name: Count [9954,9959]
                                                argument_list [9959,9961]
                                            block [9962,9973]
                                                return [9964,9973]
                                                    expr [9971,9972]
                                                        literal: 0 [9971,9972]
                    empty_stmt [9977,9978]
                    macro [9979,9987]
                        name: template [9979,9987]
                    expr_stmt [9988,10164]
                        expr [9988,10001]
                            operator: < [9988,9989]
                            name: typename [9989,9997]
                            name: Arg [9998,10001]
                        operator: , [10001,10002]
                        expr [10003,10164]
                            name: typename [10003,10011]
                            operator: ... [10011,10014]
                            name: Args [10015,10019]
                            operator: > [10019,10020]
                            name [10028,10057]
                                name: CountPushHelper [10028,10043]
                                argument_list [10043,10057]
                                    argument [10044,10047]
                                        name: Arg [10044,10047]
                                    argument [10049,10056]
                                        name: Args [10049,10053]
                                        modifier: ... [10053,10056]
                            block [10058,10164]
                                expr [10062,10160]
                                    specifier: static [10062,10068]
                                    name: int [10069,10072]
                                    macro [10073,10101]
                                        name: Count [10073,10078]
                                        argument_list [10078,10101]
                                            argument [10079,10086]
                                            argument [10088,10100]
                                    block [10102,10160]
                                        return [10108,10160]
                                            expr [10115,10159]
                                                literal: 1 [10115,10118]
                                                operator: + [10117,10118]
                                                call [10119,10159]
                                                    name [10119,10150]
                                                        name [10119,10143]
                                                            name: CountPushHelper [10119,10134]
                                                            argument_list [10134,10143]
                                                                argument [10135,10142]
                                                                    name: Args [10135,10139]
                                                                    modifier: ... [10139,10142]
                                                        operator: :: [10143,10145]
                                                        name: Count [10145,10150]
                                                    argument_list [10150,10159]
                                                        argument [10151,10158]
                                                            expr [10151,10158]
                                                                name: args [10151,10155]
                                                                operator: ... [10155,10158]
            empty_stmt [10166,10167]
            macro [10168,10176]
                name: template [10168,10176]
            expr_stmt [10177,10404]
                expr [10177,10404]
                    operator: < [10177,10178]
                    name: typename [10178,10186]
                    operator: ... [10186,10189]
                    name: Args [10190,10194]
                    operator: > [10194,10195]
                    name [10203,10254]
                        name: CountPushHelper [10203,10218]
                        argument_list [10218,10254]
                            argument [10219,10244]
                                name [10219,10244]
                                    name: interpreter [10219,10230]
                                    operator: :: [10230,10232]
                                    name: RegisterList [10232,10244]
                            argument [10246,10253]
                                name: Args [10246,10250]
                                modifier: ... [10250,10253]
                    block [10255,10404]
                        expr [10259,10400]
                            specifier: static [10259,10265]
                            name: int [10266,10269]
                            macro [10270,10321]
                                name: Count [10270,10275]
                                argument_list [10275,10321]
                                    argument [10276,10306]
                                    argument [10308,10320]
                            block [10322,10400]
                                return [10328,10400]
                                    expr [10335,10399]
                                        call [10335,10356]
                                            name [10335,10354]
                                                name: list [10335,10339]
                                                operator: . [10339,10340]
                                                name: register_count [10340,10354]
                                            argument_list [10354,10356]
                                        operator: + [10357,10358]
                                        call [10359,10399]
                                            name [10359,10390]
                                                name [10359,10383]
                                                    name: CountPushHelper [10359,10374]
                                                    argument_list [10374,10383]
                                                        argument [10375,10382]
                                                            name: Args [10375,10379]
                                                            modifier: ... [10379,10382]
                                                operator: :: [10383,10385]
                                                name: Count [10385,10390]
                                            argument_list [10390,10399]
                                                argument [10391,10398]
                                                    expr [10391,10398]
                                                        name: args [10391,10395]
                                                        operator: ... [10395,10398]
    empty_stmt [10406,10407]
    macro [10409,10417]
        name: template [10409,10417]
    expr_stmt [10418,10458]
        expr [10418,10457]
            operator: < [10418,10419]
            name: typename [10419,10427]
            operator: ... [10427,10430]
            name: Args [10431,10435]
            operator: > [10435,10436]
            name: PushAllHelper [10444,10457]
    function [10459,10596]
        type [10459,10498]
            name [10459,10486]
                name: template [10459,10467]
                argument_list [10468,10486]
                    argument [10469,10485]
                        name: typename [10469,10477]
                        modifier: ... [10477,10480]
                        name: Args [10481,10485]
            specifier: inline [10487,10493]
            name: void [10494,10498]
        name: PushAll [10499,10506]
        parameter_list [10506,10545]
            parameter [10507,10530]
                decl [10507,10530]
                    type [10507,10530]
                        name: BaselineAssembler [10507,10524]
                        modifier: * [10524,10525]
                    name: basm [10526,10530]
            parameter [10532,10544]
                decl [10532,10544]
                    type [10532,10544]
                        name: Args [10532,10536]
                        modifier: ... [10536,10539]
                    name: args [10540,10544]
        block [10546,10596]
            block_content [10550,10594]
                expr_stmt [10550,10594]
                    expr [10550,10593]
                        call [10550,10593]
                            name [10550,10578]
                                name [10550,10572]
                                    name: PushAllHelper [10550,10563]
                                    argument_list [10563,10572]
                                        argument [10564,10571]
                                            name: Args [10564,10568]
                                            modifier: ... [10568,10571]
                                operator: :: [10572,10574]
                                name: Push [10574,10578]
                            argument_list [10578,10593]
                                argument [10579,10583]
                                    expr [10579,10583]
                                        name: basm [10579,10583]
                                argument [10585,10592]
                                    expr [10585,10592]
                                        name: args [10585,10589]
                                        operator: ... [10589,10592]
    function [10597,10748]
        type [10597,10636]
            name [10597,10624]
                name: template [10597,10605]
                argument_list [10606,10624]
                    argument [10607,10623]
                        name: typename [10607,10615]
                        modifier: ... [10615,10618]
                        name: Args [10619,10623]
            specifier: inline [10625,10631]
            name: void [10632,10636]
        name: PushAllReverse [10637,10651]
        parameter_list [10651,10690]
            parameter [10652,10675]
                decl [10652,10675]
                    type [10652,10675]
                        name: BaselineAssembler [10652,10669]
                        modifier: * [10669,10670]
                    name: basm [10671,10675]
            parameter [10677,10689]
                decl [10677,10689]
                    type [10677,10689]
                        name: Args [10677,10681]
                        modifier: ... [10681,10684]
                    name: args [10685,10689]
        block [10691,10748]
            block_content [10695,10746]
                expr_stmt [10695,10746]
                    expr [10695,10745]
                        call [10695,10745]
                            name [10695,10730]
                                name [10695,10717]
                                    name: PushAllHelper [10695,10708]
                                    argument_list [10708,10717]
                                        argument [10709,10716]
                                            name: Args [10709,10713]
                                            modifier: ... [10713,10716]
                                operator: :: [10717,10719]
                                name: PushReverse [10719,10730]
                            argument_list [10730,10745]
                                argument [10731,10735]
                                    expr [10731,10735]
                                        name: basm [10731,10735]
                                argument [10737,10744]
                                    expr [10737,10744]
                                        name: args [10737,10741]
                                        operator: ... [10741,10744]
    macro [10750,10758]
        name: template [10750,10758]
    expr_stmt [10759,10890]
        expr [10759,10889]
            operator: < [10759,10760]
            operator: > [10760,10761]
            name [10769,10784]
                name: PushAllHelper [10769,10782]
                argument_list [10782,10784]
            block [10785,10889]
                expr [10789,10887]
                    specifier: static [10789,10795]
                    name: void [10796,10800]
                    macro [10801,10830]
                        name: Push [10801,10805]
                        argument_list [10805,10830]
                            argument [10806,10829]
                    block [10831,10833]
                    specifier: static [10836,10842]
                    name: void [10843,10847]
                    macro [10848,10884]
                        name: PushReverse [10848,10859]
                        argument_list [10859,10884]
                            argument [10860,10883]
                    block [10885,10887]
    macro [10891,10899]
        name: template [10891,10899]
    expr_stmt [10900,11206]
        expr [10900,11206]
            operator: < [10900,10901]
            name: typename [10901,10909]
            name: Arg [10910,10913]
            operator: > [10913,10914]
            name [10922,10940]
                name: PushAllHelper [10922,10935]
                argument_list [10935,10940]
                    argument [10936,10939]
                        name: Arg [10936,10939]
            block [10941,11206]
                expr [10945,11202]
                    specifier: static [10945,10951]
                    name: void [10952,10956]
                    macro [10957,10991]
                        name: Push [10957,10961]
                        argument_list [10961,10991]
                            argument [10962,10985]
                            argument [10987,10990]
                    block [10992,11020]
                        expr [10994,11017]
                            call [10994,11017]
                                name: FATAL [10994,10999]
                                argument_list [10999,11017]
                                    argument [11000,11016]
                                        expr [11000,11016]
                                            literal: "Unaligned push" [11000,11016]
                    specifier: static [11023,11029]
                    name: void [11030,11034]
                    macro [11035,11080]
                        name: PushReverse [11035,11046]
                        argument_list [11046,11080]
                            argument [11047,11070]
                            argument [11072,11079]
                    block [11081,11202]
                        comment: // Push the padding register to round up the amount of values pushed. [11087,11156]
                        return [11161,11202]
                            expr [11168,11201]
                                call [11168,11201]
                                    name: PushAllReverse [11168,11182]
                                    argument_list [11182,11201]
                                        argument [11183,11187]
                                            expr [11183,11187]
                                                name: basm [11183,11187]
                                        argument [11189,11192]
                                            expr [11189,11192]
                                                name: arg [11189,11192]
                                        argument [11194,11200]
                                            expr [11194,11200]
                                                name: padreg [11194,11200]
    macro [11210,11218]
        name: template [11210,11218]
    expr_stmt [11219,11973]
        expr [11219,11233]
            operator: < [11219,11220]
            name: typename [11220,11228]
            name: Arg1 [11229,11233]
        operator: , [11233,11234]
        expr [11235,11248]
            name: typename [11235,11243]
            name: Arg2 [11244,11248]
        operator: , [11248,11249]
        expr [11250,11972]
            name: typename [11250,11258]
            operator: ... [11258,11261]
            name: Args [11262,11266]
            operator: > [11266,11267]
            name [11275,11309]
                name: PushAllHelper [11275,11288]
                argument_list [11288,11309]
                    argument [11289,11293]
                        name: Arg1 [11289,11293]
                    argument [11295,11299]
                        name: Arg2 [11295,11299]
                    argument [11301,11308]
                        name: Args [11301,11305]
                        modifier: ... [11305,11308]
            block [11310,11972]
                expr [11314,11970]
                    specifier: static [11314,11320]
                    name: void [11321,11325]
                    macro [11326,11410]
                        name: Push [11326,11330]
                        argument_list [11330,11410]
                            argument [11331,11354]
                            argument [11356,11365]
                            argument [11367,11376]
                            argument [11397,11409]
                    block [11411,11630]
                        expr [11417,11625]
                            block [11417,11598]
                                expr [11425,11476]
                                    name [11425,11464]
                                        name: BaselineAssembler [11425,11442]
                                        operator: :: [11442,11444]
                                        name: ScratchRegisterScope [11444,11464]
                                    call [11465,11476]
                                        name: scope [11465,11470]
                                        argument_list [11470,11476]
                                            argument [11471,11475]
                                                expr [11471,11475]
                                                    name: basm [11471,11475]
                                expr [11484,11591]
                                    call [11484,11496]
                                        name [11484,11494]
                                            name: basm [11484,11488]
                                            operator: -> [11488,11490]
                                            name: masm [11490,11494]
                                        argument_list [11494,11496]
                                    operator: -> [11496,11498]
                                    call [11498,11591]
                                        name: Push [11498,11502]
                                        argument_list [11502,11591]
                                            argument [11503,11533]
                                                expr [11503,11533]
                                                    call [11503,11533]
                                                        name: ToRegister [11503,11513]
                                                        argument_list [11513,11533]
                                                            argument [11514,11518]
                                                                expr [11514,11518]
                                                                    name: basm [11514,11518]
                                                            argument [11520,11526]
                                                                expr [11520,11526]
                                                                    operator: & [11520,11521]
                                                                    name: scope [11521,11526]
                                                            argument [11528,11532]
                                                                expr [11528,11532]
                                                                    name: arg1 [11528,11532]
                                            argument [11560,11590]
                                                expr [11560,11590]
                                                    call [11560,11590]
                                                        name: ToRegister [11560,11570]
                                                        argument_list [11570,11590]
                                                            argument [11571,11575]
                                                                expr [11571,11575]
                                                                    name: basm [11571,11575]
                                                            argument [11577,11583]
                                                                expr [11577,11583]
                                                                    operator: & [11577,11578]
                                                                    name: scope [11578,11583]
                                                            argument [11585,11589]
                                                                expr [11585,11589]
                                                                    name: arg2 [11585,11589]
                            call [11603,11625]
                                name: PushAll [11603,11610]
                                argument_list [11610,11625]
                                    argument [11611,11615]
                                        expr [11611,11615]
                                            name: basm [11611,11615]
                                    argument [11617,11624]
                                        expr [11617,11624]
                                            name: args [11617,11621]
                                            operator: ... [11621,11624]
                    specifier: static [11633,11639]
                    name: void [11640,11644]
                    macro [11645,11743]
                        name: PushReverse [11645,11656]
                        argument_list [11656,11743]
                            argument [11657,11680]
                            argument [11682,11691]
                            argument [11693,11702]
                            argument [11730,11742]
                    block [11744,11970]
                        expr [11750,11779]
                            call [11750,11779]
                                name: PushAllReverse [11750,11764]
                                argument_list [11764,11779]
                                    argument [11765,11769]
                                        expr [11765,11769]
                                            name: basm [11765,11769]
                                    argument [11771,11778]
                                        expr [11771,11778]
                                            name: args [11771,11775]
                                            operator: ... [11775,11778]
                        expr [11785,11966]
                            block [11785,11966]
                                expr [11793,11844]
                                    name [11793,11832]
                                        name: BaselineAssembler [11793,11810]
                                        operator: :: [11810,11812]
                                        name: ScratchRegisterScope [11812,11832]
                                    call [11833,11844]
                                        name: scope [11833,11838]
                                        argument_list [11838,11844]
                                            argument [11839,11843]
                                                expr [11839,11843]
                                                    name: basm [11839,11843]
                                expr [11852,11959]
                                    call [11852,11864]
                                        name [11852,11862]
                                            name: basm [11852,11856]
                                            operator: -> [11856,11858]
                                            name: masm [11858,11862]
                                        argument_list [11862,11864]
                                    operator: -> [11864,11866]
                                    call [11866,11959]
                                        name: Push [11866,11870]
                                        argument_list [11870,11959]
                                            argument [11871,11901]
                                                expr [11871,11901]
                                                    call [11871,11901]
                                                        name: ToRegister [11871,11881]
                                                        argument_list [11881,11901]
                                                            argument [11882,11886]
                                                                expr [11882,11886]
                                                                    name: basm [11882,11886]
                                                            argument [11888,11894]
                                                                expr [11888,11894]
                                                                    operator: & [11888,11889]
                                                                    name: scope [11889,11894]
                                                            argument [11896,11900]
                                                                expr [11896,11900]
                                                                    name: arg2 [11896,11900]
                                            argument [11928,11958]
                                                expr [11928,11958]
                                                    call [11928,11958]
                                                        name: ToRegister [11928,11938]
                                                        argument_list [11938,11958]
                                                            argument [11939,11943]
                                                                expr [11939,11943]
                                                                    name: basm [11939,11943]
                                                            argument [11945,11951]
                                                                expr [11945,11951]
                                                                    operator: & [11945,11946]
                                                                    name: scope [11946,11951]
                                                            argument [11953,11957]
                                                                expr [11953,11957]
                                                                    name: arg1 [11953,11957]
    comment: // Currently RegisterLists are always be the last argument, so we don't [11974,12045]
    comment: // specialize for the case where they're not. We do still specialise for the [12046,12122]
    comment: // aligned and unaligned cases. [12123,12154]
    macro [12155,12163]
        name: template [12155,12163]
    expr_stmt [12164,12705]
        expr [12164,12705]
            operator: < [12164,12165]
            name: typename [12165,12173]
            name: Arg [12174,12177]
            operator: > [12177,12178]
            name [12186,12231]
                name: PushAllHelper [12186,12199]
                argument_list [12199,12231]
                    argument [12200,12203]
                        name: Arg [12200,12203]
                    argument [12205,12230]
                        name [12205,12230]
                            name: interpreter [12205,12216]
                            operator: :: [12216,12218]
                            name: RegisterList [12218,12230]
            block [12232,12705]
                expr [12236,12634]
                    specifier: static [12236,12242]
                    name: void [12243,12247]
                    macro [12248,12337]
                        name: Push [12248,12252]
                        argument_list [12252,12337]
                            argument [12253,12276]
                            argument [12278,12285]
                            argument [12306,12336]
                    block [12338,12437]
                        expr [12344,12383]
                            call [12344,12383]
                                name: DCHECK_EQ [12344,12353]
                                argument_list [12353,12383]
                                    argument [12354,12379]
                                        expr [12354,12379]
                                            call [12354,12375]
                                                name [12354,12373]
                                                    name: list [12354,12358]
                                                    operator: . [12358,12359]
                                                    name: register_count [12359,12373]
                                                argument_list [12373,12375]
                                            operator: % [12376,12377]
                                            literal: 2 [12378,12379]
                                    argument [12381,12382]
                                        expr [12381,12382]
                                            literal: 1 [12381,12382]
                        expr [12389,12432]
                            call [12389,12432]
                                name: PushAll [12389,12396]
                                argument_list [12396,12432]
                                    argument [12397,12401]
                                        expr [12397,12401]
                                            name: basm [12397,12401]
                                    argument [12403,12406]
                                        expr [12403,12406]
                                            name: arg [12403,12406]
                                    argument [12408,12415]
                                        expr [12408,12415]
                                            name [12408,12415]
                                                name: list [12408,12412]
                                                index [12412,12415]
                                                    expr [12413,12414]
                                                        literal: 0 [12413,12414]
                                    argument [12417,12431]
                                        expr [12417,12431]
                                            call [12417,12431]
                                                name [12417,12429]
                                                    name: list [12417,12421]
                                                    operator: . [12421,12422]
                                                    name: PopLeft [12422,12429]
                                                argument_list [12429,12431]
                    specifier: static [12440,12446]
                    name: void [12447,12451]
                    macro [12452,12555]
                        name: PushReverse [12452,12463]
                        argument_list [12463,12555]
                            argument [12464,12487]
                            argument [12489,12496]
                            argument [12524,12554]
                    block [12556,12634]
                        if_stmt [12562,12628]
                            if [12562,12628]
                                condition [12565,12593]
                                    expr [12566,12592]
                                        call [12566,12587]
                                            name [12566,12585]
                                                name: list [12566,12570]
                                                operator: . [12570,12571]
                                                name: register_count [12571,12585]
                                            argument_list [12585,12587]
                                        operator: == [12588,12590]
                                        literal: 0 [12591,12592]
                                block [12594,12628]
                                    block_content [12602,12628]
                                        expr_stmt [12602,12628]
                                            expr [12602,12627]
                                                call [12602,12627]
                                                    name: PushAllReverse [12602,12616]
                                                    argument_list [12616,12627]
                                                        argument [12617,12621]
                                                            expr [12617,12621]
                                                                name: basm [12617,12621]
                                                        argument [12623,12626]
                                                            expr [12623,12626]
                                                                name: arg [12623,12626]
                                        expr_stmt [0,0]
                if_stmt [12635,12699]
                    else [12635,12699]
                        block [12640,12699]
                            block_content [12648,12699]
                                expr_stmt [12648,12699]
                                    expr [12648,12698]
                                        call [12648,12698]
                                            name: PushAllReverse [12648,12662]
                                            argument_list [12662,12698]
                                                argument [12663,12667]
                                                    expr [12663,12667]
                                                        name: basm [12663,12667]
                                                argument [12669,12672]
                                                    expr [12669,12672]
                                                        name: arg [12669,12672]
                                                argument [12674,12681]
                                                    expr [12674,12681]
                                                        name [12674,12681]
                                                            name: list [12674,12678]
                                                            index [12678,12681]
                                                                expr [12679,12680]
                                                                    literal: 0 [12679,12680]
                                                argument [12683,12697]
                                                    expr [12683,12697]
                                                        call [12683,12697]
                                                            name [12683,12695]
                                                                name: list [12683,12687]
                                                                operator: . [12687,12688]
                                                                name: PopLeft [12688,12695]
                                                            argument_list [12695,12697]
                                expr_stmt [0,0]
    empty_stmt [12711,12712]
    macro [12713,12721]
        name: template [12713,12721]
    expr_stmt [12722,13389]
        expr [12722,13389]
            operator: < [12722,12723]
            operator: > [12723,12724]
            name [12732,12772]
                name: PushAllHelper [12732,12745]
                argument_list [12745,12772]
                    argument [12746,12771]
                        name [12746,12771]
                            name: interpreter [12746,12757]
                            operator: :: [12757,12759]
                            name: RegisterList [12759,12771]
            block [12773,13047]
                expr [12777,13043]
                    specifier: static [12777,12783]
                    name: void [12784,12788]
                    macro [12789,12850]
                        name: Push [12789,12793]
                        argument_list [12793,12850]
                            argument [12794,12817]
                            argument [12819,12849]
                    block [12851,13043]
                        expr [12857,12896]
                            call [12857,12896]
                                name: DCHECK_EQ [12857,12866]
                                argument_list [12866,12896]
                                    argument [12867,12892]
                                        expr [12867,12892]
                                            call [12867,12888]
                                                name [12867,12886]
                                                    name: list [12867,12871]
                                                    operator: . [12871,12872]
                                                    name: register_count [12872,12886]
                                                argument_list [12886,12888]
                                            operator: % [12889,12890]
                                            literal: 2 [12891,12892]
                                    argument [12894,12895]
                                        expr [12894,12895]
                                            literal: 0 [12894,12895]
                        for [12902,13037]
                            control [12906,12976]
                                init [12907,12925]
                                    decl [12907,12924]
                                        type [12907,12910]
                                            name: int [12907,12910]
                                        name: reg_index [12911,12920]
                                        init [12921,12924]
                                            expr [12923,12924]
                                                literal: 0 [12923,12924]
                                condition [12926,12960]
                                    expr [12926,12959]
                                        name: reg_index [12926,12935]
                                        operator: < [12936,12937]
                                        call [12938,12959]
                                            name [12938,12957]
                                                name: list [12938,12942]
                                                operator: . [12942,12943]
                                                name: register_count [12943,12957]
                                            argument_list [12957,12959]
                                incr [12961,12975]
                                    expr [12961,12975]
                                        name: reg_index [12961,12970]
                                        operator: += [12971,12973]
                                        literal: 2 [12974,12975]
                            block [12977,13037]
                                block_content [12985,13037]
                                    expr_stmt [12985,13037]
                                        expr [12985,13036]
                                            call [12985,13036]
                                                name: PushAll [12985,12992]
                                                argument_list [12992,13036]
                                                    argument [12993,12997]
                                                        expr [12993,12997]
                                                            name: basm [12993,12997]
                                                    argument [12999,13014]
                                                        expr [12999,13014]
                                                            name [12999,13014]
                                                                name: list [12999,13003]
                                                                index [13003,13014]
                                                                    expr [13004,13013]
                                                                        name: reg_index [13004,13013]
                                                    argument [13016,13035]
                                                        expr [13016,13035]
                                                            name [13016,13035]
                                                                name: list [13016,13020]
                                                                index [13020,13035]
                                                                    expr [13021,13034]
                                                                        name: reg_index [13021,13030]
                                                                        operator: + [13031,13032]
                                                                        literal: 1 [13033,13034]
                                    expr_stmt [0,0]
            specifier: static [13050,13056]
            name: void [13057,13061]
            macro [13062,13156]
                name: PushReverse [13062,13073]
                argument_list [13073,13156]
                    argument [13074,13097]
                    argument [13125,13155]
            block [13157,13389]
                expr [13163,13204]
                    name: int [13163,13166]
                    name: reg_index [13167,13176]
                    operator: = [13177,13178]
                    call [13179,13200]
                        name [13179,13198]
                            name: list [13179,13183]
                            operator: . [13183,13184]
                            name: register_count [13184,13198]
                        argument_list [13198,13200]
                    operator: - [13201,13202]
                    literal: 1 [13203,13204]
                if_stmt [13210,13383]
                    if [13210,13383]
                        condition [13213,13233]
                            expr [13214,13232]
                                name: reg_index [13214,13223]
                                operator: % [13224,13225]
                                literal: 2 [13226,13227]
                                operator: == [13228,13230]
                                literal: 0 [13231,13232]
                        block [13234,13383]
                            block_content [13318,13383]
                                comment: // Push the padding register to round up the amount of values pushed. [13242,13311]
                                expr_stmt [13318,13364]
                                    expr [13318,13363]
                                        call [13318,13363]
                                            name: PushAllReverse [13318,13332]
                                            argument_list [13332,13363]
                                                argument [13333,13337]
                                                    expr [13333,13337]
                                                        name: basm [13333,13337]
                                                argument [13339,13354]
                                                    expr [13339,13354]
                                                        name [13339,13354]
                                                            name: list [13339,13343]
                                                            index [13343,13354]
                                                                expr [13344,13353]
                                                                    name: reg_index [13344,13353]
                                                argument [13356,13362]
                                                    expr [13356,13362]
                                                        name: padreg [13356,13362]
                                expr_stmt [13371,13383]
                                    expr [13371,13382]
                                        name: reg_index [13371,13380]
                                        operator: -- [13380,13382]
                                expr_stmt [0,0]
    for [13394,13506]
        control [13398,13432]
            init [13399,13400]
            condition [13401,13416]
                expr [13401,13415]
                    name: reg_index [13401,13410]
                    operator: >= [13411,13413]
                    literal: 1 [13414,13415]
            incr [13417,13431]
                expr [13417,13431]
                    name: reg_index [13417,13426]
                    operator: -= [13427,13429]
                    literal: 2 [13430,13431]
        block [13433,13506]
            block_content [13441,13500]
                expr_stmt [13441,13500]
                    expr [13441,13499]
                        call [13441,13499]
                            name: PushAllReverse [13441,13455]
                            argument_list [13455,13499]
                                argument [13456,13460]
                                    expr [13456,13460]
                                        name: basm [13456,13460]
                                argument [13462,13481]
                                    expr [13462,13481]
                                        name [13462,13481]
                                            name: list [13462,13466]
                                            index [13466,13481]
                                                expr [13467,13480]
                                                    name: reg_index [13467,13476]
                                                    operator: - [13477,13478]
                                                    literal: 1 [13479,13480]
                                argument [13483,13498]
                                    expr [13483,13498]
                                        name [13483,13498]
                                            name: list [13483,13487]
                                            index [13487,13498]
                                                expr [13488,13497]
                                                    name: reg_index [13488,13497]
    empty_stmt [13512,13513]
    macro [13515,13523]
        name: template [13515,13523]
    expr_stmt [13524,13560]
        expr [13524,13559]
            operator: < [13524,13525]
            name: typename [13525,13533]
            operator: ... [13533,13536]
            name: T [13537,13538]
            operator: > [13538,13539]
            name: PopAllHelper [13547,13559]
    macro [13561,13569]
        name: template [13561,13569]
    expr_stmt [13570,13645]
        expr [13570,13644]
            operator: < [13570,13571]
            operator: > [13571,13572]
            name [13580,13594]
                name: PopAllHelper [13580,13592]
                argument_list [13592,13594]
            block [13595,13644]
                expr [13599,13642]
                    specifier: static [13599,13605]
                    name: void [13606,13610]
                    macro [13611,13639]
                        name: Pop [13611,13614]
                        argument_list [13614,13639]
                            argument [13615,13638]
                    block [13640,13642]
    macro [13646,13654]
        name: template [13646,13654]
    expr_stmt [13655,13791]
        expr [13655,13790]
            operator: < [13655,13656]
            operator: > [13656,13657]
            name [13665,13687]
                name: PopAllHelper [13665,13677]
                argument_list [13677,13687]
                    argument [13678,13686]
                        name: Register [13678,13686]
            block [13688,13790]
                expr [13692,13788]
                    specifier: static [13692,13698]
                    name: void [13699,13703]
                    macro [13704,13746]
                        name: Pop [13704,13707]
                        argument_list [13707,13746]
                            argument [13708,13731]
                            argument [13733,13745]
                    block [13747,13788]
                        expr [13753,13783]
                            call [13753,13765]
                                name [13753,13763]
                                    name: basm [13753,13757]
                                    operator: -> [13757,13759]
                                    name: masm [13759,13763]
                                argument_list [13763,13765]
                            operator: -> [13765,13767]
                            call [13767,13783]
                                name: Pop [13767,13770]
                                argument_list [13770,13783]
                                    argument [13771,13774]
                                        expr [13771,13774]
                                            name: reg [13771,13774]
                                    argument [13776,13782]
                                        expr [13776,13782]
                                            name: padreg [13776,13782]
    macro [13792,13800]
        name: template [13792,13800]
    expr_stmt [13801,14054]
        expr [13801,14053]
            operator: < [13801,13802]
            name: typename [13802,13810]
            operator: ... [13810,13813]
            name: T [13814,13815]
            operator: > [13815,13816]
            name [13824,13862]
                name: PopAllHelper [13824,13836]
                argument_list [13836,13862]
                    argument [13837,13845]
                        name: Register [13837,13845]
                    argument [13847,13855]
                        name: Register [13847,13855]
                    argument [13857,13861]
                        name: T [13857,13858]
                        modifier: ... [13858,13861]
            block [13863,14053]
                expr [13867,14051]
                    specifier: static [13867,13873]
                    name: void [13874,13878]
                    macro [13879,13966]
                        name: Pop [13879,13882]
                        argument_list [13882,13966]
                            argument [13883,13906]
                            argument [13908,13921]
                            argument [13923,13936]
                            argument [13956,13965]
                    block [13967,14051]
                        expr [13973,14002]
                            call [13973,13985]
                                name [13973,13983]
                                    name: basm [13973,13977]
                                    operator: -> [13977,13979]
                                    name: masm [13979,13983]
                                argument_list [13983,13985]
                            operator: -> [13985,13987]
                            call [13987,14002]
                                name: Pop [13987,13990]
                                argument_list [13990,14002]
                                    argument [13991,13995]
                                        expr [13991,13995]
                                            name: reg1 [13991,13995]
                                    argument [13997,14001]
                                        expr [13997,14001]
                                            name: reg2 [13997,14001]
                        expr [14008,14046]
                            call [14008,14046]
                                name [14008,14031]
                                    name [14008,14026]
                                        name: PopAllHelper [14008,14020]
                                        argument_list [14020,14026]
                                            argument [14021,14025]
                                                name: T [14021,14022]
                                                modifier: ... [14022,14025]
                                    operator: :: [14026,14028]
                                    name: Pop [14028,14031]
                                argument_list [14031,14046]
                                    argument [14032,14036]
                                        expr [14032,14036]
                                            name: basm [14032,14036]
                                    argument [14038,14045]
                                        expr [14038,14045]
                                            name: tail [14038,14042]
                                            operator: ... [14042,14045]
    comment: // namespace detail [14059,14078]
    expr_stmt [14089,14381]
        expr [14089,14381]
            operator: < [14089,14090]
            name: typename [14090,14098]
            operator: ... [14098,14101]
            name: T [14102,14103]
            operator: > [14103,14104]
            name: int [14105,14108]
            macro [14109,14126]
                name: BaselineAssembler [14109,14126]
            name [14126,14132]
                operator: :: [14126,14128]
                name: Push [14128,14132]
            operator: ( [14132,14133]
            name: T [14133,14134]
            operator: ... [14134,14137]
            name: vals [14138,14142]
            operator: ) [14142,14143]
            block [14144,14381]
                comment: // We have to count the pushes first, to decide whether to add padding before [14148,14225]
                comment: // the first push. [14228,14246]
                expr [14249,14311]
                    name: int [14249,14252]
                    name: push_count [14253,14263]
                    operator: = [14264,14265]
                    call [14266,14311]
                        name [14266,14302]
                            name: detail [14266,14272]
                            operator: :: [14272,14274]
                            name [14274,14295]
                                name: CountPushHelper [14274,14289]
                                argument_list [14289,14295]
                                    argument [14290,14294]
                                        name: T [14290,14291]
                                        modifier: ... [14291,14294]
                            operator: :: [14295,14297]
                            name: Count [14297,14302]
                        argument_list [14302,14311]
                            argument [14303,14310]
                                expr [14303,14310]
                                    name: vals [14303,14307]
                                    operator: ... [14307,14310]
                if_stmt [14315,14377]
                    if [14315,14377]
                        condition [14318,14339]
                            expr [14319,14338]
                                name: push_count [14319,14329]
                                operator: % [14330,14331]
                                literal: 2 [14332,14333]
                                operator: == [14334,14336]
                                literal: 0 [14337,14338]
                        block [14340,14377]
                            block_content [14346,14377]
                                expr_stmt [14346,14377]
                                    expr [14346,14376]
                                        call [14346,14376]
                                            name [14346,14361]
                                                name: detail [14346,14352]
                                                operator: :: [14352,14354]
                                                name: PushAll [14354,14361]
                                            argument_list [14361,14376]
                                                argument [14362,14366]
                                                    expr [14362,14366]
                                                        name: this [14362,14366]
                                                argument [14368,14375]
                                                    expr [14368,14375]
                                                        name: vals [14368,14372]
                                                        operator: ... [14372,14375]
                                expr_stmt [0,0]
    if_stmt [14382,14436]
        else [14382,14436]
            block [14387,14436]
                block_content [14393,14432]
                    expr_stmt [14393,14432]
                        expr [14393,14431]
                            call [14393,14431]
                                name [14393,14408]
                                    name: detail [14393,14399]
                                    operator: :: [14399,14401]
                                    name: PushAll [14401,14408]
                                argument_list [14408,14431]
                                    argument [14409,14413]
                                        expr [14409,14413]
                                            name: this [14409,14413]
                                    argument [14415,14421]
                                        expr [14415,14421]
                                            name: padreg [14415,14421]
                                    argument [14423,14430]
                                        expr [14423,14430]
                                            name: vals [14423,14427]
                                            operator: ... [14427,14430]
    return [14439,14457]
        expr [14446,14456]
            name: push_count [14446,14456]
    expr_stmt [14470,18769]
        expr [14470,18769]
            operator: < [14470,14471]
            name: typename [14471,14479]
            operator: ... [14479,14482]
            name: T [14483,14484]
            operator: > [14484,14485]
            name: void [14486,14490]
            macro [14491,14508]
                name: BaselineAssembler [14491,14508]
            name [14508,14521]
                operator: :: [14508,14510]
                name: PushReverse [14510,14521]
            operator: ( [14521,14522]
            name: T [14522,14523]
            operator: ... [14523,14526]
            name: vals [14527,14531]
            operator: ) [14531,14532]
            block [14533,14577]
                expr [14537,14574]
                    call [14537,14574]
                        name [14537,14559]
                            name: detail [14537,14543]
                            operator: :: [14543,14545]
                            name: PushAllReverse [14545,14559]
                        argument_list [14559,14574]
                            argument [14560,14564]
                                expr [14560,14564]
                                    name: this [14560,14564]
                            argument [14566,14573]
                                expr [14566,14573]
                                    name: vals [14566,14570]
                                    operator: ... [14570,14573]
            name [14579,14603]
                name: template [14579,14587]
                argument_list [14588,14603]
                    argument [14589,14602]
                        name: typename [14589,14597]
                        modifier: ... [14597,14600]
                        name: T [14601,14602]
            name: void [14604,14608]
            macro [14609,14626]
                name: BaselineAssembler [14609,14626]
            name [14626,14631]
                operator: :: [14626,14628]
                name: Pop [14628,14631]
            operator: ( [14631,14632]
            name: T [14632,14633]
            operator: ... [14633,14636]
            name: registers [14637,14646]
            operator: ) [14646,14647]
            block [14648,14706]
                expr [14652,14703]
                    call [14652,14703]
                        name [14652,14683]
                            name: detail [14652,14658]
                            operator: :: [14658,14660]
                            name [14660,14678]
                                name: PopAllHelper [14660,14672]
                                argument_list [14672,14678]
                                    argument [14673,14677]
                                        name: T [14673,14674]
                                        modifier: ... [14674,14677]
                            operator: :: [14678,14680]
                            name: Pop [14680,14683]
                        argument_list [14683,14703]
                            argument [14684,14688]
                                expr [14684,14688]
                                    name: this [14684,14688]
                            argument [14690,14702]
                                expr [14690,14702]
                                    name: registers [14690,14699]
                                    operator: ... [14699,14702]
            name: void [14708,14712]
            macro [14713,14730]
                name: BaselineAssembler [14713,14730]
            name [14730,14754]
                operator: :: [14730,14732]
                name: LoadTaggedPointerField [14732,14754]
            operator: ( [14754,14755]
            name: Register [14755,14763]
            name: output [14764,14770]
            operator: , [14770,14771]
            name: Register [14772,14780]
            name: source [14781,14787]
            operator: , [14787,14788]
            name: int [14836,14839]
            name: offset [14840,14846]
            operator: ) [14846,14847]
            block [14848,14921]
                expr [14852,14918]
                    name: __ [14852,14854]
                    call [14855,14918]
                        name: LoadTaggedPointerField [14855,14877]
                        argument_list [14877,14918]
                            argument [14878,14884]
                                expr [14878,14884]
                                    name: output [14878,14884]
                            argument [14886,14917]
                                expr [14886,14917]
                                    call [14886,14917]
                                        name: FieldMemOperand [14886,14901]
                                        argument_list [14901,14917]
                                            argument [14902,14908]
                                                expr [14902,14908]
                                                    name: source [14902,14908]
                                            argument [14910,14916]
                                                expr [14910,14916]
                                                    name: offset [14910,14916]
            name: void [14923,14927]
            macro [14928,14945]
                name: BaselineAssembler [14928,14945]
            name [14945,14968]
                operator: :: [14945,14947]
                name: LoadTaggedSignedField [14947,14968]
            operator: ( [14968,14969]
            name: Register [14969,14977]
            name: output [14978,14984]
            operator: , [14984,14985]
            name: Register [14986,14994]
            name: source [14995,15001]
            operator: , [15001,15002]
            name: int [15049,15052]
            name: offset [15053,15059]
            operator: ) [15059,15060]
            block [15061,15133]
                expr [15065,15130]
                    name: __ [15065,15067]
                    call [15068,15130]
                        name: LoadTaggedSignedField [15068,15089]
                        argument_list [15089,15130]
                            argument [15090,15096]
                                expr [15090,15096]
                                    name: output [15090,15096]
                            argument [15098,15129]
                                expr [15098,15129]
                                    call [15098,15129]
                                        name: FieldMemOperand [15098,15113]
                                        argument_list [15113,15129]
                                            argument [15114,15120]
                                                expr [15114,15120]
                                                    name: source [15114,15120]
                                            argument [15122,15128]
                                                expr [15122,15128]
                                                    name: offset [15122,15128]
            name: void [15135,15139]
            macro [15140,15157]
                name: BaselineAssembler [15140,15157]
            name [15157,15177]
                operator: :: [15157,15159]
                name: LoadTaggedAnyField [15159,15177]
            operator: ( [15177,15178]
            name: Register [15178,15186]
            name: output [15187,15193]
            operator: , [15193,15194]
            name: Register [15195,15203]
            name: source [15204,15210]
            operator: , [15210,15211]
            name: int [15255,15258]
            name: offset [15259,15265]
            operator: ) [15265,15266]
            block [15267,15336]
                expr [15271,15333]
                    name: __ [15271,15273]
                    call [15274,15333]
                        name: LoadAnyTaggedField [15274,15292]
                        argument_list [15292,15333]
                            argument [15293,15299]
                                expr [15293,15299]
                                    name: output [15293,15299]
                            argument [15301,15332]
                                expr [15301,15332]
                                    call [15301,15332]
                                        name: FieldMemOperand [15301,15316]
                                        argument_list [15316,15332]
                                            argument [15317,15323]
                                                expr [15317,15323]
                                                    name: source [15317,15323]
                                            argument [15325,15331]
                                                expr [15325,15331]
                                                    name: offset [15325,15331]
            name: void [15338,15342]
            macro [15343,15360]
                name: BaselineAssembler [15343,15360]
            name [15360,15387]
                operator: :: [15360,15362]
                name: LoadWord16FieldZeroExtend [15362,15387]
            operator: ( [15387,15388]
            name: Register [15388,15396]
            name: output [15397,15403]
            operator: , [15403,15404]
            name: Register [15455,15463]
            name: source [15464,15470]
            operator: , [15470,15471]
            name: int [15472,15475]
            name: offset [15476,15482]
            operator: ) [15482,15483]
            block [15484,15539]
                expr [15488,15536]
                    name: __ [15488,15490]
                    call [15491,15536]
                        name: Ldrh [15491,15495]
                        argument_list [15495,15536]
                            argument [15496,15502]
                                expr [15496,15502]
                                    name: output [15496,15502]
                            argument [15504,15535]
                                expr [15504,15535]
                                    call [15504,15535]
                                        name: FieldMemOperand [15504,15519]
                                        argument_list [15519,15535]
                                            argument [15520,15526]
                                                expr [15520,15526]
                                                    name: source [15520,15526]
                                            argument [15528,15534]
                                                expr [15528,15534]
                                                    name: offset [15528,15534]
            name: void [15541,15545]
            macro [15546,15563]
                name: BaselineAssembler [15546,15563]
            name [15563,15579]
                operator: :: [15563,15565]
                name: LoadWord8Field [15565,15579]
            operator: ( [15579,15580]
            name: Register [15580,15588]
            name: output [15589,15595]
            operator: , [15595,15596]
            name: Register [15597,15605]
            name: source [15606,15612]
            operator: , [15612,15613]
            name: int [15653,15656]
            name: offset [15657,15663]
            operator: ) [15663,15664]
            block [15665,15720]
                expr [15669,15717]
                    name: __ [15669,15671]
                    call [15672,15717]
                        name: Ldrb [15672,15676]
                        argument_list [15676,15717]
                            argument [15677,15683]
                                expr [15677,15683]
                                    name: output [15677,15683]
                            argument [15685,15716]
                                expr [15685,15716]
                                    call [15685,15716]
                                        name: FieldMemOperand [15685,15700]
                                        argument_list [15700,15716]
                                            argument [15701,15707]
                                                expr [15701,15707]
                                                    name: source [15701,15707]
                                            argument [15709,15715]
                                                expr [15709,15715]
                                                    name: offset [15709,15715]
            name: void [15722,15726]
            macro [15727,15744]
                name: BaselineAssembler [15727,15744]
            name [15744,15768]
                operator: :: [15744,15746]
                name: StoreTaggedSignedField [15746,15768]
            operator: ( [15768,15769]
            name: Register [15769,15777]
            name: target [15778,15784]
            operator: , [15784,15785]
            name: int [15786,15789]
            name: offset [15790,15796]
            operator: , [15796,15797]
            name: Smi [15845,15848]
            name: value [15849,15854]
            operator: ) [15854,15855]
            block [15856,16055]
                expr [15860,15883]
                    call [15860,15883]
                        name: ASM_CODE_COMMENT [15860,15876]
                        argument_list [15876,15883]
                            argument [15877,15882]
                                expr [15877,15882]
                                    name: masm_ [15877,15882]
                expr [15887,15919]
                    name: ScratchRegisterScope [15887,15907]
                    call [15908,15919]
                        name: temps [15908,15913]
                        argument_list [15913,15919]
                            argument [15914,15918]
                                expr [15914,15918]
                                    name: this [15914,15918]
                expr [15923,15960]
                    name: Register [15923,15931]
                    name: tmp [15932,15935]
                    operator: = [15936,15937]
                    call [15938,15960]
                        name [15938,15958]
                            name: temps [15938,15943]
                            operator: . [15943,15944]
                            name: AcquireScratch [15944,15958]
                        argument_list [15958,15960]
                expr [15964,15991]
                    name: __ [15964,15966]
                    call [15967,15991]
                        name: Mov [15967,15970]
                        argument_list [15970,15991]
                            argument [15971,15974]
                                expr [15971,15974]
                                    name: tmp [15971,15974]
                            argument [15976,15990]
                                expr [15976,15990]
                                    call [15976,15990]
                                        name: Operand [15976,15983]
                                        argument_list [15983,15990]
                                            argument [15984,15989]
                                                expr [15984,15989]
                                                    name: value [15984,15989]
                expr [15995,16052]
                    name: __ [15995,15997]
                    call [15998,16052]
                        name: StoreTaggedField [15998,16014]
                        argument_list [16014,16052]
                            argument [16015,16018]
                                expr [16015,16018]
                                    name: tmp [16015,16018]
                            argument [16020,16051]
                                expr [16020,16051]
                                    call [16020,16051]
                                        name: FieldMemOperand [16020,16035]
                                        argument_list [16035,16051]
                                            argument [16036,16042]
                                                expr [16036,16042]
                                                    name: target [16036,16042]
                                            argument [16044,16050]
                                                expr [16044,16050]
                                                    name: offset [16044,16050]
            name: void [16057,16061]
            macro [16062,16079]
                name: BaselineAssembler [16062,16079]
            name [16079,16113]
                operator: :: [16079,16081]
                name: StoreTaggedFieldWithWriteBarrier [16081,16113]
            operator: ( [16113,16114]
            name: Register [16114,16122]
            name: target [16123,16129]
            operator: , [16129,16130]
            name: int [16188,16191]
            name: offset [16192,16198]
            operator: , [16198,16199]
            name: Register [16257,16265]
            name: value [16266,16271]
            operator: ) [16271,16272]
            block [16273,16479]
                expr [16277,16300]
                    call [16277,16300]
                        name: ASM_CODE_COMMENT [16277,16293]
                        argument_list [16293,16300]
                            argument [16294,16299]
                                expr [16294,16299]
                                    name: masm_ [16294,16299]
                expr [16304,16363]
                    name: __ [16304,16306]
                    call [16307,16363]
                        name: StoreTaggedField [16307,16323]
                        argument_list [16323,16363]
                            argument [16324,16329]
                                expr [16324,16329]
                                    name: value [16324,16329]
                            argument [16331,16362]
                                expr [16331,16362]
                                    call [16331,16362]
                                        name: FieldMemOperand [16331,16346]
                                        argument_list [16346,16362]
                                            argument [16347,16353]
                                                expr [16347,16353]
                                                    name: target [16347,16353]
                                            argument [16355,16361]
                                                expr [16355,16361]
                                                    name: offset [16355,16361]
                expr [16367,16476]
                    name: __ [16367,16369]
                    call [16370,16476]
                        name: RecordWriteField [16370,16386]
                        argument_list [16386,16476]
                            argument [16387,16393]
                                expr [16387,16393]
                                    name: target [16387,16393]
                            argument [16395,16401]
                                expr [16395,16401]
                                    name: offset [16395,16401]
                            argument [16403,16408]
                                expr [16403,16408]
                                    name: value [16403,16408]
                            argument [16410,16428]
                                expr [16410,16428]
                                    name: kLRHasNotBeenSaved [16410,16428]
                            argument [16452,16475]
                                expr [16452,16475]
                                    name [16452,16475]
                                        name: SaveFPRegsMode [16452,16466]
                                        operator: :: [16466,16468]
                                        name: kIgnore [16468,16475]
            name: void [16481,16485]
            macro [16486,16503]
                name: BaselineAssembler [16486,16503]
            name [16503,16535]
                operator: :: [16503,16505]
                name: StoreTaggedFieldNoWriteBarrier [16505,16535]
            operator: ( [16535,16536]
            name: Register [16536,16544]
            name: target [16545,16551]
            operator: , [16551,16552]
            name: int [16608,16611]
            name: offset [16612,16618]
            operator: , [16618,16619]
            name: Register [16675,16683]
            name: value [16684,16689]
            operator: ) [16689,16690]
            block [16691,16757]
                expr [16695,16754]
                    name: __ [16695,16697]
                    call [16698,16754]
                        name: StoreTaggedField [16698,16714]
                        argument_list [16714,16754]
                            argument [16715,16720]
                                expr [16715,16720]
                                    name: value [16715,16720]
                            argument [16722,16753]
                                expr [16722,16753]
                                    call [16722,16753]
                                        name: FieldMemOperand [16722,16737]
                                        argument_list [16737,16753]
                                            argument [16738,16744]
                                                expr [16738,16744]
                                                    name: target [16738,16744]
                                            argument [16746,16752]
                                                expr [16746,16752]
                                                    name: offset [16746,16752]
            name: void [16759,16763]
            macro [16764,16781]
                name: BaselineAssembler [16764,16781]
            name [16781,16806]
                operator: :: [16781,16783]
                name: TryLoadOptimizedOsrCode [16783,16806]
            operator: ( [16806,16807]
            name: Register [16807,16815]
            name: scratch_and_result [16816,16834]
            operator: , [16834,16835]
            name: Register [16884,16892]
            name: feedback_vector [16893,16908]
            operator: , [16908,16909]
            name: FeedbackSlot [16958,16970]
            name: slot [16971,16975]
            operator: , [16975,16976]
            name: Label [17025,17030]
            operator: * [17030,17031]
            name: on_result [17032,17041]
            operator: , [17041,17042]
            name [17091,17106]
                name: Label [17091,17096]
                operator: :: [17096,17098]
                name: Distance [17098,17106]
            operator: ) [17106,17107]
            block [17108,17860]
                expr [17112,17129]
                    name: Label [17112,17117]
                    name: fallthrough [17118,17129]
                expr [17131,17141]
                    name: clear_slot [17131,17141]
                expr [17145,17278]
                    call [17145,17278]
                        name: LoadTaggedPointerField [17145,17167]
                        argument_list [17167,17278]
                            argument [17168,17186]
                                expr [17168,17186]
                                    name: scratch_and_result [17168,17186]
                            argument [17188,17203]
                                expr [17188,17203]
                                    name: feedback_vector [17188,17203]
                            argument [17230,17277]
                                expr [17230,17277]
                                    call [17230,17277]
                                        name [17230,17263]
                                            name: FeedbackVector [17230,17244]
                                            operator: :: [17244,17246]
                                            name: OffsetOfElementAt [17246,17263]
                                        argument_list [17263,17277]
                                            argument [17264,17276]
                                                expr [17264,17276]
                                                    call [17264,17276]
                                                        name [17264,17274]
                                                            name: slot [17264,17268]
                                                            operator: . [17268,17269]
                                                            name: ToInt [17269,17274]
                                                        argument_list [17274,17276]
                expr [17282,17352]
                    name: __ [17282,17284]
                    call [17285,17352]
                        name: LoadWeakValue [17285,17298]
                        argument_list [17298,17352]
                            argument [17299,17317]
                                expr [17299,17317]
                                    name: scratch_and_result [17299,17317]
                            argument [17319,17337]
                                expr [17319,17337]
                                    name: scratch_and_result [17319,17337]
                            argument [17339,17351]
                                expr [17339,17351]
                                    operator: & [17339,17340]
                                    name: fallthrough [17340,17351]
                comment: // Is it marked_for_deoptimization? If yes, clear the slot. [17357,17416]
                expr [17419,17618]
                    block [17419,17594]
                        expr [17425,17457]
                            name: ScratchRegisterScope [17425,17445]
                            call [17446,17457]
                                name: temps [17446,17451]
                                argument_list [17451,17457]
                                    argument [17452,17456]
                                        expr [17452,17456]
                                            name: this [17452,17456]
                        expr [17463,17568]
                            name: __ [17463,17465]
                            call [17466,17568]
                                name: JumpIfCodeTIsMarkedForDeoptimization [17466,17502]
                                argument_list [17502,17568]
                                    argument [17512,17530]
                                        expr [17512,17530]
                                            name: scratch_and_result [17512,17530]
                                    argument [17532,17554]
                                        expr [17532,17554]
                                            call [17532,17554]
                                                name [17532,17552]
                                                    name: temps [17532,17537]
                                                    operator: . [17537,17538]
                                                    name: AcquireScratch [17538,17552]
                                                argument_list [17552,17554]
                                    argument [17556,17567]
                                        expr [17556,17567]
                                            operator: & [17556,17557]
                                            name: clear_slot [17557,17567]
                        expr [17574,17589]
                            name: __ [17574,17576]
                            call [17577,17589]
                                name: B [17577,17578]
                                argument_list [17578,17589]
                                    argument [17579,17588]
                                        expr [17579,17588]
                                            name: on_result [17579,17588]
                    name: __ [17598,17600]
                    call [17601,17618]
                        name: bind [17601,17605]
                        argument_list [17605,17618]
                            argument [17606,17617]
                                expr [17606,17617]
                                    operator: & [17606,17607]
                                    name: clear_slot [17607,17617]
                expr [17622,17667]
                    name: __ [17622,17624]
                    macro [17625,17667]
                        name: Mov [17625,17628]
                        argument_list [17628,17667]
                            argument [17629,17647]
                            argument [17649,17666]
                expr [17671,17800]
                    call [17671,17800]
                        name: StoreTaggedFieldNoWriteBarrier [17671,17701]
                        argument_list [17701,17800]
                            argument [17709,17724]
                                expr [17709,17724]
                                    name: feedback_vector [17709,17724]
                            argument [17726,17773]
                                expr [17726,17773]
                                    call [17726,17773]
                                        name [17726,17759]
                                            name: FeedbackVector [17726,17740]
                                            operator: :: [17740,17742]
                                            name: OffsetOfElementAt [17742,17759]
                                        argument_list [17759,17773]
                                            argument [17760,17772]
                                                expr [17760,17772]
                                                    call [17760,17772]
                                                        name [17760,17770]
                                                            name: slot [17760,17764]
                                                            operator: . [17764,17765]
                                                            name: ToInt [17765,17770]
                                                        argument_list [17770,17772]
                            argument [17781,17799]
                                expr [17781,17799]
                                    name: scratch_and_result [17781,17799]
                expr [17805,17826]
                    name: __ [17805,17807]
                    call [17808,17826]
                        name: bind [17808,17812]
                        argument_list [17812,17826]
                            argument [17813,17825]
                                expr [17813,17825]
                                    operator: & [17813,17814]
                                    name: fallthrough [17814,17825]
                expr [17830,17857]
                    call [17830,17857]
                        name: Move [17830,17834]
                        argument_list [17834,17857]
                            argument [17835,17853]
                                expr [17835,17853]
                                    name: scratch_and_result [17835,17853]
                            argument [17855,17856]
                                expr [17855,17856]
                                    literal: 0 [17855,17856]
            name: void [17862,17866]
            macro [17867,17884]
                name: BaselineAssembler [17867,17884]
            name [17884,17926]
                operator: :: [17884,17886]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [17886,17926]
            operator: ( [17926,17927]
            name: int32_t [17932,17939]
            name: weight [17940,17946]
            operator: , [17946,17947]
            name: Label [17948,17953]
            operator: * [17953,17954]
            name: skip_interrupt_label [17955,17975]
            operator: ) [17975,17976]
            block [17977,18769]
                expr [17981,18004]
                    call [17981,18004]
                        name: ASM_CODE_COMMENT [17981,17997]
                        argument_list [17997,18004]
                            argument [17998,18003]
                                expr [17998,18003]
                                    name: masm_ [17998,18003]
                expr [18008,18048]
                    name: ScratchRegisterScope [18008,18028]
                    call [18029,18048]
                        name: scratch_scope [18029,18042]
                        argument_list [18042,18048]
                            argument [18043,18047]
                                expr [18043,18047]
                                    name: this [18043,18047]
                expr [18052,18107]
                    name: Register [18052,18060]
                    name: feedback_cell [18061,18074]
                    operator: = [18075,18076]
                    call [18077,18107]
                        name [18077,18105]
                            name: scratch_scope [18077,18090]
                            operator: . [18090,18091]
                            name: AcquireScratch [18091,18105]
                        argument_list [18105,18107]
                expr [18111,18138]
                    call [18111,18138]
                        name: LoadFunction [18111,18123]
                        argument_list [18123,18138]
                            argument [18124,18137]
                                expr [18124,18137]
                                    name: feedback_cell [18124,18137]
                expr [18142,18252]
                    call [18142,18252]
                        name: LoadTaggedPointerField [18142,18164]
                        argument_list [18164,18252]
                            argument [18165,18178]
                                expr [18165,18178]
                                    name: feedback_cell [18165,18178]
                            argument [18180,18193]
                                expr [18180,18193]
                                    name: feedback_cell [18180,18193]
                            argument [18220,18251]
                                expr [18220,18251]
                                    name [18220,18251]
                                        name: JSFunction [18220,18230]
                                        operator: :: [18230,18232]
                                        name: kFeedbackCellOffset [18232,18251]
                expr [18257,18319]
                    name: Register [18257,18265]
                    name: interrupt_budget [18266,18282]
                    operator: = [18283,18284]
                    call [18285,18315]
                        name [18285,18313]
                            name: scratch_scope [18285,18298]
                            operator: . [18298,18299]
                            name: AcquireScratch [18299,18313]
                        argument_list [18313,18315]
                    operator: . [18315,18316]
                    call [18316,18319]
                        name: W [18316,18317]
                        argument_list [18317,18319]
                expr [18323,18426]
                    name: __ [18323,18325]
                    call [18326,18426]
                        name: Ldr [18326,18329]
                        argument_list [18329,18426]
                            argument [18330,18346]
                                expr [18330,18346]
                                    name: interrupt_budget [18330,18346]
                            argument [18357,18425]
                                expr [18357,18425]
                                    call [18357,18425]
                                        name: FieldMemOperand [18357,18372]
                                        argument_list [18372,18425]
                                            argument [18373,18386]
                                                expr [18373,18386]
                                                    name: feedback_cell [18373,18386]
                                            argument [18388,18424]
                                                expr [18388,18424]
                                                    name [18388,18424]
                                                        name: FeedbackCell [18388,18400]
                                                        operator: :: [18400,18402]
                                                        name: kInterruptBudgetOffset [18402,18424]
                comment: // Remember to set flags as part of the add! [18430,18474]
                expr [18477,18528]
                    name: __ [18477,18479]
                    call [18480,18528]
                        name: Adds [18480,18484]
                        argument_list [18484,18528]
                            argument [18485,18501]
                                expr [18485,18501]
                                    name: interrupt_budget [18485,18501]
                            argument [18503,18519]
                                expr [18503,18519]
                                    name: interrupt_budget [18503,18519]
                            argument [18521,18527]
                                expr [18521,18527]
                                    name: weight [18521,18527]
                expr [18532,18635]
                    name: __ [18532,18534]
                    call [18535,18635]
                        name: Str [18535,18538]
                        argument_list [18538,18635]
                            argument [18539,18555]
                                expr [18539,18555]
                                    name: interrupt_budget [18539,18555]
                            argument [18566,18634]
                                expr [18566,18634]
                                    call [18566,18634]
                                        name: FieldMemOperand [18566,18581]
                                        argument_list [18581,18634]
                                            argument [18582,18595]
                                                expr [18582,18595]
                                                    name: feedback_cell [18582,18595]
                                            argument [18597,18633]
                                                expr [18597,18633]
                                                    name [18597,18633]
                                                        name: FeedbackCell [18597,18609]
                                                        operator: :: [18609,18611]
                                                        name: kInterruptBudgetOffset [18611,18633]
                if_stmt [18639,18765]
                    if [18639,18765]
                        condition [18642,18664]
                            expr [18643,18663]
                                name: skip_interrupt_label [18643,18663]
                        block [18665,18765]
                            block_content [18708,18765]
                                comment: // Use compare flags set by Adds [18671,18703]
                                expr_stmt [18708,18729]
                                    expr [18708,18728]
                                        call [18708,18728]
                                            name: DCHECK_LT [18708,18717]
                                            argument_list [18717,18728]
                                                argument [18718,18724]
                                                    expr [18718,18724]
                                                        name: weight [18718,18724]
                                                argument [18726,18727]
                                                    expr [18726,18727]
                                                        literal: 0 [18726,18727]
                                function_decl [18734,18765]
                                    type [18734,18736]
                                        name: __ [18734,18736]
                                    name: B [18737,18738]
                                    parameter_list [18738,18764]
                                        parameter [18739,18741]
                                            decl [18739,18741]
                                                type [18739,18741]
                                                    name: ge [18739,18741]
                                        parameter [18743,18763]
                                            decl [18743,18763]
                                                type [18743,18763]
                                                    name: skip_interrupt_label [18743,18763]
                                expr_stmt [0,0]
    macro [18778,18795]
        name: BaselineAssembler [18778,18795]
    expr_stmt [18795,19614]
        expr [18795,19614]
            name [18795,18837]
                operator: :: [18795,18797]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [18797,18837]
            operator: ( [18837,18838]
            name: Register [18843,18851]
            name: weight [18852,18858]
            operator: , [18858,18859]
            name: Label [18860,18865]
            operator: * [18865,18866]
            name: skip_interrupt_label [18867,18887]
            operator: ) [18887,18888]
            block [18889,19614]
                expr [18893,18916]
                    call [18893,18916]
                        name: ASM_CODE_COMMENT [18893,18909]
                        argument_list [18909,18916]
                            argument [18910,18915]
                                expr [18910,18915]
                                    name: masm_ [18910,18915]
                expr [18920,18960]
                    name: ScratchRegisterScope [18920,18940]
                    call [18941,18960]
                        name: scratch_scope [18941,18954]
                        argument_list [18954,18960]
                            argument [18955,18959]
                                expr [18955,18959]
                                    name: this [18955,18959]
                expr [18964,19019]
                    name: Register [18964,18972]
                    name: feedback_cell [18973,18986]
                    operator: = [18987,18988]
                    call [18989,19019]
                        name [18989,19017]
                            name: scratch_scope [18989,19002]
                            operator: . [19002,19003]
                            name: AcquireScratch [19003,19017]
                        argument_list [19017,19019]
                expr [19023,19050]
                    call [19023,19050]
                        name: LoadFunction [19023,19035]
                        argument_list [19035,19050]
                            argument [19036,19049]
                                expr [19036,19049]
                                    name: feedback_cell [19036,19049]
                expr [19054,19164]
                    call [19054,19164]
                        name: LoadTaggedPointerField [19054,19076]
                        argument_list [19076,19164]
                            argument [19077,19090]
                                expr [19077,19090]
                                    name: feedback_cell [19077,19090]
                            argument [19092,19105]
                                expr [19092,19105]
                                    name: feedback_cell [19092,19105]
                            argument [19132,19163]
                                expr [19132,19163]
                                    name [19132,19163]
                                        name: JSFunction [19132,19142]
                                        operator: :: [19142,19144]
                                        name: kFeedbackCellOffset [19144,19163]
                expr [19169,19231]
                    name: Register [19169,19177]
                    name: interrupt_budget [19178,19194]
                    operator: = [19195,19196]
                    call [19197,19227]
                        name [19197,19225]
                            name: scratch_scope [19197,19210]
                            operator: . [19210,19211]
                            name: AcquireScratch [19211,19225]
                        argument_list [19225,19227]
                    operator: . [19227,19228]
                    call [19228,19231]
                        name: W [19228,19229]
                        argument_list [19229,19231]
                expr [19235,19338]
                    name: __ [19235,19237]
                    call [19238,19338]
                        name: Ldr [19238,19241]
                        argument_list [19241,19338]
                            argument [19242,19258]
                                expr [19242,19258]
                                    name: interrupt_budget [19242,19258]
                            argument [19269,19337]
                                expr [19269,19337]
                                    call [19269,19337]
                                        name: FieldMemOperand [19269,19284]
                                        argument_list [19284,19337]
                                            argument [19285,19298]
                                                expr [19285,19298]
                                                    name: feedback_cell [19285,19298]
                                            argument [19300,19336]
                                                expr [19300,19336]
                                                    name [19300,19336]
                                                        name: FeedbackCell [19300,19312]
                                                        operator: :: [19312,19314]
                                                        name: kInterruptBudgetOffset [19314,19336]
                comment: // Remember to set flags as part of the add! [19342,19386]
                expr [19389,19444]
                    name: __ [19389,19391]
                    call [19392,19444]
                        name: Adds [19392,19396]
                        argument_list [19396,19444]
                            argument [19397,19413]
                                expr [19397,19413]
                                    name: interrupt_budget [19397,19413]
                            argument [19415,19431]
                                expr [19415,19431]
                                    name: interrupt_budget [19415,19431]
                            argument [19433,19443]
                                expr [19433,19443]
                                    call [19433,19443]
                                        name [19433,19441]
                                            name: weight [19433,19439]
                                            operator: . [19439,19440]
                                            name: W [19440,19441]
                                        argument_list [19441,19443]
                expr [19448,19551]
                    name: __ [19448,19450]
                    call [19451,19551]
                        name: Str [19451,19454]
                        argument_list [19454,19551]
                            argument [19455,19471]
                                expr [19455,19471]
                                    name: interrupt_budget [19455,19471]
                            argument [19482,19550]
                                expr [19482,19550]
                                    call [19482,19550]
                                        name: FieldMemOperand [19482,19497]
                                        argument_list [19497,19550]
                                            argument [19498,19511]
                                                expr [19498,19511]
                                                    name: feedback_cell [19498,19511]
                                            argument [19513,19549]
                                                expr [19513,19549]
                                                    name [19513,19549]
                                                        name: FeedbackCell [19513,19525]
                                                        operator: :: [19525,19527]
                                                        name: kInterruptBudgetOffset [19527,19549]
                if_stmt [19555,19612]
                    if [19555,19612]
                        condition [19558,19580]
                            expr [19559,19579]
                                name: skip_interrupt_label [19559,19579]
                        block [19581,19612]
                            block_content [19581,19612]
                                function_decl [19581,19612]
                                    type [19581,19583]
                                        name: __ [19581,19583]
                                    name: B [19584,19585]
                                    parameter_list [19585,19611]
                                        parameter [19586,19588]
                                            decl [19586,19588]
                                                type [19586,19588]
                                                    name: ge [19586,19588]
                                        parameter [19590,19610]
                                            decl [19590,19610]
                                                type [19590,19610]
                                                    name: skip_interrupt_label [19590,19610]
    function [19616,19825]
        type [19616,19620]
            name: void [19616,19620]
        name [19621,19646]
            name: BaselineAssembler [19621,19638]
            operator: :: [19638,19640]
            name: AddSmi [19640,19646]
        parameter_list [19646,19669]
            parameter [19647,19659]
                decl [19647,19659]
                    type [19647,19659]
                        name: Register [19647,19655]
                    name: lhs [19656,19659]
            parameter [19661,19668]
                decl [19661,19668]
                    type [19661,19668]
                        name: Smi [19661,19664]
                    name: rhs [19665,19668]
        block [19670,19825]
            block_content [19674,19823]
                if_stmt [19674,19823]
                    if [19674,19751]
                        condition [19677,19699]
                            expr [19678,19698]
                                call [19678,19698]
                                    name: SmiValuesAre31Bits [19678,19696]
                                    argument_list [19696,19698]
                        block [19700,19751]
                            block_content [19706,19747]
                                decl_stmt [19706,19747]
                                    decl [19706,19746]
                                        type [19706,19708]
                                            name: __ [19706,19708]
                                        name: Add [19709,19712]
                                        argument_list [19712,19746]
                                            argument [19713,19720]
                                                expr [19713,19720]
                                                    call [19713,19720]
                                                        name [19713,19718]
                                                            name: lhs [19713,19716]
                                                            operator: . [19716,19717]
                                                            name: W [19717,19718]
                                                        argument_list [19718,19720]
                                            argument [19722,19729]
                                                expr [19722,19729]
                                                    call [19722,19729]
                                                        name [19722,19727]
                                                            name: lhs [19722,19725]
                                                            operator: . [19725,19726]
                                                            name: W [19726,19727]
                                                        argument_list [19727,19729]
                                            argument [19731,19745]
                                                expr [19731,19745]
                                                    call [19731,19745]
                                                        name: Immediate [19731,19740]
                                                        argument_list [19740,19745]
                                                            argument [19741,19744]
                                                                expr [19741,19744]
                                                                    name: rhs [19741,19744]
                    else [19752,19823]
                        block [19757,19823]
                            block_content [19763,19819]
                                expr_stmt [19763,19781]
                                    expr [19763,19780]
                                        call [19763,19780]
                                            name: DCHECK [19763,19769]
                                            argument_list [19769,19780]
                                                argument [19770,19779]
                                                    expr [19770,19779]
                                                        call [19770,19779]
                                                            name [19770,19777]
                                                                name: lhs [19770,19773]
                                                                operator: . [19773,19774]
                                                                name: IsX [19774,19777]
                                                            argument_list [19777,19779]
                                decl_stmt [19786,19819]
                                    decl [19786,19818]
                                        type [19786,19788]
                                            name: __ [19786,19788]
                                        name: Add [19789,19792]
                                        argument_list [19792,19818]
                                            argument [19793,19796]
                                                expr [19793,19796]
                                                    name: lhs [19793,19796]
                                            argument [19798,19801]
                                                expr [19798,19801]
                                                    name: lhs [19798,19801]
                                            argument [19803,19817]
                                                expr [19803,19817]
                                                    call [19803,19817]
                                                        name: Immediate [19803,19812]
                                                        argument_list [19812,19817]
                                                            argument [19813,19816]
                                                                expr [19813,19816]
                                                                    name: rhs [19813,19816]
    function [19827,19943]
        type [19827,19831]
            name: void [19827,19831]
        name [19832,19860]
            name: BaselineAssembler [19832,19849]
            operator: :: [19849,19851]
            name: Word32And [19851,19860]
        parameter_list [19860,19900]
            parameter [19861,19876]
                decl [19861,19876]
                    type [19861,19876]
                        name: Register [19861,19869]
                    name: output [19870,19876]
            parameter [19878,19890]
                decl [19878,19890]
                    type [19878,19890]
                        name: Register [19878,19886]
                    name: lhs [19887,19890]
            parameter [19892,19899]
                decl [19892,19899]
                    type [19892,19899]
                        name: int [19892,19895]
                    name: rhs [19896,19899]
        block [19901,19943]
            block_content [19905,19941]
                decl_stmt [19905,19941]
                    decl [19905,19940]
                        type [19905,19907]
                            name: __ [19905,19907]
                        name: And [19908,19911]
                        argument_list [19911,19940]
                            argument [19912,19918]
                                expr [19912,19918]
                                    name: output [19912,19918]
                            argument [19920,19923]
                                expr [19920,19923]
                                    name: lhs [19920,19923]
                            argument [19925,19939]
                                expr [19925,19939]
                                    call [19925,19939]
                                        name: Immediate [19925,19934]
                                        argument_list [19934,19939]
                                            argument [19935,19938]
                                                expr [19935,19938]
                                                    name: rhs [19935,19938]
    function [19945,20926]
        type [19945,19949]
            name: void [19945,19949]
        name [19950,19975]
            name: BaselineAssembler [19950,19967]
            operator: :: [19967,19969]
            name: Switch [19969,19975]
        parameter_list [19975,20073]
            parameter [19976,19988]
                decl [19976,19988]
                    type [19976,19988]
                        name: Register [19976,19984]
                    name: reg [19985,19988]
            parameter [19990,20009]
                decl [19990,20009]
                    type [19990,20009]
                        name: int [19990,19993]
                    name: case_value_base [19994,20009]
            parameter [20042,20056]
                decl [20042,20056]
                    type [20042,20056]
                        name: Label [20042,20047]
                        modifier: * [20047,20048]
                        modifier: * [20048,20049]
                    name: labels [20050,20056]
            parameter [20058,20072]
                decl [20058,20072]
                    type [20058,20072]
                        name: int [20058,20061]
                    name: num_labels [20062,20072]
        block [20074,20926]
            block_content [20078,20895]
                expr_stmt [20078,20102]
                    expr [20078,20101]
                        call [20078,20101]
                            name: ASM_CODE_COMMENT [20078,20094]
                            argument_list [20094,20101]
                                argument [20095,20100]
                                    expr [20095,20100]
                                        name: masm_ [20095,20100]
                decl_stmt [20105,20123]
                    decl [20105,20122]
                        type [20105,20110]
                            name: Label [20105,20110]
                        name: fallthrough [20111,20122]
                if_stmt [20126,20207]
                    if [20126,20207]
                        condition [20129,20151]
                            expr [20130,20150]
                                name: case_value_base [20130,20145]
                                operator: != [20146,20148]
                                literal: 0 [20149,20150]
                        block [20152,20207]
                            block_content [20158,20203]
                                decl_stmt [20158,20203]
                                    decl [20158,20202]
                                        type [20158,20160]
                                            name: __ [20158,20160]
                                        name: Sub [20161,20164]
                                        argument_list [20164,20202]
                                            argument [20165,20168]
                                                expr [20165,20168]
                                                    name: reg [20165,20168]
                                            argument [20170,20173]
                                                expr [20170,20173]
                                                    name: reg [20170,20173]
                                            argument [20175,20201]
                                                expr [20175,20201]
                                                    call [20175,20201]
                                                        name: Immediate [20175,20184]
                                                        argument_list [20184,20201]
                                                            argument [20185,20200]
                                                                expr [20185,20200]
                                                                    name: case_value_base [20185,20200]
                comment: // Mostly copied from code-generator-arm64.cc [20211,20256]
                decl_stmt [20259,20292]
                    decl [20259,20291]
                        type [20259,20279]
                            name: ScratchRegisterScope [20259,20279]
                        name: scope [20280,20285]
                        argument_list [20285,20291]
                            argument [20286,20290]
                                expr [20286,20290]
                                    name: this [20286,20290]
                decl_stmt [20295,20334]
                    decl [20295,20333]
                        type [20295,20303]
                            name: Register [20295,20303]
                        name: temp [20304,20308]
                        init [20309,20333]
                            expr [20311,20333]
                                call [20311,20333]
                                    name [20311,20331]
                                        name: scope [20311,20316]
                                        operator: . [20316,20317]
                                        name: AcquireScratch [20317,20331]
                                    argument_list [20331,20333]
                decl_stmt [20337,20349]
                    decl [20337,20348]
                        type [20337,20342]
                            name: Label [20337,20342]
                        name: table [20343,20348]
                expr_stmt [20352,20428]
                    expr [20352,20427]
                        call [20352,20427]
                            name: JumpIf [20352,20358]
                            argument_list [20358,20427]
                                argument [20359,20395]
                                    expr [20359,20395]
                                        name [20359,20395]
                                            name: Condition [20359,20368]
                                            operator: :: [20368,20370]
                                            name: kUnsignedGreaterThanEqual [20370,20395]
                                argument [20397,20400]
                                    expr [20397,20400]
                                        name: reg [20397,20400]
                                argument [20402,20412]
                                    expr [20402,20412]
                                        name: num_labels [20402,20412]
                                argument [20414,20426]
                                    expr [20414,20426]
                                        operator: & [20414,20415]
                                        name: fallthrough [20415,20426]
                decl_stmt [20431,20452]
                    decl [20431,20451]
                        type [20431,20433]
                            name: __ [20431,20433]
                        name: Adr [20434,20437]
                        argument_list [20437,20451]
                            argument [20438,20442]
                                expr [20438,20442]
                                    name: temp [20438,20442]
                            argument [20444,20450]
                                expr [20444,20450]
                                    operator: & [20444,20445]
                                    name: table [20445,20450]
                decl_stmt [20455,20520]
                    decl [20455,20478]
                        type [20455,20458]
                            name: int [20455,20458]
                        name: entry_size_log2 [20459,20474]
                        init [20475,20478]
                            expr [20477,20478]
                                literal: 2 [20477,20478]
                ifdef [20480,20519]
                    directive: ifdef [20481,20486]
                    name: V8_ENABLE_CONTROL_FLOW_INTEGRITY [20487,20519]
                expr_stmt [20522,20569]
                    expr [20522,20539]
                        operator: ++ [20522,20524]
                        name: entry_size_log2 [20524,20539]
                comment: // Account for BTI. [20542,20561]
                endif [20562,20568]
                    directive: endif [20563,20568]
                decl_stmt [20571,20627]
                    decl [20571,20626]
                        type [20571,20573]
                            name: __ [20571,20573]
                        name: Add [20574,20577]
                        argument_list [20577,20626]
                            argument [20578,20582]
                                expr [20578,20582]
                                    name: temp [20578,20582]
                            argument [20584,20588]
                                expr [20584,20588]
                                    name: temp [20584,20588]
                            argument [20590,20625]
                                expr [20590,20625]
                                    call [20590,20625]
                                        name: Operand [20590,20597]
                                        argument_list [20597,20625]
                                            argument [20598,20601]
                                                expr [20598,20601]
                                                    name: reg [20598,20601]
                                            argument [20603,20607]
                                                expr [20603,20607]
                                                    name: UXTW [20603,20607]
                                            argument [20609,20624]
                                                expr [20609,20624]
                                                    name: entry_size_log2 [20609,20624]
                decl_stmt [20630,20642]
                    decl [20630,20641]
                        type [20630,20632]
                            name: __ [20630,20632]
                        name: Br [20633,20635]
                        argument_list [20635,20641]
                            argument [20636,20640]
                                expr [20636,20640]
                                    name: temp [20636,20640]
                block [20645,20895]
                    block_content [20651,20891]
                        decl_stmt [20651,20727]
                            decl [20651,20726]
                                type [20651,20682]
                                    name [20651,20682]
                                        name: TurboAssembler [20651,20665]
                                        operator: :: [20665,20667]
                                        name: BlockPoolsScope [20667,20682]
                                name: block_pools [20683,20694]
                                argument_list [20694,20726]
                                    argument [20695,20700]
                                        expr [20695,20700]
                                            name: masm_ [20695,20700]
                                    argument [20702,20725]
                                        expr [20702,20725]
                                            name: num_labels [20702,20712]
                                            operator: * [20713,20714]
                                            name: kInstrSize [20715,20725]
                        decl_stmt [20732,20748]
                            decl [20732,20747]
                                type [20732,20734]
                                    name: __ [20732,20734]
                                name: Bind [20735,20739]
                                argument_list [20739,20747]
                                    argument [20740,20746]
                                        expr [20740,20746]
                                            operator: & [20740,20741]
                                            name: table [20741,20746]
                        for [20753,20843]
                            control [20757,20789]
                                init [20758,20768]
                                    decl [20758,20767]
                                        type [20758,20761]
                                            name: int [20758,20761]
                                        name: i [20762,20763]
                                        init [20764,20767]
                                            expr [20766,20767]
                                                literal: 0 [20766,20767]
                                condition [20769,20784]
                                    expr [20769,20783]
                                        name: i [20769,20770]
                                        operator: < [20771,20772]
                                        name: num_labels [20773,20783]
                                incr [20785,20788]
                                    expr [20785,20788]
                                        operator: ++ [20785,20787]
                                        name: i [20787,20788]
                            block [20790,20843]
                                block_content [20798,20837]
                                    function_decl [20798,20814]
                                        type [20798,20800]
                                            name: __ [20798,20800]
                                        name: JumpTarget [20801,20811]
                                        parameter_list [20811,20813]
                                    decl_stmt [20821,20837]
                                        decl [20821,20836]
                                            type [20821,20823]
                                                name: __ [20821,20823]
                                            name: B [20824,20825]
                                            argument_list [20825,20836]
                                                argument [20826,20835]
                                                    expr [20826,20835]
                                                        name [20826,20835]
                                                            name: labels [20826,20832]
                                                            index [20832,20835]
                                                                expr [20833,20834]
                                                                    name: i [20833,20834]
                        function_decl [20848,20864]
                            type [20848,20850]
                                name: __ [20848,20850]
                            name: JumpTarget [20851,20861]
                            parameter_list [20861,20863]
                        decl_stmt [20869,20891]
                            decl [20869,20890]
                                type [20869,20871]
                                    name: __ [20869,20871]
                                name: Bind [20872,20876]
                                argument_list [20876,20890]
                                    argument [20877,20889]
                                        expr [20877,20889]
                                            operator: & [20877,20878]
                                            name: fallthrough [20878,20889]
    undef [20899,20908]
        directive: undef [20900,20905]
        name: __ [20906,20908]
    define [20909,20925]
        directive: define [20910,20916]
        macro [20917,20919]
            name: __ [20917,20919]
        value [20920,20925]
    function [20927,22658]
        type [20927,20931]
            name: void [20927,20931]
        name [20932,20961]
            name: BaselineAssembler [20932,20949]
            operator: :: [20949,20951]
            name: EmitReturn [20951,20961]
        parameter_list [20961,20983]
            parameter [20962,20982]
                decl [20962,20982]
                    type [20962,20977]
                        name: MacroAssembler [20962,20976]
                        modifier: * [20976,20977]
                    name: masm [20978,20982]
        block [20984,22658]
            block_content [20988,22644]
                expr_stmt [20988,21011]
                    expr [20988,21010]
                        call [20988,21010]
                            name: ASM_CODE_COMMENT [20988,21004]
                            argument_list [21004,21010]
                                argument [21005,21009]
                                    expr [21005,21009]
                                        name: masm [21005,21009]
                decl_stmt [21014,21043]
                    decl [21014,21042]
                        type [21014,21031]
                            name: BaselineAssembler [21014,21031]
                        name: basm [21032,21036]
                        argument_list [21036,21042]
                            argument [21037,21041]
                                expr [21037,21041]
                                    name: masm [21037,21041]
                decl_stmt [21047,21112]
                    decl [21047,21111]
                        type [21047,21055]
                            name: Register [21047,21055]
                        name: weight [21056,21062]
                        init [21063,21111]
                            expr [21065,21111]
                                call [21065,21111]
                                    name [21065,21109]
                                        name: BaselineLeaveFrameDescriptor [21065,21093]
                                        operator: :: [21093,21095]
                                        name: WeightRegister [21095,21109]
                                    argument_list [21109,21111]
                decl_stmt [21115,21189]
                    decl [21115,21188]
                        type [21115,21123]
                            name: Register [21115,21123]
                        name: params_size [21124,21135]
                        init [21136,21188]
                            expr [21138,21188]
                                call [21138,21188]
                                    name [21138,21186]
                                        name: BaselineLeaveFrameDescriptor [21138,21166]
                                        operator: :: [21166,21168]
                                        name: ParamsSizeRegister [21168,21186]
                                    argument_list [21186,21188]
                block [21193,21805]
                    block_content [21199,21801]
                        expr_stmt [21199,21256]
                            expr [21199,21255]
                                call [21199,21255]
                                    name: ASM_CODE_COMMENT_STRING [21199,21222]
                                    argument_list [21222,21255]
                                        argument [21223,21227]
                                            expr [21223,21227]
                                                name: masm [21223,21227]
                                        argument [21229,21254]
                                            expr [21229,21254]
                                                literal: "Update Interrupt Budget" [21229,21254]
                        decl_stmt [21262,21289]
                            decl [21262,21288]
                                type [21262,21267]
                                    name: Label [21262,21267]
                                name: skip_interrupt_label [21268,21288]
                        decl_stmt [21294,21369]
                            decl [21294,21368]
                                type [21294,21296]
                                    name: __ [21294,21296]
                                name: AddToInterruptBudgetAndJumpIfNotExceeded [21297,21337]
                                argument_list [21337,21368]
                                    argument [21338,21344]
                                        expr [21338,21344]
                                            name: weight [21338,21344]
                                    argument [21346,21367]
                                        expr [21346,21367]
                                            operator: & [21346,21347]
                                            name: skip_interrupt_label [21347,21367]
                        expr_stmt [21374,21405]
                            expr [21374,21404]
                                name: __ [21374,21376]
                                call [21377,21383]
                                    name: masm [21377,21381]
                                    argument_list [21381,21383]
                                operator: -> [21383,21385]
                                call [21385,21404]
                                    name: SmiTag [21385,21391]
                                    argument_list [21391,21404]
                                        argument [21392,21403]
                                            expr [21392,21403]
                                                name: params_size [21392,21403]
                        expr_stmt [21410,21472]
                            expr [21410,21471]
                                name: __ [21410,21412]
                                call [21413,21419]
                                    name: masm [21413,21417]
                                    argument_list [21417,21419]
                                operator: -> [21419,21421]
                                call [21421,21471]
                                    name: Push [21421,21425]
                                    argument_list [21425,21471]
                                        argument [21426,21437]
                                            expr [21426,21437]
                                                name: params_size [21426,21437]
                                        argument [21439,21470]
                                            expr [21439,21470]
                                                name: kInterpreterAccumulatorRegister [21439,21470]
                        decl_stmt [21478,21511]
                            decl [21478,21510]
                                type [21478,21480]
                                    name: __ [21478,21480]
                                name: LoadContext [21481,21492]
                                argument_list [21492,21510]
                                    argument [21493,21509]
                                        expr [21493,21509]
                                            name: kContextRegister [21493,21509]
                        decl_stmt [21516,21553]
                            decl [21516,21552]
                                type [21516,21518]
                                    name: __ [21516,21518]
                                name: LoadFunction [21519,21531]
                                argument_list [21531,21552]
                                    argument [21532,21551]
                                        expr [21532,21551]
                                            name: kJSFunctionRegister [21532,21551]
                        expr_stmt [21558,21603]
                            expr [21558,21602]
                                name: __ [21558,21560]
                                call [21561,21567]
                                    name: masm [21561,21565]
                                    argument_list [21565,21567]
                                operator: -> [21567,21569]
                                call [21569,21602]
                                    name: PushArgument [21569,21581]
                                    argument_list [21581,21602]
                                        argument [21582,21601]
                                            expr [21582,21601]
                                                name: kJSFunctionRegister [21582,21601]
                        decl_stmt [21608,21661]
                            decl [21608,21660]
                                type [21608,21610]
                                    name: __ [21608,21610]
                                name: CallRuntime [21611,21622]
                                argument_list [21622,21660]
                                    argument [21623,21656]
                                        expr [21623,21656]
                                            name [21623,21656]
                                                name: Runtime [21623,21630]
                                                operator: :: [21630,21632]
                                                name: kBytecodeBudgetInterrupt [21632,21656]
                                    argument [21658,21659]
                                        expr [21658,21659]
                                            literal: 1 [21658,21659]
                        expr_stmt [21667,21728]
                            expr [21667,21727]
                                name: __ [21667,21669]
                                call [21670,21676]
                                    name: masm [21670,21674]
                                    argument_list [21674,21676]
                                operator: -> [21676,21678]
                                call [21678,21727]
                                    name: Pop [21678,21681]
                                    argument_list [21681,21727]
                                        argument [21682,21713]
                                            expr [21682,21713]
                                                name: kInterpreterAccumulatorRegister [21682,21713]
                                        argument [21715,21726]
                                            expr [21715,21726]
                                                name: params_size [21715,21726]
                        expr_stmt [21733,21766]
                            expr [21733,21765]
                                name: __ [21733,21735]
                                call [21736,21742]
                                    name: masm [21736,21740]
                                    argument_list [21740,21742]
                                operator: -> [21742,21744]
                                call [21744,21765]
                                    name: SmiUntag [21744,21752]
                                    argument_list [21752,21765]
                                        argument [21753,21764]
                                            expr [21753,21764]
                                                name: params_size [21753,21764]
                        decl_stmt [21770,21801]
                            decl [21770,21800]
                                type [21770,21772]
                                    name: __ [21770,21772]
                                name: Bind [21773,21777]
                                argument_list [21777,21800]
                                    argument [21778,21799]
                                        expr [21778,21799]
                                            operator: & [21778,21779]
                                            name: skip_interrupt_label [21779,21799]
                decl_stmt [21809,21862]
                    decl [21809,21861]
                        type [21809,21848]
                            name [21809,21848]
                                name: BaselineAssembler [21809,21826]
                                operator: :: [21826,21828]
                                name: ScratchRegisterScope [21828,21848]
                        name: temps [21849,21854]
                        argument_list [21854,21861]
                            argument [21855,21860]
                                expr [21855,21860]
                                    operator: & [21855,21856]
                                    name: basm [21856,21860]
                decl_stmt [21865,21918]
                    decl [21865,21917]
                        type [21865,21873]
                            name: Register [21865,21873]
                        name: actual_params_size [21874,21892]
                        init [21893,21917]
                            expr [21895,21917]
                                call [21895,21917]
                                    name [21895,21915]
                                        name: temps [21895,21900]
                                        operator: . [21900,21901]
                                        name: AcquireScratch [21901,21915]
                                    argument_list [21915,21917]
                comment: // Compute the size of the actual parameters + receiver (in bytes). [21921,21988]
                decl_stmt [21991,22082]
                    decl [21991,22081]
                        type [21991,21993]
                            name: __ [21991,21993]
                        name: Move [21994,21998]
                        argument_list [21998,22081]
                            argument [21999,22017]
                                expr [21999,22017]
                                    name: actual_params_size [21999,22017]
                            argument [22029,22080]
                                expr [22029,22080]
                                    call [22029,22080]
                                        name: MemOperand [22029,22039]
                                        argument_list [22039,22080]
                                            argument [22040,22042]
                                                expr [22040,22042]
                                                    name: fp [22040,22042]
                                            argument [22044,22079]
                                                expr [22044,22079]
                                                    name [22044,22079]
                                                        name: StandardFrameConstants [22044,22066]
                                                        operator: :: [22066,22068]
                                                        name: kArgCOffset [22068,22079]
                comment: // If actual is bigger than formal, then we should use it to free up the stack [22086,22164]
                comment: // arguments. [22167,22180]
                decl_stmt [22183,22210]
                    decl [22183,22209]
                        type [22183,22188]
                            name: Label [22183,22188]
                        name: corrected_args_count [22189,22209]
                decl_stmt [22213,22321]
                    decl [22213,22320]
                        type [22213,22215]
                            name: __ [22213,22215]
                        name: JumpIf [22216,22222]
                        argument_list [22222,22320]
                            argument [22223,22251]
                                expr [22223,22251]
                                    name [22223,22251]
                                        name: Condition [22223,22232]
                                        operator: :: [22232,22234]
                                        name: kGreaterThanEqual [22234,22251]
                            argument [22253,22264]
                                expr [22253,22264]
                                    name: params_size [22253,22264]
                            argument [22266,22284]
                                expr [22266,22284]
                                    name: actual_params_size [22266,22284]
                            argument [22298,22319]
                                expr [22298,22319]
                                    operator: & [22298,22299]
                                    name: corrected_args_count [22299,22319]
                expr_stmt [22324,22372]
                    expr [22324,22371]
                        name: __ [22324,22326]
                        call [22327,22333]
                            name: masm [22327,22331]
                            argument_list [22331,22333]
                        operator: -> [22333,22335]
                        call [22335,22371]
                            name: Mov [22335,22338]
                            argument_list [22338,22371]
                                argument [22339,22350]
                                    expr [22339,22350]
                                        name: params_size [22339,22350]
                                argument [22352,22370]
                                    expr [22352,22370]
                                        name: actual_params_size [22352,22370]
                decl_stmt [22375,22406]
                    decl [22375,22405]
                        type [22375,22377]
                            name: __ [22375,22377]
                        name: Bind [22378,22382]
                        argument_list [22382,22405]
                            argument [22383,22404]
                                expr [22383,22404]
                                    operator: & [22383,22384]
                                    name: corrected_args_count [22384,22404]
                comment: // Leave the frame (also dropping the register file). [22410,22463]
                expr_stmt [22466,22510]
                    expr [22466,22509]
                        name: __ [22466,22468]
                        call [22469,22475]
                            name: masm [22469,22473]
                            argument_list [22473,22475]
                        operator: -> [22475,22477]
                        call [22477,22509]
                            name: LeaveFrame [22477,22487]
                            argument_list [22487,22509]
                                argument [22488,22508]
                                    expr [22488,22508]
                                        name [22488,22508]
                                            name: StackFrame [22488,22498]
                                            operator: :: [22498,22500]
                                            name: BASELINE [22500,22508]
                comment: // Drop receiver + arguments. [22514,22543]
                expr_stmt [22546,22624]
                    expr [22546,22623]
                        name: __ [22546,22548]
                        call [22549,22555]
                            name: masm [22549,22553]
                            argument_list [22553,22555]
                        operator: -> [22555,22557]
                        call [22557,22623]
                            name: DropArguments [22557,22570]
                            argument_list [22570,22623]
                                argument [22571,22582]
                                    expr [22571,22582]
                                        name: params_size [22571,22582]
                                argument [22584,22622]
                                    expr [22584,22622]
                                        name [22584,22622]
                                            name: TurboAssembler [22584,22598]
                                            operator: :: [22598,22600]
                                            name: kCountIncludesReceiver [22600,22622]
                expr_stmt [22627,22644]
                    expr [22627,22643]
                        name: __ [22627,22629]
                        call [22630,22636]
                            name: masm [22630,22634]
                            argument_list [22634,22636]
                        operator: -> [22636,22638]
                        call [22638,22643]
                            name: Ret [22638,22641]
                            argument_list [22641,22643]
    undef [22648,22657]
        directive: undef [22649,22654]
        name: __ [22655,22657]
    function [22659,22887]
        type [22659,22670]
            specifier: inline [22659,22665]
            name: void [22666,22670]
        name [22671,22728]
            name: EnsureAccumulatorPreservedScope [22671,22702]
            operator: :: [22702,22704]
            name: AssertEqualToAccumulator [22704,22728]
        parameter_list [22728,22747]
            parameter [22734,22746]
                decl [22734,22746]
                    type [22734,22742]
                        name: Register [22734,22742]
                    name: reg [22743,22746]
        block [22748,22887]
            block_content [22752,22885]
                expr_stmt [22752,22820]
                    expr [22752,22819]
                        call [22752,22770]
                            name [22752,22768]
                                name: assembler_ [22752,22762]
                                operator: -> [22762,22764]
                                name: masm [22764,22768]
                            argument_list [22768,22770]
                        operator: -> [22770,22772]
                        call [22772,22819]
                            name: CmpTagged [22772,22781]
                            argument_list [22781,22819]
                                argument [22782,22785]
                                    expr [22782,22785]
                                        name: reg [22782,22785]
                                argument [22787,22818]
                                    expr [22787,22818]
                                        name: kInterpreterAccumulatorRegister [22787,22818]
                expr_stmt [22823,22885]
                    expr [22823,22884]
                        call [22823,22841]
                            name [22823,22839]
                                name: assembler_ [22823,22833]
                                operator: -> [22833,22835]
                                name: masm [22835,22839]
                            argument_list [22839,22841]
                        operator: -> [22841,22843]
                        call [22843,22884]
                            name: Assert [22843,22849]
                            argument_list [22849,22884]
                                argument [22850,22852]
                                    expr [22850,22852]
                                        name: eq [22850,22852]
                                argument [22854,22883]
                                    expr [22854,22883]
                                        name [22854,22883]
                                            name: AbortReason [22854,22865]
                                            operator: :: [22865,22867]
                                            name: kUnexpectedValue [22867,22883]
    comment: // namespace baseline [22892,22913]
    comment: // namespace internal [22917,22938]
    comment: // namespace v8 [22942,22957]
    endif [22959,22965]
        directive: endif [22960,22965]
    comment: // V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [22967,23019]