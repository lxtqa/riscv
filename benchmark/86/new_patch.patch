--- ./benchmark/86/test2.cc	2024-03-04 15:34:05
+++ ./benchmark/86/test2_.cc	2024-03-04 15:34:56
@@ -2438,7 +2438,12 @@ void Builtins::Generate_CallFunction(MacroAssembler* m
 
   __ LoadTaggedPointerField(
       a2, FieldMemOperand(a1, JSFunction::kSharedFunctionInfoOffset));
-  // Enter the context of the function; ToObject has to run in the function
+  
+__ Ldr(w3, FieldMemOperand(x2, SharedFunctionInfo::kFlagsOffset));
+
+__ TestAndBranchIfAnySet(w3, SharedFunctionInfo::IsClassConstructorBit::kMask,
+                           &class_constructor);
+// Enter the context of the function; ToObject has to run in the function
   // context, and we also need to take the global proxy from the function
   // context in case of conversion.
   __ LoadTaggedPointerField(cp,
@@ -2515,6 +2520,16 @@ void Builtins::Generate_CallFunction(MacroAssembler* m
   __ Lhu(a2,
          FieldMemOperand(a2, SharedFunctionInfo::kFormalParameterCountOffset));
   __ InvokeFunctionCode(a1, no_reg, a2, a0, InvokeType::kJump);
+
+__ Bind(&class_constructor);
+
+{
+    FrameScope frame(masm, StackFrame::INTERNAL);
+    __ PushArgument(x1);
+    __ CallRuntime(Runtime::kThrowConstructorNonCallableError);
+    __ Unreachable();
+  }
+
 }
 
 namespace {
@@ -2695,7 +2710,9 @@ void Builtins::Generate_ConstructFunction(MacroAssembl
   Label call_generic_stub;
 
   // Jump to JSBuiltinsConstructStub or JSConstructStubGeneric.
-  __ LoadTaggedPointerField(
+  
+Label class_constructor;
+__ LoadTaggedPointerField(
       a4, FieldMemOperand(a1, JSFunction::kSharedFunctionInfoOffset));
   __ Lwu(a4, FieldMemOperand(a4, SharedFunctionInfo::kFlagsOffset));
   __ And(a4, a4, Operand(SharedFunctionInfo::ConstructAsBuiltinBit::kMask));
