--- ./benchmark/20/test2.cc	2024-01-28 20:12:27
+++ ./benchmark/20/test2_.cc	2024-01-28 20:13:27
@@ -330,7 +330,8 @@ void Builtins::Generate_ResumeGeneratorTrampoline(Macr
   // Store input value into generator object.
   __ Sd(a0, FieldMemOperand(a1, JSGeneratorObject::kInputOrDebugPosOffset));
   __ RecordWriteField(a1, JSGeneratorObject::kInputOrDebugPosOffset, a0, a3,
-                      kRAHasNotBeenSaved, kDontSaveFPRegs);
+                      kRAHasNotBeenSaved, SaveFPRegsMode::kIgnore
+);
 
   // Load suspended function and context.
   __ Ld(a4, FieldMemOperand(a1, JSGeneratorObject::kFunctionOffset));
@@ -770,7 +771,7 @@ static void ReplaceClosureCodeWithOptimizedCode(MacroA
   __ Sd(optimized_code, FieldMemOperand(closure, JSFunction::kCodeOffset));
   __ Move(scratch1, optimized_code);  // Write barrier clobbers scratch1 below.
   __ RecordWriteField(closure, JSFunction::kCodeOffset, scratch1, scratch2,
-                      kRAHasNotBeenSaved, kDontSaveFPRegs,
+                      kRAHasNotBeenSaved,  SaveFPRegsMode::kIgnore, 
                       RememberedSetAction::kOmit, SmiCheck::kOmit);
 }
 
@@ -2684,7 +2685,7 @@ void Builtins::Generate_CEntry(MacroAssembler* masm, i
   // sp: stack pointer    (restored as callee's sp after C call)
   // cp: current context  (C callee-saved)
   //
-  // If argv_mode == kArgvInRegister:
+  // If argv_mode == ArgvMode::kRegister:
   // a2: pointer to the first argument
 
   if (argv_mode == kArgvInRegister) {
@@ -2698,8 +2699,7 @@ void Builtins::Generate_CEntry(MacroAssembler* masm, i
 
   // Enter the exit frame that transitions from JavaScript to C++.
   FrameScope scope(masm, StackFrame::MANUAL);
-  __ EnterExitFrame(
-      save_doubles == kSaveFPRegs, 0,
+  __ EnterExitFrame( save_doubles == SaveFPRegsMode::kSave,  0,
       builtin_exit_frame ? StackFrame::BUILTIN_EXIT : StackFrame::EXIT);
 
   // s3: number of arguments  including receiver (C callee-saved)
@@ -2753,7 +2753,8 @@ void Builtins::Generate_CEntry(MacroAssembler* masm, i
                       ? no_reg
                       // s3: still holds argc (callee-saved).
                       : s3;
-  __ LeaveExitFrame(save_doubles == kSaveFPRegs, argc, EMIT_RETURN);
+  __ LeaveExitFrame(save_doubles == SaveFPRegsMode::kSave
+, argc, EMIT_RETURN);
 
   // Handling of exception.
   __ bind(&exception_returned);
@@ -3073,7 +3074,7 @@ void Builtins::Generate_CallApiCallback(MacroAssembler
   //  -- a0                  : holder
   //  --
   //  -- sp[0]               : receiver
-  //  -- sp[8]               : first argument
+  //  -- sp[8]: first argument
   //  -- ...
   //  -- sp[(argc) * 8]      : last argument
   // -----------------------------------
