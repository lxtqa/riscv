unit [0,0]
    comment: // Copyright 2021 the V8 project authors. All rights reserved. [0,62]
    comment: // Use of this source code is governed by a BSD-style license that can be [63,136]
    comment: // found in the LICENSE file. [137,166]
    ifndef [168,225]
        directive: ifndef [169,175]
        name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [176,225]
    define [226,283]
        directive: define [227,233]
        macro [234,283]
            name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [234,283]
    include [285,329]
        directive: include [286,293]
        file: "src/baseline/baseline-assembler.h" [294,329]
    include [330,386]
        directive: include [331,338]
        file: "src/codegen/arm64/macro-assembler-arm64-inl.h" [339,386]
    include [387,433]
        directive: include [388,395]
        file: "src/codegen/interface-descriptors.h" [396,433]
    namespace [435,10140]
        name: v8 [445,447]
        block [448,10140]
            namespace [450,9900]
                block [469,9900]
                    namespace [471,1308]
                        name: baseline [481,489]
                        block [490,1308]
                            class [493,1035]
                                name [499,538]
                                    name: BaselineAssembler [499,516]
                                    operator: :: [516,518]
                                    name: ScratchRegisterScope [518,538]
                                block [539,1035]
                                    expr_stmt [542,1031]
                                        expr [542,641]
                                            specifier: public [542,548]
                                            operator: : [548,549]
                                            specifier: explicit [552,560]
                                            call [561,611]
                                                name: ScratchRegisterScope [561,581]
                                                argument_list [581,611]
                                                    argument [582,610]
                                                        expr [582,610]
                                                            name: BaselineAssembler [582,599]
                                                            operator: * [599,600]
                                                            name: assembler [601,610]
                                            operator: : [618,619]
                                            call [620,641]
                                                name: assembler_ [620,630]
                                                argument_list [630,641]
                                                    argument [631,640]
                                                        expr [631,640]
                                                            name: assembler [631,640]
                                        operator: , [641,642]
                                        expr [651,698]
                                            call [651,698]
                                                name: prev_scope_ [651,662]
                                                argument_list [662,698]
                                                    argument [663,697]
                                                        expr [663,697]
                                                            name [663,697]
                                                                name: assembler [663,672]
                                                                operator: -> [672,674]
                                                                name: scratch_register_scope_ [674,697]
                                        operator: , [698,699]
                                        macro [708,741]
                                            name: wrapped_scope_ [708,722]
                                            argument_list [722,741]
                                                argument [723,740]
                                        expr [742,1030]
                                            block [742,983]
                                                if_stmt [748,977]
                                                    if [748,977]
                                                        condition [751,789]
                                                            expr [752,788]
                                                                operator: ! [752,753]
                                                                name [753,788]
                                                                    name: assembler_ [753,763]
                                                                    operator: -> [763,765]
                                                                    name: scratch_register_scope_ [765,788]
                                                        block [790,977]
                                                            block_content [909,977]
                                                                comment: // If we haven't opened a scratch scope yet, for the first one add a [798,866]
                                                                comment: // couple of extra registers. [873,902]
                                                                expr_stmt [909,942]
                                                                    expr [909,941]
                                                                        call [909,941]
                                                                            name [909,931]
                                                                                name: wrapped_scope_ [909,923]
                                                                                operator: . [923,924]
                                                                                name: Include [924,931]
                                                                            argument_list [931,941]
                                                                                argument [932,935]
                                                                                    expr [932,935]
                                                                                        name: x14 [932,935]
                                                                                argument [937,940]
                                                                                    expr [937,940]
                                                                                        name: x15 [937,940]
                                                                expr_stmt [949,977]
                                                                    expr [949,976]
                                                                        call [949,976]
                                                                            name [949,971]
                                                                                name: wrapped_scope_ [949,963]
                                                                                operator: . [963,964]
                                                                                name: Include [964,971]
                                                                            argument_list [971,976]
                                                                                argument [972,975]
                                                                                    expr [972,975]
                                                                                        name: x19 [972,975]
                                                                expr_stmt [0,0]
                                            name [988,1023]
                                                name: assembler_ [988,998]
                                                operator: -> [998,1000]
                                                name: scratch_register_scope_ [1000,1023]
                                            operator: = [1024,1025]
                                            name: this [1026,1030]
                            destructor [1038,1116]
                                name: ~ScratchRegisterScope [1038,1059]
                                parameter_list [1059,1061]
                                block [1062,1116]
                                    block_content [1064,1114]
                                        expr_stmt [1064,1114]
                                            expr [1064,1113]
                                                name [1064,1099]
                                                    name: assembler_ [1064,1074]
                                                    operator: -> [1074,1076]
                                                    name: scratch_register_scope_ [1076,1099]
                                                operator: = [1100,1101]
                                                name: prev_scope_ [1102,1113]
                            function [1120,1183]
                                type [1120,1128]
                                    name: Register [1120,1128]
                                name: AcquireScratch [1129,1143]
                                parameter_list [1143,1145]
                                block [1146,1183]
                                    block_content [1148,1181]
                                        return [1148,1181]
                                            expr [1155,1180]
                                                call [1155,1180]
                                                    name [1155,1178]
                                                        name: wrapped_scope_ [1155,1169]
                                                        operator: . [1169,1170]
                                                        name: AcquireX [1170,1178]
                                                    argument_list [1178,1180]
                            expr_stmt [1186,1227]
                                expr [1186,1226]
                                    specifier: private [1186,1193]
                                    operator: : [1193,1194]
                                    name: BaselineAssembler [1197,1214]
                                    operator: * [1214,1215]
                                    name: assembler_ [1216,1226]
                            decl_stmt [1230,1264]
                                decl [1230,1263]
                                    type [1230,1251]
                                        name: ScratchRegisterScope [1230,1250]
                                        modifier: * [1250,1251]
                                    name: prev_scope_ [1252,1263]
                            decl_stmt [1267,1306]
                                decl [1267,1305]
                                    type [1267,1290]
                                        name: UseScratchRegisterScope [1267,1290]
                                    name: wrapped_scope_ [1291,1305]
                    empty_stmt [1308,1309]
                    comment: // TODO(v8:11461): Unify condition names in the MacroAssembler. [1311,1374]
                    enum [1375,1725]
                        class [1380,1724]
                            name: Condition [1386,1395]
                            super_list [1396,1406]
                                super [1398,1406]
                                    name: uint32_t [1398,1406]
                            block [1407,1724]
                                expr_stmt [1411,1722]
                                    expr [1411,1422]
                                        name: kEqual [1411,1417]
                                        operator: = [1418,1419]
                                        name: eq [1420,1422]
                                    operator: , [1422,1423]
                                    expr [1426,1440]
                                        name: kNotEqual [1426,1435]
                                        operator: = [1436,1437]
                                        name: ne [1438,1440]
                                    operator: , [1440,1441]
                                    expr [1445,1459]
                                        name: kLessThan [1445,1454]
                                        operator: = [1455,1456]
                                        name: lt [1457,1459]
                                    operator: , [1459,1460]
                                    expr [1463,1480]
                                        name: kGreaterThan [1463,1475]
                                        operator: = [1476,1477]
                                        name: gt [1478,1480]
                                    operator: , [1480,1481]
                                    expr [1484,1503]
                                        name: kLessThanEqual [1484,1498]
                                        operator: = [1499,1500]
                                        name: le [1501,1503]
                                    operator: , [1503,1504]
                                    expr [1507,1529]
                                        name: kGreaterThanEqual [1507,1524]
                                        operator: = [1525,1526]
                                        name: ge [1527,1529]
                                    operator: , [1529,1530]
                                    expr [1534,1556]
                                        name: kUnsignedLessThan [1534,1551]
                                        operator: = [1552,1553]
                                        name: lo [1554,1556]
                                    operator: , [1556,1557]
                                    expr [1560,1585]
                                        name: kUnsignedGreaterThan [1560,1580]
                                        operator: = [1581,1582]
                                        name: hi [1583,1585]
                                    operator: , [1585,1586]
                                    expr [1589,1616]
                                        name: kUnsignedLessThanEqual [1589,1611]
                                        operator: = [1612,1613]
                                        name: ls [1614,1616]
                                    operator: , [1616,1617]
                                    expr [1620,1650]
                                        name: kUnsignedGreaterThanEqual [1620,1645]
                                        operator: = [1646,1647]
                                        name: hs [1648,1650]
                                    operator: , [1650,1651]
                                    expr [1655,1669]
                                        name: kOverflow [1655,1664]
                                        operator: = [1665,1666]
                                        name: vs [1667,1669]
                                    operator: , [1669,1670]
                                    expr [1673,1689]
                                        name: kNoOverflow [1673,1684]
                                        operator: = [1685,1686]
                                        name: vc [1687,1689]
                                    operator: , [1689,1690]
                                    expr [1694,1704]
                                        name: kZero [1694,1699]
                                        operator: = [1700,1701]
                                        name: eq [1702,1704]
                                    operator: , [1704,1705]
                                    expr [1708,1721]
                                        name: kNotZero [1708,1716]
                                        operator: = [1717,1718]
                                        name: ne [1719,1721]
                                    operator: , [1721,1722]
                    function [1727,1838]
                        type [1727,1753]
                            specifier: inline [1727,1733]
                            specifier: internal [1734,1742]
                            name [1742,1753]
                                operator: :: [1742,1744]
                                name: Condition [1744,1753]
                        name: AsMasmCondition [1754,1769]
                        parameter_list [1769,1785]
                            parameter [1770,1784]
                                decl [1770,1784]
                                    type [1770,1779]
                                        name: Condition [1770,1779]
                                    name: cond [1780,1784]
                        block [1786,1838]
                            block_content [1790,1836]
                                return [1790,1836]
                                    expr [1797,1835]
                                        call [1797,1835]
                                            name [1797,1829]
                                                name: static_cast [1797,1808]
                                                argument_list [1808,1829]
                                                    argument [1809,1828]
                                                        specifier: internal [1809,1817]
                                                        name [1817,1828]
                                                            operator: :: [1817,1819]
                                                            name: Condition [1819,1828]
                                            argument_list [1829,1835]
                                                argument [1830,1834]
                                                    expr [1830,1834]
                                                        name: cond [1830,1834]
                    namespace [1840,2039]
                        name: detail [1850,1856]
                        block [1857,2039]
                            ifdef [1860,1872]
                                directive: ifdef [1861,1866]
                                name: DEBUG [1867,1872]
                            function [1873,1995]
                                type [1873,1884]
                                    specifier: inline [1873,1879]
                                    name: bool [1880,1884]
                                name: Clobbers [1885,1893]
                                parameter_list [1893,1925]
                                    parameter [1894,1909]
                                        decl [1894,1909]
                                            type [1894,1909]
                                                name: Register [1894,1902]
                                            name: target [1903,1909]
                                    parameter [1911,1924]
                                        decl [1911,1924]
                                            type [1911,1924]
                                                name: MemOperand [1911,1921]
                                            name: op [1922,1924]
                                block [1926,1995]
                                    block_content [1930,1985]
                                        return [1930,1985]
                                            expr [1937,1984]
                                                call [1937,1946]
                                                    name [1937,1944]
                                                        name: op [1937,1939]
                                                        operator: . [1939,1940]
                                                        name: base [1940,1944]
                                                    argument_list [1944,1946]
                                                operator: == [1947,1949]
                                                name: target [1950,1956]
                                                operator: || [1957,1959]
                                                call [1960,1974]
                                                    name [1960,1972]
                                                        name: op [1960,1962]
                                                        operator: . [1962,1963]
                                                        name: regoffset [1963,1972]
                                                    argument_list [1972,1974]
                                                operator: == [1975,1977]
                                                name: target [1978,1984]
                            endif [1988,1994]
                                directive: endif [1989,1994]
                    comment: // namespace detail [1999,2018]
                    define [2020,2038]
                        directive: define [2021,2027]
                        macro [2028,2030]
                            name: __ [2028,2030]
                        value [2031,2038]
                    function [2040,2223]
                        type [2040,2050]
                            name: MemOperand [2040,2050]
                        name [2051,2090]
                            name: BaselineAssembler [2051,2068]
                            operator: :: [2068,2070]
                            name: RegisterFrameOperand [2070,2090]
                        parameter_list [2090,2139]
                            parameter [2096,2138]
                                decl [2096,2138]
                                    type [2096,2117]
                                        name [2096,2117]
                                            name: interpreter [2096,2107]
                                            operator: :: [2107,2109]
                                            name: Register [2109,2117]
                                    name: interpreter_register [2118,2138]
                        block [2140,2223]
                            block_content [2144,2221]
                                return [2144,2221]
                                    expr [2151,2220]
                                        call [2151,2220]
                                            name: MemOperand [2151,2161]
                                            argument_list [2161,2220]
                                                argument [2162,2164]
                                                    expr [2162,2164]
                                                        name: fp [2162,2164]
                                                argument [2166,2219]
                                                    expr [2166,2219]
                                                        call [2166,2198]
                                                            name [2166,2196]
                                                                name: interpreter_register [2166,2186]
                                                                operator: . [2186,2187]
                                                                name: ToOperand [2187,2196]
                                                            argument_list [2196,2198]
                                                        operator: * [2199,2200]
                                                        name: kSystemPointerSize [2201,2219]
                    function [2224,2442]
                        type [2224,2228]
                            name: void [2224,2228]
                        name [2229,2268]
                            name: BaselineAssembler [2229,2246]
                            operator: :: [2246,2248]
                            name: RegisterFrameAddress [2248,2268]
                        parameter_list [2268,2336]
                            parameter [2274,2316]
                                decl [2274,2316]
                                    type [2274,2316]
                                        name [2274,2295]
                                            name: interpreter [2274,2285]
                                            operator: :: [2285,2287]
                                            name: Register [2287,2295]
                                    name: interpreter_register [2296,2316]
                            parameter [2318,2335]
                                decl [2318,2335]
                                    type [2318,2335]
                                        name: Register [2318,2326]
                                    name: rscratch [2327,2335]
                        block [2337,2442]
                            block_content [2341,2440]
                                return [2341,2440]
                                    expr [2348,2439]
                                        name: __ [2348,2350]
                                        call [2351,2439]
                                            name: Add [2351,2354]
                                            argument_list [2354,2439]
                                                argument [2355,2363]
                                                    expr [2355,2363]
                                                        name: rscratch [2355,2363]
                                                argument [2365,2367]
                                                    expr [2365,2367]
                                                        name: fp [2365,2367]
                                                argument [2385,2438]
                                                    expr [2385,2438]
                                                        call [2385,2417]
                                                            name [2385,2415]
                                                                name: interpreter_register [2385,2405]
                                                                operator: . [2405,2406]
                                                                name: ToOperand [2406,2415]
                                                            argument_list [2415,2417]
                                                        operator: * [2418,2419]
                                                        name: kSystemPointerSize [2420,2438]
                    function [2443,2572]
                        type [2443,2453]
                            name: MemOperand [2443,2453]
                        name [2454,2494]
                            name: BaselineAssembler [2454,2471]
                            operator: :: [2471,2473]
                            name: FeedbackVectorOperand [2473,2494]
                        parameter_list [2494,2496]
                        block [2497,2572]
                            block_content [2501,2570]
                                return [2501,2570]
                                    expr [2508,2569]
                                        call [2508,2569]
                                            name: MemOperand [2508,2518]
                                            argument_list [2518,2569]
                                                argument [2519,2521]
                                                    expr [2519,2521]
                                                        name: fp [2519,2521]
                                                argument [2523,2568]
                                                    expr [2523,2568]
                                                        name [2523,2568]
                                                            name: BaselineFrameConstants [2523,2545]
                                                            operator: :: [2545,2547]
                                                            name: kFeedbackVectorFromFp [2547,2568]
                    function [2574,2726]
                        type [2574,2578]
                            name: void [2574,2578]
                        name [2579,2602]
                            name: BaselineAssembler [2579,2596]
                            operator: :: [2596,2598]
                            name: Bind [2598,2602]
                        parameter_list [2602,2616]
                            parameter [2603,2615]
                                decl [2603,2615]
                                    type [2603,2609]
                                        name: Label [2603,2608]
                                        modifier: * [2608,2609]
                                    name: label [2610,2615]
                        block [2617,2726]
                            block_content [2699,2724]
                                comment: // All baseline compiler binds on arm64 are assumed to be for jump targets. [2621,2696]
                                decl_stmt [2699,2724]
                                    decl [2699,2723]
                                        type [2699,2701]
                                            name: __ [2699,2701]
                                        name: BindJumpTarget [2702,2716]
                                        argument_list [2716,2723]
                                            argument [2717,2722]
                                                expr [2717,2722]
                                                    name: label [2717,2722]
                    function [2728,2807]
                        type [2728,2732]
                            name: void [2728,2732]
                        name [2733,2773]
                            name: BaselineAssembler [2733,2750]
                            operator: :: [2750,2752]
                            name: BindWithoutJumpTarget [2752,2773]
                        parameter_list [2773,2787]
                            parameter [2774,2786]
                                decl [2774,2786]
                                    type [2774,2780]
                                        name: Label [2774,2779]
                                        modifier: * [2779,2780]
                                    name: label [2781,2786]
                        block [2788,2807]
                            block_content [2790,2805]
                                decl_stmt [2790,2805]
                                    decl [2790,2804]
                                        type [2790,2792]
                                            name: __ [2790,2792]
                                        name: Bind [2793,2797]
                                        argument_list [2797,2804]
                                            argument [2798,2803]
                                                expr [2798,2803]
                                                    name: label [2798,2803]
                    function [2809,2866]
                        type [2809,2813]
                            name: void [2809,2813]
                        name [2814,2843]
                            name: BaselineAssembler [2814,2831]
                            operator: :: [2831,2833]
                            name: JumpTarget [2833,2843]
                        parameter_list [2843,2845]
                        block [2846,2866]
                            block_content [2848,2864]
                                function_decl [2848,2864]
                                    type [2848,2850]
                                        name: __ [2848,2850]
                                    name: JumpTarget [2851,2861]
                                    parameter_list [2861,2863]
                    function [2868,2957]
                        type [2868,2872]
                            name: void [2868,2872]
                        name [2873,2896]
                            name: BaselineAssembler [2873,2890]
                            operator: :: [2890,2892]
                            name: Jump [2892,2896]
                        parameter_list [2896,2937]
                            parameter [2897,2910]
                                decl [2897,2910]
                                    type [2897,2910]
                                        name: Label [2897,2902]
                                        modifier: * [2902,2903]
                                    name: target [2904,2910]
                            parameter [2912,2936]
                                decl [2912,2936]
                                    type [2912,2936]
                                        name [2912,2927]
                                            name: Label [2912,2917]
                                            operator: :: [2917,2919]
                                            name: Distance [2919,2927]
                                    name: distance [2928,2936]
                        block [2938,2957]
                            block_content [2942,2955]
                                decl_stmt [2942,2955]
                                    decl [2942,2954]
                                        type [2942,2944]
                                            name: __ [2942,2944]
                                        name: B [2945,2946]
                                        argument_list [2946,2954]
                                            argument [2947,2953]
                                                expr [2947,2953]
                                                    name: target [2947,2953]
                    function [2958,3135]
                        type [2958,2962]
                            name: void [2958,2962]
                        name [2963,2992]
                            name: BaselineAssembler [2963,2980]
                            operator: :: [2980,2982]
                            name: JumpIfRoot [2982,2992]
                        parameter_list [2992,3092]
                            parameter [2993,3007]
                                decl [2993,3007]
                                    type [2993,3007]
                                        name: Register [2993,3001]
                                    name: value [3002,3007]
                            parameter [3009,3024]
                                decl [3009,3024]
                                    type [3009,3024]
                                        name: RootIndex [3009,3018]
                                    name: index [3019,3024]
                            parameter [3061,3074]
                                decl [3061,3074]
                                    type [3061,3074]
                                        name: Label [3061,3066]
                                        modifier: * [3066,3067]
                                    name: target [3068,3074]
                            parameter [3076,3091]
                                decl [3076,3091]
                                    type [3076,3091]
                                        name [3076,3091]
                                            name: Label [3076,3081]
                                            operator: :: [3081,3083]
                                            name: Distance [3083,3091]
                        block [3093,3135]
                            block_content [3097,3133]
                                decl_stmt [3097,3133]
                                    decl [3097,3132]
                                        type [3097,3099]
                                            name: __ [3097,3099]
                                        name: JumpIfRoot [3100,3110]
                                        argument_list [3110,3132]
                                            argument [3111,3116]
                                                expr [3111,3116]
                                                    name: value [3111,3116]
                                            argument [3118,3123]
                                                expr [3118,3123]
                                                    name: index [3118,3123]
                                            argument [3125,3131]
                                                expr [3125,3131]
                                                    name: target [3125,3131]
                    function [3136,3322]
                        type [3136,3140]
                            name: void [3136,3140]
                        name [3141,3173]
                            name: BaselineAssembler [3141,3158]
                            operator: :: [3158,3160]
                            name: JumpIfNotRoot [3160,3173]
                        parameter_list [3173,3276]
                            parameter [3174,3188]
                                decl [3174,3188]
                                    type [3174,3188]
                                        name: Register [3174,3182]
                                    name: value [3183,3188]
                            parameter [3190,3205]
                                decl [3190,3205]
                                    type [3190,3205]
                                        name: RootIndex [3190,3199]
                                    name: index [3200,3205]
                            parameter [3245,3258]
                                decl [3245,3258]
                                    type [3245,3258]
                                        name: Label [3245,3250]
                                        modifier: * [3250,3251]
                                    name: target [3252,3258]
                            parameter [3260,3275]
                                decl [3260,3275]
                                    type [3260,3275]
                                        name [3260,3275]
                                            name: Label [3260,3265]
                                            operator: :: [3265,3267]
                                            name: Distance [3267,3275]
                        block [3277,3322]
                            block_content [3281,3320]
                                decl_stmt [3281,3320]
                                    decl [3281,3319]
                                        type [3281,3283]
                                            name: __ [3281,3283]
                                        name: JumpIfNotRoot [3284,3297]
                                        argument_list [3297,3319]
                                            argument [3298,3303]
                                                expr [3298,3303]
                                                    name: value [3298,3303]
                                            argument [3305,3310]
                                                expr [3305,3310]
                                                    name: index [3305,3310]
                                            argument [3312,3318]
                                                expr [3312,3318]
                                                    name: target [3312,3318]
                    function [3323,3473]
                        type [3323,3327]
                            name: void [3323,3327]
                        name [3328,3356]
                            name: BaselineAssembler [3328,3345]
                            operator: :: [3345,3347]
                            name: JumpIfSmi [3347,3356]
                        parameter_list [3356,3438]
                            parameter [3357,3371]
                                decl [3357,3371]
                                    type [3357,3371]
                                        name: Register [3357,3365]
                                    name: value [3366,3371]
                            parameter [3373,3386]
                                decl [3373,3386]
                                    type [3373,3386]
                                        name: Label [3373,3378]
                                        modifier: * [3378,3379]
                                    name: target [3380,3386]
                            parameter [3422,3437]
                                decl [3422,3437]
                                    type [3422,3437]
                                        name [3422,3437]
                                            name: Label [3422,3427]
                                            operator: :: [3427,3429]
                                            name: Distance [3429,3437]
                        block [3439,3473]
                            block_content [3443,3471]
                                decl_stmt [3443,3471]
                                    decl [3443,3470]
                                        type [3443,3445]
                                            name: __ [3443,3445]
                                        name: JumpIfSmi [3446,3455]
                                        argument_list [3455,3470]
                                            argument [3456,3461]
                                                expr [3456,3461]
                                                    name: value [3456,3461]
                                            argument [3463,3469]
                                                expr [3463,3469]
                                                    name: target [3463,3469]
                    function [3474,3633]
                        type [3474,3478]
                            name: void [3474,3478]
                        name [3479,3510]
                            name: BaselineAssembler [3479,3496]
                            operator: :: [3496,3498]
                            name: JumpIfNotSmi [3498,3510]
                        parameter_list [3510,3595]
                            parameter [3511,3525]
                                decl [3511,3525]
                                    type [3511,3525]
                                        name: Register [3511,3519]
                                    name: value [3520,3525]
                            parameter [3527,3540]
                                decl [3527,3540]
                                    type [3527,3540]
                                        name: Label [3527,3532]
                                        modifier: * [3532,3533]
                                    name: target [3534,3540]
                            parameter [3579,3594]
                                decl [3579,3594]
                                    type [3579,3594]
                                        name [3579,3594]
                                            name: Label [3579,3584]
                                            operator: :: [3584,3586]
                                            name: Distance [3586,3594]
                        block [3596,3633]
                            block_content [3600,3631]
                                decl_stmt [3600,3631]
                                    decl [3600,3630]
                                        type [3600,3602]
                                            name: __ [3600,3602]
                                        name: JumpIfNotSmi [3603,3615]
                                        argument_list [3615,3630]
                                            argument [3616,3621]
                                                expr [3616,3621]
                                                    name: value [3616,3621]
                                            argument [3623,3629]
                                                expr [3623,3629]
                                                    name: target [3623,3629]
                    function [3635,3961]
                        type [3635,3639]
                            name: void [3635,3639]
                        name [3640,3670]
                            name: BaselineAssembler [3640,3657]
                            operator: :: [3657,3659]
                            name: CallBuiltin [3659,3670]
                        parameter_list [3670,3687]
                            parameter [3671,3686]
                                decl [3671,3686]
                                    type [3671,3678]
                                        name: Builtin [3671,3678]
                                    name: builtin [3679,3686]
                        block [3688,3961]
                            block_content [3692,3959]
                                if_stmt [3692,3959]
                                    if [3692,3803]
                                        condition [3695,3734]
                                            expr [3696,3733]
                                                call [3696,3702]
                                                    name: masm [3696,3700]
                                                    argument_list [3700,3702]
                                                operator: -> [3702,3704]
                                                call [3704,3713]
                                                    name: options [3704,3711]
                                                    argument_list [3711,3713]
                                                operator: . [3713,3714]
                                                name: short_builtin_calls [3714,3733]
                                        block [3735,3803]
                                            block_content [3775,3799]
                                                comment: // Generate pc-relative call. [3741,3770]
                                                decl_stmt [3775,3799]
                                                    decl [3775,3798]
                                                        type [3775,3777]
                                                            name: __ [3775,3777]
                                                        name: CallBuiltin [3778,3789]
                                                        argument_list [3789,3798]
                                                            argument [3790,3797]
                                                                expr [3790,3797]
                                                                    name: builtin [3790,3797]
                                    else [3804,3959]
                                        block [3809,3959]
                                            block_content [3815,3955]
                                                decl_stmt [3815,3848]
                                                    decl [3815,3847]
                                                        type [3815,3835]
                                                            name: ScratchRegisterScope [3815,3835]
                                                        name: temps [3836,3841]
                                                        argument_list [3841,3847]
                                                            argument [3842,3846]
                                                                expr [3842,3846]
                                                                    name: this [3842,3846]
                                                decl_stmt [3853,3892]
                                                    decl [3853,3891]
                                                        type [3853,3861]
                                                            name: Register [3853,3861]
                                                        name: temp [3862,3866]
                                                        init [3867,3891]
                                                            expr [3869,3891]
                                                                call [3869,3891]
                                                                    name [3869,3889]
                                                                        name: temps [3869,3874]
                                                                        operator: . [3874,3875]
                                                                        name: AcquireScratch [3875,3889]
                                                                    argument_list [3889,3891]
                                                decl_stmt [3897,3936]
                                                    decl [3897,3935]
                                                        type [3897,3899]
                                                            name: __ [3897,3899]
                                                        name: LoadEntryFromBuiltin [3900,3920]
                                                        argument_list [3920,3935]
                                                            argument [3921,3928]
                                                                expr [3921,3928]
                                                                    name: builtin [3921,3928]
                                                            argument [3930,3934]
                                                                expr [3930,3934]
                                                                    name: temp [3930,3934]
                                                decl_stmt [3941,3955]
                                                    decl [3941,3954]
                                                        type [3941,3943]
                                                            name: __ [3941,3943]
                                                        name: Call [3944,3948]
                                                        argument_list [3948,3954]
                                                            argument [3949,3953]
                                                                expr [3949,3953]
                                                                    name: temp [3949,3953]
                    function [3963,4993]
                        type [3963,3967]
                            name: void [3963,3967]
                        name [3968,4002]
                            name: BaselineAssembler [3968,3985]
                            operator: :: [3985,3987]
                            name: TailCallBuiltin [3987,4002]
                        parameter_list [4002,4019]
                            parameter [4003,4018]
                                decl [4003,4018]
                                    type [4003,4010]
                                        name: Builtin [4003,4010]
                                    name: builtin [4011,4018]
                        block [4020,4993]
                            block_content [4024,4991]
                                if_stmt [4024,4991]
                                    if [4024,4139]
                                        condition [4027,4066]
                                            expr [4028,4065]
                                                call [4028,4034]
                                                    name: masm [4028,4032]
                                                    argument_list [4032,4034]
                                                operator: -> [4034,4036]
                                                call [4036,4045]
                                                    name: options [4036,4043]
                                                    argument_list [4043,4045]
                                                operator: . [4045,4046]
                                                name: short_builtin_calls [4046,4065]
                                        block [4067,4139]
                                            block_content [4107,4135]
                                                comment: // Generate pc-relative call. [4073,4102]
                                                decl_stmt [4107,4135]
                                                    decl [4107,4134]
                                                        type [4107,4109]
                                                            name: __ [4107,4109]
                                                        name: TailCallBuiltin [4110,4125]
                                                        argument_list [4125,4134]
                                                            argument [4126,4133]
                                                                expr [4126,4133]
                                                                    name: builtin [4126,4133]
                                    else [4140,4991]
                                        block [4145,4991]
                                            block_content [4771,4987]
                                                comment: // The control flow integrity (CFI) feature allows us to "sign" code entry [4151,4225]
                                                comment: // points as a target for calls, jumps or both. Arm64 has special [4230,4295]
                                                comment: // instructions for this purpose, so-called "landing pads" (see [4300,4363]
                                                comment: // TurboAssembler::CallTarget(), TurboAssembler::JumpTarget() and [4368,4433]
                                                comment: // TurboAssembler::JumpOrCallTarget()). Currently, we generate "Call" [4438,4507]
                                                comment: // landing pads for CPP builtins. In order to allow tail calling to those [4512,4585]
                                                comment: // builtins we have to use a workaround. [4590,4630]
                                                comment: // x17 is used to allow using "Call" (i.e. `bti c`) rather than "Jump" (i.e. [4635,4711]
                                                comment: // `bti j`) landing pads for the tail-called code. [4716,4766]
                                                decl_stmt [4771,4791]
                                                    decl [4771,4790]
                                                        type [4771,4779]
                                                            name: Register [4771,4779]
                                                        name: temp [4780,4784]
                                                        init [4785,4790]
                                                            expr [4787,4790]
                                                                name: x17 [4787,4790]
                                                comment: // Make sure we're don't use this register as a temporary. [4797,4855]
                                                decl_stmt [4860,4898]
                                                    decl [4860,4897]
                                                        type [4860,4883]
                                                            name: UseScratchRegisterScope [4860,4883]
                                                        name: temps [4884,4889]
                                                        argument_list [4889,4897]
                                                            argument [4890,4896]
                                                                expr [4890,4896]
                                                                    call [4890,4896]
                                                                        name: masm [4890,4894]
                                                                        argument_list [4894,4896]
                                                expr_stmt [4903,4923]
                                                    expr [4903,4922]
                                                        call [4903,4922]
                                                            name [4903,4916]
                                                                name: temps [4903,4908]
                                                                operator: . [4908,4909]
                                                                name: Exclude [4909,4916]
                                                            argument_list [4916,4922]
                                                                argument [4917,4921]
                                                                    expr [4917,4921]
                                                                        name: temp [4917,4921]
                                                decl_stmt [4929,4968]
                                                    decl [4929,4967]
                                                        type [4929,4931]
                                                            name: __ [4929,4931]
                                                        name: LoadEntryFromBuiltin [4932,4952]
                                                        argument_list [4952,4967]
                                                            argument [4953,4960]
                                                                expr [4953,4960]
                                                                    name: builtin [4953,4960]
                                                            argument [4962,4966]
                                                                expr [4962,4966]
                                                                    name: temp [4962,4966]
                                                decl_stmt [4973,4987]
                                                    decl [4973,4986]
                                                        type [4973,4975]
                                                            name: __ [4973,4975]
                                                        name: Jump [4976,4980]
                                                        argument_list [4980,4986]
                                                            argument [4981,4985]
                                                                expr [4981,4985]
                                                                    name: temp [4981,4985]
                    function [4995,5217]
                        type [4995,4999]
                            name: void [4995,4999]
                        name [5000,5032]
                            name: BaselineAssembler [5000,5017]
                            operator: :: [5017,5019]
                            name: TestAndBranch [5019,5032]
                        parameter_list [5032,5142]
                            parameter [5033,5047]
                                decl [5033,5047]
                                    type [5033,5047]
                                        name: Register [5033,5041]
                                    name: value [5042,5047]
                            parameter [5049,5057]
                                decl [5049,5057]
                                    type [5049,5057]
                                        name: int [5049,5052]
                                    name: mask [5053,5057]
                            parameter [5059,5071]
                                decl [5059,5071]
                                    type [5059,5071]
                                        name: Condition [5059,5068]
                                    name: cc [5069,5071]
                            parameter [5111,5124]
                                decl [5111,5124]
                                    type [5111,5124]
                                        name: Label [5111,5116]
                                        modifier: * [5116,5117]
                                    name: target [5118,5124]
                            parameter [5126,5141]
                                decl [5126,5141]
                                    type [5126,5141]
                                        name [5126,5141]
                                            name: Label [5126,5131]
                                            operator: :: [5131,5133]
                                            name: Distance [5133,5141]
                        block [5143,5217]
                            block_content [5147,5215]
                                decl_stmt [5147,5178]
                                    decl [5147,5177]
                                        type [5147,5149]
                                            name: __ [5147,5149]
                                        name: Tst [5150,5153]
                                        argument_list [5153,5177]
                                            argument [5154,5159]
                                                expr [5154,5159]
                                                    name: value [5154,5159]
                                            argument [5161,5176]
                                                expr [5161,5176]
                                                    call [5161,5176]
                                                        name: Immediate [5161,5170]
                                                        argument_list [5170,5176]
                                                            argument [5171,5175]
                                                                expr [5171,5175]
                                                                    name: mask [5171,5175]
                                decl_stmt [5181,5215]
                                    decl [5181,5214]
                                        type [5181,5183]
                                            name: __ [5181,5183]
                                        name: B [5184,5185]
                                        argument_list [5185,5214]
                                            argument [5186,5205]
                                                expr [5186,5205]
                                                    call [5186,5205]
                                                        name: AsMasmCondition [5186,5201]
                                                        argument_list [5201,5205]
                                                            argument [5202,5204]
                                                                expr [5202,5204]
                                                                    name: cc [5202,5204]
                                            argument [5207,5213]
                                                expr [5207,5213]
                                                    name: target [5207,5213]
                    function [5219,5426]
                        type [5219,5223]
                            name: void [5219,5223]
                        name [5224,5249]
                            name: BaselineAssembler [5224,5241]
                            operator: :: [5241,5243]
                            name: JumpIf [5243,5249]
                        parameter_list [5249,5360]
                            parameter [5250,5262]
                                decl [5250,5262]
                                    type [5250,5262]
                                        name: Condition [5250,5259]
                                    name: cc [5260,5262]
                            parameter [5264,5276]
                                decl [5264,5276]
                                    type [5264,5276]
                                        name: Register [5264,5272]
                                    name: lhs [5273,5276]
                            parameter [5278,5296]
                                decl [5278,5296]
                                    type [5278,5296]
                                        specifier: const [5278,5283]
                                        name: Operand [5284,5291]
                                        modifier: & [5291,5292]
                                    name: rhs [5293,5296]
                            parameter [5329,5342]
                                decl [5329,5342]
                                    type [5329,5342]
                                        name: Label [5329,5334]
                                        modifier: * [5334,5335]
                                    name: target [5336,5342]
                            parameter [5344,5359]
                                decl [5344,5359]
                                    type [5344,5359]
                                        name [5344,5359]
                                            name: Label [5344,5349]
                                            operator: :: [5349,5351]
                                            name: Distance [5351,5359]
                        block [5361,5426]
                            block_content [5365,5424]
                                decl_stmt [5365,5424]
                                    decl [5365,5423]
                                        type [5365,5367]
                                            name: __ [5365,5367]
                                        name: CompareAndBranch [5368,5384]
                                        argument_list [5384,5423]
                                            argument [5385,5388]
                                                expr [5385,5388]
                                                    name: lhs [5385,5388]
                                            argument [5390,5393]
                                                expr [5390,5393]
                                                    name: rhs [5390,5393]
                                            argument [5395,5414]
                                                expr [5395,5414]
                                                    call [5395,5414]
                                                        name: AsMasmCondition [5395,5410]
                                                        argument_list [5410,5414]
                                                            argument [5411,5413]
                                                                expr [5411,5413]
                                                                    name: cc [5411,5413]
                                            argument [5416,5422]
                                                expr [5416,5422]
                                                    name: target [5416,5422]
                    function [5427,5912]
                        type [5427,5431]
                            name: void [5427,5431]
                        name [5432,5467]
                            name: BaselineAssembler [5432,5449]
                            operator: :: [5449,5451]
                            name: JumpIfObjectType [5451,5467]
                        parameter_list [5467,5695]
                            parameter [5468,5480]
                                decl [5468,5480]
                                    type [5468,5480]
                                        name: Condition [5468,5477]
                                    name: cc [5478,5480]
                            parameter [5482,5497]
                                decl [5482,5497]
                                    type [5482,5497]
                                        name: Register [5482,5490]
                                    name: object [5491,5497]
                            parameter [5540,5566]
                                decl [5540,5566]
                                    type [5540,5566]
                                        name: InstanceType [5540,5552]
                                    name: instance_type [5553,5566]
                            parameter [5609,5621]
                                decl [5609,5621]
                                    type [5609,5621]
                                        name: Register [5609,5617]
                                    name: map [5618,5621]
                            parameter [5623,5636]
                                decl [5623,5636]
                                    type [5623,5636]
                                        name: Label [5623,5628]
                                        modifier: * [5628,5629]
                                    name: target [5630,5636]
                            parameter [5679,5694]
                                decl [5679,5694]
                                    type [5679,5694]
                                        name [5679,5694]
                                            name: Label [5679,5684]
                                            operator: :: [5684,5686]
                                            name: Distance [5686,5694]
                        block [5696,5912]
                            block_content [5700,5910]
                                decl_stmt [5700,5733]
                                    decl [5700,5732]
                                        type [5700,5720]
                                            name: ScratchRegisterScope [5700,5720]
                                        name: temps [5721,5726]
                                        argument_list [5726,5732]
                                            argument [5727,5731]
                                                expr [5727,5731]
                                                    name: this [5727,5731]
                                decl_stmt [5736,5775]
                                    decl [5736,5774]
                                        type [5736,5744]
                                            name: Register [5736,5744]
                                        name: type [5745,5749]
                                        init [5750,5774]
                                            expr [5752,5774]
                                                call [5752,5774]
                                                    name [5752,5772]
                                                        name: temps [5752,5757]
                                                        operator: . [5757,5758]
                                                        name: AcquireScratch [5758,5772]
                                                    argument_list [5772,5774]
                                decl_stmt [5778,5802]
                                    decl [5778,5801]
                                        type [5778,5780]
                                            name: __ [5778,5780]
                                        name: LoadMap [5781,5788]
                                        argument_list [5788,5801]
                                            argument [5789,5792]
                                                expr [5789,5792]
                                                    name: map [5789,5792]
                                            argument [5794,5800]
                                                expr [5794,5800]
                                                    name: object [5794,5800]
                                decl_stmt [5805,5867]
                                    decl [5805,5866]
                                        type [5805,5807]
                                            name: __ [5805,5807]
                                        name: Ldrh [5808,5812]
                                        argument_list [5812,5866]
                                            argument [5813,5817]
                                                expr [5813,5817]
                                                    name: type [5813,5817]
                                            argument [5819,5865]
                                                expr [5819,5865]
                                                    call [5819,5865]
                                                        name: FieldMemOperand [5819,5834]
                                                        argument_list [5834,5865]
                                                            argument [5835,5838]
                                                                expr [5835,5838]
                                                                    name: map [5835,5838]
                                                            argument [5840,5864]
                                                                expr [5840,5864]
                                                                    name [5840,5864]
                                                                        name: Map [5840,5843]
                                                                        operator: :: [5843,5845]
                                                                        name: kInstanceTypeOffset [5845,5864]
                                expr_stmt [5870,5910]
                                    expr [5870,5909]
                                        call [5870,5909]
                                            name: JumpIf [5870,5876]
                                            argument_list [5876,5909]
                                                argument [5877,5879]
                                                    expr [5877,5879]
                                                        name: cc [5877,5879]
                                                argument [5881,5885]
                                                    expr [5881,5885]
                                                        name: type [5881,5885]
                                                argument [5887,5900]
                                                    expr [5887,5900]
                                                        name: instance_type [5887,5900]
                                                argument [5902,5908]
                                                    expr [5902,5908]
                                                        name: target [5902,5908]
                    function [5913,6477]
                        type [5913,5917]
                            name: void [5913,5917]
                        name [5918,5955]
                            name: BaselineAssembler [5918,5935]
                            operator: :: [5935,5937]
                            name: JumpIfInstanceType [5937,5955]
                        parameter_list [5955,6129]
                            parameter [5956,5968]
                                decl [5956,5968]
                                    type [5956,5968]
                                        name: Condition [5956,5965]
                                    name: cc [5966,5968]
                            parameter [5970,5982]
                                decl [5970,5982]
                                    type [5970,5982]
                                        name: Register [5970,5978]
                                    name: map [5979,5982]
                            parameter [6027,6053]
                                decl [6027,6053]
                                    type [6027,6053]
                                        name: InstanceType [6027,6039]
                                    name: instance_type [6040,6053]
                            parameter [6098,6111]
                                decl [6098,6111]
                                    type [6098,6111]
                                        name: Label [6098,6103]
                                        modifier: * [6103,6104]
                                    name: target [6105,6111]
                            parameter [6113,6128]
                                decl [6113,6128]
                                    type [6113,6128]
                                        name [6113,6128]
                                            name: Label [6113,6118]
                                            operator: :: [6118,6120]
                                            name: Distance [6120,6128]
                        block [6130,6477]
                            block_content [6134,6475]
                                decl_stmt [6134,6167]
                                    decl [6134,6166]
                                        type [6134,6154]
                                            name: ScratchRegisterScope [6134,6154]
                                        name: temps [6155,6160]
                                        argument_list [6160,6166]
                                            argument [6161,6165]
                                                expr [6161,6165]
                                                    name: this [6161,6165]
                                decl_stmt [6170,6209]
                                    decl [6170,6208]
                                        type [6170,6178]
                                            name: Register [6170,6178]
                                        name: type [6179,6183]
                                        init [6184,6208]
                                            expr [6186,6208]
                                                call [6186,6208]
                                                    name [6186,6206]
                                                        name: temps [6186,6191]
                                                        operator: . [6191,6192]
                                                        name: AcquireScratch [6192,6206]
                                                    argument_list [6206,6208]
                                if_stmt [6212,6367]
                                    if [6212,6367]
                                        condition [6215,6232]
                                            expr [6216,6231]
                                                name: FLAG_debug_code [6216,6231]
                                        block [6233,6367]
                                            block_content [6239,6363]
                                                decl_stmt [6239,6260]
                                                    decl [6239,6259]
                                                        type [6239,6241]
                                                            name: __ [6239,6241]
                                                        name: AssertNotSmi [6242,6254]
                                                        argument_list [6254,6259]
                                                            argument [6255,6258]
                                                                expr [6255,6258]
                                                                    name: map [6255,6258]
                                                decl_stmt [6265,6313]
                                                    decl [6265,6312]
                                                        type [6265,6267]
                                                            name: __ [6265,6267]
                                                        name: CompareObjectType [6268,6285]
                                                        argument_list [6285,6312]
                                                            argument [6286,6289]
                                                                expr [6286,6289]
                                                                    name: map [6286,6289]
                                                            argument [6291,6295]
                                                                expr [6291,6295]
                                                                    name: type [6291,6295]
                                                            argument [6297,6301]
                                                                expr [6297,6301]
                                                                    name: type [6297,6301]
                                                            argument [6303,6311]
                                                                expr [6303,6311]
                                                                    name: MAP_TYPE [6303,6311]
                                                decl_stmt [6318,6363]
                                                    decl [6318,6362]
                                                        type [6318,6320]
                                                            name: __ [6318,6320]
                                                        name: Assert [6321,6327]
                                                        argument_list [6327,6362]
                                                            argument [6328,6330]
                                                                expr [6328,6330]
                                                                    name: eq [6328,6330]
                                                            argument [6332,6361]
                                                                expr [6332,6361]
                                                                    name [6332,6361]
                                                                        name: AbortReason [6332,6343]
                                                                        operator: :: [6343,6345]
                                                                        name: kUnexpectedValue [6345,6361]
                                decl_stmt [6370,6432]
                                    decl [6370,6431]
                                        type [6370,6372]
                                            name: __ [6370,6372]
                                        name: Ldrh [6373,6377]
                                        argument_list [6377,6431]
                                            argument [6378,6382]
                                                expr [6378,6382]
                                                    name: type [6378,6382]
                                            argument [6384,6430]
                                                expr [6384,6430]
                                                    call [6384,6430]
                                                        name: FieldMemOperand [6384,6399]
                                                        argument_list [6399,6430]
                                                            argument [6400,6403]
                                                                expr [6400,6403]
                                                                    name: map [6400,6403]
                                                            argument [6405,6429]
                                                                expr [6405,6429]
                                                                    name [6405,6429]
                                                                        name: Map [6405,6408]
                                                                        operator: :: [6408,6410]
                                                                        name: kInstanceTypeOffset [6410,6429]
                                expr_stmt [6435,6475]
                                    expr [6435,6474]
                                        call [6435,6474]
                                            name: JumpIf [6435,6441]
                                            argument_list [6441,6474]
                                                argument [6442,6444]
                                                    expr [6442,6444]
                                                        name: cc [6442,6444]
                                                argument [6446,6450]
                                                    expr [6446,6450]
                                                        name: type [6446,6450]
                                                argument [6452,6465]
                                                    expr [6452,6465]
                                                        name: instance_type [6452,6465]
                                                argument [6467,6473]
                                                    expr [6467,6473]
                                                        name: target [6467,6473]
                    function [6478,6812]
                        type [6478,6482]
                            name: void [6478,6482]
                        name [6483,6515]
                            name: BaselineAssembler [6483,6500]
                            operator: :: [6500,6502]
                            name: JumpIfPointer [6502,6515]
                        parameter_list [6515,6673]
                            parameter [6516,6528]
                                decl [6516,6528]
                                    type [6516,6528]
                                        name: Condition [6516,6525]
                                    name: cc [6526,6528]
                            parameter [6530,6544]
                                decl [6530,6544]
                                    type [6530,6544]
                                        name: Register [6530,6538]
                                    name: value [6539,6544]
                            parameter [6584,6602]
                                decl [6584,6602]
                                    type [6584,6602]
                                        name: MemOperand [6584,6594]
                                    name: operand [6595,6602]
                            parameter [6604,6617]
                                decl [6604,6617]
                                    type [6604,6617]
                                        name: Label [6604,6609]
                                        modifier: * [6609,6610]
                                    name: target [6611,6617]
                            parameter [6657,6672]
                                decl [6657,6672]
                                    type [6657,6672]
                                        name [6657,6672]
                                            name: Label [6657,6662]
                                            operator: :: [6662,6664]
                                            name: Distance [6664,6672]
                        block [6674,6812]
                            block_content [6678,6810]
                                decl_stmt [6678,6711]
                                    decl [6678,6710]
                                        type [6678,6698]
                                            name: ScratchRegisterScope [6678,6698]
                                        name: temps [6699,6704]
                                        argument_list [6704,6710]
                                            argument [6705,6709]
                                                expr [6705,6709]
                                                    name: this [6705,6709]
                                decl_stmt [6714,6752]
                                    decl [6714,6751]
                                        type [6714,6722]
                                            name: Register [6714,6722]
                                        name: tmp [6723,6726]
                                        init [6727,6751]
                                            expr [6729,6751]
                                                call [6729,6751]
                                                    name [6729,6749]
                                                        name: temps [6729,6734]
                                                        operator: . [6734,6735]
                                                        name: AcquireScratch [6735,6749]
                                                    argument_list [6749,6751]
                                decl_stmt [6755,6776]
                                    decl [6755,6775]
                                        type [6755,6757]
                                            name: __ [6755,6757]
                                        name: Ldr [6758,6761]
                                        argument_list [6761,6775]
                                            argument [6762,6765]
                                                expr [6762,6765]
                                                    name: tmp [6762,6765]
                                            argument [6767,6774]
                                                expr [6767,6774]
                                                    name: operand [6767,6774]
                                expr_stmt [6779,6810]
                                    expr [6779,6809]
                                        call [6779,6809]
                                            name: JumpIf [6779,6785]
                                            argument_list [6785,6809]
                                                argument [6786,6788]
                                                    expr [6786,6788]
                                                        name: cc [6786,6788]
                                                argument [6790,6795]
                                                    expr [6790,6795]
                                                        name: value [6790,6795]
                                                argument [6797,6800]
                                                    expr [6797,6800]
                                                        name: tmp [6797,6800]
                                                argument [6802,6808]
                                                    expr [6802,6808]
                                                        name: target [6802,6808]
                    function [6813,7057]
                        type [6813,6817]
                            name: void [6813,6817]
                        name [6818,6846]
                            name: BaselineAssembler [6818,6835]
                            operator: :: [6835,6837]
                            name: JumpIfSmi [6837,6846]
                        parameter_list [6846,6960]
                            parameter [6847,6859]
                                decl [6847,6859]
                                    type [6847,6859]
                                        name: Condition [6847,6856]
                                    name: cc [6857,6859]
                            parameter [6861,6875]
                                decl [6861,6875]
                                    type [6861,6875]
                                        name: Register [6861,6869]
                                    name: value [6870,6875]
                            parameter [6877,6884]
                                decl [6877,6884]
                                    type [6877,6884]
                                        name: Smi [6877,6880]
                                    name: smi [6881,6884]
                            parameter [6920,6933]
                                decl [6920,6933]
                                    type [6920,6933]
                                        name: Label [6920,6925]
                                        modifier: * [6925,6926]
                                    name: target [6927,6933]
                            parameter [6935,6959]
                                decl [6935,6959]
                                    type [6935,6959]
                                        name [6935,6950]
                                            name: Label [6935,6940]
                                            operator: :: [6940,6942]
                                            name: Distance [6942,6950]
                                    name: distance [6951,6959]
                        block [6961,7057]
                            block_content [6965,7055]
                                decl_stmt [6965,6985]
                                    decl [6965,6984]
                                        type [6965,6967]
                                            name: __ [6965,6967]
                                        name: AssertSmi [6968,6977]
                                        argument_list [6977,6984]
                                            argument [6978,6983]
                                                expr [6978,6983]
                                                    name: value [6978,6983]
                                decl_stmt [6988,7055]
                                    decl [6988,7054]
                                        type [6988,6990]
                                            name: __ [6988,6990]
                                        name: CompareTaggedAndBranch [6991,7013]
                                        argument_list [7013,7054]
                                            argument [7014,7019]
                                                expr [7014,7019]
                                                    name: value [7014,7019]
                                            argument [7021,7024]
                                                expr [7021,7024]
                                                    name: smi [7021,7024]
                                            argument [7026,7045]
                                                expr [7026,7045]
                                                    call [7026,7045]
                                                        name: AsMasmCondition [7026,7041]
                                                        argument_list [7041,7045]
                                                            argument [7042,7044]
                                                                expr [7042,7044]
                                                                    name: cc [7042,7044]
                                            argument [7047,7053]
                                                expr [7047,7053]
                                                    name: target [7047,7053]
                    function [7059,7314]
                        type [7059,7063]
                            name: void [7059,7063]
                        name [7064,7092]
                            name: BaselineAssembler [7064,7081]
                            operator: :: [7081,7083]
                            name: JumpIfSmi [7083,7092]
                        parameter_list [7092,7200]
                            parameter [7093,7105]
                                decl [7093,7105]
                                    type [7093,7105]
                                        name: Condition [7093,7102]
                                    name: cc [7103,7105]
                            parameter [7107,7119]
                                decl [7107,7119]
                                    type [7107,7119]
                                        name: Register [7107,7115]
                                    name: lhs [7116,7119]
                            parameter [7121,7133]
                                decl [7121,7133]
                                    type [7121,7133]
                                        name: Register [7121,7129]
                                    name: rhs [7130,7133]
                            parameter [7169,7182]
                                decl [7169,7182]
                                    type [7169,7182]
                                        name: Label [7169,7174]
                                        modifier: * [7174,7175]
                                    name: target [7176,7182]
                            parameter [7184,7199]
                                decl [7184,7199]
                                    type [7184,7199]
                                        name [7184,7199]
                                            name: Label [7184,7189]
                                            operator: :: [7189,7191]
                                            name: Distance [7191,7199]
                        block [7201,7314]
                            block_content [7205,7312]
                                decl_stmt [7205,7223]
                                    decl [7205,7222]
                                        type [7205,7207]
                                            name: __ [7205,7207]
                                        name: AssertSmi [7208,7217]
                                        argument_list [7217,7222]
                                            argument [7218,7221]
                                                expr [7218,7221]
                                                    name: lhs [7218,7221]
                                decl_stmt [7226,7244]
                                    decl [7226,7243]
                                        type [7226,7228]
                                            name: __ [7226,7228]
                                        name: AssertSmi [7229,7238]
                                        argument_list [7238,7243]
                                            argument [7239,7242]
                                                expr [7239,7242]
                                                    name: rhs [7239,7242]
                                decl_stmt [7247,7312]
                                    decl [7247,7311]
                                        type [7247,7249]
                                            name: __ [7247,7249]
                                        name: CompareTaggedAndBranch [7250,7272]
                                        argument_list [7272,7311]
                                            argument [7273,7276]
                                                expr [7273,7276]
                                                    name: lhs [7273,7276]
                                            argument [7278,7281]
                                                expr [7278,7281]
                                                    name: rhs [7278,7281]
                                            argument [7283,7302]
                                                expr [7283,7302]
                                                    call [7283,7302]
                                                        name: AsMasmCondition [7283,7298]
                                                        argument_list [7298,7302]
                                                            argument [7299,7301]
                                                                expr [7299,7301]
                                                                    name: cc [7299,7301]
                                            argument [7304,7310]
                                                expr [7304,7310]
                                                    name: target [7304,7310]
                    function [7315,7682]
                        type [7315,7319]
                            name: void [7315,7319]
                        name [7320,7351]
                            name: BaselineAssembler [7320,7337]
                            operator: :: [7337,7339]
                            name: JumpIfTagged [7339,7351]
                        parameter_list [7351,7507]
                            parameter [7352,7364]
                                decl [7352,7364]
                                    type [7352,7364]
                                        name: Condition [7352,7361]
                                    name: cc [7362,7364]
                            parameter [7366,7380]
                                decl [7366,7380]
                                    type [7366,7380]
                                        name: Register [7366,7374]
                                    name: value [7375,7380]
                            parameter [7419,7437]
                                decl [7419,7437]
                                    type [7419,7437]
                                        name: MemOperand [7419,7429]
                                    name: operand [7430,7437]
                            parameter [7439,7452]
                                decl [7439,7452]
                                    type [7439,7452]
                                        name: Label [7439,7444]
                                        modifier: * [7444,7445]
                                    name: target [7446,7452]
                            parameter [7491,7506]
                                decl [7491,7506]
                                    type [7491,7506]
                                        name [7491,7506]
                                            name: Label [7491,7496]
                                            operator: :: [7496,7498]
                                            name: Distance [7498,7506]
                        block [7508,7682]
                            block_content [7512,7680]
                                decl_stmt [7512,7545]
                                    decl [7512,7544]
                                        type [7512,7532]
                                            name: ScratchRegisterScope [7512,7532]
                                        name: temps [7533,7538]
                                        argument_list [7538,7544]
                                            argument [7539,7543]
                                                expr [7539,7543]
                                                    name: this [7539,7543]
                                decl_stmt [7548,7586]
                                    decl [7548,7585]
                                        type [7548,7556]
                                            name: Register [7548,7556]
                                        name: tmp [7557,7560]
                                        init [7561,7585]
                                            expr [7563,7585]
                                                call [7563,7585]
                                                    name [7563,7583]
                                                        name: temps [7563,7568]
                                                        operator: . [7568,7569]
                                                        name: AcquireScratch [7569,7583]
                                                    argument_list [7583,7585]
                                decl_stmt [7589,7610]
                                    decl [7589,7609]
                                        type [7589,7591]
                                            name: __ [7589,7591]
                                        name: Ldr [7592,7595]
                                        argument_list [7595,7609]
                                            argument [7596,7599]
                                                expr [7596,7599]
                                                    name: tmp [7596,7599]
                                            argument [7601,7608]
                                                expr [7601,7608]
                                                    name: operand [7601,7608]
                                decl_stmt [7613,7680]
                                    decl [7613,7679]
                                        type [7613,7615]
                                            name: __ [7613,7615]
                                        name: CompareTaggedAndBranch [7616,7638]
                                        argument_list [7638,7679]
                                            argument [7639,7644]
                                                expr [7639,7644]
                                                    name: value [7639,7644]
                                            argument [7646,7649]
                                                expr [7646,7649]
                                                    name: tmp [7646,7649]
                                            argument [7651,7670]
                                                expr [7651,7670]
                                                    call [7651,7670]
                                                        name: AsMasmCondition [7651,7666]
                                                        argument_list [7666,7670]
                                                            argument [7667,7669]
                                                                expr [7667,7669]
                                                                    name: cc [7667,7669]
                                            argument [7672,7678]
                                                expr [7672,7678]
                                                    name: target [7672,7678]
                    function [7683,8050]
                        type [7683,7687]
                            name: void [7683,7687]
                        name [7688,7719]
                            name: BaselineAssembler [7688,7705]
                            operator: :: [7705,7707]
                            name: JumpIfTagged [7707,7719]
                        parameter_list [7719,7875]
                            parameter [7720,7732]
                                decl [7720,7732]
                                    type [7720,7732]
                                        name: Condition [7720,7729]
                                    name: cc [7730,7732]
                            parameter [7734,7752]
                                decl [7734,7752]
                                    type [7734,7752]
                                        name: MemOperand [7734,7744]
                                    name: operand [7745,7752]
                            parameter [7791,7805]
                                decl [7791,7805]
                                    type [7791,7805]
                                        name: Register [7791,7799]
                                    name: value [7800,7805]
                            parameter [7807,7820]
                                decl [7807,7820]
                                    type [7807,7820]
                                        name: Label [7807,7812]
                                        modifier: * [7812,7813]
                                    name: target [7814,7820]
                            parameter [7859,7874]
                                decl [7859,7874]
                                    type [7859,7874]
                                        name [7859,7874]
                                            name: Label [7859,7864]
                                            operator: :: [7864,7866]
                                            name: Distance [7866,7874]
                        block [7876,8050]
                            block_content [7880,8048]
                                decl_stmt [7880,7913]
                                    decl [7880,7912]
                                        type [7880,7900]
                                            name: ScratchRegisterScope [7880,7900]
                                        name: temps [7901,7906]
                                        argument_list [7906,7912]
                                            argument [7907,7911]
                                                expr [7907,7911]
                                                    name: this [7907,7911]
                                decl_stmt [7916,7954]
                                    decl [7916,7953]
                                        type [7916,7924]
                                            name: Register [7916,7924]
                                        name: tmp [7925,7928]
                                        init [7929,7953]
                                            expr [7931,7953]
                                                call [7931,7953]
                                                    name [7931,7951]
                                                        name: temps [7931,7936]
                                                        operator: . [7936,7937]
                                                        name: AcquireScratch [7937,7951]
                                                    argument_list [7951,7953]
                                decl_stmt [7957,7978]
                                    decl [7957,7977]
                                        type [7957,7959]
                                            name: __ [7957,7959]
                                        name: Ldr [7960,7963]
                                        argument_list [7963,7977]
                                            argument [7964,7967]
                                                expr [7964,7967]
                                                    name: tmp [7964,7967]
                                            argument [7969,7976]
                                                expr [7969,7976]
                                                    name: operand [7969,7976]
                                decl_stmt [7981,8048]
                                    decl [7981,8047]
                                        type [7981,7983]
                                            name: __ [7981,7983]
                                        name: CompareTaggedAndBranch [7984,8006]
                                        argument_list [8006,8047]
                                            argument [8007,8010]
                                                expr [8007,8010]
                                                    name: tmp [8007,8010]
                                            argument [8012,8017]
                                                expr [8012,8017]
                                                    name: value [8012,8017]
                                            argument [8019,8038]
                                                expr [8019,8038]
                                                    call [8019,8038]
                                                        name: AsMasmCondition [8019,8034]
                                                        argument_list [8034,8038]
                                                            argument [8035,8037]
                                                                expr [8035,8037]
                                                                    name: cc [8035,8037]
                                            argument [8040,8046]
                                                expr [8040,8046]
                                                    name: target [8040,8046]
                    function [8051,8246]
                        type [8051,8055]
                            name: void [8051,8055]
                        name [8056,8085]
                            name: BaselineAssembler [8056,8073]
                            operator: :: [8073,8075]
                            name: JumpIfByte [8075,8085]
                        parameter_list [8085,8196]
                            parameter [8086,8098]
                                decl [8086,8098]
                                    type [8086,8098]
                                        name: Condition [8086,8095]
                                    name: cc [8096,8098]
                            parameter [8100,8114]
                                decl [8100,8114]
                                    type [8100,8114]
                                        name: Register [8100,8108]
                                    name: value [8109,8114]
                            parameter [8116,8128]
                                decl [8116,8128]
                                    type [8116,8128]
                                        name: int32_t [8116,8123]
                                    name: byte [8124,8128]
                            parameter [8165,8178]
                                decl [8165,8178]
                                    type [8165,8178]
                                        name: Label [8165,8170]
                                        modifier: * [8170,8171]
                                    name: target [8172,8178]
                            parameter [8180,8195]
                                decl [8180,8195]
                                    type [8180,8195]
                                        name [8180,8195]
                                            name: Label [8180,8185]
                                            operator: :: [8185,8187]
                                            name: Distance [8187,8195]
                        block [8197,8246]
                            block_content [8201,8244]
                                expr_stmt [8201,8244]
                                    expr [8201,8243]
                                        call [8201,8243]
                                            name: JumpIf [8201,8207]
                                            argument_list [8207,8243]
                                                argument [8208,8210]
                                                    expr [8208,8210]
                                                        name: cc [8208,8210]
                                                argument [8212,8217]
                                                    expr [8212,8217]
                                                        name: value [8212,8217]
                                                argument [8219,8234]
                                                    expr [8219,8234]
                                                        call [8219,8234]
                                                            name: Immediate [8219,8228]
                                                            argument_list [8228,8234]
                                                                argument [8229,8233]
                                                                    expr [8229,8233]
                                                                        name: byte [8229,8233]
                                                argument [8236,8242]
                                                    expr [8236,8242]
                                                        name: target [8236,8242]
                    function [8248,8373]
                        type [8248,8252]
                            name: void [8248,8252]
                        name [8253,8276]
                            name: BaselineAssembler [8253,8270]
                            operator: :: [8270,8272]
                            name: Move [8272,8276]
                        parameter_list [8276,8323]
                            parameter [8277,8305]
                                decl [8277,8305]
                                    type [8277,8305]
                                        name [8277,8298]
                                            name: interpreter [8277,8288]
                                            operator: :: [8288,8290]
                                            name: Register [8290,8298]
                                    name: output [8299,8305]
                            parameter [8307,8322]
                                decl [8307,8322]
                                    type [8307,8322]
                                        name: Register [8307,8315]
                                    name: source [8316,8322]
                        block [8324,8373]
                            block_content [8328,8371]
                                expr_stmt [8328,8371]
                                    expr [8328,8370]
                                        call [8328,8370]
                                            name: Move [8328,8332]
                                            argument_list [8332,8370]
                                                argument [8333,8361]
                                                    expr [8333,8361]
                                                        call [8333,8361]
                                                            name: RegisterFrameOperand [8333,8353]
                                                            argument_list [8353,8361]
                                                                argument [8354,8360]
                                                                    expr [8354,8360]
                                                                        name: output [8354,8360]
                                                argument [8363,8369]
                                                    expr [8363,8369]
                                                        name: source [8363,8369]
                    function [8374,8484]
                        type [8374,8378]
                            name: void [8374,8378]
                        name [8379,8402]
                            name: BaselineAssembler [8379,8396]
                            operator: :: [8396,8398]
                            name: Move [8398,8402]
                        parameter_list [8402,8438]
                            parameter [8403,8418]
                                decl [8403,8418]
                                    type [8403,8418]
                                        name: Register [8403,8411]
                                    name: output [8412,8418]
                            parameter [8420,8437]
                                decl [8420,8437]
                                    type [8420,8437]
                                        name: TaggedIndex [8420,8431]
                                    name: value [8432,8437]
                        block [8439,8484]
                            block_content [8443,8482]
                                decl_stmt [8443,8482]
                                    decl [8443,8481]
                                        type [8443,8445]
                                            name: __ [8443,8445]
                                        name: Mov [8446,8449]
                                        argument_list [8449,8481]
                                            argument [8450,8456]
                                                expr [8450,8456]
                                                    name: output [8450,8456]
                                            argument [8458,8480]
                                                expr [8458,8480]
                                                    call [8458,8480]
                                                        name: Immediate [8458,8467]
                                                        argument_list [8467,8480]
                                                            argument [8468,8479]
                                                                expr [8468,8479]
                                                                    call [8468,8479]
                                                                        name [8468,8477]
                                                                            name: value [8468,8473]
                                                                            operator: . [8473,8474]
                                                                            name: ptr [8474,8477]
                                                                        argument_list [8477,8479]
                    function [8485,8579]
                        type [8485,8489]
                            name: void [8485,8489]
                        name [8490,8513]
                            name: BaselineAssembler [8490,8507]
                            operator: :: [8507,8509]
                            name: Move [8509,8513]
                        parameter_list [8513,8549]
                            parameter [8514,8531]
                                decl [8514,8531]
                                    type [8514,8531]
                                        name: MemOperand [8514,8524]
                                    name: output [8525,8531]
                            parameter [8533,8548]
                                decl [8533,8548]
                                    type [8533,8548]
                                        name: Register [8533,8541]
                                    name: source [8542,8548]
                        block [8550,8579]
                            block_content [8554,8577]
                                decl_stmt [8554,8577]
                                    decl [8554,8576]
                                        type [8554,8556]
                                            name: __ [8554,8556]
                                        name: Str [8557,8560]
                                        argument_list [8560,8576]
                                            argument [8561,8567]
                                                expr [8561,8567]
                                                    name: source [8561,8567]
                                            argument [8569,8575]
                                                expr [8569,8575]
                                                    name: output [8569,8575]
                    function [8580,8696]
                        type [8580,8584]
                            name: void [8580,8584]
                        name [8585,8608]
                            name: BaselineAssembler [8585,8602]
                            operator: :: [8602,8604]
                            name: Move [8604,8608]
                        parameter_list [8608,8654]
                            parameter [8609,8624]
                                decl [8609,8624]
                                    type [8609,8624]
                                        name: Register [8609,8617]
                                    name: output [8618,8624]
                            parameter [8626,8653]
                                decl [8626,8653]
                                    type [8626,8653]
                                        name: ExternalReference [8626,8643]
                                    name: reference [8644,8653]
                        block [8655,8696]
                            block_content [8659,8694]
                                decl_stmt [8659,8694]
                                    decl [8659,8693]
                                        type [8659,8661]
                                            name: __ [8659,8661]
                                        name: Mov [8662,8665]
                                        argument_list [8665,8693]
                                            argument [8666,8672]
                                                expr [8666,8672]
                                                    name: output [8666,8672]
                                            argument [8674,8692]
                                                expr [8674,8692]
                                                    call [8674,8692]
                                                        name: Operand [8674,8681]
                                                        argument_list [8681,8692]
                                                            argument [8682,8691]
                                                                expr [8682,8691]
                                                                    name: reference [8682,8691]
                    function [8697,8806]
                        type [8697,8701]
                            name: void [8697,8701]
                        name [8702,8725]
                            name: BaselineAssembler [8702,8719]
                            operator: :: [8719,8721]
                            name: Move [8721,8725]
                        parameter_list [8725,8768]
                            parameter [8726,8741]
                                decl [8726,8741]
                                    type [8726,8741]
                                        name: Register [8726,8734]
                                    name: output [8735,8741]
                            parameter [8743,8767]
                                decl [8743,8767]
                                    type [8743,8767]
                                        name [8743,8761]
                                            name: Handle [8743,8749]
                                            argument_list [8749,8761]
                                                argument [8750,8760]
                                                    name: HeapObject [8750,8760]
                                    name: value [8762,8767]
                        block [8769,8806]
                            block_content [8773,8804]
                                decl_stmt [8773,8804]
                                    decl [8773,8803]
                                        type [8773,8775]
                                            name: __ [8773,8775]
                                        name: Mov [8776,8779]
                                        argument_list [8779,8803]
                                            argument [8780,8786]
                                                expr [8780,8786]
                                                    name: output [8780,8786]
                                            argument [8788,8802]
                                                expr [8788,8802]
                                                    call [8788,8802]
                                                        name: Operand [8788,8795]
                                                        argument_list [8795,8802]
                                                            argument [8796,8801]
                                                                expr [8796,8801]
                                                                    name: value [8796,8801]
                    function [8807,8907]
                        type [8807,8811]
                            name: void [8807,8811]
                        name [8812,8835]
                            name: BaselineAssembler [8812,8829]
                            operator: :: [8829,8831]
                            name: Move [8831,8835]
                        parameter_list [8835,8867]
                            parameter [8836,8851]
                                decl [8836,8851]
                                    type [8836,8851]
                                        name: Register [8836,8844]
                                    name: output [8845,8851]
                            parameter [8853,8866]
                                decl [8853,8866]
                                    type [8853,8866]
                                        name: int32_t [8853,8860]
                                    name: value [8861,8866]
                        block [8868,8907]
                            block_content [8872,8905]
                                decl_stmt [8872,8905]
                                    decl [8872,8904]
                                        type [8872,8874]
                                            name: __ [8872,8874]
                                        name: Mov [8875,8878]
                                        argument_list [8878,8904]
                                            argument [8879,8885]
                                                expr [8879,8885]
                                                    name: output [8879,8885]
                                            argument [8887,8903]
                                                expr [8887,8903]
                                                    call [8887,8903]
                                                        name: Immediate [8887,8896]
                                                        argument_list [8896,8903]
                                                            argument [8897,8902]
                                                                expr [8897,8902]
                                                                    name: value [8897,8902]
                    function [8908,9008]
                        type [8908,8912]
                            name: void [8908,8912]
                        name [8913,8944]
                            name: BaselineAssembler [8913,8930]
                            operator: :: [8930,8932]
                            name: MoveMaybeSmi [8932,8944]
                        parameter_list [8944,8978]
                            parameter [8945,8960]
                                decl [8945,8960]
                                    type [8945,8960]
                                        name: Register [8945,8953]
                                    name: output [8954,8960]
                            parameter [8962,8977]
                                decl [8962,8977]
                                    type [8962,8977]
                                        name: Register [8962,8970]
                                    name: source [8971,8977]
                        block [8979,9008]
                            block_content [8983,9006]
                                decl_stmt [8983,9006]
                                    decl [8983,9005]
                                        type [8983,8985]
                                            name: __ [8983,8985]
                                        name: Mov [8986,8989]
                                        argument_list [8989,9005]
                                            argument [8990,8996]
                                                expr [8990,8996]
                                                    name: output [8990,8996]
                                            argument [8998,9004]
                                                expr [8998,9004]
                                                    name: source [8998,9004]
                    function [9009,9104]
                        type [9009,9013]
                            name: void [9009,9013]
                        name [9014,9040]
                            name: BaselineAssembler [9014,9031]
                            operator: :: [9031,9033]
                            name: MoveSmi [9033,9040]
                        parameter_list [9040,9074]
                            parameter [9041,9056]
                                decl [9041,9056]
                                    type [9041,9056]
                                        name: Register [9041,9049]
                                    name: output [9050,9056]
                            parameter [9058,9073]
                                decl [9058,9073]
                                    type [9058,9073]
                                        name: Register [9058,9066]
                                    name: source [9067,9073]
                        block [9075,9104]
                            block_content [9079,9102]
                                decl_stmt [9079,9102]
                                    decl [9079,9101]
                                        type [9079,9081]
                                            name: __ [9079,9081]
                                        name: Mov [9082,9085]
                                        argument_list [9085,9101]
                                            argument [9086,9092]
                                                expr [9086,9092]
                                                    name: output [9086,9092]
                                            argument [9094,9100]
                                                expr [9094,9100]
                                                    name: source [9094,9100]
                    namespace [9106,9711]
                        name: detail [9116,9122]
                        block [9123,9711]
                            function [9126,9396]
                                type [9126,9165]
                                    name [9126,9149]
                                        name: template [9126,9134]
                                        argument_list [9135,9149]
                                            argument [9136,9148]
                                                name: typename [9136,9144]
                                                name: Arg [9145,9148]
                                    specifier: inline [9150,9156]
                                    name: Register [9157,9165]
                                name: ToRegister [9166,9176]
                                parameter_list [9176,9312]
                                    parameter [9177,9200]
                                        decl [9177,9200]
                                            type [9177,9200]
                                                name: BaselineAssembler [9177,9194]
                                                modifier: * [9194,9195]
                                            name: basm [9196,9200]
                                    parameter [9229,9275]
                                        decl [9229,9275]
                                            type [9229,9275]
                                                name [9229,9268]
                                                    name: BaselineAssembler [9229,9246]
                                                    operator: :: [9246,9248]
                                                    name: ScratchRegisterScope [9248,9268]
                                                modifier: * [9268,9269]
                                            name: scope [9270,9275]
                                    parameter [9304,9311]
                                        decl [9304,9311]
                                            type [9304,9311]
                                                name: Arg [9304,9307]
                                            name: arg [9308,9311]
                                block [9313,9396]
                                    block_content [9317,9394]
                                        decl_stmt [9317,9356]
                                            decl [9317,9355]
                                                type [9317,9325]
                                                    name: Register [9317,9325]
                                                name: reg [9326,9329]
                                                init [9330,9355]
                                                    expr [9332,9355]
                                                        call [9332,9355]
                                                            name [9332,9353]
                                                                name: scope [9332,9337]
                                                                operator: -> [9337,9339]
                                                                name: AcquireScratch [9339,9353]
                                                            argument_list [9353,9355]
                                        expr_stmt [9359,9380]
                                            expr [9359,9379]
                                                call [9359,9379]
                                                    name [9359,9369]
                                                        name: basm [9359,9363]
                                                        operator: -> [9363,9365]
                                                        name: Move [9365,9369]
                                                    argument_list [9369,9379]
                                                        argument [9370,9373]
                                                            expr [9370,9373]
                                                                name: reg [9370,9373]
                                                        argument [9375,9378]
                                                            expr [9375,9378]
                                                                name: arg [9375,9378]
                                        return [9383,9394]
                                            expr [9390,9393]
                                                name: reg [9390,9393]
                            function [9397,9582]
                                type [9397,9412]
                                    specifier: inline [9397,9403]
                                    name: Register [9404,9412]
                                name: ToRegister [9413,9423]
                                parameter_list [9423,9564]
                                    parameter [9424,9447]
                                        decl [9424,9447]
                                            type [9424,9447]
                                                name: BaselineAssembler [9424,9441]
                                                modifier: * [9441,9442]
                                            name: basm [9443,9447]
                                    parameter [9476,9522]
                                        decl [9476,9522]
                                            type [9476,9522]
                                                name [9476,9515]
                                                    name: BaselineAssembler [9476,9493]
                                                    operator: :: [9493,9495]
                                                    name: ScratchRegisterScope [9495,9515]
                                                modifier: * [9515,9516]
                                            name: scope [9517,9522]
                                    parameter [9551,9563]
                                        decl [9551,9563]
                                            type [9551,9563]
                                                name: Register [9551,9559]
                                            name: reg [9560,9563]
                                block [9565,9582]
                                    block_content [9569,9580]
                                        return [9569,9580]
                                            expr [9576,9579]
                                                name: reg [9576,9579]
                            macro [9584,9592]
                                name: template [9584,9592]
                            expr_stmt [9593,9635]
                                expr [9593,9634]
                                    operator: < [9593,9594]
                                    name: typename [9594,9602]
                                    operator: ... [9602,9605]
                                    name: Args [9606,9610]
                                    operator: > [9610,9611]
                                    name: CountPushHelper [9619,9634]
                            macro [9636,9644]
                                name: template [9636,9644]
                            expr_stmt [9645,9709]
                                expr [9645,9709]
                                    operator: < [9645,9646]
                                    operator: > [9646,9647]
                                    name [9655,9672]
                                        name: CountPushHelper [9655,9670]
                                        argument_list [9670,9672]
                                    block [9673,9709]
                                        expr [9677,9707]
                                            specifier: static [9677,9683]
                                            name: int [9684,9687]
                                            macro [9688,9695]
                                                name: Count [9688,9693]
                                                argument_list [9693,9695]
                                            block [9696,9707]
                                                return [9698,9707]
                                                    expr [9705,9706]
                                                        literal: 0 [9705,9706]
                    empty_stmt [9711,9712]
                    macro [9713,9721]
                        name: template [9713,9721]
                    expr_stmt [9722,9898]
                        expr [9722,9735]
                            operator: < [9722,9723]
                            name: typename [9723,9731]
                            name: Arg [9732,9735]
                        operator: , [9735,9736]
                        expr [9737,9898]
                            name: typename [9737,9745]
                            operator: ... [9745,9748]
                            name: Args [9749,9753]
                            operator: > [9753,9754]
                            name [9762,9791]
                                name: CountPushHelper [9762,9777]
                                argument_list [9777,9791]
                                    argument [9778,9781]
                                        name: Arg [9778,9781]
                                    argument [9783,9790]
                                        name: Args [9783,9787]
                                        modifier: ... [9787,9790]
                            block [9792,9898]
                                expr [9796,9894]
                                    specifier: static [9796,9802]
                                    name: int [9803,9806]
                                    macro [9807,9835]
                                        name: Count [9807,9812]
                                        argument_list [9812,9835]
                                            argument [9813,9820]
                                            argument [9822,9834]
                                    block [9836,9894]
                                        return [9842,9894]
                                            expr [9849,9893]
                                                literal: 1 [9849,9852]
                                                operator: + [9851,9852]
                                                call [9853,9893]
                                                    name [9853,9884]
                                                        name [9853,9877]
                                                            name: CountPushHelper [9853,9868]
                                                            argument_list [9868,9877]
                                                                argument [9869,9876]
                                                                    name: Args [9869,9873]
                                                                    modifier: ... [9873,9876]
                                                        operator: :: [9877,9879]
                                                        name: Count [9879,9884]
                                                    argument_list [9884,9893]
                                                        argument [9885,9892]
                                                            expr [9885,9892]
                                                                name: args [9885,9889]
                                                                operator: ... [9889,9892]
            empty_stmt [9900,9901]
            macro [9902,9910]
                name: template [9902,9910]
            expr_stmt [9911,10138]
                expr [9911,10138]
                    operator: < [9911,9912]
                    name: typename [9912,9920]
                    operator: ... [9920,9923]
                    name: Args [9924,9928]
                    operator: > [9928,9929]
                    name [9937,9988]
                        name: CountPushHelper [9937,9952]
                        argument_list [9952,9988]
                            argument [9953,9978]
                                name [9953,9978]
                                    name: interpreter [9953,9964]
                                    operator: :: [9964,9966]
                                    name: RegisterList [9966,9978]
                            argument [9980,9987]
                                name: Args [9980,9984]
                                modifier: ... [9984,9987]
                    block [9989,10138]
                        expr [9993,10134]
                            specifier: static [9993,9999]
                            name: int [10000,10003]
                            macro [10004,10055]
                                name: Count [10004,10009]
                                argument_list [10009,10055]
                                    argument [10010,10040]
                                    argument [10042,10054]
                            block [10056,10134]
                                return [10062,10134]
                                    expr [10069,10133]
                                        call [10069,10090]
                                            name [10069,10088]
                                                name: list [10069,10073]
                                                operator: . [10073,10074]
                                                name: register_count [10074,10088]
                                            argument_list [10088,10090]
                                        operator: + [10091,10092]
                                        call [10093,10133]
                                            name [10093,10124]
                                                name [10093,10117]
                                                    name: CountPushHelper [10093,10108]
                                                    argument_list [10108,10117]
                                                        argument [10109,10116]
                                                            name: Args [10109,10113]
                                                            modifier: ... [10113,10116]
                                                operator: :: [10117,10119]
                                                name: Count [10119,10124]
                                            argument_list [10124,10133]
                                                argument [10125,10132]
                                                    expr [10125,10132]
                                                        name: args [10125,10129]
                                                        operator: ... [10129,10132]
    empty_stmt [10140,10141]
    macro [10143,10151]
        name: template [10143,10151]
    expr_stmt [10152,10192]
        expr [10152,10191]
            operator: < [10152,10153]
            name: typename [10153,10161]
            operator: ... [10161,10164]
            name: Args [10165,10169]
            operator: > [10169,10170]
            name: PushAllHelper [10178,10191]
    function [10193,10330]
        type [10193,10232]
            name [10193,10220]
                name: template [10193,10201]
                argument_list [10202,10220]
                    argument [10203,10219]
                        name: typename [10203,10211]
                        modifier: ... [10211,10214]
                        name: Args [10215,10219]
            specifier: inline [10221,10227]
            name: void [10228,10232]
        name: PushAll [10233,10240]
        parameter_list [10240,10279]
            parameter [10241,10264]
                decl [10241,10264]
                    type [10241,10264]
                        name: BaselineAssembler [10241,10258]
                        modifier: * [10258,10259]
                    name: basm [10260,10264]
            parameter [10266,10278]
                decl [10266,10278]
                    type [10266,10278]
                        name: Args [10266,10270]
                        modifier: ... [10270,10273]
                    name: args [10274,10278]
        block [10280,10330]
            block_content [10284,10328]
                expr_stmt [10284,10328]
                    expr [10284,10327]
                        call [10284,10327]
                            name [10284,10312]
                                name [10284,10306]
                                    name: PushAllHelper [10284,10297]
                                    argument_list [10297,10306]
                                        argument [10298,10305]
                                            name: Args [10298,10302]
                                            modifier: ... [10302,10305]
                                operator: :: [10306,10308]
                                name: Push [10308,10312]
                            argument_list [10312,10327]
                                argument [10313,10317]
                                    expr [10313,10317]
                                        name: basm [10313,10317]
                                argument [10319,10326]
                                    expr [10319,10326]
                                        name: args [10319,10323]
                                        operator: ... [10323,10326]
    function [10331,10482]
        type [10331,10370]
            name [10331,10358]
                name: template [10331,10339]
                argument_list [10340,10358]
                    argument [10341,10357]
                        name: typename [10341,10349]
                        modifier: ... [10349,10352]
                        name: Args [10353,10357]
            specifier: inline [10359,10365]
            name: void [10366,10370]
        name: PushAllReverse [10371,10385]
        parameter_list [10385,10424]
            parameter [10386,10409]
                decl [10386,10409]
                    type [10386,10409]
                        name: BaselineAssembler [10386,10403]
                        modifier: * [10403,10404]
                    name: basm [10405,10409]
            parameter [10411,10423]
                decl [10411,10423]
                    type [10411,10423]
                        name: Args [10411,10415]
                        modifier: ... [10415,10418]
                    name: args [10419,10423]
        block [10425,10482]
            block_content [10429,10480]
                expr_stmt [10429,10480]
                    expr [10429,10479]
                        call [10429,10479]
                            name [10429,10464]
                                name [10429,10451]
                                    name: PushAllHelper [10429,10442]
                                    argument_list [10442,10451]
                                        argument [10443,10450]
                                            name: Args [10443,10447]
                                            modifier: ... [10447,10450]
                                operator: :: [10451,10453]
                                name: PushReverse [10453,10464]
                            argument_list [10464,10479]
                                argument [10465,10469]
                                    expr [10465,10469]
                                        name: basm [10465,10469]
                                argument [10471,10478]
                                    expr [10471,10478]
                                        name: args [10471,10475]
                                        operator: ... [10475,10478]
    macro [10484,10492]
        name: template [10484,10492]
    expr_stmt [10493,10624]
        expr [10493,10623]
            operator: < [10493,10494]
            operator: > [10494,10495]
            name [10503,10518]
                name: PushAllHelper [10503,10516]
                argument_list [10516,10518]
            block [10519,10623]
                expr [10523,10621]
                    specifier: static [10523,10529]
                    name: void [10530,10534]
                    macro [10535,10564]
                        name: Push [10535,10539]
                        argument_list [10539,10564]
                            argument [10540,10563]
                    block [10565,10567]
                    specifier: static [10570,10576]
                    name: void [10577,10581]
                    macro [10582,10618]
                        name: PushReverse [10582,10593]
                        argument_list [10593,10618]
                            argument [10594,10617]
                    block [10619,10621]
    macro [10625,10633]
        name: template [10625,10633]
    expr_stmt [10634,10940]
        expr [10634,10940]
            operator: < [10634,10635]
            name: typename [10635,10643]
            name: Arg [10644,10647]
            operator: > [10647,10648]
            name [10656,10674]
                name: PushAllHelper [10656,10669]
                argument_list [10669,10674]
                    argument [10670,10673]
                        name: Arg [10670,10673]
            block [10675,10940]
                expr [10679,10936]
                    specifier: static [10679,10685]
                    name: void [10686,10690]
                    macro [10691,10725]
                        name: Push [10691,10695]
                        argument_list [10695,10725]
                            argument [10696,10719]
                            argument [10721,10724]
                    block [10726,10754]
                        expr [10728,10751]
                            call [10728,10751]
                                name: FATAL [10728,10733]
                                argument_list [10733,10751]
                                    argument [10734,10750]
                                        expr [10734,10750]
                                            literal: "Unaligned push" [10734,10750]
                    specifier: static [10757,10763]
                    name: void [10764,10768]
                    macro [10769,10814]
                        name: PushReverse [10769,10780]
                        argument_list [10780,10814]
                            argument [10781,10804]
                            argument [10806,10813]
                    block [10815,10936]
                        comment: // Push the padding register to round up the amount of values pushed. [10821,10890]
                        return [10895,10936]
                            expr [10902,10935]
                                call [10902,10935]
                                    name: PushAllReverse [10902,10916]
                                    argument_list [10916,10935]
                                        argument [10917,10921]
                                            expr [10917,10921]
                                                name: basm [10917,10921]
                                        argument [10923,10926]
                                            expr [10923,10926]
                                                name: arg [10923,10926]
                                        argument [10928,10934]
                                            expr [10928,10934]
                                                name: padreg [10928,10934]
    macro [10944,10952]
        name: template [10944,10952]
    expr_stmt [10953,11707]
        expr [10953,10967]
            operator: < [10953,10954]
            name: typename [10954,10962]
            name: Arg1 [10963,10967]
        operator: , [10967,10968]
        expr [10969,10982]
            name: typename [10969,10977]
            name: Arg2 [10978,10982]
        operator: , [10982,10983]
        expr [10984,11706]
            name: typename [10984,10992]
            operator: ... [10992,10995]
            name: Args [10996,11000]
            operator: > [11000,11001]
            name [11009,11043]
                name: PushAllHelper [11009,11022]
                argument_list [11022,11043]
                    argument [11023,11027]
                        name: Arg1 [11023,11027]
                    argument [11029,11033]
                        name: Arg2 [11029,11033]
                    argument [11035,11042]
                        name: Args [11035,11039]
                        modifier: ... [11039,11042]
            block [11044,11706]
                expr [11048,11704]
                    specifier: static [11048,11054]
                    name: void [11055,11059]
                    macro [11060,11144]
                        name: Push [11060,11064]
                        argument_list [11064,11144]
                            argument [11065,11088]
                            argument [11090,11099]
                            argument [11101,11110]
                            argument [11131,11143]
                    block [11145,11364]
                        expr [11151,11359]
                            block [11151,11332]
                                expr [11159,11210]
                                    name [11159,11198]
                                        name: BaselineAssembler [11159,11176]
                                        operator: :: [11176,11178]
                                        name: ScratchRegisterScope [11178,11198]
                                    call [11199,11210]
                                        name: scope [11199,11204]
                                        argument_list [11204,11210]
                                            argument [11205,11209]
                                                expr [11205,11209]
                                                    name: basm [11205,11209]
                                expr [11218,11325]
                                    call [11218,11230]
                                        name [11218,11228]
                                            name: basm [11218,11222]
                                            operator: -> [11222,11224]
                                            name: masm [11224,11228]
                                        argument_list [11228,11230]
                                    operator: -> [11230,11232]
                                    call [11232,11325]
                                        name: Push [11232,11236]
                                        argument_list [11236,11325]
                                            argument [11237,11267]
                                                expr [11237,11267]
                                                    call [11237,11267]
                                                        name: ToRegister [11237,11247]
                                                        argument_list [11247,11267]
                                                            argument [11248,11252]
                                                                expr [11248,11252]
                                                                    name: basm [11248,11252]
                                                            argument [11254,11260]
                                                                expr [11254,11260]
                                                                    operator: & [11254,11255]
                                                                    name: scope [11255,11260]
                                                            argument [11262,11266]
                                                                expr [11262,11266]
                                                                    name: arg1 [11262,11266]
                                            argument [11294,11324]
                                                expr [11294,11324]
                                                    call [11294,11324]
                                                        name: ToRegister [11294,11304]
                                                        argument_list [11304,11324]
                                                            argument [11305,11309]
                                                                expr [11305,11309]
                                                                    name: basm [11305,11309]
                                                            argument [11311,11317]
                                                                expr [11311,11317]
                                                                    operator: & [11311,11312]
                                                                    name: scope [11312,11317]
                                                            argument [11319,11323]
                                                                expr [11319,11323]
                                                                    name: arg2 [11319,11323]
                            call [11337,11359]
                                name: PushAll [11337,11344]
                                argument_list [11344,11359]
                                    argument [11345,11349]
                                        expr [11345,11349]
                                            name: basm [11345,11349]
                                    argument [11351,11358]
                                        expr [11351,11358]
                                            name: args [11351,11355]
                                            operator: ... [11355,11358]
                    specifier: static [11367,11373]
                    name: void [11374,11378]
                    macro [11379,11477]
                        name: PushReverse [11379,11390]
                        argument_list [11390,11477]
                            argument [11391,11414]
                            argument [11416,11425]
                            argument [11427,11436]
                            argument [11464,11476]
                    block [11478,11704]
                        expr [11484,11513]
                            call [11484,11513]
                                name: PushAllReverse [11484,11498]
                                argument_list [11498,11513]
                                    argument [11499,11503]
                                        expr [11499,11503]
                                            name: basm [11499,11503]
                                    argument [11505,11512]
                                        expr [11505,11512]
                                            name: args [11505,11509]
                                            operator: ... [11509,11512]
                        expr [11519,11700]
                            block [11519,11700]
                                expr [11527,11578]
                                    name [11527,11566]
                                        name: BaselineAssembler [11527,11544]
                                        operator: :: [11544,11546]
                                        name: ScratchRegisterScope [11546,11566]
                                    call [11567,11578]
                                        name: scope [11567,11572]
                                        argument_list [11572,11578]
                                            argument [11573,11577]
                                                expr [11573,11577]
                                                    name: basm [11573,11577]
                                expr [11586,11693]
                                    call [11586,11598]
                                        name [11586,11596]
                                            name: basm [11586,11590]
                                            operator: -> [11590,11592]
                                            name: masm [11592,11596]
                                        argument_list [11596,11598]
                                    operator: -> [11598,11600]
                                    call [11600,11693]
                                        name: Push [11600,11604]
                                        argument_list [11604,11693]
                                            argument [11605,11635]
                                                expr [11605,11635]
                                                    call [11605,11635]
                                                        name: ToRegister [11605,11615]
                                                        argument_list [11615,11635]
                                                            argument [11616,11620]
                                                                expr [11616,11620]
                                                                    name: basm [11616,11620]
                                                            argument [11622,11628]
                                                                expr [11622,11628]
                                                                    operator: & [11622,11623]
                                                                    name: scope [11623,11628]
                                                            argument [11630,11634]
                                                                expr [11630,11634]
                                                                    name: arg2 [11630,11634]
                                            argument [11662,11692]
                                                expr [11662,11692]
                                                    call [11662,11692]
                                                        name: ToRegister [11662,11672]
                                                        argument_list [11672,11692]
                                                            argument [11673,11677]
                                                                expr [11673,11677]
                                                                    name: basm [11673,11677]
                                                            argument [11679,11685]
                                                                expr [11679,11685]
                                                                    operator: & [11679,11680]
                                                                    name: scope [11680,11685]
                                                            argument [11687,11691]
                                                                expr [11687,11691]
                                                                    name: arg1 [11687,11691]
    comment: // Currently RegisterLists are always be the last argument, so we don't [11708,11779]
    comment: // specialize for the case where they're not. We do still specialise for the [11780,11856]
    comment: // aligned and unaligned cases. [11857,11888]
    macro [11889,11897]
        name: template [11889,11897]
    expr_stmt [11898,12439]
        expr [11898,12439]
            operator: < [11898,11899]
            name: typename [11899,11907]
            name: Arg [11908,11911]
            operator: > [11911,11912]
            name [11920,11965]
                name: PushAllHelper [11920,11933]
                argument_list [11933,11965]
                    argument [11934,11937]
                        name: Arg [11934,11937]
                    argument [11939,11964]
                        name [11939,11964]
                            name: interpreter [11939,11950]
                            operator: :: [11950,11952]
                            name: RegisterList [11952,11964]
            block [11966,12439]
                expr [11970,12368]
                    specifier: static [11970,11976]
                    name: void [11977,11981]
                    macro [11982,12071]
                        name: Push [11982,11986]
                        argument_list [11986,12071]
                            argument [11987,12010]
                            argument [12012,12019]
                            argument [12040,12070]
                    block [12072,12171]
                        expr [12078,12117]
                            call [12078,12117]
                                name: DCHECK_EQ [12078,12087]
                                argument_list [12087,12117]
                                    argument [12088,12113]
                                        expr [12088,12113]
                                            call [12088,12109]
                                                name [12088,12107]
                                                    name: list [12088,12092]
                                                    operator: . [12092,12093]
                                                    name: register_count [12093,12107]
                                                argument_list [12107,12109]
                                            operator: % [12110,12111]
                                            literal: 2 [12112,12113]
                                    argument [12115,12116]
                                        expr [12115,12116]
                                            literal: 1 [12115,12116]
                        expr [12123,12166]
                            call [12123,12166]
                                name: PushAll [12123,12130]
                                argument_list [12130,12166]
                                    argument [12131,12135]
                                        expr [12131,12135]
                                            name: basm [12131,12135]
                                    argument [12137,12140]
                                        expr [12137,12140]
                                            name: arg [12137,12140]
                                    argument [12142,12149]
                                        expr [12142,12149]
                                            name [12142,12149]
                                                name: list [12142,12146]
                                                index [12146,12149]
                                                    expr [12147,12148]
                                                        literal: 0 [12147,12148]
                                    argument [12151,12165]
                                        expr [12151,12165]
                                            call [12151,12165]
                                                name [12151,12163]
                                                    name: list [12151,12155]
                                                    operator: . [12155,12156]
                                                    name: PopLeft [12156,12163]
                                                argument_list [12163,12165]
                    specifier: static [12174,12180]
                    name: void [12181,12185]
                    macro [12186,12289]
                        name: PushReverse [12186,12197]
                        argument_list [12197,12289]
                            argument [12198,12221]
                            argument [12223,12230]
                            argument [12258,12288]
                    block [12290,12368]
                        if_stmt [12296,12362]
                            if [12296,12362]
                                condition [12299,12327]
                                    expr [12300,12326]
                                        call [12300,12321]
                                            name [12300,12319]
                                                name: list [12300,12304]
                                                operator: . [12304,12305]
                                                name: register_count [12305,12319]
                                            argument_list [12319,12321]
                                        operator: == [12322,12324]
                                        literal: 0 [12325,12326]
                                block [12328,12362]
                                    block_content [12336,12362]
                                        expr_stmt [12336,12362]
                                            expr [12336,12361]
                                                call [12336,12361]
                                                    name: PushAllReverse [12336,12350]
                                                    argument_list [12350,12361]
                                                        argument [12351,12355]
                                                            expr [12351,12355]
                                                                name: basm [12351,12355]
                                                        argument [12357,12360]
                                                            expr [12357,12360]
                                                                name: arg [12357,12360]
                                        expr_stmt [0,0]
                if_stmt [12369,12433]
                    else [12369,12433]
                        block [12374,12433]
                            block_content [12382,12433]
                                expr_stmt [12382,12433]
                                    expr [12382,12432]
                                        call [12382,12432]
                                            name: PushAllReverse [12382,12396]
                                            argument_list [12396,12432]
                                                argument [12397,12401]
                                                    expr [12397,12401]
                                                        name: basm [12397,12401]
                                                argument [12403,12406]
                                                    expr [12403,12406]
                                                        name: arg [12403,12406]
                                                argument [12408,12415]
                                                    expr [12408,12415]
                                                        name [12408,12415]
                                                            name: list [12408,12412]
                                                            index [12412,12415]
                                                                expr [12413,12414]
                                                                    literal: 0 [12413,12414]
                                                argument [12417,12431]
                                                    expr [12417,12431]
                                                        call [12417,12431]
                                                            name [12417,12429]
                                                                name: list [12417,12421]
                                                                operator: . [12421,12422]
                                                                name: PopLeft [12422,12429]
                                                            argument_list [12429,12431]
                                expr_stmt [0,0]
    empty_stmt [12445,12446]
    macro [12447,12455]
        name: template [12447,12455]
    expr_stmt [12456,13123]
        expr [12456,13123]
            operator: < [12456,12457]
            operator: > [12457,12458]
            name [12466,12506]
                name: PushAllHelper [12466,12479]
                argument_list [12479,12506]
                    argument [12480,12505]
                        name [12480,12505]
                            name: interpreter [12480,12491]
                            operator: :: [12491,12493]
                            name: RegisterList [12493,12505]
            block [12507,12781]
                expr [12511,12777]
                    specifier: static [12511,12517]
                    name: void [12518,12522]
                    macro [12523,12584]
                        name: Push [12523,12527]
                        argument_list [12527,12584]
                            argument [12528,12551]
                            argument [12553,12583]
                    block [12585,12777]
                        expr [12591,12630]
                            call [12591,12630]
                                name: DCHECK_EQ [12591,12600]
                                argument_list [12600,12630]
                                    argument [12601,12626]
                                        expr [12601,12626]
                                            call [12601,12622]
                                                name [12601,12620]
                                                    name: list [12601,12605]
                                                    operator: . [12605,12606]
                                                    name: register_count [12606,12620]
                                                argument_list [12620,12622]
                                            operator: % [12623,12624]
                                            literal: 2 [12625,12626]
                                    argument [12628,12629]
                                        expr [12628,12629]
                                            literal: 0 [12628,12629]
                        for [12636,12771]
                            control [12640,12710]
                                init [12641,12659]
                                    decl [12641,12658]
                                        type [12641,12644]
                                            name: int [12641,12644]
                                        name: reg_index [12645,12654]
                                        init [12655,12658]
                                            expr [12657,12658]
                                                literal: 0 [12657,12658]
                                condition [12660,12694]
                                    expr [12660,12693]
                                        name: reg_index [12660,12669]
                                        operator: < [12670,12671]
                                        call [12672,12693]
                                            name [12672,12691]
                                                name: list [12672,12676]
                                                operator: . [12676,12677]
                                                name: register_count [12677,12691]
                                            argument_list [12691,12693]
                                incr [12695,12709]
                                    expr [12695,12709]
                                        name: reg_index [12695,12704]
                                        operator: += [12705,12707]
                                        literal: 2 [12708,12709]
                            block [12711,12771]
                                block_content [12719,12771]
                                    expr_stmt [12719,12771]
                                        expr [12719,12770]
                                            call [12719,12770]
                                                name: PushAll [12719,12726]
                                                argument_list [12726,12770]
                                                    argument [12727,12731]
                                                        expr [12727,12731]
                                                            name: basm [12727,12731]
                                                    argument [12733,12748]
                                                        expr [12733,12748]
                                                            name [12733,12748]
                                                                name: list [12733,12737]
                                                                index [12737,12748]
                                                                    expr [12738,12747]
                                                                        name: reg_index [12738,12747]
                                                    argument [12750,12769]
                                                        expr [12750,12769]
                                                            name [12750,12769]
                                                                name: list [12750,12754]
                                                                index [12754,12769]
                                                                    expr [12755,12768]
                                                                        name: reg_index [12755,12764]
                                                                        operator: + [12765,12766]
                                                                        literal: 1 [12767,12768]
                                    expr_stmt [0,0]
            specifier: static [12784,12790]
            name: void [12791,12795]
            macro [12796,12890]
                name: PushReverse [12796,12807]
                argument_list [12807,12890]
                    argument [12808,12831]
                    argument [12859,12889]
            block [12891,13123]
                expr [12897,12938]
                    name: int [12897,12900]
                    name: reg_index [12901,12910]
                    operator: = [12911,12912]
                    call [12913,12934]
                        name [12913,12932]
                            name: list [12913,12917]
                            operator: . [12917,12918]
                            name: register_count [12918,12932]
                        argument_list [12932,12934]
                    operator: - [12935,12936]
                    literal: 1 [12937,12938]
                if_stmt [12944,13117]
                    if [12944,13117]
                        condition [12947,12967]
                            expr [12948,12966]
                                name: reg_index [12948,12957]
                                operator: % [12958,12959]
                                literal: 2 [12960,12961]
                                operator: == [12962,12964]
                                literal: 0 [12965,12966]
                        block [12968,13117]
                            block_content [13052,13117]
                                comment: // Push the padding register to round up the amount of values pushed. [12976,13045]
                                expr_stmt [13052,13098]
                                    expr [13052,13097]
                                        call [13052,13097]
                                            name: PushAllReverse [13052,13066]
                                            argument_list [13066,13097]
                                                argument [13067,13071]
                                                    expr [13067,13071]
                                                        name: basm [13067,13071]
                                                argument [13073,13088]
                                                    expr [13073,13088]
                                                        name [13073,13088]
                                                            name: list [13073,13077]
                                                            index [13077,13088]
                                                                expr [13078,13087]
                                                                    name: reg_index [13078,13087]
                                                argument [13090,13096]
                                                    expr [13090,13096]
                                                        name: padreg [13090,13096]
                                expr_stmt [13105,13117]
                                    expr [13105,13116]
                                        name: reg_index [13105,13114]
                                        operator: -- [13114,13116]
                                expr_stmt [0,0]
    for [13128,13240]
        control [13132,13166]
            init [13133,13134]
            condition [13135,13150]
                expr [13135,13149]
                    name: reg_index [13135,13144]
                    operator: >= [13145,13147]
                    literal: 1 [13148,13149]
            incr [13151,13165]
                expr [13151,13165]
                    name: reg_index [13151,13160]
                    operator: -= [13161,13163]
                    literal: 2 [13164,13165]
        block [13167,13240]
            block_content [13175,13234]
                expr_stmt [13175,13234]
                    expr [13175,13233]
                        call [13175,13233]
                            name: PushAllReverse [13175,13189]
                            argument_list [13189,13233]
                                argument [13190,13194]
                                    expr [13190,13194]
                                        name: basm [13190,13194]
                                argument [13196,13215]
                                    expr [13196,13215]
                                        name [13196,13215]
                                            name: list [13196,13200]
                                            index [13200,13215]
                                                expr [13201,13214]
                                                    name: reg_index [13201,13210]
                                                    operator: - [13211,13212]
                                                    literal: 1 [13213,13214]
                                argument [13217,13232]
                                    expr [13217,13232]
                                        name [13217,13232]
                                            name: list [13217,13221]
                                            index [13221,13232]
                                                expr [13222,13231]
                                                    name: reg_index [13222,13231]
    empty_stmt [13246,13247]
    macro [13249,13257]
        name: template [13249,13257]
    expr_stmt [13258,13294]
        expr [13258,13293]
            operator: < [13258,13259]
            name: typename [13259,13267]
            operator: ... [13267,13270]
            name: T [13271,13272]
            operator: > [13272,13273]
            name: PopAllHelper [13281,13293]
    macro [13295,13303]
        name: template [13295,13303]
    expr_stmt [13304,13379]
        expr [13304,13378]
            operator: < [13304,13305]
            operator: > [13305,13306]
            name [13314,13328]
                name: PopAllHelper [13314,13326]
                argument_list [13326,13328]
            block [13329,13378]
                expr [13333,13376]
                    specifier: static [13333,13339]
                    name: void [13340,13344]
                    macro [13345,13373]
                        name: Pop [13345,13348]
                        argument_list [13348,13373]
                            argument [13349,13372]
                    block [13374,13376]
    macro [13380,13388]
        name: template [13380,13388]
    expr_stmt [13389,13525]
        expr [13389,13524]
            operator: < [13389,13390]
            operator: > [13390,13391]
            name [13399,13421]
                name: PopAllHelper [13399,13411]
                argument_list [13411,13421]
                    argument [13412,13420]
                        name: Register [13412,13420]
            block [13422,13524]
                expr [13426,13522]
                    specifier: static [13426,13432]
                    name: void [13433,13437]
                    macro [13438,13480]
                        name: Pop [13438,13441]
                        argument_list [13441,13480]
                            argument [13442,13465]
                            argument [13467,13479]
                    block [13481,13522]
                        expr [13487,13517]
                            call [13487,13499]
                                name [13487,13497]
                                    name: basm [13487,13491]
                                    operator: -> [13491,13493]
                                    name: masm [13493,13497]
                                argument_list [13497,13499]
                            operator: -> [13499,13501]
                            call [13501,13517]
                                name: Pop [13501,13504]
                                argument_list [13504,13517]
                                    argument [13505,13508]
                                        expr [13505,13508]
                                            name: reg [13505,13508]
                                    argument [13510,13516]
                                        expr [13510,13516]
                                            name: padreg [13510,13516]
    macro [13526,13534]
        name: template [13526,13534]
    expr_stmt [13535,13788]
        expr [13535,13787]
            operator: < [13535,13536]
            name: typename [13536,13544]
            operator: ... [13544,13547]
            name: T [13548,13549]
            operator: > [13549,13550]
            name [13558,13596]
                name: PopAllHelper [13558,13570]
                argument_list [13570,13596]
                    argument [13571,13579]
                        name: Register [13571,13579]
                    argument [13581,13589]
                        name: Register [13581,13589]
                    argument [13591,13595]
                        name: T [13591,13592]
                        modifier: ... [13592,13595]
            block [13597,13787]
                expr [13601,13785]
                    specifier: static [13601,13607]
                    name: void [13608,13612]
                    macro [13613,13700]
                        name: Pop [13613,13616]
                        argument_list [13616,13700]
                            argument [13617,13640]
                            argument [13642,13655]
                            argument [13657,13670]
                            argument [13690,13699]
                    block [13701,13785]
                        expr [13707,13736]
                            call [13707,13719]
                                name [13707,13717]
                                    name: basm [13707,13711]
                                    operator: -> [13711,13713]
                                    name: masm [13713,13717]
                                argument_list [13717,13719]
                            operator: -> [13719,13721]
                            call [13721,13736]
                                name: Pop [13721,13724]
                                argument_list [13724,13736]
                                    argument [13725,13729]
                                        expr [13725,13729]
                                            name: reg1 [13725,13729]
                                    argument [13731,13735]
                                        expr [13731,13735]
                                            name: reg2 [13731,13735]
                        expr [13742,13780]
                            call [13742,13780]
                                name [13742,13765]
                                    name [13742,13760]
                                        name: PopAllHelper [13742,13754]
                                        argument_list [13754,13760]
                                            argument [13755,13759]
                                                name: T [13755,13756]
                                                modifier: ... [13756,13759]
                                    operator: :: [13760,13762]
                                    name: Pop [13762,13765]
                                argument_list [13765,13780]
                                    argument [13766,13770]
                                        expr [13766,13770]
                                            name: basm [13766,13770]
                                    argument [13772,13779]
                                        expr [13772,13779]
                                            name: tail [13772,13776]
                                            operator: ... [13776,13779]
    comment: // namespace detail [13793,13812]
    expr_stmt [13823,14115]
        expr [13823,14115]
            operator: < [13823,13824]
            name: typename [13824,13832]
            operator: ... [13832,13835]
            name: T [13836,13837]
            operator: > [13837,13838]
            name: int [13839,13842]
            macro [13843,13860]
                name: BaselineAssembler [13843,13860]
            name [13860,13866]
                operator: :: [13860,13862]
                name: Push [13862,13866]
            operator: ( [13866,13867]
            name: T [13867,13868]
            operator: ... [13868,13871]
            name: vals [13872,13876]
            operator: ) [13876,13877]
            block [13878,14115]
                comment: // We have to count the pushes first, to decide whether to add padding before [13882,13959]
                comment: // the first push. [13962,13980]
                expr [13983,14045]
                    name: int [13983,13986]
                    name: push_count [13987,13997]
                    operator: = [13998,13999]
                    call [14000,14045]
                        name [14000,14036]
                            name: detail [14000,14006]
                            operator: :: [14006,14008]
                            name [14008,14029]
                                name: CountPushHelper [14008,14023]
                                argument_list [14023,14029]
                                    argument [14024,14028]
                                        name: T [14024,14025]
                                        modifier: ... [14025,14028]
                            operator: :: [14029,14031]
                            name: Count [14031,14036]
                        argument_list [14036,14045]
                            argument [14037,14044]
                                expr [14037,14044]
                                    name: vals [14037,14041]
                                    operator: ... [14041,14044]
                if_stmt [14049,14111]
                    if [14049,14111]
                        condition [14052,14073]
                            expr [14053,14072]
                                name: push_count [14053,14063]
                                operator: % [14064,14065]
                                literal: 2 [14066,14067]
                                operator: == [14068,14070]
                                literal: 0 [14071,14072]
                        block [14074,14111]
                            block_content [14080,14111]
                                expr_stmt [14080,14111]
                                    expr [14080,14110]
                                        call [14080,14110]
                                            name [14080,14095]
                                                name: detail [14080,14086]
                                                operator: :: [14086,14088]
                                                name: PushAll [14088,14095]
                                            argument_list [14095,14110]
                                                argument [14096,14100]
                                                    expr [14096,14100]
                                                        name: this [14096,14100]
                                                argument [14102,14109]
                                                    expr [14102,14109]
                                                        name: vals [14102,14106]
                                                        operator: ... [14106,14109]
                                expr_stmt [0,0]
    if_stmt [14116,14170]
        else [14116,14170]
            block [14121,14170]
                block_content [14127,14166]
                    expr_stmt [14127,14166]
                        expr [14127,14165]
                            call [14127,14165]
                                name [14127,14142]
                                    name: detail [14127,14133]
                                    operator: :: [14133,14135]
                                    name: PushAll [14135,14142]
                                argument_list [14142,14165]
                                    argument [14143,14147]
                                        expr [14143,14147]
                                            name: this [14143,14147]
                                    argument [14149,14155]
                                        expr [14149,14155]
                                            name: padreg [14149,14155]
                                    argument [14157,14164]
                                        expr [14157,14164]
                                            name: vals [14157,14161]
                                            operator: ... [14161,14164]
    return [14173,14191]
        expr [14180,14190]
            name: push_count [14180,14190]
    expr_stmt [14204,17189]
        expr [14204,17189]
            operator: < [14204,14205]
            name: typename [14205,14213]
            operator: ... [14213,14216]
            name: T [14217,14218]
            operator: > [14218,14219]
            name: void [14220,14224]
            macro [14225,14242]
                name: BaselineAssembler [14225,14242]
            name [14242,14255]
                operator: :: [14242,14244]
                name: PushReverse [14244,14255]
            operator: ( [14255,14256]
            name: T [14256,14257]
            operator: ... [14257,14260]
            name: vals [14261,14265]
            operator: ) [14265,14266]
            block [14267,14311]
                expr [14271,14308]
                    call [14271,14308]
                        name [14271,14293]
                            name: detail [14271,14277]
                            operator: :: [14277,14279]
                            name: PushAllReverse [14279,14293]
                        argument_list [14293,14308]
                            argument [14294,14298]
                                expr [14294,14298]
                                    name: this [14294,14298]
                            argument [14300,14307]
                                expr [14300,14307]
                                    name: vals [14300,14304]
                                    operator: ... [14304,14307]
            name [14313,14337]
                name: template [14313,14321]
                argument_list [14322,14337]
                    argument [14323,14336]
                        name: typename [14323,14331]
                        modifier: ... [14331,14334]
                        name: T [14335,14336]
            name: void [14338,14342]
            macro [14343,14360]
                name: BaselineAssembler [14343,14360]
            name [14360,14365]
                operator: :: [14360,14362]
                name: Pop [14362,14365]
            operator: ( [14365,14366]
            name: T [14366,14367]
            operator: ... [14367,14370]
            name: registers [14371,14380]
            operator: ) [14380,14381]
            block [14382,14440]
                expr [14386,14437]
                    call [14386,14437]
                        name [14386,14417]
                            name: detail [14386,14392]
                            operator: :: [14392,14394]
                            name [14394,14412]
                                name: PopAllHelper [14394,14406]
                                argument_list [14406,14412]
                                    argument [14407,14411]
                                        name: T [14407,14408]
                                        modifier: ... [14408,14411]
                            operator: :: [14412,14414]
                            name: Pop [14414,14417]
                        argument_list [14417,14437]
                            argument [14418,14422]
                                expr [14418,14422]
                                    name: this [14418,14422]
                            argument [14424,14436]
                                expr [14424,14436]
                                    name: registers [14424,14433]
                                    operator: ... [14433,14436]
            name: void [14442,14446]
            macro [14447,14464]
                name: BaselineAssembler [14447,14464]
            name [14464,14488]
                operator: :: [14464,14466]
                name: LoadTaggedPointerField [14466,14488]
            operator: ( [14488,14489]
            name: Register [14489,14497]
            name: output [14498,14504]
            operator: , [14504,14505]
            name: Register [14506,14514]
            name: source [14515,14521]
            operator: , [14521,14522]
            name: int [14570,14573]
            name: offset [14574,14580]
            operator: ) [14580,14581]
            block [14582,14655]
                expr [14586,14652]
                    name: __ [14586,14588]
                    call [14589,14652]
                        name: LoadTaggedPointerField [14589,14611]
                        argument_list [14611,14652]
                            argument [14612,14618]
                                expr [14612,14618]
                                    name: output [14612,14618]
                            argument [14620,14651]
                                expr [14620,14651]
                                    call [14620,14651]
                                        name: FieldMemOperand [14620,14635]
                                        argument_list [14635,14651]
                                            argument [14636,14642]
                                                expr [14636,14642]
                                                    name: source [14636,14642]
                                            argument [14644,14650]
                                                expr [14644,14650]
                                                    name: offset [14644,14650]
            name: void [14656,14660]
            macro [14661,14678]
                name: BaselineAssembler [14661,14678]
            name [14678,14701]
                operator: :: [14678,14680]
                name: LoadTaggedSignedField [14680,14701]
            operator: ( [14701,14702]
            name: Register [14702,14710]
            name: output [14711,14717]
            operator: , [14717,14718]
            name: Register [14719,14727]
            name: source [14728,14734]
            operator: , [14734,14735]
            name: int [14782,14785]
            name: offset [14786,14792]
            operator: ) [14792,14793]
            block [14794,14866]
                expr [14798,14863]
                    name: __ [14798,14800]
                    call [14801,14863]
                        name: LoadTaggedSignedField [14801,14822]
                        argument_list [14822,14863]
                            argument [14823,14829]
                                expr [14823,14829]
                                    name: output [14823,14829]
                            argument [14831,14862]
                                expr [14831,14862]
                                    call [14831,14862]
                                        name: FieldMemOperand [14831,14846]
                                        argument_list [14846,14862]
                                            argument [14847,14853]
                                                expr [14847,14853]
                                                    name: source [14847,14853]
                                            argument [14855,14861]
                                                expr [14855,14861]
                                                    name: offset [14855,14861]
            name: void [14867,14871]
            macro [14872,14889]
                name: BaselineAssembler [14872,14889]
            name [14889,14909]
                operator: :: [14889,14891]
                name: LoadTaggedAnyField [14891,14909]
            operator: ( [14909,14910]
            name: Register [14910,14918]
            name: output [14919,14925]
            operator: , [14925,14926]
            name: Register [14927,14935]
            name: source [14936,14942]
            operator: , [14942,14943]
            name: int [14987,14990]
            name: offset [14991,14997]
            operator: ) [14997,14998]
            block [14999,15068]
                expr [15003,15065]
                    name: __ [15003,15005]
                    call [15006,15065]
                        name: LoadAnyTaggedField [15006,15024]
                        argument_list [15024,15065]
                            argument [15025,15031]
                                expr [15025,15031]
                                    name: output [15025,15031]
                            argument [15033,15064]
                                expr [15033,15064]
                                    call [15033,15064]
                                        name: FieldMemOperand [15033,15048]
                                        argument_list [15048,15064]
                                            argument [15049,15055]
                                                expr [15049,15055]
                                                    name: source [15049,15055]
                                            argument [15057,15063]
                                                expr [15057,15063]
                                                    name: offset [15057,15063]
            name: void [15069,15073]
            macro [15074,15091]
                name: BaselineAssembler [15074,15091]
            name [15091,15106]
                operator: :: [15091,15093]
                name: LoadByteField [15093,15106]
            operator: ( [15106,15107]
            name: Register [15107,15115]
            name: output [15116,15122]
            operator: , [15122,15123]
            name: Register [15124,15132]
            name: source [15133,15139]
            operator: , [15139,15140]
            name: int [15179,15182]
            name: offset [15183,15189]
            operator: ) [15189,15190]
            block [15191,15246]
                expr [15195,15243]
                    name: __ [15195,15197]
                    call [15198,15243]
                        name: Ldrb [15198,15202]
                        argument_list [15202,15243]
                            argument [15203,15209]
                                expr [15203,15209]
                                    name: output [15203,15209]
                            argument [15211,15242]
                                expr [15211,15242]
                                    call [15211,15242]
                                        name: FieldMemOperand [15211,15226]
                                        argument_list [15226,15242]
                                            argument [15227,15233]
                                                expr [15227,15233]
                                                    name: source [15227,15233]
                                            argument [15235,15241]
                                                expr [15235,15241]
                                                    name: offset [15235,15241]
            name: void [15247,15251]
            macro [15252,15269]
                name: BaselineAssembler [15252,15269]
            name [15269,15293]
                operator: :: [15269,15271]
                name: StoreTaggedSignedField [15271,15293]
            operator: ( [15293,15294]
            name: Register [15294,15302]
            name: target [15303,15309]
            operator: , [15309,15310]
            name: int [15311,15314]
            name: offset [15315,15321]
            operator: , [15321,15322]
            name: Smi [15370,15373]
            name: value [15374,15379]
            operator: ) [15379,15380]
            block [15381,15580]
                expr [15385,15408]
                    call [15385,15408]
                        name: ASM_CODE_COMMENT [15385,15401]
                        argument_list [15401,15408]
                            argument [15402,15407]
                                expr [15402,15407]
                                    name: masm_ [15402,15407]
                expr [15412,15444]
                    name: ScratchRegisterScope [15412,15432]
                    call [15433,15444]
                        name: temps [15433,15438]
                        argument_list [15438,15444]
                            argument [15439,15443]
                                expr [15439,15443]
                                    name: this [15439,15443]
                expr [15448,15485]
                    name: Register [15448,15456]
                    name: tmp [15457,15460]
                    operator: = [15461,15462]
                    call [15463,15485]
                        name [15463,15483]
                            name: temps [15463,15468]
                            operator: . [15468,15469]
                            name: AcquireScratch [15469,15483]
                        argument_list [15483,15485]
                expr [15489,15516]
                    name: __ [15489,15491]
                    call [15492,15516]
                        name: Mov [15492,15495]
                        argument_list [15495,15516]
                            argument [15496,15499]
                                expr [15496,15499]
                                    name: tmp [15496,15499]
                            argument [15501,15515]
                                expr [15501,15515]
                                    call [15501,15515]
                                        name: Operand [15501,15508]
                                        argument_list [15508,15515]
                                            argument [15509,15514]
                                                expr [15509,15514]
                                                    name: value [15509,15514]
                expr [15520,15577]
                    name: __ [15520,15522]
                    call [15523,15577]
                        name: StoreTaggedField [15523,15539]
                        argument_list [15539,15577]
                            argument [15540,15543]
                                expr [15540,15543]
                                    name: tmp [15540,15543]
                            argument [15545,15576]
                                expr [15545,15576]
                                    call [15545,15576]
                                        name: FieldMemOperand [15545,15560]
                                        argument_list [15560,15576]
                                            argument [15561,15567]
                                                expr [15561,15567]
                                                    name: target [15561,15567]
                                            argument [15569,15575]
                                                expr [15569,15575]
                                                    name: offset [15569,15575]
            name: void [15581,15585]
            macro [15586,15603]
                name: BaselineAssembler [15586,15603]
            name [15603,15637]
                operator: :: [15603,15605]
                name: StoreTaggedFieldWithWriteBarrier [15605,15637]
            operator: ( [15637,15638]
            name: Register [15638,15646]
            name: target [15647,15653]
            operator: , [15653,15654]
            name: int [15712,15715]
            name: offset [15716,15722]
            operator: , [15722,15723]
            name: Register [15781,15789]
            name: value [15790,15795]
            operator: ) [15795,15796]
            block [15797,16003]
                expr [15801,15824]
                    call [15801,15824]
                        name: ASM_CODE_COMMENT [15801,15817]
                        argument_list [15817,15824]
                            argument [15818,15823]
                                expr [15818,15823]
                                    name: masm_ [15818,15823]
                expr [15828,15887]
                    name: __ [15828,15830]
                    call [15831,15887]
                        name: StoreTaggedField [15831,15847]
                        argument_list [15847,15887]
                            argument [15848,15853]
                                expr [15848,15853]
                                    name: value [15848,15853]
                            argument [15855,15886]
                                expr [15855,15886]
                                    call [15855,15886]
                                        name: FieldMemOperand [15855,15870]
                                        argument_list [15870,15886]
                                            argument [15871,15877]
                                                expr [15871,15877]
                                                    name: target [15871,15877]
                                            argument [15879,15885]
                                                expr [15879,15885]
                                                    name: offset [15879,15885]
                expr [15891,16000]
                    name: __ [15891,15893]
                    call [15894,16000]
                        name: RecordWriteField [15894,15910]
                        argument_list [15910,16000]
                            argument [15911,15917]
                                expr [15911,15917]
                                    name: target [15911,15917]
                            argument [15919,15925]
                                expr [15919,15925]
                                    name: offset [15919,15925]
                            argument [15927,15932]
                                expr [15927,15932]
                                    name: value [15927,15932]
                            argument [15934,15952]
                                expr [15934,15952]
                                    name: kLRHasNotBeenSaved [15934,15952]
                            argument [15976,15999]
                                expr [15976,15999]
                                    name [15976,15999]
                                        name: SaveFPRegsMode [15976,15990]
                                        operator: :: [15990,15992]
                                        name: kIgnore [15992,15999]
            name: void [16004,16008]
            macro [16009,16026]
                name: BaselineAssembler [16009,16026]
            name [16026,16058]
                operator: :: [16026,16028]
                name: StoreTaggedFieldNoWriteBarrier [16028,16058]
            operator: ( [16058,16059]
            name: Register [16059,16067]
            name: target [16068,16074]
            operator: , [16074,16075]
            name: int [16131,16134]
            name: offset [16135,16141]
            operator: , [16141,16142]
            name: Register [16198,16206]
            name: value [16207,16212]
            operator: ) [16212,16213]
            block [16214,16280]
                expr [16218,16277]
                    name: __ [16218,16220]
                    call [16221,16277]
                        name: StoreTaggedField [16221,16237]
                        argument_list [16237,16277]
                            argument [16238,16243]
                                expr [16238,16243]
                                    name: value [16238,16243]
                            argument [16245,16276]
                                expr [16245,16276]
                                    call [16245,16276]
                                        name: FieldMemOperand [16245,16260]
                                        argument_list [16260,16276]
                                            argument [16261,16267]
                                                expr [16261,16267]
                                                    name: target [16261,16267]
                                            argument [16269,16275]
                                                expr [16269,16275]
                                                    name: offset [16269,16275]
            name: void [16282,16286]
            macro [16287,16304]
                name: BaselineAssembler [16287,16304]
            name [16304,16346]
                operator: :: [16304,16306]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [16306,16346]
            operator: ( [16346,16347]
            name: int32_t [16352,16359]
            name: weight [16360,16366]
            operator: , [16366,16367]
            name: Label [16368,16373]
            operator: * [16373,16374]
            name: skip_interrupt_label [16375,16395]
            operator: ) [16395,16396]
            block [16397,17189]
                expr [16401,16424]
                    call [16401,16424]
                        name: ASM_CODE_COMMENT [16401,16417]
                        argument_list [16417,16424]
                            argument [16418,16423]
                                expr [16418,16423]
                                    name: masm_ [16418,16423]
                expr [16428,16468]
                    name: ScratchRegisterScope [16428,16448]
                    call [16449,16468]
                        name: scratch_scope [16449,16462]
                        argument_list [16462,16468]
                            argument [16463,16467]
                                expr [16463,16467]
                                    name: this [16463,16467]
                expr [16472,16527]
                    name: Register [16472,16480]
                    name: feedback_cell [16481,16494]
                    operator: = [16495,16496]
                    call [16497,16527]
                        name [16497,16525]
                            name: scratch_scope [16497,16510]
                            operator: . [16510,16511]
                            name: AcquireScratch [16511,16525]
                        argument_list [16525,16527]
                expr [16531,16558]
                    call [16531,16558]
                        name: LoadFunction [16531,16543]
                        argument_list [16543,16558]
                            argument [16544,16557]
                                expr [16544,16557]
                                    name: feedback_cell [16544,16557]
                expr [16562,16672]
                    call [16562,16672]
                        name: LoadTaggedPointerField [16562,16584]
                        argument_list [16584,16672]
                            argument [16585,16598]
                                expr [16585,16598]
                                    name: feedback_cell [16585,16598]
                            argument [16600,16613]
                                expr [16600,16613]
                                    name: feedback_cell [16600,16613]
                            argument [16640,16671]
                                expr [16640,16671]
                                    name [16640,16671]
                                        name: JSFunction [16640,16650]
                                        operator: :: [16650,16652]
                                        name: kFeedbackCellOffset [16652,16671]
                expr [16677,16739]
                    name: Register [16677,16685]
                    name: interrupt_budget [16686,16702]
                    operator: = [16703,16704]
                    call [16705,16735]
                        name [16705,16733]
                            name: scratch_scope [16705,16718]
                            operator: . [16718,16719]
                            name: AcquireScratch [16719,16733]
                        argument_list [16733,16735]
                    operator: . [16735,16736]
                    call [16736,16739]
                        name: W [16736,16737]
                        argument_list [16737,16739]
                expr [16743,16846]
                    name: __ [16743,16745]
                    call [16746,16846]
                        name: Ldr [16746,16749]
                        argument_list [16749,16846]
                            argument [16750,16766]
                                expr [16750,16766]
                                    name: interrupt_budget [16750,16766]
                            argument [16777,16845]
                                expr [16777,16845]
                                    call [16777,16845]
                                        name: FieldMemOperand [16777,16792]
                                        argument_list [16792,16845]
                                            argument [16793,16806]
                                                expr [16793,16806]
                                                    name: feedback_cell [16793,16806]
                                            argument [16808,16844]
                                                expr [16808,16844]
                                                    name [16808,16844]
                                                        name: FeedbackCell [16808,16820]
                                                        operator: :: [16820,16822]
                                                        name: kInterruptBudgetOffset [16822,16844]
                comment: // Remember to set flags as part of the add! [16850,16894]
                expr [16897,16948]
                    name: __ [16897,16899]
                    call [16900,16948]
                        name: Adds [16900,16904]
                        argument_list [16904,16948]
                            argument [16905,16921]
                                expr [16905,16921]
                                    name: interrupt_budget [16905,16921]
                            argument [16923,16939]
                                expr [16923,16939]
                                    name: interrupt_budget [16923,16939]
                            argument [16941,16947]
                                expr [16941,16947]
                                    name: weight [16941,16947]
                expr [16952,17055]
                    name: __ [16952,16954]
                    call [16955,17055]
                        name: Str [16955,16958]
                        argument_list [16958,17055]
                            argument [16959,16975]
                                expr [16959,16975]
                                    name: interrupt_budget [16959,16975]
                            argument [16986,17054]
                                expr [16986,17054]
                                    call [16986,17054]
                                        name: FieldMemOperand [16986,17001]
                                        argument_list [17001,17054]
                                            argument [17002,17015]
                                                expr [17002,17015]
                                                    name: feedback_cell [17002,17015]
                                            argument [17017,17053]
                                                expr [17017,17053]
                                                    name [17017,17053]
                                                        name: FeedbackCell [17017,17029]
                                                        operator: :: [17029,17031]
                                                        name: kInterruptBudgetOffset [17031,17053]
                if_stmt [17059,17185]
                    if [17059,17185]
                        condition [17062,17084]
                            expr [17063,17083]
                                name: skip_interrupt_label [17063,17083]
                        block [17085,17185]
                            block_content [17128,17185]
                                comment: // Use compare flags set by Adds [17091,17123]
                                expr_stmt [17128,17149]
                                    expr [17128,17148]
                                        call [17128,17148]
                                            name: DCHECK_LT [17128,17137]
                                            argument_list [17137,17148]
                                                argument [17138,17144]
                                                    expr [17138,17144]
                                                        name: weight [17138,17144]
                                                argument [17146,17147]
                                                    expr [17146,17147]
                                                        literal: 0 [17146,17147]
                                function_decl [17154,17185]
                                    type [17154,17156]
                                        name: __ [17154,17156]
                                    name: B [17157,17158]
                                    parameter_list [17158,17184]
                                        parameter [17159,17161]
                                            decl [17159,17161]
                                                type [17159,17161]
                                                    name: ge [17159,17161]
                                        parameter [17163,17183]
                                            decl [17163,17183]
                                                type [17163,17183]
                                                    name: skip_interrupt_label [17163,17183]
                                expr_stmt [0,0]
    macro [17198,17215]
        name: BaselineAssembler [17198,17215]
    expr_stmt [17215,18034]
        expr [17215,18034]
            name [17215,17257]
                operator: :: [17215,17217]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [17217,17257]
            operator: ( [17257,17258]
            name: Register [17263,17271]
            name: weight [17272,17278]
            operator: , [17278,17279]
            name: Label [17280,17285]
            operator: * [17285,17286]
            name: skip_interrupt_label [17287,17307]
            operator: ) [17307,17308]
            block [17309,18034]
                expr [17313,17336]
                    call [17313,17336]
                        name: ASM_CODE_COMMENT [17313,17329]
                        argument_list [17329,17336]
                            argument [17330,17335]
                                expr [17330,17335]
                                    name: masm_ [17330,17335]
                expr [17340,17380]
                    name: ScratchRegisterScope [17340,17360]
                    call [17361,17380]
                        name: scratch_scope [17361,17374]
                        argument_list [17374,17380]
                            argument [17375,17379]
                                expr [17375,17379]
                                    name: this [17375,17379]
                expr [17384,17439]
                    name: Register [17384,17392]
                    name: feedback_cell [17393,17406]
                    operator: = [17407,17408]
                    call [17409,17439]
                        name [17409,17437]
                            name: scratch_scope [17409,17422]
                            operator: . [17422,17423]
                            name: AcquireScratch [17423,17437]
                        argument_list [17437,17439]
                expr [17443,17470]
                    call [17443,17470]
                        name: LoadFunction [17443,17455]
                        argument_list [17455,17470]
                            argument [17456,17469]
                                expr [17456,17469]
                                    name: feedback_cell [17456,17469]
                expr [17474,17584]
                    call [17474,17584]
                        name: LoadTaggedPointerField [17474,17496]
                        argument_list [17496,17584]
                            argument [17497,17510]
                                expr [17497,17510]
                                    name: feedback_cell [17497,17510]
                            argument [17512,17525]
                                expr [17512,17525]
                                    name: feedback_cell [17512,17525]
                            argument [17552,17583]
                                expr [17552,17583]
                                    name [17552,17583]
                                        name: JSFunction [17552,17562]
                                        operator: :: [17562,17564]
                                        name: kFeedbackCellOffset [17564,17583]
                expr [17589,17651]
                    name: Register [17589,17597]
                    name: interrupt_budget [17598,17614]
                    operator: = [17615,17616]
                    call [17617,17647]
                        name [17617,17645]
                            name: scratch_scope [17617,17630]
                            operator: . [17630,17631]
                            name: AcquireScratch [17631,17645]
                        argument_list [17645,17647]
                    operator: . [17647,17648]
                    call [17648,17651]
                        name: W [17648,17649]
                        argument_list [17649,17651]
                expr [17655,17758]
                    name: __ [17655,17657]
                    call [17658,17758]
                        name: Ldr [17658,17661]
                        argument_list [17661,17758]
                            argument [17662,17678]
                                expr [17662,17678]
                                    name: interrupt_budget [17662,17678]
                            argument [17689,17757]
                                expr [17689,17757]
                                    call [17689,17757]
                                        name: FieldMemOperand [17689,17704]
                                        argument_list [17704,17757]
                                            argument [17705,17718]
                                                expr [17705,17718]
                                                    name: feedback_cell [17705,17718]
                                            argument [17720,17756]
                                                expr [17720,17756]
                                                    name [17720,17756]
                                                        name: FeedbackCell [17720,17732]
                                                        operator: :: [17732,17734]
                                                        name: kInterruptBudgetOffset [17734,17756]
                comment: // Remember to set flags as part of the add! [17762,17806]
                expr [17809,17864]
                    name: __ [17809,17811]
                    call [17812,17864]
                        name: Adds [17812,17816]
                        argument_list [17816,17864]
                            argument [17817,17833]
                                expr [17817,17833]
                                    name: interrupt_budget [17817,17833]
                            argument [17835,17851]
                                expr [17835,17851]
                                    name: interrupt_budget [17835,17851]
                            argument [17853,17863]
                                expr [17853,17863]
                                    call [17853,17863]
                                        name [17853,17861]
                                            name: weight [17853,17859]
                                            operator: . [17859,17860]
                                            name: W [17860,17861]
                                        argument_list [17861,17863]
                expr [17868,17971]
                    name: __ [17868,17870]
                    call [17871,17971]
                        name: Str [17871,17874]
                        argument_list [17874,17971]
                            argument [17875,17891]
                                expr [17875,17891]
                                    name: interrupt_budget [17875,17891]
                            argument [17902,17970]
                                expr [17902,17970]
                                    call [17902,17970]
                                        name: FieldMemOperand [17902,17917]
                                        argument_list [17917,17970]
                                            argument [17918,17931]
                                                expr [17918,17931]
                                                    name: feedback_cell [17918,17931]
                                            argument [17933,17969]
                                                expr [17933,17969]
                                                    name [17933,17969]
                                                        name: FeedbackCell [17933,17945]
                                                        operator: :: [17945,17947]
                                                        name: kInterruptBudgetOffset [17947,17969]
                if_stmt [17975,18032]
                    if [17975,18032]
                        condition [17978,18000]
                            expr [17979,17999]
                                name: skip_interrupt_label [17979,17999]
                        block [18001,18032]
                            block_content [18001,18032]
                                function_decl [18001,18032]
                                    type [18001,18003]
                                        name: __ [18001,18003]
                                    name: B [18004,18005]
                                    parameter_list [18005,18031]
                                        parameter [18006,18008]
                                            decl [18006,18008]
                                                type [18006,18008]
                                                    name: ge [18006,18008]
                                        parameter [18010,18030]
                                            decl [18010,18030]
                                                type [18010,18030]
                                                    name: skip_interrupt_label [18010,18030]
    function [18036,18245]
        type [18036,18040]
            name: void [18036,18040]
        name [18041,18066]
            name: BaselineAssembler [18041,18058]
            operator: :: [18058,18060]
            name: AddSmi [18060,18066]
        parameter_list [18066,18089]
            parameter [18067,18079]
                decl [18067,18079]
                    type [18067,18079]
                        name: Register [18067,18075]
                    name: lhs [18076,18079]
            parameter [18081,18088]
                decl [18081,18088]
                    type [18081,18088]
                        name: Smi [18081,18084]
                    name: rhs [18085,18088]
        block [18090,18245]
            block_content [18094,18243]
                if_stmt [18094,18243]
                    if [18094,18171]
                        condition [18097,18119]
                            expr [18098,18118]
                                call [18098,18118]
                                    name: SmiValuesAre31Bits [18098,18116]
                                    argument_list [18116,18118]
                        block [18120,18171]
                            block_content [18126,18167]
                                decl_stmt [18126,18167]
                                    decl [18126,18166]
                                        type [18126,18128]
                                            name: __ [18126,18128]
                                        name: Add [18129,18132]
                                        argument_list [18132,18166]
                                            argument [18133,18140]
                                                expr [18133,18140]
                                                    call [18133,18140]
                                                        name [18133,18138]
                                                            name: lhs [18133,18136]
                                                            operator: . [18136,18137]
                                                            name: W [18137,18138]
                                                        argument_list [18138,18140]
                                            argument [18142,18149]
                                                expr [18142,18149]
                                                    call [18142,18149]
                                                        name [18142,18147]
                                                            name: lhs [18142,18145]
                                                            operator: . [18145,18146]
                                                            name: W [18146,18147]
                                                        argument_list [18147,18149]
                                            argument [18151,18165]
                                                expr [18151,18165]
                                                    call [18151,18165]
                                                        name: Immediate [18151,18160]
                                                        argument_list [18160,18165]
                                                            argument [18161,18164]
                                                                expr [18161,18164]
                                                                    name: rhs [18161,18164]
                    else [18172,18243]
                        block [18177,18243]
                            block_content [18183,18239]
                                expr_stmt [18183,18201]
                                    expr [18183,18200]
                                        call [18183,18200]
                                            name: DCHECK [18183,18189]
                                            argument_list [18189,18200]
                                                argument [18190,18199]
                                                    expr [18190,18199]
                                                        call [18190,18199]
                                                            name [18190,18197]
                                                                name: lhs [18190,18193]
                                                                operator: . [18193,18194]
                                                                name: IsX [18194,18197]
                                                            argument_list [18197,18199]
                                decl_stmt [18206,18239]
                                    decl [18206,18238]
                                        type [18206,18208]
                                            name: __ [18206,18208]
                                        name: Add [18209,18212]
                                        argument_list [18212,18238]
                                            argument [18213,18216]
                                                expr [18213,18216]
                                                    name: lhs [18213,18216]
                                            argument [18218,18221]
                                                expr [18218,18221]
                                                    name: lhs [18218,18221]
                                            argument [18223,18237]
                                                expr [18223,18237]
                                                    call [18223,18237]
                                                        name: Immediate [18223,18232]
                                                        argument_list [18232,18237]
                                                            argument [18233,18236]
                                                                expr [18233,18236]
                                                                    name: rhs [18233,18236]
    function [18247,19228]
        type [18247,18251]
            name: void [18247,18251]
        name [18252,18277]
            name: BaselineAssembler [18252,18269]
            operator: :: [18269,18271]
            name: Switch [18271,18277]
        parameter_list [18277,18375]
            parameter [18278,18290]
                decl [18278,18290]
                    type [18278,18290]
                        name: Register [18278,18286]
                    name: reg [18287,18290]
            parameter [18292,18311]
                decl [18292,18311]
                    type [18292,18311]
                        name: int [18292,18295]
                    name: case_value_base [18296,18311]
            parameter [18344,18358]
                decl [18344,18358]
                    type [18344,18358]
                        name: Label [18344,18349]
                        modifier: * [18349,18350]
                        modifier: * [18350,18351]
                    name: labels [18352,18358]
            parameter [18360,18374]
                decl [18360,18374]
                    type [18360,18374]
                        name: int [18360,18363]
                    name: num_labels [18364,18374]
        block [18376,19228]
            block_content [18380,19197]
                expr_stmt [18380,18404]
                    expr [18380,18403]
                        call [18380,18403]
                            name: ASM_CODE_COMMENT [18380,18396]
                            argument_list [18396,18403]
                                argument [18397,18402]
                                    expr [18397,18402]
                                        name: masm_ [18397,18402]
                decl_stmt [18407,18425]
                    decl [18407,18424]
                        type [18407,18412]
                            name: Label [18407,18412]
                        name: fallthrough [18413,18424]
                if_stmt [18428,18509]
                    if [18428,18509]
                        condition [18431,18453]
                            expr [18432,18452]
                                name: case_value_base [18432,18447]
                                operator: != [18448,18450]
                                literal: 0 [18451,18452]
                        block [18454,18509]
                            block_content [18460,18505]
                                decl_stmt [18460,18505]
                                    decl [18460,18504]
                                        type [18460,18462]
                                            name: __ [18460,18462]
                                        name: Sub [18463,18466]
                                        argument_list [18466,18504]
                                            argument [18467,18470]
                                                expr [18467,18470]
                                                    name: reg [18467,18470]
                                            argument [18472,18475]
                                                expr [18472,18475]
                                                    name: reg [18472,18475]
                                            argument [18477,18503]
                                                expr [18477,18503]
                                                    call [18477,18503]
                                                        name: Immediate [18477,18486]
                                                        argument_list [18486,18503]
                                                            argument [18487,18502]
                                                                expr [18487,18502]
                                                                    name: case_value_base [18487,18502]
                comment: // Mostly copied from code-generator-arm64.cc [18513,18558]
                decl_stmt [18561,18594]
                    decl [18561,18593]
                        type [18561,18581]
                            name: ScratchRegisterScope [18561,18581]
                        name: scope [18582,18587]
                        argument_list [18587,18593]
                            argument [18588,18592]
                                expr [18588,18592]
                                    name: this [18588,18592]
                decl_stmt [18597,18636]
                    decl [18597,18635]
                        type [18597,18605]
                            name: Register [18597,18605]
                        name: temp [18606,18610]
                        init [18611,18635]
                            expr [18613,18635]
                                call [18613,18635]
                                    name [18613,18633]
                                        name: scope [18613,18618]
                                        operator: . [18618,18619]
                                        name: AcquireScratch [18619,18633]
                                    argument_list [18633,18635]
                decl_stmt [18639,18651]
                    decl [18639,18650]
                        type [18639,18644]
                            name: Label [18639,18644]
                        name: table [18645,18650]
                expr_stmt [18654,18730]
                    expr [18654,18729]
                        call [18654,18729]
                            name: JumpIf [18654,18660]
                            argument_list [18660,18729]
                                argument [18661,18697]
                                    expr [18661,18697]
                                        name [18661,18697]
                                            name: Condition [18661,18670]
                                            operator: :: [18670,18672]
                                            name: kUnsignedGreaterThanEqual [18672,18697]
                                argument [18699,18702]
                                    expr [18699,18702]
                                        name: reg [18699,18702]
                                argument [18704,18714]
                                    expr [18704,18714]
                                        name: num_labels [18704,18714]
                                argument [18716,18728]
                                    expr [18716,18728]
                                        operator: & [18716,18717]
                                        name: fallthrough [18717,18728]
                decl_stmt [18733,18754]
                    decl [18733,18753]
                        type [18733,18735]
                            name: __ [18733,18735]
                        name: Adr [18736,18739]
                        argument_list [18739,18753]
                            argument [18740,18744]
                                expr [18740,18744]
                                    name: temp [18740,18744]
                            argument [18746,18752]
                                expr [18746,18752]
                                    operator: & [18746,18747]
                                    name: table [18747,18752]
                decl_stmt [18757,18822]
                    decl [18757,18780]
                        type [18757,18760]
                            name: int [18757,18760]
                        name: entry_size_log2 [18761,18776]
                        init [18777,18780]
                            expr [18779,18780]
                                literal: 2 [18779,18780]
                ifdef [18782,18821]
                    directive: ifdef [18783,18788]
                    name: V8_ENABLE_CONTROL_FLOW_INTEGRITY [18789,18821]
                expr_stmt [18824,18871]
                    expr [18824,18841]
                        operator: ++ [18824,18826]
                        name: entry_size_log2 [18826,18841]
                comment: // Account for BTI. [18844,18863]
                endif [18864,18870]
                    directive: endif [18865,18870]
                decl_stmt [18873,18929]
                    decl [18873,18928]
                        type [18873,18875]
                            name: __ [18873,18875]
                        name: Add [18876,18879]
                        argument_list [18879,18928]
                            argument [18880,18884]
                                expr [18880,18884]
                                    name: temp [18880,18884]
                            argument [18886,18890]
                                expr [18886,18890]
                                    name: temp [18886,18890]
                            argument [18892,18927]
                                expr [18892,18927]
                                    call [18892,18927]
                                        name: Operand [18892,18899]
                                        argument_list [18899,18927]
                                            argument [18900,18903]
                                                expr [18900,18903]
                                                    name: reg [18900,18903]
                                            argument [18905,18909]
                                                expr [18905,18909]
                                                    name: UXTW [18905,18909]
                                            argument [18911,18926]
                                                expr [18911,18926]
                                                    name: entry_size_log2 [18911,18926]
                decl_stmt [18932,18944]
                    decl [18932,18943]
                        type [18932,18934]
                            name: __ [18932,18934]
                        name: Br [18935,18937]
                        argument_list [18937,18943]
                            argument [18938,18942]
                                expr [18938,18942]
                                    name: temp [18938,18942]
                block [18947,19197]
                    block_content [18953,19193]
                        decl_stmt [18953,19029]
                            decl [18953,19028]
                                type [18953,18984]
                                    name [18953,18984]
                                        name: TurboAssembler [18953,18967]
                                        operator: :: [18967,18969]
                                        name: BlockPoolsScope [18969,18984]
                                name: block_pools [18985,18996]
                                argument_list [18996,19028]
                                    argument [18997,19002]
                                        expr [18997,19002]
                                            name: masm_ [18997,19002]
                                    argument [19004,19027]
                                        expr [19004,19027]
                                            name: num_labels [19004,19014]
                                            operator: * [19015,19016]
                                            name: kInstrSize [19017,19027]
                        decl_stmt [19034,19050]
                            decl [19034,19049]
                                type [19034,19036]
                                    name: __ [19034,19036]
                                name: Bind [19037,19041]
                                argument_list [19041,19049]
                                    argument [19042,19048]
                                        expr [19042,19048]
                                            operator: & [19042,19043]
                                            name: table [19043,19048]
                        for [19055,19145]
                            control [19059,19091]
                                init [19060,19070]
                                    decl [19060,19069]
                                        type [19060,19063]
                                            name: int [19060,19063]
                                        name: i [19064,19065]
                                        init [19066,19069]
                                            expr [19068,19069]
                                                literal: 0 [19068,19069]
                                condition [19071,19086]
                                    expr [19071,19085]
                                        name: i [19071,19072]
                                        operator: < [19073,19074]
                                        name: num_labels [19075,19085]
                                incr [19087,19090]
                                    expr [19087,19090]
                                        operator: ++ [19087,19089]
                                        name: i [19089,19090]
                            block [19092,19145]
                                block_content [19100,19139]
                                    function_decl [19100,19116]
                                        type [19100,19102]
                                            name: __ [19100,19102]
                                        name: JumpTarget [19103,19113]
                                        parameter_list [19113,19115]
                                    decl_stmt [19123,19139]
                                        decl [19123,19138]
                                            type [19123,19125]
                                                name: __ [19123,19125]
                                            name: B [19126,19127]
                                            argument_list [19127,19138]
                                                argument [19128,19137]
                                                    expr [19128,19137]
                                                        name [19128,19137]
                                                            name: labels [19128,19134]
                                                            index [19134,19137]
                                                                expr [19135,19136]
                                                                    name: i [19135,19136]
                        function_decl [19150,19166]
                            type [19150,19152]
                                name: __ [19150,19152]
                            name: JumpTarget [19153,19163]
                            parameter_list [19163,19165]
                        decl_stmt [19171,19193]
                            decl [19171,19192]
                                type [19171,19173]
                                    name: __ [19171,19173]
                                name: Bind [19174,19178]
                                argument_list [19178,19192]
                                    argument [19179,19191]
                                        expr [19179,19191]
                                            operator: & [19179,19180]
                                            name: fallthrough [19180,19191]
    undef [19201,19210]
        directive: undef [19202,19207]
        name: __ [19208,19210]
    define [19211,19227]
        directive: define [19212,19218]
        macro [19219,19221]
            name: __ [19219,19221]
        value [19222,19227]
    function [19229,20960]
        type [19229,19233]
            name: void [19229,19233]
        name [19234,19263]
            name: BaselineAssembler [19234,19251]
            operator: :: [19251,19253]
            name: EmitReturn [19253,19263]
        parameter_list [19263,19285]
            parameter [19264,19284]
                decl [19264,19284]
                    type [19264,19279]
                        name: MacroAssembler [19264,19278]
                        modifier: * [19278,19279]
                    name: masm [19280,19284]
        block [19286,20960]
            block_content [19290,20946]
                expr_stmt [19290,19313]
                    expr [19290,19312]
                        call [19290,19312]
                            name: ASM_CODE_COMMENT [19290,19306]
                            argument_list [19306,19312]
                                argument [19307,19311]
                                    expr [19307,19311]
                                        name: masm [19307,19311]
                decl_stmt [19316,19345]
                    decl [19316,19344]
                        type [19316,19333]
                            name: BaselineAssembler [19316,19333]
                        name: basm [19334,19338]
                        argument_list [19338,19344]
                            argument [19339,19343]
                                expr [19339,19343]
                                    name: masm [19339,19343]
                decl_stmt [19349,19414]
                    decl [19349,19413]
                        type [19349,19357]
                            name: Register [19349,19357]
                        name: weight [19358,19364]
                        init [19365,19413]
                            expr [19367,19413]
                                call [19367,19413]
                                    name [19367,19411]
                                        name: BaselineLeaveFrameDescriptor [19367,19395]
                                        operator: :: [19395,19397]
                                        name: WeightRegister [19397,19411]
                                    argument_list [19411,19413]
                decl_stmt [19417,19491]
                    decl [19417,19490]
                        type [19417,19425]
                            name: Register [19417,19425]
                        name: params_size [19426,19437]
                        init [19438,19490]
                            expr [19440,19490]
                                call [19440,19490]
                                    name [19440,19488]
                                        name: BaselineLeaveFrameDescriptor [19440,19468]
                                        operator: :: [19468,19470]
                                        name: ParamsSizeRegister [19470,19488]
                                    argument_list [19488,19490]
                block [19495,20107]
                    block_content [19501,20103]
                        expr_stmt [19501,19558]
                            expr [19501,19557]
                                call [19501,19557]
                                    name: ASM_CODE_COMMENT_STRING [19501,19524]
                                    argument_list [19524,19557]
                                        argument [19525,19529]
                                            expr [19525,19529]
                                                name: masm [19525,19529]
                                        argument [19531,19556]
                                            expr [19531,19556]
                                                literal: "Update Interrupt Budget" [19531,19556]
                        decl_stmt [19564,19591]
                            decl [19564,19590]
                                type [19564,19569]
                                    name: Label [19564,19569]
                                name: skip_interrupt_label [19570,19590]
                        decl_stmt [19596,19671]
                            decl [19596,19670]
                                type [19596,19598]
                                    name: __ [19596,19598]
                                name: AddToInterruptBudgetAndJumpIfNotExceeded [19599,19639]
                                argument_list [19639,19670]
                                    argument [19640,19646]
                                        expr [19640,19646]
                                            name: weight [19640,19646]
                                    argument [19648,19669]
                                        expr [19648,19669]
                                            operator: & [19648,19649]
                                            name: skip_interrupt_label [19649,19669]
                        expr_stmt [19676,19707]
                            expr [19676,19706]
                                name: __ [19676,19678]
                                call [19679,19685]
                                    name: masm [19679,19683]
                                    argument_list [19683,19685]
                                operator: -> [19685,19687]
                                call [19687,19706]
                                    name: SmiTag [19687,19693]
                                    argument_list [19693,19706]
                                        argument [19694,19705]
                                            expr [19694,19705]
                                                name: params_size [19694,19705]
                        expr_stmt [19712,19774]
                            expr [19712,19773]
                                name: __ [19712,19714]
                                call [19715,19721]
                                    name: masm [19715,19719]
                                    argument_list [19719,19721]
                                operator: -> [19721,19723]
                                call [19723,19773]
                                    name: Push [19723,19727]
                                    argument_list [19727,19773]
                                        argument [19728,19739]
                                            expr [19728,19739]
                                                name: params_size [19728,19739]
                                        argument [19741,19772]
                                            expr [19741,19772]
                                                name: kInterpreterAccumulatorRegister [19741,19772]
                        decl_stmt [19780,19813]
                            decl [19780,19812]
                                type [19780,19782]
                                    name: __ [19780,19782]
                                name: LoadContext [19783,19794]
                                argument_list [19794,19812]
                                    argument [19795,19811]
                                        expr [19795,19811]
                                            name: kContextRegister [19795,19811]
                        decl_stmt [19818,19855]
                            decl [19818,19854]
                                type [19818,19820]
                                    name: __ [19818,19820]
                                name: LoadFunction [19821,19833]
                                argument_list [19833,19854]
                                    argument [19834,19853]
                                        expr [19834,19853]
                                            name: kJSFunctionRegister [19834,19853]
                        expr_stmt [19860,19905]
                            expr [19860,19904]
                                name: __ [19860,19862]
                                call [19863,19869]
                                    name: masm [19863,19867]
                                    argument_list [19867,19869]
                                operator: -> [19869,19871]
                                call [19871,19904]
                                    name: PushArgument [19871,19883]
                                    argument_list [19883,19904]
                                        argument [19884,19903]
                                            expr [19884,19903]
                                                name: kJSFunctionRegister [19884,19903]
                        decl_stmt [19910,19963]
                            decl [19910,19962]
                                type [19910,19912]
                                    name: __ [19910,19912]
                                name: CallRuntime [19913,19924]
                                argument_list [19924,19962]
                                    argument [19925,19958]
                                        expr [19925,19958]
                                            name [19925,19958]
                                                name: Runtime [19925,19932]
                                                operator: :: [19932,19934]
                                                name: kBytecodeBudgetInterrupt [19934,19958]
                                    argument [19960,19961]
                                        expr [19960,19961]
                                            literal: 1 [19960,19961]
                        expr_stmt [19969,20030]
                            expr [19969,20029]
                                name: __ [19969,19971]
                                call [19972,19978]
                                    name: masm [19972,19976]
                                    argument_list [19976,19978]
                                operator: -> [19978,19980]
                                call [19980,20029]
                                    name: Pop [19980,19983]
                                    argument_list [19983,20029]
                                        argument [19984,20015]
                                            expr [19984,20015]
                                                name: kInterpreterAccumulatorRegister [19984,20015]
                                        argument [20017,20028]
                                            expr [20017,20028]
                                                name: params_size [20017,20028]
                        expr_stmt [20035,20068]
                            expr [20035,20067]
                                name: __ [20035,20037]
                                call [20038,20044]
                                    name: masm [20038,20042]
                                    argument_list [20042,20044]
                                operator: -> [20044,20046]
                                call [20046,20067]
                                    name: SmiUntag [20046,20054]
                                    argument_list [20054,20067]
                                        argument [20055,20066]
                                            expr [20055,20066]
                                                name: params_size [20055,20066]
                        decl_stmt [20072,20103]
                            decl [20072,20102]
                                type [20072,20074]
                                    name: __ [20072,20074]
                                name: Bind [20075,20079]
                                argument_list [20079,20102]
                                    argument [20080,20101]
                                        expr [20080,20101]
                                            operator: & [20080,20081]
                                            name: skip_interrupt_label [20081,20101]
                decl_stmt [20111,20164]
                    decl [20111,20163]
                        type [20111,20150]
                            name [20111,20150]
                                name: BaselineAssembler [20111,20128]
                                operator: :: [20128,20130]
                                name: ScratchRegisterScope [20130,20150]
                        name: temps [20151,20156]
                        argument_list [20156,20163]
                            argument [20157,20162]
                                expr [20157,20162]
                                    operator: & [20157,20158]
                                    name: basm [20158,20162]
                decl_stmt [20167,20220]
                    decl [20167,20219]
                        type [20167,20175]
                            name: Register [20167,20175]
                        name: actual_params_size [20176,20194]
                        init [20195,20219]
                            expr [20197,20219]
                                call [20197,20219]
                                    name [20197,20217]
                                        name: temps [20197,20202]
                                        operator: . [20202,20203]
                                        name: AcquireScratch [20203,20217]
                                    argument_list [20217,20219]
                comment: // Compute the size of the actual parameters + receiver (in bytes). [20223,20290]
                decl_stmt [20293,20384]
                    decl [20293,20383]
                        type [20293,20295]
                            name: __ [20293,20295]
                        name: Move [20296,20300]
                        argument_list [20300,20383]
                            argument [20301,20319]
                                expr [20301,20319]
                                    name: actual_params_size [20301,20319]
                            argument [20331,20382]
                                expr [20331,20382]
                                    call [20331,20382]
                                        name: MemOperand [20331,20341]
                                        argument_list [20341,20382]
                                            argument [20342,20344]
                                                expr [20342,20344]
                                                    name: fp [20342,20344]
                                            argument [20346,20381]
                                                expr [20346,20381]
                                                    name [20346,20381]
                                                        name: StandardFrameConstants [20346,20368]
                                                        operator: :: [20368,20370]
                                                        name: kArgCOffset [20370,20381]
                comment: // If actual is bigger than formal, then we should use it to free up the stack [20388,20466]
                comment: // arguments. [20469,20482]
                decl_stmt [20485,20512]
                    decl [20485,20511]
                        type [20485,20490]
                            name: Label [20485,20490]
                        name: corrected_args_count [20491,20511]
                decl_stmt [20515,20623]
                    decl [20515,20622]
                        type [20515,20517]
                            name: __ [20515,20517]
                        name: JumpIf [20518,20524]
                        argument_list [20524,20622]
                            argument [20525,20553]
                                expr [20525,20553]
                                    name [20525,20553]
                                        name: Condition [20525,20534]
                                        operator: :: [20534,20536]
                                        name: kGreaterThanEqual [20536,20553]
                            argument [20555,20566]
                                expr [20555,20566]
                                    name: params_size [20555,20566]
                            argument [20568,20586]
                                expr [20568,20586]
                                    name: actual_params_size [20568,20586]
                            argument [20600,20621]
                                expr [20600,20621]
                                    operator: & [20600,20601]
                                    name: corrected_args_count [20601,20621]
                expr_stmt [20626,20674]
                    expr [20626,20673]
                        name: __ [20626,20628]
                        call [20629,20635]
                            name: masm [20629,20633]
                            argument_list [20633,20635]
                        operator: -> [20635,20637]
                        call [20637,20673]
                            name: Mov [20637,20640]
                            argument_list [20640,20673]
                                argument [20641,20652]
                                    expr [20641,20652]
                                        name: params_size [20641,20652]
                                argument [20654,20672]
                                    expr [20654,20672]
                                        name: actual_params_size [20654,20672]
                decl_stmt [20677,20708]
                    decl [20677,20707]
                        type [20677,20679]
                            name: __ [20677,20679]
                        name: Bind [20680,20684]
                        argument_list [20684,20707]
                            argument [20685,20706]
                                expr [20685,20706]
                                    operator: & [20685,20686]
                                    name: corrected_args_count [20686,20706]
                comment: // Leave the frame (also dropping the register file). [20712,20765]
                expr_stmt [20768,20812]
                    expr [20768,20811]
                        name: __ [20768,20770]
                        call [20771,20777]
                            name: masm [20771,20775]
                            argument_list [20775,20777]
                        operator: -> [20777,20779]
                        call [20779,20811]
                            name: LeaveFrame [20779,20789]
                            argument_list [20789,20811]
                                argument [20790,20810]
                                    expr [20790,20810]
                                        name [20790,20810]
                                            name: StackFrame [20790,20800]
                                            operator: :: [20800,20802]
                                            name: BASELINE [20802,20810]
                comment: // Drop receiver + arguments. [20816,20845]
                expr_stmt [20848,20926]
                    expr [20848,20925]
                        name: __ [20848,20850]
                        call [20851,20857]
                            name: masm [20851,20855]
                            argument_list [20855,20857]
                        operator: -> [20857,20859]
                        call [20859,20925]
                            name: DropArguments [20859,20872]
                            argument_list [20872,20925]
                                argument [20873,20884]
                                    expr [20873,20884]
                                        name: params_size [20873,20884]
                                argument [20886,20924]
                                    expr [20886,20924]
                                        name [20886,20924]
                                            name: TurboAssembler [20886,20900]
                                            operator: :: [20900,20902]
                                            name: kCountIncludesReceiver [20902,20924]
                expr_stmt [20929,20946]
                    expr [20929,20945]
                        name: __ [20929,20931]
                        call [20932,20938]
                            name: masm [20932,20936]
                            argument_list [20936,20938]
                        operator: -> [20938,20940]
                        call [20940,20945]
                            name: Ret [20940,20943]
                            argument_list [20943,20945]
    undef [20950,20959]
        directive: undef [20951,20956]
        name: __ [20957,20959]
    function [20961,21189]
        type [20961,20972]
            specifier: inline [20961,20967]
            name: void [20968,20972]
        name [20973,21030]
            name: EnsureAccumulatorPreservedScope [20973,21004]
            operator: :: [21004,21006]
            name: AssertEqualToAccumulator [21006,21030]
        parameter_list [21030,21049]
            parameter [21036,21048]
                decl [21036,21048]
                    type [21036,21044]
                        name: Register [21036,21044]
                    name: reg [21045,21048]
        block [21050,21189]
            block_content [21054,21187]
                expr_stmt [21054,21122]
                    expr [21054,21121]
                        call [21054,21072]
                            name [21054,21070]
                                name: assembler_ [21054,21064]
                                operator: -> [21064,21066]
                                name: masm [21066,21070]
                            argument_list [21070,21072]
                        operator: -> [21072,21074]
                        call [21074,21121]
                            name: CmpTagged [21074,21083]
                            argument_list [21083,21121]
                                argument [21084,21087]
                                    expr [21084,21087]
                                        name: reg [21084,21087]
                                argument [21089,21120]
                                    expr [21089,21120]
                                        name: kInterpreterAccumulatorRegister [21089,21120]
                expr_stmt [21125,21187]
                    expr [21125,21186]
                        call [21125,21143]
                            name [21125,21141]
                                name: assembler_ [21125,21135]
                                operator: -> [21135,21137]
                                name: masm [21137,21141]
                            argument_list [21141,21143]
                        operator: -> [21143,21145]
                        call [21145,21186]
                            name: Assert [21145,21151]
                            argument_list [21151,21186]
                                argument [21152,21154]
                                    expr [21152,21154]
                                        name: eq [21152,21154]
                                argument [21156,21185]
                                    expr [21156,21185]
                                        name [21156,21185]
                                            name: AbortReason [21156,21167]
                                            operator: :: [21167,21169]
                                            name: kUnexpectedValue [21169,21185]
    comment: // namespace baseline [21194,21215]
    comment: // namespace internal [21219,21240]
    comment: // namespace v8 [21244,21259]
    endif [21261,21267]
        directive: endif [21262,21267]
    comment: // V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [21269,21321]