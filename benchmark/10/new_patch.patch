--- ./benchmark/10/test2.cc	2024-01-28 20:07:22
+++ ./benchmark/10/test2_.cc	2024-01-28 20:07:42
@@ -280,10 +280,11 @@ void InstructionSelector::VisitLoad(Node* node) {
       opcode = kRiscvLoadDecompressTaggedSigned;
       break;
     case MachineRepresentation::kTaggedPointer:
-      opcode = kRiscvLoadDecompressTaggedPointer;
-      break;
+      
+      
     case MachineRepresentation::kTagged:
-      opcode = kRiscvLoadDecompressAnyTagged;
+      immediate_mode = kLoadStoreImm32;
+opcode = kArm64LdrDecompressTagged;
       break;
 #else
     case MachineRepresentation::kTaggedSigned:   // Fall through.
@@ -291,7 +292,8 @@ void InstructionSelector::VisitLoad(Node* node) {
     case MachineRepresentation::kTagged:         // Fall through.
 #endif
     case MachineRepresentation::kWord64:
-      opcode = kRiscvLd;
+      immediate_mode = kLoadStoreImm64;
+opcode = kRiscvLd;
       break;
     case MachineRepresentation::kSimd128:
       opcode = kRiscvRvvLd;
@@ -305,7 +307,8 @@ void InstructionSelector::VisitLoad(Node* node) {
                                                  // Fall through.
 #endif
     case MachineRepresentation::kSimd256:           // Fall through.
-    case MachineRepresentation::kSandboxedPointer:  // Fall through.
+    immediate_mode = kLoadStoreImm64;
+case MachineRepresentation::kSandboxedPointer:  // Fall through.
     case MachineRepresentation::kMapWord:           // Fall through.
     case MachineRepresentation::kNone:
       UNREACHABLE();
@@ -1938,10 +1941,10 @@ void InstructionSelector::VisitWord64AtomicLoad(Node* 
       opcode = kRiscv64LdDecompressTaggedSigned;
       break;
     case MachineRepresentation::kTaggedPointer:
-      opcode = kRiscv64LdDecompressTaggedPointer;
+      opcode = kArm64LdarDecompressTagged;
       break;
     case MachineRepresentation::kTagged:
-      opcode = kRiscv64LdDecompressAnyTagged;
+      opcode = kArm64LdarDecompressTagged;
       break;
 #else
     case MachineRepresentation::kTaggedSigned:   // Fall through.
