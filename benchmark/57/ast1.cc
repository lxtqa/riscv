unit [0,0]
    comment: // Copyright 2021 the V8 project authors. All rights reserved. [0,62]
    comment: // Use of this source code is governed by a BSD-style license that can be [63,136]
    comment: // found in the LICENSE file. [137,166]
    ifndef [168,225]
        directive: ifndef [169,175]
        name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [176,225]
    define [226,283]
        directive: define [227,233]
        macro [234,283]
            name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [234,283]
    include [285,329]
        directive: include [286,293]
        file: "src/baseline/baseline-assembler.h" [294,329]
    include [330,386]
        directive: include [331,338]
        file: "src/codegen/arm64/macro-assembler-arm64-inl.h" [339,386]
    include [387,433]
        directive: include [388,395]
        file: "src/codegen/interface-descriptors.h" [396,433]
    namespace [435,8540]
        name: v8 [445,447]
        block [448,8540]
            namespace [450,8300]
                block [469,8300]
                    namespace [471,1308]
                        name: baseline [481,489]
                        block [490,1308]
                            class [493,1035]
                                name [499,538]
                                    name: BaselineAssembler [499,516]
                                    operator: :: [516,518]
                                    name: ScratchRegisterScope [518,538]
                                block [539,1035]
                                    expr_stmt [542,1031]
                                        expr [542,641]
                                            specifier: public [542,548]
                                            operator: : [548,549]
                                            specifier: explicit [552,560]
                                            call [561,611]
                                                name: ScratchRegisterScope [561,581]
                                                argument_list [581,611]
                                                    argument [582,610]
                                                        expr [582,610]
                                                            name: BaselineAssembler [582,599]
                                                            operator: * [599,600]
                                                            name: assembler [601,610]
                                            operator: : [618,619]
                                            call [620,641]
                                                name: assembler_ [620,630]
                                                argument_list [630,641]
                                                    argument [631,640]
                                                        expr [631,640]
                                                            name: assembler [631,640]
                                        operator: , [641,642]
                                        expr [651,698]
                                            call [651,698]
                                                name: prev_scope_ [651,662]
                                                argument_list [662,698]
                                                    argument [663,697]
                                                        expr [663,697]
                                                            name [663,697]
                                                                name: assembler [663,672]
                                                                operator: -> [672,674]
                                                                name: scratch_register_scope_ [674,697]
                                        operator: , [698,699]
                                        macro [708,741]
                                            name: wrapped_scope_ [708,722]
                                            argument_list [722,741]
                                                argument [723,740]
                                        expr [742,1030]
                                            block [742,983]
                                                if_stmt [748,977]
                                                    if [748,977]
                                                        condition [751,789]
                                                            expr [752,788]
                                                                operator: ! [752,753]
                                                                name [753,788]
                                                                    name: assembler_ [753,763]
                                                                    operator: -> [763,765]
                                                                    name: scratch_register_scope_ [765,788]
                                                        block [790,977]
                                                            block_content [909,977]
                                                                comment: // If we haven't opened a scratch scope yet, for the first one add a [798,866]
                                                                comment: // couple of extra registers. [873,902]
                                                                expr_stmt [909,942]
                                                                    expr [909,941]
                                                                        call [909,941]
                                                                            name [909,931]
                                                                                name: wrapped_scope_ [909,923]
                                                                                operator: . [923,924]
                                                                                name: Include [924,931]
                                                                            argument_list [931,941]
                                                                                argument [932,935]
                                                                                    expr [932,935]
                                                                                        name: x14 [932,935]
                                                                                argument [937,940]
                                                                                    expr [937,940]
                                                                                        name: x15 [937,940]
                                                                expr_stmt [949,977]
                                                                    expr [949,976]
                                                                        call [949,976]
                                                                            name [949,971]
                                                                                name: wrapped_scope_ [949,963]
                                                                                operator: . [963,964]
                                                                                name: Include [964,971]
                                                                            argument_list [971,976]
                                                                                argument [972,975]
                                                                                    expr [972,975]
                                                                                        name: x19 [972,975]
                                                                expr_stmt [0,0]
                                            name [988,1023]
                                                name: assembler_ [988,998]
                                                operator: -> [998,1000]
                                                name: scratch_register_scope_ [1000,1023]
                                            operator: = [1024,1025]
                                            name: this [1026,1030]
                            destructor [1038,1116]
                                name: ~ScratchRegisterScope [1038,1059]
                                parameter_list [1059,1061]
                                block [1062,1116]
                                    block_content [1064,1114]
                                        expr_stmt [1064,1114]
                                            expr [1064,1113]
                                                name [1064,1099]
                                                    name: assembler_ [1064,1074]
                                                    operator: -> [1074,1076]
                                                    name: scratch_register_scope_ [1076,1099]
                                                operator: = [1100,1101]
                                                name: prev_scope_ [1102,1113]
                            function [1120,1183]
                                type [1120,1128]
                                    name: Register [1120,1128]
                                name: AcquireScratch [1129,1143]
                                parameter_list [1143,1145]
                                block [1146,1183]
                                    block_content [1148,1181]
                                        return [1148,1181]
                                            expr [1155,1180]
                                                call [1155,1180]
                                                    name [1155,1178]
                                                        name: wrapped_scope_ [1155,1169]
                                                        operator: . [1169,1170]
                                                        name: AcquireX [1170,1178]
                                                    argument_list [1178,1180]
                            expr_stmt [1186,1227]
                                expr [1186,1226]
                                    specifier: private [1186,1193]
                                    operator: : [1193,1194]
                                    name: BaselineAssembler [1197,1214]
                                    operator: * [1214,1215]
                                    name: assembler_ [1216,1226]
                            decl_stmt [1230,1264]
                                decl [1230,1263]
                                    type [1230,1251]
                                        name: ScratchRegisterScope [1230,1250]
                                        modifier: * [1250,1251]
                                    name: prev_scope_ [1252,1263]
                            decl_stmt [1267,1306]
                                decl [1267,1305]
                                    type [1267,1290]
                                        name: UseScratchRegisterScope [1267,1290]
                                    name: wrapped_scope_ [1291,1305]
                    empty_stmt [1308,1309]
                    comment: // TODO(v8:11461): Unify condition names in the MacroAssembler. [1311,1374]
                    enum [1375,1725]
                        class [1380,1724]
                            name: Condition [1386,1395]
                            super_list [1396,1406]
                                super [1398,1406]
                                    name: uint32_t [1398,1406]
                            block [1407,1724]
                                expr_stmt [1411,1722]
                                    expr [1411,1422]
                                        name: kEqual [1411,1417]
                                        operator: = [1418,1419]
                                        name: eq [1420,1422]
                                    operator: , [1422,1423]
                                    expr [1426,1440]
                                        name: kNotEqual [1426,1435]
                                        operator: = [1436,1437]
                                        name: ne [1438,1440]
                                    operator: , [1440,1441]
                                    expr [1445,1459]
                                        name: kLessThan [1445,1454]
                                        operator: = [1455,1456]
                                        name: lt [1457,1459]
                                    operator: , [1459,1460]
                                    expr [1463,1480]
                                        name: kGreaterThan [1463,1475]
                                        operator: = [1476,1477]
                                        name: gt [1478,1480]
                                    operator: , [1480,1481]
                                    expr [1484,1503]
                                        name: kLessThanEqual [1484,1498]
                                        operator: = [1499,1500]
                                        name: le [1501,1503]
                                    operator: , [1503,1504]
                                    expr [1507,1529]
                                        name: kGreaterThanEqual [1507,1524]
                                        operator: = [1525,1526]
                                        name: ge [1527,1529]
                                    operator: , [1529,1530]
                                    expr [1534,1556]
                                        name: kUnsignedLessThan [1534,1551]
                                        operator: = [1552,1553]
                                        name: lo [1554,1556]
                                    operator: , [1556,1557]
                                    expr [1560,1585]
                                        name: kUnsignedGreaterThan [1560,1580]
                                        operator: = [1581,1582]
                                        name: hi [1583,1585]
                                    operator: , [1585,1586]
                                    expr [1589,1616]
                                        name: kUnsignedLessThanEqual [1589,1611]
                                        operator: = [1612,1613]
                                        name: ls [1614,1616]
                                    operator: , [1616,1617]
                                    expr [1620,1650]
                                        name: kUnsignedGreaterThanEqual [1620,1645]
                                        operator: = [1646,1647]
                                        name: hs [1648,1650]
                                    operator: , [1650,1651]
                                    expr [1655,1669]
                                        name: kOverflow [1655,1664]
                                        operator: = [1665,1666]
                                        name: vs [1667,1669]
                                    operator: , [1669,1670]
                                    expr [1673,1689]
                                        name: kNoOverflow [1673,1684]
                                        operator: = [1685,1686]
                                        name: vc [1687,1689]
                                    operator: , [1689,1690]
                                    expr [1694,1704]
                                        name: kZero [1694,1699]
                                        operator: = [1700,1701]
                                        name: eq [1702,1704]
                                    operator: , [1704,1705]
                                    expr [1708,1721]
                                        name: kNotZero [1708,1716]
                                        operator: = [1717,1718]
                                        name: ne [1719,1721]
                                    operator: , [1721,1722]
                    function [1727,1838]
                        type [1727,1753]
                            specifier: inline [1727,1733]
                            specifier: internal [1734,1742]
                            name [1742,1753]
                                operator: :: [1742,1744]
                                name: Condition [1744,1753]
                        name: AsMasmCondition [1754,1769]
                        parameter_list [1769,1785]
                            parameter [1770,1784]
                                decl [1770,1784]
                                    type [1770,1779]
                                        name: Condition [1770,1779]
                                    name: cond [1780,1784]
                        block [1786,1838]
                            block_content [1790,1836]
                                return [1790,1836]
                                    expr [1797,1835]
                                        call [1797,1835]
                                            name [1797,1829]
                                                name: static_cast [1797,1808]
                                                argument_list [1808,1829]
                                                    argument [1809,1828]
                                                        specifier: internal [1809,1817]
                                                        name [1817,1828]
                                                            operator: :: [1817,1819]
                                                            name: Condition [1819,1828]
                                            argument_list [1829,1835]
                                                argument [1830,1834]
                                                    expr [1830,1834]
                                                        name: cond [1830,1834]
                    namespace [1840,2039]
                        name: detail [1850,1856]
                        block [1857,2039]
                            ifdef [1860,1872]
                                directive: ifdef [1861,1866]
                                name: DEBUG [1867,1872]
                            function [1873,1995]
                                type [1873,1884]
                                    specifier: inline [1873,1879]
                                    name: bool [1880,1884]
                                name: Clobbers [1885,1893]
                                parameter_list [1893,1925]
                                    parameter [1894,1909]
                                        decl [1894,1909]
                                            type [1894,1909]
                                                name: Register [1894,1902]
                                            name: target [1903,1909]
                                    parameter [1911,1924]
                                        decl [1911,1924]
                                            type [1911,1924]
                                                name: MemOperand [1911,1921]
                                            name: op [1922,1924]
                                block [1926,1995]
                                    block_content [1930,1985]
                                        return [1930,1985]
                                            expr [1937,1984]
                                                call [1937,1946]
                                                    name [1937,1944]
                                                        name: op [1937,1939]
                                                        operator: . [1939,1940]
                                                        name: base [1940,1944]
                                                    argument_list [1944,1946]
                                                operator: == [1947,1949]
                                                name: target [1950,1956]
                                                operator: || [1957,1959]
                                                call [1960,1974]
                                                    name [1960,1972]
                                                        name: op [1960,1962]
                                                        operator: . [1962,1963]
                                                        name: regoffset [1963,1972]
                                                    argument_list [1972,1974]
                                                operator: == [1975,1977]
                                                name: target [1978,1984]
                            endif [1988,1994]
                                directive: endif [1989,1994]
                    comment: // namespace detail [1999,2018]
                    define [2020,2038]
                        directive: define [2021,2027]
                        macro [2028,2030]
                            name: __ [2028,2030]
                        value [2031,2038]
                    function [2040,2223]
                        type [2040,2050]
                            name: MemOperand [2040,2050]
                        name [2051,2090]
                            name: BaselineAssembler [2051,2068]
                            operator: :: [2068,2070]
                            name: RegisterFrameOperand [2070,2090]
                        parameter_list [2090,2139]
                            parameter [2096,2138]
                                decl [2096,2138]
                                    type [2096,2117]
                                        name [2096,2117]
                                            name: interpreter [2096,2107]
                                            operator: :: [2107,2109]
                                            name: Register [2109,2117]
                                    name: interpreter_register [2118,2138]
                        block [2140,2223]
                            block_content [2144,2221]
                                return [2144,2221]
                                    expr [2151,2220]
                                        call [2151,2220]
                                            name: MemOperand [2151,2161]
                                            argument_list [2161,2220]
                                                argument [2162,2164]
                                                    expr [2162,2164]
                                                        name: fp [2162,2164]
                                                argument [2166,2219]
                                                    expr [2166,2219]
                                                        call [2166,2198]
                                                            name [2166,2196]
                                                                name: interpreter_register [2166,2186]
                                                                operator: . [2186,2187]
                                                                name: ToOperand [2187,2196]
                                                            argument_list [2196,2198]
                                                        operator: * [2199,2200]
                                                        name: kSystemPointerSize [2201,2219]
                    function [2224,2353]
                        type [2224,2234]
                            name: MemOperand [2224,2234]
                        name [2235,2275]
                            name: BaselineAssembler [2235,2252]
                            operator: :: [2252,2254]
                            name: FeedbackVectorOperand [2254,2275]
                        parameter_list [2275,2277]
                        block [2278,2353]
                            block_content [2282,2351]
                                return [2282,2351]
                                    expr [2289,2350]
                                        call [2289,2350]
                                            name: MemOperand [2289,2299]
                                            argument_list [2299,2350]
                                                argument [2300,2302]
                                                    expr [2300,2302]
                                                        name: fp [2300,2302]
                                                argument [2304,2349]
                                                    expr [2304,2349]
                                                        name [2304,2349]
                                                            name: BaselineFrameConstants [2304,2326]
                                                            operator: :: [2326,2328]
                                                            name: kFeedbackVectorFromFp [2328,2349]
                    function [2355,2507]
                        type [2355,2359]
                            name: void [2355,2359]
                        name [2360,2383]
                            name: BaselineAssembler [2360,2377]
                            operator: :: [2377,2379]
                            name: Bind [2379,2383]
                        parameter_list [2383,2397]
                            parameter [2384,2396]
                                decl [2384,2396]
                                    type [2384,2390]
                                        name: Label [2384,2389]
                                        modifier: * [2389,2390]
                                    name: label [2391,2396]
                        block [2398,2507]
                            block_content [2480,2505]
                                comment: // All baseline compiler binds on arm64 are assumed to be for jump targets. [2402,2477]
                                decl_stmt [2480,2505]
                                    decl [2480,2504]
                                        type [2480,2482]
                                            name: __ [2480,2482]
                                        name: BindJumpTarget [2483,2497]
                                        argument_list [2497,2504]
                                            argument [2498,2503]
                                                expr [2498,2503]
                                                    name: label [2498,2503]
                    function [2509,2588]
                        type [2509,2513]
                            name: void [2509,2513]
                        name [2514,2554]
                            name: BaselineAssembler [2514,2531]
                            operator: :: [2531,2533]
                            name: BindWithoutJumpTarget [2533,2554]
                        parameter_list [2554,2568]
                            parameter [2555,2567]
                                decl [2555,2567]
                                    type [2555,2561]
                                        name: Label [2555,2560]
                                        modifier: * [2560,2561]
                                    name: label [2562,2567]
                        block [2569,2588]
                            block_content [2571,2586]
                                decl_stmt [2571,2586]
                                    decl [2571,2585]
                                        type [2571,2573]
                                            name: __ [2571,2573]
                                        name: Bind [2574,2578]
                                        argument_list [2578,2585]
                                            argument [2579,2584]
                                                expr [2579,2584]
                                                    name: label [2579,2584]
                    function [2590,2647]
                        type [2590,2594]
                            name: void [2590,2594]
                        name [2595,2624]
                            name: BaselineAssembler [2595,2612]
                            operator: :: [2612,2614]
                            name: JumpTarget [2614,2624]
                        parameter_list [2624,2626]
                        block [2627,2647]
                            block_content [2629,2645]
                                function_decl [2629,2645]
                                    type [2629,2631]
                                        name: __ [2629,2631]
                                    name: JumpTarget [2632,2642]
                                    parameter_list [2642,2644]
                    function [2649,2738]
                        type [2649,2653]
                            name: void [2649,2653]
                        name [2654,2677]
                            name: BaselineAssembler [2654,2671]
                            operator: :: [2671,2673]
                            name: Jump [2673,2677]
                        parameter_list [2677,2718]
                            parameter [2678,2691]
                                decl [2678,2691]
                                    type [2678,2691]
                                        name: Label [2678,2683]
                                        modifier: * [2683,2684]
                                    name: target [2685,2691]
                            parameter [2693,2717]
                                decl [2693,2717]
                                    type [2693,2717]
                                        name [2693,2708]
                                            name: Label [2693,2698]
                                            operator: :: [2698,2700]
                                            name: Distance [2700,2708]
                                    name: distance [2709,2717]
                        block [2719,2738]
                            block_content [2723,2736]
                                decl_stmt [2723,2736]
                                    decl [2723,2735]
                                        type [2723,2725]
                                            name: __ [2723,2725]
                                        name: B [2726,2727]
                                        argument_list [2727,2735]
                                            argument [2728,2734]
                                                expr [2728,2734]
                                                    name: target [2728,2734]
                    function [2739,2856]
                        type [2739,2743]
                            name: void [2739,2743]
                        name [2744,2769]
                            name: BaselineAssembler [2744,2761]
                            operator: :: [2761,2763]
                            name: JumpIf [2763,2769]
                        parameter_list [2769,2815]
                            parameter [2770,2782]
                                decl [2770,2782]
                                    type [2770,2782]
                                        name: Condition [2770,2779]
                                    name: cc [2780,2782]
                            parameter [2784,2797]
                                decl [2784,2797]
                                    type [2784,2797]
                                        name: Label [2784,2789]
                                        modifier: * [2789,2790]
                                    name: target [2791,2797]
                            parameter [2799,2814]
                                decl [2799,2814]
                                    type [2799,2814]
                                        name [2799,2814]
                                            name: Label [2799,2804]
                                            operator: :: [2804,2806]
                                            name: Distance [2806,2814]
                        block [2816,2856]
                            block_content [2820,2854]
                                decl_stmt [2820,2854]
                                    decl [2820,2853]
                                        type [2820,2822]
                                            name: __ [2820,2822]
                                        name: B [2823,2824]
                                        argument_list [2824,2853]
                                            argument [2825,2844]
                                                expr [2825,2844]
                                                    call [2825,2844]
                                                        name: AsMasmCondition [2825,2840]
                                                        argument_list [2840,2844]
                                                            argument [2841,2843]
                                                                expr [2841,2843]
                                                                    name: cc [2841,2843]
                                            argument [2846,2852]
                                                expr [2846,2852]
                                                    name: target [2846,2852]
                    function [2857,3034]
                        type [2857,2861]
                            name: void [2857,2861]
                        name [2862,2891]
                            name: BaselineAssembler [2862,2879]
                            operator: :: [2879,2881]
                            name: JumpIfRoot [2881,2891]
                        parameter_list [2891,2991]
                            parameter [2892,2906]
                                decl [2892,2906]
                                    type [2892,2906]
                                        name: Register [2892,2900]
                                    name: value [2901,2906]
                            parameter [2908,2923]
                                decl [2908,2923]
                                    type [2908,2923]
                                        name: RootIndex [2908,2917]
                                    name: index [2918,2923]
                            parameter [2960,2973]
                                decl [2960,2973]
                                    type [2960,2973]
                                        name: Label [2960,2965]
                                        modifier: * [2965,2966]
                                    name: target [2967,2973]
                            parameter [2975,2990]
                                decl [2975,2990]
                                    type [2975,2990]
                                        name [2975,2990]
                                            name: Label [2975,2980]
                                            operator: :: [2980,2982]
                                            name: Distance [2982,2990]
                        block [2992,3034]
                            block_content [2996,3032]
                                decl_stmt [2996,3032]
                                    decl [2996,3031]
                                        type [2996,2998]
                                            name: __ [2996,2998]
                                        name: JumpIfRoot [2999,3009]
                                        argument_list [3009,3031]
                                            argument [3010,3015]
                                                expr [3010,3015]
                                                    name: value [3010,3015]
                                            argument [3017,3022]
                                                expr [3017,3022]
                                                    name: index [3017,3022]
                                            argument [3024,3030]
                                                expr [3024,3030]
                                                    name: target [3024,3030]
                    function [3035,3221]
                        type [3035,3039]
                            name: void [3035,3039]
                        name [3040,3072]
                            name: BaselineAssembler [3040,3057]
                            operator: :: [3057,3059]
                            name: JumpIfNotRoot [3059,3072]
                        parameter_list [3072,3175]
                            parameter [3073,3087]
                                decl [3073,3087]
                                    type [3073,3087]
                                        name: Register [3073,3081]
                                    name: value [3082,3087]
                            parameter [3089,3104]
                                decl [3089,3104]
                                    type [3089,3104]
                                        name: RootIndex [3089,3098]
                                    name: index [3099,3104]
                            parameter [3144,3157]
                                decl [3144,3157]
                                    type [3144,3157]
                                        name: Label [3144,3149]
                                        modifier: * [3149,3150]
                                    name: target [3151,3157]
                            parameter [3159,3174]
                                decl [3159,3174]
                                    type [3159,3174]
                                        name [3159,3174]
                                            name: Label [3159,3164]
                                            operator: :: [3164,3166]
                                            name: Distance [3166,3174]
                        block [3176,3221]
                            block_content [3180,3219]
                                decl_stmt [3180,3219]
                                    decl [3180,3218]
                                        type [3180,3182]
                                            name: __ [3180,3182]
                                        name: JumpIfNotRoot [3183,3196]
                                        argument_list [3196,3218]
                                            argument [3197,3202]
                                                expr [3197,3202]
                                                    name: value [3197,3202]
                                            argument [3204,3209]
                                                expr [3204,3209]
                                                    name: index [3204,3209]
                                            argument [3211,3217]
                                                expr [3211,3217]
                                                    name: target [3211,3217]
                    function [3222,3372]
                        type [3222,3226]
                            name: void [3222,3226]
                        name [3227,3255]
                            name: BaselineAssembler [3227,3244]
                            operator: :: [3244,3246]
                            name: JumpIfSmi [3246,3255]
                        parameter_list [3255,3337]
                            parameter [3256,3270]
                                decl [3256,3270]
                                    type [3256,3270]
                                        name: Register [3256,3264]
                                    name: value [3265,3270]
                            parameter [3272,3285]
                                decl [3272,3285]
                                    type [3272,3285]
                                        name: Label [3272,3277]
                                        modifier: * [3277,3278]
                                    name: target [3279,3285]
                            parameter [3321,3336]
                                decl [3321,3336]
                                    type [3321,3336]
                                        name [3321,3336]
                                            name: Label [3321,3326]
                                            operator: :: [3326,3328]
                                            name: Distance [3328,3336]
                        block [3338,3372]
                            block_content [3342,3370]
                                decl_stmt [3342,3370]
                                    decl [3342,3369]
                                        type [3342,3344]
                                            name: __ [3342,3344]
                                        name: JumpIfSmi [3345,3354]
                                        argument_list [3354,3369]
                                            argument [3355,3360]
                                                expr [3355,3360]
                                                    name: value [3355,3360]
                                            argument [3362,3368]
                                                expr [3362,3368]
                                                    name: target [3362,3368]
                    function [3373,3532]
                        type [3373,3377]
                            name: void [3373,3377]
                        name [3378,3409]
                            name: BaselineAssembler [3378,3395]
                            operator: :: [3395,3397]
                            name: JumpIfNotSmi [3397,3409]
                        parameter_list [3409,3494]
                            parameter [3410,3424]
                                decl [3410,3424]
                                    type [3410,3424]
                                        name: Register [3410,3418]
                                    name: value [3419,3424]
                            parameter [3426,3439]
                                decl [3426,3439]
                                    type [3426,3439]
                                        name: Label [3426,3431]
                                        modifier: * [3431,3432]
                                    name: target [3433,3439]
                            parameter [3478,3493]
                                decl [3478,3493]
                                    type [3478,3493]
                                        name [3478,3493]
                                            name: Label [3478,3483]
                                            operator: :: [3483,3485]
                                            name: Distance [3485,3493]
                        block [3495,3532]
                            block_content [3499,3530]
                                decl_stmt [3499,3530]
                                    decl [3499,3529]
                                        type [3499,3501]
                                            name: __ [3499,3501]
                                        name: JumpIfNotSmi [3502,3514]
                                        argument_list [3514,3529]
                                            argument [3515,3520]
                                                expr [3515,3520]
                                                    name: value [3515,3520]
                                            argument [3522,3528]
                                                expr [3522,3528]
                                                    name: target [3522,3528]
                    function [3534,3860]
                        type [3534,3538]
                            name: void [3534,3538]
                        name [3539,3569]
                            name: BaselineAssembler [3539,3556]
                            operator: :: [3556,3558]
                            name: CallBuiltin [3558,3569]
                        parameter_list [3569,3586]
                            parameter [3570,3585]
                                decl [3570,3585]
                                    type [3570,3577]
                                        name: Builtin [3570,3577]
                                    name: builtin [3578,3585]
                        block [3587,3860]
                            block_content [3591,3858]
                                if_stmt [3591,3858]
                                    if [3591,3702]
                                        condition [3594,3633]
                                            expr [3595,3632]
                                                call [3595,3601]
                                                    name: masm [3595,3599]
                                                    argument_list [3599,3601]
                                                operator: -> [3601,3603]
                                                call [3603,3612]
                                                    name: options [3603,3610]
                                                    argument_list [3610,3612]
                                                operator: . [3612,3613]
                                                name: short_builtin_calls [3613,3632]
                                        block [3634,3702]
                                            block_content [3674,3698]
                                                comment: // Generate pc-relative call. [3640,3669]
                                                decl_stmt [3674,3698]
                                                    decl [3674,3697]
                                                        type [3674,3676]
                                                            name: __ [3674,3676]
                                                        name: CallBuiltin [3677,3688]
                                                        argument_list [3688,3697]
                                                            argument [3689,3696]
                                                                expr [3689,3696]
                                                                    name: builtin [3689,3696]
                                    else [3703,3858]
                                        block [3708,3858]
                                            block_content [3714,3854]
                                                decl_stmt [3714,3747]
                                                    decl [3714,3746]
                                                        type [3714,3734]
                                                            name: ScratchRegisterScope [3714,3734]
                                                        name: temps [3735,3740]
                                                        argument_list [3740,3746]
                                                            argument [3741,3745]
                                                                expr [3741,3745]
                                                                    name: this [3741,3745]
                                                decl_stmt [3752,3791]
                                                    decl [3752,3790]
                                                        type [3752,3760]
                                                            name: Register [3752,3760]
                                                        name: temp [3761,3765]
                                                        init [3766,3790]
                                                            expr [3768,3790]
                                                                call [3768,3790]
                                                                    name [3768,3788]
                                                                        name: temps [3768,3773]
                                                                        operator: . [3773,3774]
                                                                        name: AcquireScratch [3774,3788]
                                                                    argument_list [3788,3790]
                                                decl_stmt [3796,3835]
                                                    decl [3796,3834]
                                                        type [3796,3798]
                                                            name: __ [3796,3798]
                                                        name: LoadEntryFromBuiltin [3799,3819]
                                                        argument_list [3819,3834]
                                                            argument [3820,3827]
                                                                expr [3820,3827]
                                                                    name: builtin [3820,3827]
                                                            argument [3829,3833]
                                                                expr [3829,3833]
                                                                    name: temp [3829,3833]
                                                decl_stmt [3840,3854]
                                                    decl [3840,3853]
                                                        type [3840,3842]
                                                            name: __ [3840,3842]
                                                        name: Call [3843,3847]
                                                        argument_list [3847,3853]
                                                            argument [3848,3852]
                                                                expr [3848,3852]
                                                                    name: temp [3848,3852]
                    function [3862,4892]
                        type [3862,3866]
                            name: void [3862,3866]
                        name [3867,3901]
                            name: BaselineAssembler [3867,3884]
                            operator: :: [3884,3886]
                            name: TailCallBuiltin [3886,3901]
                        parameter_list [3901,3918]
                            parameter [3902,3917]
                                decl [3902,3917]
                                    type [3902,3909]
                                        name: Builtin [3902,3909]
                                    name: builtin [3910,3917]
                        block [3919,4892]
                            block_content [3923,4890]
                                if_stmt [3923,4890]
                                    if [3923,4038]
                                        condition [3926,3965]
                                            expr [3927,3964]
                                                call [3927,3933]
                                                    name: masm [3927,3931]
                                                    argument_list [3931,3933]
                                                operator: -> [3933,3935]
                                                call [3935,3944]
                                                    name: options [3935,3942]
                                                    argument_list [3942,3944]
                                                operator: . [3944,3945]
                                                name: short_builtin_calls [3945,3964]
                                        block [3966,4038]
                                            block_content [4006,4034]
                                                comment: // Generate pc-relative call. [3972,4001]
                                                decl_stmt [4006,4034]
                                                    decl [4006,4033]
                                                        type [4006,4008]
                                                            name: __ [4006,4008]
                                                        name: TailCallBuiltin [4009,4024]
                                                        argument_list [4024,4033]
                                                            argument [4025,4032]
                                                                expr [4025,4032]
                                                                    name: builtin [4025,4032]
                                    else [4039,4890]
                                        block [4044,4890]
                                            block_content [4670,4886]
                                                comment: // The control flow integrity (CFI) feature allows us to "sign" code entry [4050,4124]
                                                comment: // points as a target for calls, jumps or both. Arm64 has special [4129,4194]
                                                comment: // instructions for this purpose, so-called "landing pads" (see [4199,4262]
                                                comment: // TurboAssembler::CallTarget(), TurboAssembler::JumpTarget() and [4267,4332]
                                                comment: // TurboAssembler::JumpOrCallTarget()). Currently, we generate "Call" [4337,4406]
                                                comment: // landing pads for CPP builtins. In order to allow tail calling to those [4411,4484]
                                                comment: // builtins we have to use a workaround. [4489,4529]
                                                comment: // x17 is used to allow using "Call" (i.e. `bti c`) rather than "Jump" (i.e. [4534,4610]
                                                comment: // `bti j`) landing pads for the tail-called code. [4615,4665]
                                                decl_stmt [4670,4690]
                                                    decl [4670,4689]
                                                        type [4670,4678]
                                                            name: Register [4670,4678]
                                                        name: temp [4679,4683]
                                                        init [4684,4689]
                                                            expr [4686,4689]
                                                                name: x17 [4686,4689]
                                                comment: // Make sure we're don't use this register as a temporary. [4696,4754]
                                                decl_stmt [4759,4797]
                                                    decl [4759,4796]
                                                        type [4759,4782]
                                                            name: UseScratchRegisterScope [4759,4782]
                                                        name: temps [4783,4788]
                                                        argument_list [4788,4796]
                                                            argument [4789,4795]
                                                                expr [4789,4795]
                                                                    call [4789,4795]
                                                                        name: masm [4789,4793]
                                                                        argument_list [4793,4795]
                                                expr_stmt [4802,4822]
                                                    expr [4802,4821]
                                                        call [4802,4821]
                                                            name [4802,4815]
                                                                name: temps [4802,4807]
                                                                operator: . [4807,4808]
                                                                name: Exclude [4808,4815]
                                                            argument_list [4815,4821]
                                                                argument [4816,4820]
                                                                    expr [4816,4820]
                                                                        name: temp [4816,4820]
                                                decl_stmt [4828,4867]
                                                    decl [4828,4866]
                                                        type [4828,4830]
                                                            name: __ [4828,4830]
                                                        name: LoadEntryFromBuiltin [4831,4851]
                                                        argument_list [4851,4866]
                                                            argument [4852,4859]
                                                                expr [4852,4859]
                                                                    name: builtin [4852,4859]
                                                            argument [4861,4865]
                                                                expr [4861,4865]
                                                                    name: temp [4861,4865]
                                                decl_stmt [4872,4886]
                                                    decl [4872,4885]
                                                        type [4872,4874]
                                                            name: __ [4872,4874]
                                                        name: Jump [4875,4879]
                                                        argument_list [4879,4885]
                                                            argument [4880,4884]
                                                                expr [4880,4884]
                                                                    name: temp [4880,4884]
                    function [4894,4986]
                        type [4894,4898]
                            name: void [4894,4898]
                        name [4899,4922]
                            name: BaselineAssembler [4899,4916]
                            operator: :: [4916,4918]
                            name: Test [4918,4922]
                        parameter_list [4922,4948]
                            parameter [4923,4937]
                                decl [4923,4937]
                                    type [4923,4937]
                                        name: Register [4923,4931]
                                    name: value [4932,4937]
                            parameter [4939,4947]
                                decl [4939,4947]
                                    type [4939,4947]
                                        name: int [4939,4942]
                                    name: mask [4943,4947]
                        block [4949,4986]
                            block_content [4953,4984]
                                decl_stmt [4953,4984]
                                    decl [4953,4983]
                                        type [4953,4955]
                                            name: __ [4953,4955]
                                        name: Tst [4956,4959]
                                        argument_list [4959,4983]
                                            argument [4960,4965]
                                                expr [4960,4965]
                                                    name: value [4960,4965]
                                            argument [4967,4982]
                                                expr [4967,4982]
                                                    call [4967,4982]
                                                        name: Immediate [4967,4976]
                                                        argument_list [4976,4982]
                                                            argument [4977,4981]
                                                                expr [4977,4981]
                                                                    name: mask [4977,4981]
                    function [4988,5300]
                        type [4988,4992]
                            name: void [4988,4992]
                        name [4993,5025]
                            name: BaselineAssembler [4993,5010]
                            operator: :: [5010,5012]
                            name: CmpObjectType [5012,5025]
                        parameter_list [5025,5160]
                            parameter [5026,5041]
                                decl [5026,5041]
                                    type [5026,5041]
                                        name: Register [5026,5034]
                                    name: object [5035,5041]
                            parameter [5081,5107]
                                decl [5081,5107]
                                    type [5081,5107]
                                        name: InstanceType [5081,5093]
                                    name: instance_type [5094,5107]
                            parameter [5147,5159]
                                decl [5147,5159]
                                    type [5147,5159]
                                        name: Register [5147,5155]
                                    name: map [5156,5159]
                        block [5161,5300]
                            block_content [5165,5298]
                                decl_stmt [5165,5198]
                                    decl [5165,5197]
                                        type [5165,5185]
                                            name: ScratchRegisterScope [5165,5185]
                                        name: temps [5186,5191]
                                        argument_list [5191,5197]
                                            argument [5192,5196]
                                                expr [5192,5196]
                                                    name: this [5192,5196]
                                decl_stmt [5201,5240]
                                    decl [5201,5239]
                                        type [5201,5209]
                                            name: Register [5201,5209]
                                        name: type [5210,5214]
                                        init [5215,5239]
                                            expr [5217,5239]
                                                call [5217,5239]
                                                    name [5217,5237]
                                                        name: temps [5217,5222]
                                                        operator: . [5222,5223]
                                                        name: AcquireScratch [5223,5237]
                                                    argument_list [5237,5239]
                                decl_stmt [5243,5298]
                                    decl [5243,5297]
                                        type [5243,5245]
                                            name: __ [5243,5245]
                                        name: CompareObjectType [5246,5263]
                                        argument_list [5263,5297]
                                            argument [5264,5270]
                                                expr [5264,5270]
                                                    name: object [5264,5270]
                                            argument [5272,5275]
                                                expr [5272,5275]
                                                    name: map [5272,5275]
                                            argument [5277,5281]
                                                expr [5277,5281]
                                                    name: type [5277,5281]
                                            argument [5283,5296]
                                                expr [5283,5296]
                                                    name: instance_type [5283,5296]
                    function [5301,5714]
                        type [5301,5305]
                            name: void [5301,5305]
                        name [5306,5340]
                            name: BaselineAssembler [5306,5323]
                            operator: :: [5323,5325]
                            name: CmpInstanceType [5325,5340]
                        parameter_list [5340,5422]
                            parameter [5341,5353]
                                decl [5341,5353]
                                    type [5341,5353]
                                        name: Register [5341,5349]
                                    name: map [5350,5353]
                            parameter [5395,5421]
                                decl [5395,5421]
                                    type [5395,5421]
                                        name: InstanceType [5395,5407]
                                    name: instance_type [5408,5421]
                        block [5423,5714]
                            block_content [5427,5712]
                                decl_stmt [5427,5460]
                                    decl [5427,5459]
                                        type [5427,5447]
                                            name: ScratchRegisterScope [5427,5447]
                                        name: temps [5448,5453]
                                        argument_list [5453,5459]
                                            argument [5454,5458]
                                                expr [5454,5458]
                                                    name: this [5454,5458]
                                decl_stmt [5463,5502]
                                    decl [5463,5501]
                                        type [5463,5471]
                                            name: Register [5463,5471]
                                        name: type [5472,5476]
                                        init [5477,5501]
                                            expr [5479,5501]
                                                call [5479,5501]
                                                    name [5479,5499]
                                                        name: temps [5479,5484]
                                                        operator: . [5484,5485]
                                                        name: AcquireScratch [5485,5499]
                                                    argument_list [5499,5501]
                                if_stmt [5505,5660]
                                    if [5505,5660]
                                        condition [5508,5525]
                                            expr [5509,5524]
                                                name: FLAG_debug_code [5509,5524]
                                        block [5526,5660]
                                            block_content [5532,5656]
                                                decl_stmt [5532,5553]
                                                    decl [5532,5552]
                                                        type [5532,5534]
                                                            name: __ [5532,5534]
                                                        name: AssertNotSmi [5535,5547]
                                                        argument_list [5547,5552]
                                                            argument [5548,5551]
                                                                expr [5548,5551]
                                                                    name: map [5548,5551]
                                                decl_stmt [5558,5606]
                                                    decl [5558,5605]
                                                        type [5558,5560]
                                                            name: __ [5558,5560]
                                                        name: CompareObjectType [5561,5578]
                                                        argument_list [5578,5605]
                                                            argument [5579,5582]
                                                                expr [5579,5582]
                                                                    name: map [5579,5582]
                                                            argument [5584,5588]
                                                                expr [5584,5588]
                                                                    name: type [5584,5588]
                                                            argument [5590,5594]
                                                                expr [5590,5594]
                                                                    name: type [5590,5594]
                                                            argument [5596,5604]
                                                                expr [5596,5604]
                                                                    name: MAP_TYPE [5596,5604]
                                                decl_stmt [5611,5656]
                                                    decl [5611,5655]
                                                        type [5611,5613]
                                                            name: __ [5611,5613]
                                                        name: Assert [5614,5620]
                                                        argument_list [5620,5655]
                                                            argument [5621,5623]
                                                                expr [5621,5623]
                                                                    name: eq [5621,5623]
                                                            argument [5625,5654]
                                                                expr [5625,5654]
                                                                    name [5625,5654]
                                                                        name: AbortReason [5625,5636]
                                                                        operator: :: [5636,5638]
                                                                        name: kUnexpectedValue [5638,5654]
                                decl_stmt [5663,5712]
                                    decl [5663,5711]
                                        type [5663,5665]
                                            name: __ [5663,5665]
                                        name: CompareInstanceType [5666,5685]
                                        argument_list [5685,5711]
                                            argument [5686,5689]
                                                expr [5686,5689]
                                                    name: map [5686,5689]
                                            argument [5691,5695]
                                                expr [5691,5695]
                                                    name: type [5691,5695]
                                            argument [5697,5710]
                                                expr [5697,5710]
                                                    name: instance_type [5697,5710]
                    function [5715,5791]
                        type [5715,5719]
                            name: void [5715,5719]
                        name [5720,5742]
                            name: BaselineAssembler [5720,5737]
                            operator: :: [5737,5739]
                            name: Cmp [5739,5742]
                        parameter_list [5742,5767]
                            parameter [5743,5757]
                                decl [5743,5757]
                                    type [5743,5757]
                                        name: Register [5743,5751]
                                    name: value [5752,5757]
                            parameter [5759,5766]
                                decl [5759,5766]
                                    type [5759,5766]
                                        name: Smi [5759,5762]
                                    name: smi [5763,5766]
                        block [5768,5791]
                            block_content [5770,5789]
                                decl_stmt [5770,5789]
                                    decl [5770,5788]
                                        type [5770,5772]
                                            name: __ [5770,5772]
                                        name: Cmp [5773,5776]
                                        argument_list [5776,5788]
                                            argument [5777,5782]
                                                expr [5777,5782]
                                                    name: value [5777,5782]
                                            argument [5784,5787]
                                                expr [5784,5787]
                                                    name: smi [5784,5787]
                    function [5792,5993]
                        type [5792,5796]
                            name: void [5792,5796]
                        name [5797,5830]
                            name: BaselineAssembler [5797,5814]
                            operator: :: [5814,5816]
                            name: ComparePointer [5816,5830]
                        parameter_list [5830,5866]
                            parameter [5831,5845]
                                decl [5831,5845]
                                    type [5831,5845]
                                        name: Register [5831,5839]
                                    name: value [5840,5845]
                            parameter [5847,5865]
                                decl [5847,5865]
                                    type [5847,5865]
                                        name: MemOperand [5847,5857]
                                    name: operand [5858,5865]
                        block [5867,5993]
                            block_content [5871,5991]
                                decl_stmt [5871,5904]
                                    decl [5871,5903]
                                        type [5871,5891]
                                            name: ScratchRegisterScope [5871,5891]
                                        name: temps [5892,5897]
                                        argument_list [5897,5903]
                                            argument [5898,5902]
                                                expr [5898,5902]
                                                    name: this [5898,5902]
                                decl_stmt [5907,5945]
                                    decl [5907,5944]
                                        type [5907,5915]
                                            name: Register [5907,5915]
                                        name: tmp [5916,5919]
                                        init [5920,5944]
                                            expr [5922,5944]
                                                call [5922,5944]
                                                    name [5922,5942]
                                                        name: temps [5922,5927]
                                                        operator: . [5927,5928]
                                                        name: AcquireScratch [5928,5942]
                                                    argument_list [5942,5944]
                                decl_stmt [5948,5969]
                                    decl [5948,5968]
                                        type [5948,5950]
                                            name: __ [5948,5950]
                                        name: Ldr [5951,5954]
                                        argument_list [5954,5968]
                                            argument [5955,5958]
                                                expr [5955,5958]
                                                    name: tmp [5955,5958]
                                            argument [5960,5967]
                                                expr [5960,5967]
                                                    name: operand [5960,5967]
                                decl_stmt [5972,5991]
                                    decl [5972,5990]
                                        type [5972,5974]
                                            name: __ [5972,5974]
                                        name: Cmp [5975,5978]
                                        argument_list [5978,5990]
                                            argument [5979,5984]
                                                expr [5979,5984]
                                                    name: value [5979,5984]
                                            argument [5986,5989]
                                                expr [5986,5989]
                                                    name: tmp [5986,5989]
                    function [5994,6128]
                        type [5994,5998]
                            name: void [5994,5998]
                        name [5999,6028]
                            name: BaselineAssembler [5999,6016]
                            operator: :: [6016,6018]
                            name: SmiCompare [6018,6028]
                        parameter_list [6028,6056]
                            parameter [6029,6041]
                                decl [6029,6041]
                                    type [6029,6041]
                                        name: Register [6029,6037]
                                    name: lhs [6038,6041]
                            parameter [6043,6055]
                                decl [6043,6055]
                                    type [6043,6055]
                                        name: Register [6043,6051]
                                    name: rhs [6052,6055]
                        block [6057,6128]
                            block_content [6061,6126]
                                decl_stmt [6061,6079]
                                    decl [6061,6078]
                                        type [6061,6063]
                                            name: __ [6061,6063]
                                        name: AssertSmi [6064,6073]
                                        argument_list [6073,6078]
                                            argument [6074,6077]
                                                expr [6074,6077]
                                                    name: lhs [6074,6077]
                                decl_stmt [6082,6100]
                                    decl [6082,6099]
                                        type [6082,6084]
                                            name: __ [6082,6084]
                                        name: AssertSmi [6085,6094]
                                        argument_list [6094,6099]
                                            argument [6095,6098]
                                                expr [6095,6098]
                                                    name: rhs [6095,6098]
                                decl_stmt [6103,6126]
                                    decl [6103,6125]
                                        type [6103,6105]
                                            name: __ [6103,6105]
                                        name: CmpTagged [6106,6115]
                                        argument_list [6115,6125]
                                            argument [6116,6119]
                                                expr [6116,6119]
                                                    name: lhs [6116,6119]
                                            argument [6121,6124]
                                                expr [6121,6124]
                                                    name: rhs [6121,6124]
                    function [6129,6335]
                        type [6129,6133]
                            name: void [6129,6133]
                        name [6134,6166]
                            name: BaselineAssembler [6134,6151]
                            operator: :: [6151,6153]
                            name: CompareTagged [6153,6166]
                        parameter_list [6166,6202]
                            parameter [6167,6181]
                                decl [6167,6181]
                                    type [6167,6181]
                                        name: Register [6167,6175]
                                    name: value [6176,6181]
                            parameter [6183,6201]
                                decl [6183,6201]
                                    type [6183,6201]
                                        name: MemOperand [6183,6193]
                                    name: operand [6194,6201]
                        block [6203,6335]
                            block_content [6207,6333]
                                decl_stmt [6207,6240]
                                    decl [6207,6239]
                                        type [6207,6227]
                                            name: ScratchRegisterScope [6207,6227]
                                        name: temps [6228,6233]
                                        argument_list [6233,6239]
                                            argument [6234,6238]
                                                expr [6234,6238]
                                                    name: this [6234,6238]
                                decl_stmt [6243,6281]
                                    decl [6243,6280]
                                        type [6243,6251]
                                            name: Register [6243,6251]
                                        name: tmp [6252,6255]
                                        init [6256,6280]
                                            expr [6258,6280]
                                                call [6258,6280]
                                                    name [6258,6278]
                                                        name: temps [6258,6263]
                                                        operator: . [6263,6264]
                                                        name: AcquireScratch [6264,6278]
                                                    argument_list [6278,6280]
                                decl_stmt [6284,6305]
                                    decl [6284,6304]
                                        type [6284,6286]
                                            name: __ [6284,6286]
                                        name: Ldr [6287,6290]
                                        argument_list [6290,6304]
                                            argument [6291,6294]
                                                expr [6291,6294]
                                                    name: tmp [6291,6294]
                                            argument [6296,6303]
                                                expr [6296,6303]
                                                    name: operand [6296,6303]
                                decl_stmt [6308,6333]
                                    decl [6308,6332]
                                        type [6308,6310]
                                            name: __ [6308,6310]
                                        name: CmpTagged [6311,6320]
                                        argument_list [6320,6332]
                                            argument [6321,6326]
                                                expr [6321,6326]
                                                    name: value [6321,6326]
                                            argument [6328,6331]
                                                expr [6328,6331]
                                                    name: tmp [6328,6331]
                    function [6336,6542]
                        type [6336,6340]
                            name: void [6336,6340]
                        name [6341,6373]
                            name: BaselineAssembler [6341,6358]
                            operator: :: [6358,6360]
                            name: CompareTagged [6360,6373]
                        parameter_list [6373,6409]
                            parameter [6374,6392]
                                decl [6374,6392]
                                    type [6374,6392]
                                        name: MemOperand [6374,6384]
                                    name: operand [6385,6392]
                            parameter [6394,6408]
                                decl [6394,6408]
                                    type [6394,6408]
                                        name: Register [6394,6402]
                                    name: value [6403,6408]
                        block [6410,6542]
                            block_content [6414,6540]
                                decl_stmt [6414,6447]
                                    decl [6414,6446]
                                        type [6414,6434]
                                            name: ScratchRegisterScope [6414,6434]
                                        name: temps [6435,6440]
                                        argument_list [6440,6446]
                                            argument [6441,6445]
                                                expr [6441,6445]
                                                    name: this [6441,6445]
                                decl_stmt [6450,6488]
                                    decl [6450,6487]
                                        type [6450,6458]
                                            name: Register [6450,6458]
                                        name: tmp [6459,6462]
                                        init [6463,6487]
                                            expr [6465,6487]
                                                call [6465,6487]
                                                    name [6465,6485]
                                                        name: temps [6465,6470]
                                                        operator: . [6470,6471]
                                                        name: AcquireScratch [6471,6485]
                                                    argument_list [6485,6487]
                                decl_stmt [6491,6512]
                                    decl [6491,6511]
                                        type [6491,6493]
                                            name: __ [6491,6493]
                                        name: Ldr [6494,6497]
                                        argument_list [6497,6511]
                                            argument [6498,6501]
                                                expr [6498,6501]
                                                    name: tmp [6498,6501]
                                            argument [6503,6510]
                                                expr [6503,6510]
                                                    name: operand [6503,6510]
                                decl_stmt [6515,6540]
                                    decl [6515,6539]
                                        type [6515,6517]
                                            name: __ [6515,6517]
                                        name: CmpTagged [6518,6527]
                                        argument_list [6527,6539]
                                            argument [6528,6531]
                                                expr [6528,6531]
                                                    name: tmp [6528,6531]
                                            argument [6533,6538]
                                                expr [6533,6538]
                                                    name: value [6533,6538]
                    function [6543,6646]
                        type [6543,6547]
                            name: void [6543,6547]
                        name [6548,6578]
                            name: BaselineAssembler [6548,6565]
                            operator: :: [6565,6567]
                            name: CompareByte [6567,6578]
                        parameter_list [6578,6608]
                            parameter [6579,6593]
                                decl [6579,6593]
                                    type [6579,6593]
                                        name: Register [6579,6587]
                                    name: value [6588,6593]
                            parameter [6595,6607]
                                decl [6595,6607]
                                    type [6595,6607]
                                        name: int32_t [6595,6602]
                                    name: byte [6603,6607]
                        block [6609,6646]
                            block_content [6613,6644]
                                decl_stmt [6613,6644]
                                    decl [6613,6643]
                                        type [6613,6615]
                                            name: __ [6613,6615]
                                        name: Cmp [6616,6619]
                                        argument_list [6619,6643]
                                            argument [6620,6625]
                                                expr [6620,6625]
                                                    name: value [6620,6625]
                                            argument [6627,6642]
                                                expr [6627,6642]
                                                    call [6627,6642]
                                                        name: Immediate [6627,6636]
                                                        argument_list [6636,6642]
                                                            argument [6637,6641]
                                                                expr [6637,6641]
                                                                    name: byte [6637,6641]
                    function [6648,6773]
                        type [6648,6652]
                            name: void [6648,6652]
                        name [6653,6676]
                            name: BaselineAssembler [6653,6670]
                            operator: :: [6670,6672]
                            name: Move [6672,6676]
                        parameter_list [6676,6723]
                            parameter [6677,6705]
                                decl [6677,6705]
                                    type [6677,6705]
                                        name [6677,6698]
                                            name: interpreter [6677,6688]
                                            operator: :: [6688,6690]
                                            name: Register [6690,6698]
                                    name: output [6699,6705]
                            parameter [6707,6722]
                                decl [6707,6722]
                                    type [6707,6722]
                                        name: Register [6707,6715]
                                    name: source [6716,6722]
                        block [6724,6773]
                            block_content [6728,6771]
                                expr_stmt [6728,6771]
                                    expr [6728,6770]
                                        call [6728,6770]
                                            name: Move [6728,6732]
                                            argument_list [6732,6770]
                                                argument [6733,6761]
                                                    expr [6733,6761]
                                                        call [6733,6761]
                                                            name: RegisterFrameOperand [6733,6753]
                                                            argument_list [6753,6761]
                                                                argument [6754,6760]
                                                                    expr [6754,6760]
                                                                        name: output [6754,6760]
                                                argument [6763,6769]
                                                    expr [6763,6769]
                                                        name: source [6763,6769]
                    function [6774,6884]
                        type [6774,6778]
                            name: void [6774,6778]
                        name [6779,6802]
                            name: BaselineAssembler [6779,6796]
                            operator: :: [6796,6798]
                            name: Move [6798,6802]
                        parameter_list [6802,6838]
                            parameter [6803,6818]
                                decl [6803,6818]
                                    type [6803,6818]
                                        name: Register [6803,6811]
                                    name: output [6812,6818]
                            parameter [6820,6837]
                                decl [6820,6837]
                                    type [6820,6837]
                                        name: TaggedIndex [6820,6831]
                                    name: value [6832,6837]
                        block [6839,6884]
                            block_content [6843,6882]
                                decl_stmt [6843,6882]
                                    decl [6843,6881]
                                        type [6843,6845]
                                            name: __ [6843,6845]
                                        name: Mov [6846,6849]
                                        argument_list [6849,6881]
                                            argument [6850,6856]
                                                expr [6850,6856]
                                                    name: output [6850,6856]
                                            argument [6858,6880]
                                                expr [6858,6880]
                                                    call [6858,6880]
                                                        name: Immediate [6858,6867]
                                                        argument_list [6867,6880]
                                                            argument [6868,6879]
                                                                expr [6868,6879]
                                                                    call [6868,6879]
                                                                        name [6868,6877]
                                                                            name: value [6868,6873]
                                                                            operator: . [6873,6874]
                                                                            name: ptr [6874,6877]
                                                                        argument_list [6877,6879]
                    function [6885,6979]
                        type [6885,6889]
                            name: void [6885,6889]
                        name [6890,6913]
                            name: BaselineAssembler [6890,6907]
                            operator: :: [6907,6909]
                            name: Move [6909,6913]
                        parameter_list [6913,6949]
                            parameter [6914,6931]
                                decl [6914,6931]
                                    type [6914,6931]
                                        name: MemOperand [6914,6924]
                                    name: output [6925,6931]
                            parameter [6933,6948]
                                decl [6933,6948]
                                    type [6933,6948]
                                        name: Register [6933,6941]
                                    name: source [6942,6948]
                        block [6950,6979]
                            block_content [6954,6977]
                                decl_stmt [6954,6977]
                                    decl [6954,6976]
                                        type [6954,6956]
                                            name: __ [6954,6956]
                                        name: Str [6957,6960]
                                        argument_list [6960,6976]
                                            argument [6961,6967]
                                                expr [6961,6967]
                                                    name: source [6961,6967]
                                            argument [6969,6975]
                                                expr [6969,6975]
                                                    name: output [6969,6975]
                    function [6980,7096]
                        type [6980,6984]
                            name: void [6980,6984]
                        name [6985,7008]
                            name: BaselineAssembler [6985,7002]
                            operator: :: [7002,7004]
                            name: Move [7004,7008]
                        parameter_list [7008,7054]
                            parameter [7009,7024]
                                decl [7009,7024]
                                    type [7009,7024]
                                        name: Register [7009,7017]
                                    name: output [7018,7024]
                            parameter [7026,7053]
                                decl [7026,7053]
                                    type [7026,7053]
                                        name: ExternalReference [7026,7043]
                                    name: reference [7044,7053]
                        block [7055,7096]
                            block_content [7059,7094]
                                decl_stmt [7059,7094]
                                    decl [7059,7093]
                                        type [7059,7061]
                                            name: __ [7059,7061]
                                        name: Mov [7062,7065]
                                        argument_list [7065,7093]
                                            argument [7066,7072]
                                                expr [7066,7072]
                                                    name: output [7066,7072]
                                            argument [7074,7092]
                                                expr [7074,7092]
                                                    call [7074,7092]
                                                        name: Operand [7074,7081]
                                                        argument_list [7081,7092]
                                                            argument [7082,7091]
                                                                expr [7082,7091]
                                                                    name: reference [7082,7091]
                    function [7097,7206]
                        type [7097,7101]
                            name: void [7097,7101]
                        name [7102,7125]
                            name: BaselineAssembler [7102,7119]
                            operator: :: [7119,7121]
                            name: Move [7121,7125]
                        parameter_list [7125,7168]
                            parameter [7126,7141]
                                decl [7126,7141]
                                    type [7126,7141]
                                        name: Register [7126,7134]
                                    name: output [7135,7141]
                            parameter [7143,7167]
                                decl [7143,7167]
                                    type [7143,7167]
                                        name [7143,7161]
                                            name: Handle [7143,7149]
                                            argument_list [7149,7161]
                                                argument [7150,7160]
                                                    name: HeapObject [7150,7160]
                                    name: value [7162,7167]
                        block [7169,7206]
                            block_content [7173,7204]
                                decl_stmt [7173,7204]
                                    decl [7173,7203]
                                        type [7173,7175]
                                            name: __ [7173,7175]
                                        name: Mov [7176,7179]
                                        argument_list [7179,7203]
                                            argument [7180,7186]
                                                expr [7180,7186]
                                                    name: output [7180,7186]
                                            argument [7188,7202]
                                                expr [7188,7202]
                                                    call [7188,7202]
                                                        name: Operand [7188,7195]
                                                        argument_list [7195,7202]
                                                            argument [7196,7201]
                                                                expr [7196,7201]
                                                                    name: value [7196,7201]
                    function [7207,7307]
                        type [7207,7211]
                            name: void [7207,7211]
                        name [7212,7235]
                            name: BaselineAssembler [7212,7229]
                            operator: :: [7229,7231]
                            name: Move [7231,7235]
                        parameter_list [7235,7267]
                            parameter [7236,7251]
                                decl [7236,7251]
                                    type [7236,7251]
                                        name: Register [7236,7244]
                                    name: output [7245,7251]
                            parameter [7253,7266]
                                decl [7253,7266]
                                    type [7253,7266]
                                        name: int32_t [7253,7260]
                                    name: value [7261,7266]
                        block [7268,7307]
                            block_content [7272,7305]
                                decl_stmt [7272,7305]
                                    decl [7272,7304]
                                        type [7272,7274]
                                            name: __ [7272,7274]
                                        name: Mov [7275,7278]
                                        argument_list [7278,7304]
                                            argument [7279,7285]
                                                expr [7279,7285]
                                                    name: output [7279,7285]
                                            argument [7287,7303]
                                                expr [7287,7303]
                                                    call [7287,7303]
                                                        name: Immediate [7287,7296]
                                                        argument_list [7296,7303]
                                                            argument [7297,7302]
                                                                expr [7297,7302]
                                                                    name: value [7297,7302]
                    function [7308,7408]
                        type [7308,7312]
                            name: void [7308,7312]
                        name [7313,7344]
                            name: BaselineAssembler [7313,7330]
                            operator: :: [7330,7332]
                            name: MoveMaybeSmi [7332,7344]
                        parameter_list [7344,7378]
                            parameter [7345,7360]
                                decl [7345,7360]
                                    type [7345,7360]
                                        name: Register [7345,7353]
                                    name: output [7354,7360]
                            parameter [7362,7377]
                                decl [7362,7377]
                                    type [7362,7377]
                                        name: Register [7362,7370]
                                    name: source [7371,7377]
                        block [7379,7408]
                            block_content [7383,7406]
                                decl_stmt [7383,7406]
                                    decl [7383,7405]
                                        type [7383,7385]
                                            name: __ [7383,7385]
                                        name: Mov [7386,7389]
                                        argument_list [7389,7405]
                                            argument [7390,7396]
                                                expr [7390,7396]
                                                    name: output [7390,7396]
                                            argument [7398,7404]
                                                expr [7398,7404]
                                                    name: source [7398,7404]
                    function [7409,7504]
                        type [7409,7413]
                            name: void [7409,7413]
                        name [7414,7440]
                            name: BaselineAssembler [7414,7431]
                            operator: :: [7431,7433]
                            name: MoveSmi [7433,7440]
                        parameter_list [7440,7474]
                            parameter [7441,7456]
                                decl [7441,7456]
                                    type [7441,7456]
                                        name: Register [7441,7449]
                                    name: output [7450,7456]
                            parameter [7458,7473]
                                decl [7458,7473]
                                    type [7458,7473]
                                        name: Register [7458,7466]
                                    name: source [7467,7473]
                        block [7475,7504]
                            block_content [7479,7502]
                                decl_stmt [7479,7502]
                                    decl [7479,7501]
                                        type [7479,7481]
                                            name: __ [7479,7481]
                                        name: Mov [7482,7485]
                                        argument_list [7485,7501]
                                            argument [7486,7492]
                                                expr [7486,7492]
                                                    name: output [7486,7492]
                                            argument [7494,7500]
                                                expr [7494,7500]
                                                    name: source [7494,7500]
                    namespace [7506,8111]
                        name: detail [7516,7522]
                        block [7523,8111]
                            function [7526,7796]
                                type [7526,7565]
                                    name [7526,7549]
                                        name: template [7526,7534]
                                        argument_list [7535,7549]
                                            argument [7536,7548]
                                                name: typename [7536,7544]
                                                name: Arg [7545,7548]
                                    specifier: inline [7550,7556]
                                    name: Register [7557,7565]
                                name: ToRegister [7566,7576]
                                parameter_list [7576,7712]
                                    parameter [7577,7600]
                                        decl [7577,7600]
                                            type [7577,7600]
                                                name: BaselineAssembler [7577,7594]
                                                modifier: * [7594,7595]
                                            name: basm [7596,7600]
                                    parameter [7629,7675]
                                        decl [7629,7675]
                                            type [7629,7675]
                                                name [7629,7668]
                                                    name: BaselineAssembler [7629,7646]
                                                    operator: :: [7646,7648]
                                                    name: ScratchRegisterScope [7648,7668]
                                                modifier: * [7668,7669]
                                            name: scope [7670,7675]
                                    parameter [7704,7711]
                                        decl [7704,7711]
                                            type [7704,7711]
                                                name: Arg [7704,7707]
                                            name: arg [7708,7711]
                                block [7713,7796]
                                    block_content [7717,7794]
                                        decl_stmt [7717,7756]
                                            decl [7717,7755]
                                                type [7717,7725]
                                                    name: Register [7717,7725]
                                                name: reg [7726,7729]
                                                init [7730,7755]
                                                    expr [7732,7755]
                                                        call [7732,7755]
                                                            name [7732,7753]
                                                                name: scope [7732,7737]
                                                                operator: -> [7737,7739]
                                                                name: AcquireScratch [7739,7753]
                                                            argument_list [7753,7755]
                                        expr_stmt [7759,7780]
                                            expr [7759,7779]
                                                call [7759,7779]
                                                    name [7759,7769]
                                                        name: basm [7759,7763]
                                                        operator: -> [7763,7765]
                                                        name: Move [7765,7769]
                                                    argument_list [7769,7779]
                                                        argument [7770,7773]
                                                            expr [7770,7773]
                                                                name: reg [7770,7773]
                                                        argument [7775,7778]
                                                            expr [7775,7778]
                                                                name: arg [7775,7778]
                                        return [7783,7794]
                                            expr [7790,7793]
                                                name: reg [7790,7793]
                            function [7797,7982]
                                type [7797,7812]
                                    specifier: inline [7797,7803]
                                    name: Register [7804,7812]
                                name: ToRegister [7813,7823]
                                parameter_list [7823,7964]
                                    parameter [7824,7847]
                                        decl [7824,7847]
                                            type [7824,7847]
                                                name: BaselineAssembler [7824,7841]
                                                modifier: * [7841,7842]
                                            name: basm [7843,7847]
                                    parameter [7876,7922]
                                        decl [7876,7922]
                                            type [7876,7922]
                                                name [7876,7915]
                                                    name: BaselineAssembler [7876,7893]
                                                    operator: :: [7893,7895]
                                                    name: ScratchRegisterScope [7895,7915]
                                                modifier: * [7915,7916]
                                            name: scope [7917,7922]
                                    parameter [7951,7963]
                                        decl [7951,7963]
                                            type [7951,7963]
                                                name: Register [7951,7959]
                                            name: reg [7960,7963]
                                block [7965,7982]
                                    block_content [7969,7980]
                                        return [7969,7980]
                                            expr [7976,7979]
                                                name: reg [7976,7979]
                            macro [7984,7992]
                                name: template [7984,7992]
                            expr_stmt [7993,8035]
                                expr [7993,8034]
                                    operator: < [7993,7994]
                                    name: typename [7994,8002]
                                    operator: ... [8002,8005]
                                    name: Args [8006,8010]
                                    operator: > [8010,8011]
                                    name: CountPushHelper [8019,8034]
                            macro [8036,8044]
                                name: template [8036,8044]
                            expr_stmt [8045,8109]
                                expr [8045,8109]
                                    operator: < [8045,8046]
                                    operator: > [8046,8047]
                                    name [8055,8072]
                                        name: CountPushHelper [8055,8070]
                                        argument_list [8070,8072]
                                    block [8073,8109]
                                        expr [8077,8107]
                                            specifier: static [8077,8083]
                                            name: int [8084,8087]
                                            macro [8088,8095]
                                                name: Count [8088,8093]
                                                argument_list [8093,8095]
                                            block [8096,8107]
                                                return [8098,8107]
                                                    expr [8105,8106]
                                                        literal: 0 [8105,8106]
                    empty_stmt [8111,8112]
                    macro [8113,8121]
                        name: template [8113,8121]
                    expr_stmt [8122,8298]
                        expr [8122,8135]
                            operator: < [8122,8123]
                            name: typename [8123,8131]
                            name: Arg [8132,8135]
                        operator: , [8135,8136]
                        expr [8137,8298]
                            name: typename [8137,8145]
                            operator: ... [8145,8148]
                            name: Args [8149,8153]
                            operator: > [8153,8154]
                            name [8162,8191]
                                name: CountPushHelper [8162,8177]
                                argument_list [8177,8191]
                                    argument [8178,8181]
                                        name: Arg [8178,8181]
                                    argument [8183,8190]
                                        name: Args [8183,8187]
                                        modifier: ... [8187,8190]
                            block [8192,8298]
                                expr [8196,8294]
                                    specifier: static [8196,8202]
                                    name: int [8203,8206]
                                    macro [8207,8235]
                                        name: Count [8207,8212]
                                        argument_list [8212,8235]
                                            argument [8213,8220]
                                            argument [8222,8234]
                                    block [8236,8294]
                                        return [8242,8294]
                                            expr [8249,8293]
                                                literal: 1 [8249,8252]
                                                operator: + [8251,8252]
                                                call [8253,8293]
                                                    name [8253,8284]
                                                        name [8253,8277]
                                                            name: CountPushHelper [8253,8268]
                                                            argument_list [8268,8277]
                                                                argument [8269,8276]
                                                                    name: Args [8269,8273]
                                                                    modifier: ... [8273,8276]
                                                        operator: :: [8277,8279]
                                                        name: Count [8279,8284]
                                                    argument_list [8284,8293]
                                                        argument [8285,8292]
                                                            expr [8285,8292]
                                                                name: args [8285,8289]
                                                                operator: ... [8289,8292]
            empty_stmt [8300,8301]
            macro [8302,8310]
                name: template [8302,8310]
            expr_stmt [8311,8538]
                expr [8311,8538]
                    operator: < [8311,8312]
                    name: typename [8312,8320]
                    operator: ... [8320,8323]
                    name: Args [8324,8328]
                    operator: > [8328,8329]
                    name [8337,8388]
                        name: CountPushHelper [8337,8352]
                        argument_list [8352,8388]
                            argument [8353,8378]
                                name [8353,8378]
                                    name: interpreter [8353,8364]
                                    operator: :: [8364,8366]
                                    name: RegisterList [8366,8378]
                            argument [8380,8387]
                                name: Args [8380,8384]
                                modifier: ... [8384,8387]
                    block [8389,8538]
                        expr [8393,8534]
                            specifier: static [8393,8399]
                            name: int [8400,8403]
                            macro [8404,8455]
                                name: Count [8404,8409]
                                argument_list [8409,8455]
                                    argument [8410,8440]
                                    argument [8442,8454]
                            block [8456,8534]
                                return [8462,8534]
                                    expr [8469,8533]
                                        call [8469,8490]
                                            name [8469,8488]
                                                name: list [8469,8473]
                                                operator: . [8473,8474]
                                                name: register_count [8474,8488]
                                            argument_list [8488,8490]
                                        operator: + [8491,8492]
                                        call [8493,8533]
                                            name [8493,8524]
                                                name [8493,8517]
                                                    name: CountPushHelper [8493,8508]
                                                    argument_list [8508,8517]
                                                        argument [8509,8516]
                                                            name: Args [8509,8513]
                                                            modifier: ... [8513,8516]
                                                operator: :: [8517,8519]
                                                name: Count [8519,8524]
                                            argument_list [8524,8533]
                                                argument [8525,8532]
                                                    expr [8525,8532]
                                                        name: args [8525,8529]
                                                        operator: ... [8529,8532]
    empty_stmt [8540,8541]
    macro [8543,8551]
        name: template [8543,8551]
    expr_stmt [8552,8592]
        expr [8552,8591]
            operator: < [8552,8553]
            name: typename [8553,8561]
            operator: ... [8561,8564]
            name: Args [8565,8569]
            operator: > [8569,8570]
            name: PushAllHelper [8578,8591]
    function [8593,8730]
        type [8593,8632]
            name [8593,8620]
                name: template [8593,8601]
                argument_list [8602,8620]
                    argument [8603,8619]
                        name: typename [8603,8611]
                        modifier: ... [8611,8614]
                        name: Args [8615,8619]
            specifier: inline [8621,8627]
            name: void [8628,8632]
        name: PushAll [8633,8640]
        parameter_list [8640,8679]
            parameter [8641,8664]
                decl [8641,8664]
                    type [8641,8664]
                        name: BaselineAssembler [8641,8658]
                        modifier: * [8658,8659]
                    name: basm [8660,8664]
            parameter [8666,8678]
                decl [8666,8678]
                    type [8666,8678]
                        name: Args [8666,8670]
                        modifier: ... [8670,8673]
                    name: args [8674,8678]
        block [8680,8730]
            block_content [8684,8728]
                expr_stmt [8684,8728]
                    expr [8684,8727]
                        call [8684,8727]
                            name [8684,8712]
                                name [8684,8706]
                                    name: PushAllHelper [8684,8697]
                                    argument_list [8697,8706]
                                        argument [8698,8705]
                                            name: Args [8698,8702]
                                            modifier: ... [8702,8705]
                                operator: :: [8706,8708]
                                name: Push [8708,8712]
                            argument_list [8712,8727]
                                argument [8713,8717]
                                    expr [8713,8717]
                                        name: basm [8713,8717]
                                argument [8719,8726]
                                    expr [8719,8726]
                                        name: args [8719,8723]
                                        operator: ... [8723,8726]
    function [8731,8882]
        type [8731,8770]
            name [8731,8758]
                name: template [8731,8739]
                argument_list [8740,8758]
                    argument [8741,8757]
                        name: typename [8741,8749]
                        modifier: ... [8749,8752]
                        name: Args [8753,8757]
            specifier: inline [8759,8765]
            name: void [8766,8770]
        name: PushAllReverse [8771,8785]
        parameter_list [8785,8824]
            parameter [8786,8809]
                decl [8786,8809]
                    type [8786,8809]
                        name: BaselineAssembler [8786,8803]
                        modifier: * [8803,8804]
                    name: basm [8805,8809]
            parameter [8811,8823]
                decl [8811,8823]
                    type [8811,8823]
                        name: Args [8811,8815]
                        modifier: ... [8815,8818]
                    name: args [8819,8823]
        block [8825,8882]
            block_content [8829,8880]
                expr_stmt [8829,8880]
                    expr [8829,8879]
                        call [8829,8879]
                            name [8829,8864]
                                name [8829,8851]
                                    name: PushAllHelper [8829,8842]
                                    argument_list [8842,8851]
                                        argument [8843,8850]
                                            name: Args [8843,8847]
                                            modifier: ... [8847,8850]
                                operator: :: [8851,8853]
                                name: PushReverse [8853,8864]
                            argument_list [8864,8879]
                                argument [8865,8869]
                                    expr [8865,8869]
                                        name: basm [8865,8869]
                                argument [8871,8878]
                                    expr [8871,8878]
                                        name: args [8871,8875]
                                        operator: ... [8875,8878]
    macro [8884,8892]
        name: template [8884,8892]
    expr_stmt [8893,9024]
        expr [8893,9023]
            operator: < [8893,8894]
            operator: > [8894,8895]
            name [8903,8918]
                name: PushAllHelper [8903,8916]
                argument_list [8916,8918]
            block [8919,9023]
                expr [8923,9021]
                    specifier: static [8923,8929]
                    name: void [8930,8934]
                    macro [8935,8964]
                        name: Push [8935,8939]
                        argument_list [8939,8964]
                            argument [8940,8963]
                    block [8965,8967]
                    specifier: static [8970,8976]
                    name: void [8977,8981]
                    macro [8982,9018]
                        name: PushReverse [8982,8993]
                        argument_list [8993,9018]
                            argument [8994,9017]
                    block [9019,9021]
    macro [9025,9033]
        name: template [9025,9033]
    expr_stmt [9034,9340]
        expr [9034,9340]
            operator: < [9034,9035]
            name: typename [9035,9043]
            name: Arg [9044,9047]
            operator: > [9047,9048]
            name [9056,9074]
                name: PushAllHelper [9056,9069]
                argument_list [9069,9074]
                    argument [9070,9073]
                        name: Arg [9070,9073]
            block [9075,9340]
                expr [9079,9336]
                    specifier: static [9079,9085]
                    name: void [9086,9090]
                    macro [9091,9125]
                        name: Push [9091,9095]
                        argument_list [9095,9125]
                            argument [9096,9119]
                            argument [9121,9124]
                    block [9126,9154]
                        expr [9128,9151]
                            call [9128,9151]
                                name: FATAL [9128,9133]
                                argument_list [9133,9151]
                                    argument [9134,9150]
                                        expr [9134,9150]
                                            literal: "Unaligned push" [9134,9150]
                    specifier: static [9157,9163]
                    name: void [9164,9168]
                    macro [9169,9214]
                        name: PushReverse [9169,9180]
                        argument_list [9180,9214]
                            argument [9181,9204]
                            argument [9206,9213]
                    block [9215,9336]
                        comment: // Push the padding register to round up the amount of values pushed. [9221,9290]
                        return [9295,9336]
                            expr [9302,9335]
                                call [9302,9335]
                                    name: PushAllReverse [9302,9316]
                                    argument_list [9316,9335]
                                        argument [9317,9321]
                                            expr [9317,9321]
                                                name: basm [9317,9321]
                                        argument [9323,9326]
                                            expr [9323,9326]
                                                name: arg [9323,9326]
                                        argument [9328,9334]
                                            expr [9328,9334]
                                                name: padreg [9328,9334]
    macro [9344,9352]
        name: template [9344,9352]
    expr_stmt [9353,10107]
        expr [9353,9367]
            operator: < [9353,9354]
            name: typename [9354,9362]
            name: Arg1 [9363,9367]
        operator: , [9367,9368]
        expr [9369,9382]
            name: typename [9369,9377]
            name: Arg2 [9378,9382]
        operator: , [9382,9383]
        expr [9384,10106]
            name: typename [9384,9392]
            operator: ... [9392,9395]
            name: Args [9396,9400]
            operator: > [9400,9401]
            name [9409,9443]
                name: PushAllHelper [9409,9422]
                argument_list [9422,9443]
                    argument [9423,9427]
                        name: Arg1 [9423,9427]
                    argument [9429,9433]
                        name: Arg2 [9429,9433]
                    argument [9435,9442]
                        name: Args [9435,9439]
                        modifier: ... [9439,9442]
            block [9444,10106]
                expr [9448,10104]
                    specifier: static [9448,9454]
                    name: void [9455,9459]
                    macro [9460,9544]
                        name: Push [9460,9464]
                        argument_list [9464,9544]
                            argument [9465,9488]
                            argument [9490,9499]
                            argument [9501,9510]
                            argument [9531,9543]
                    block [9545,9764]
                        expr [9551,9759]
                            block [9551,9732]
                                expr [9559,9610]
                                    name [9559,9598]
                                        name: BaselineAssembler [9559,9576]
                                        operator: :: [9576,9578]
                                        name: ScratchRegisterScope [9578,9598]
                                    call [9599,9610]
                                        name: scope [9599,9604]
                                        argument_list [9604,9610]
                                            argument [9605,9609]
                                                expr [9605,9609]
                                                    name: basm [9605,9609]
                                expr [9618,9725]
                                    call [9618,9630]
                                        name [9618,9628]
                                            name: basm [9618,9622]
                                            operator: -> [9622,9624]
                                            name: masm [9624,9628]
                                        argument_list [9628,9630]
                                    operator: -> [9630,9632]
                                    call [9632,9725]
                                        name: Push [9632,9636]
                                        argument_list [9636,9725]
                                            argument [9637,9667]
                                                expr [9637,9667]
                                                    call [9637,9667]
                                                        name: ToRegister [9637,9647]
                                                        argument_list [9647,9667]
                                                            argument [9648,9652]
                                                                expr [9648,9652]
                                                                    name: basm [9648,9652]
                                                            argument [9654,9660]
                                                                expr [9654,9660]
                                                                    operator: & [9654,9655]
                                                                    name: scope [9655,9660]
                                                            argument [9662,9666]
                                                                expr [9662,9666]
                                                                    name: arg1 [9662,9666]
                                            argument [9694,9724]
                                                expr [9694,9724]
                                                    call [9694,9724]
                                                        name: ToRegister [9694,9704]
                                                        argument_list [9704,9724]
                                                            argument [9705,9709]
                                                                expr [9705,9709]
                                                                    name: basm [9705,9709]
                                                            argument [9711,9717]
                                                                expr [9711,9717]
                                                                    operator: & [9711,9712]
                                                                    name: scope [9712,9717]
                                                            argument [9719,9723]
                                                                expr [9719,9723]
                                                                    name: arg2 [9719,9723]
                            call [9737,9759]
                                name: PushAll [9737,9744]
                                argument_list [9744,9759]
                                    argument [9745,9749]
                                        expr [9745,9749]
                                            name: basm [9745,9749]
                                    argument [9751,9758]
                                        expr [9751,9758]
                                            name: args [9751,9755]
                                            operator: ... [9755,9758]
                    specifier: static [9767,9773]
                    name: void [9774,9778]
                    macro [9779,9877]
                        name: PushReverse [9779,9790]
                        argument_list [9790,9877]
                            argument [9791,9814]
                            argument [9816,9825]
                            argument [9827,9836]
                            argument [9864,9876]
                    block [9878,10104]
                        expr [9884,9913]
                            call [9884,9913]
                                name: PushAllReverse [9884,9898]
                                argument_list [9898,9913]
                                    argument [9899,9903]
                                        expr [9899,9903]
                                            name: basm [9899,9903]
                                    argument [9905,9912]
                                        expr [9905,9912]
                                            name: args [9905,9909]
                                            operator: ... [9909,9912]
                        expr [9919,10100]
                            block [9919,10100]
                                expr [9927,9978]
                                    name [9927,9966]
                                        name: BaselineAssembler [9927,9944]
                                        operator: :: [9944,9946]
                                        name: ScratchRegisterScope [9946,9966]
                                    call [9967,9978]
                                        name: scope [9967,9972]
                                        argument_list [9972,9978]
                                            argument [9973,9977]
                                                expr [9973,9977]
                                                    name: basm [9973,9977]
                                expr [9986,10093]
                                    call [9986,9998]
                                        name [9986,9996]
                                            name: basm [9986,9990]
                                            operator: -> [9990,9992]
                                            name: masm [9992,9996]
                                        argument_list [9996,9998]
                                    operator: -> [9998,10000]
                                    call [10000,10093]
                                        name: Push [10000,10004]
                                        argument_list [10004,10093]
                                            argument [10005,10035]
                                                expr [10005,10035]
                                                    call [10005,10035]
                                                        name: ToRegister [10005,10015]
                                                        argument_list [10015,10035]
                                                            argument [10016,10020]
                                                                expr [10016,10020]
                                                                    name: basm [10016,10020]
                                                            argument [10022,10028]
                                                                expr [10022,10028]
                                                                    operator: & [10022,10023]
                                                                    name: scope [10023,10028]
                                                            argument [10030,10034]
                                                                expr [10030,10034]
                                                                    name: arg2 [10030,10034]
                                            argument [10062,10092]
                                                expr [10062,10092]
                                                    call [10062,10092]
                                                        name: ToRegister [10062,10072]
                                                        argument_list [10072,10092]
                                                            argument [10073,10077]
                                                                expr [10073,10077]
                                                                    name: basm [10073,10077]
                                                            argument [10079,10085]
                                                                expr [10079,10085]
                                                                    operator: & [10079,10080]
                                                                    name: scope [10080,10085]
                                                            argument [10087,10091]
                                                                expr [10087,10091]
                                                                    name: arg1 [10087,10091]
    comment: // Currently RegisterLists are always be the last argument, so we don't [10108,10179]
    comment: // specialize for the case where they're not. We do still specialise for the [10180,10256]
    comment: // aligned and unaligned cases. [10257,10288]
    macro [10289,10297]
        name: template [10289,10297]
    expr_stmt [10298,10839]
        expr [10298,10839]
            operator: < [10298,10299]
            name: typename [10299,10307]
            name: Arg [10308,10311]
            operator: > [10311,10312]
            name [10320,10365]
                name: PushAllHelper [10320,10333]
                argument_list [10333,10365]
                    argument [10334,10337]
                        name: Arg [10334,10337]
                    argument [10339,10364]
                        name [10339,10364]
                            name: interpreter [10339,10350]
                            operator: :: [10350,10352]
                            name: RegisterList [10352,10364]
            block [10366,10839]
                expr [10370,10768]
                    specifier: static [10370,10376]
                    name: void [10377,10381]
                    macro [10382,10471]
                        name: Push [10382,10386]
                        argument_list [10386,10471]
                            argument [10387,10410]
                            argument [10412,10419]
                            argument [10440,10470]
                    block [10472,10571]
                        expr [10478,10517]
                            call [10478,10517]
                                name: DCHECK_EQ [10478,10487]
                                argument_list [10487,10517]
                                    argument [10488,10513]
                                        expr [10488,10513]
                                            call [10488,10509]
                                                name [10488,10507]
                                                    name: list [10488,10492]
                                                    operator: . [10492,10493]
                                                    name: register_count [10493,10507]
                                                argument_list [10507,10509]
                                            operator: % [10510,10511]
                                            literal: 2 [10512,10513]
                                    argument [10515,10516]
                                        expr [10515,10516]
                                            literal: 1 [10515,10516]
                        expr [10523,10566]
                            call [10523,10566]
                                name: PushAll [10523,10530]
                                argument_list [10530,10566]
                                    argument [10531,10535]
                                        expr [10531,10535]
                                            name: basm [10531,10535]
                                    argument [10537,10540]
                                        expr [10537,10540]
                                            name: arg [10537,10540]
                                    argument [10542,10549]
                                        expr [10542,10549]
                                            name [10542,10549]
                                                name: list [10542,10546]
                                                index [10546,10549]
                                                    expr [10547,10548]
                                                        literal: 0 [10547,10548]
                                    argument [10551,10565]
                                        expr [10551,10565]
                                            call [10551,10565]
                                                name [10551,10563]
                                                    name: list [10551,10555]
                                                    operator: . [10555,10556]
                                                    name: PopLeft [10556,10563]
                                                argument_list [10563,10565]
                    specifier: static [10574,10580]
                    name: void [10581,10585]
                    macro [10586,10689]
                        name: PushReverse [10586,10597]
                        argument_list [10597,10689]
                            argument [10598,10621]
                            argument [10623,10630]
                            argument [10658,10688]
                    block [10690,10768]
                        if_stmt [10696,10762]
                            if [10696,10762]
                                condition [10699,10727]
                                    expr [10700,10726]
                                        call [10700,10721]
                                            name [10700,10719]
                                                name: list [10700,10704]
                                                operator: . [10704,10705]
                                                name: register_count [10705,10719]
                                            argument_list [10719,10721]
                                        operator: == [10722,10724]
                                        literal: 0 [10725,10726]
                                block [10728,10762]
                                    block_content [10736,10762]
                                        expr_stmt [10736,10762]
                                            expr [10736,10761]
                                                call [10736,10761]
                                                    name: PushAllReverse [10736,10750]
                                                    argument_list [10750,10761]
                                                        argument [10751,10755]
                                                            expr [10751,10755]
                                                                name: basm [10751,10755]
                                                        argument [10757,10760]
                                                            expr [10757,10760]
                                                                name: arg [10757,10760]
                                        expr_stmt [0,0]
                if_stmt [10769,10833]
                    else [10769,10833]
                        block [10774,10833]
                            block_content [10782,10833]
                                expr_stmt [10782,10833]
                                    expr [10782,10832]
                                        call [10782,10832]
                                            name: PushAllReverse [10782,10796]
                                            argument_list [10796,10832]
                                                argument [10797,10801]
                                                    expr [10797,10801]
                                                        name: basm [10797,10801]
                                                argument [10803,10806]
                                                    expr [10803,10806]
                                                        name: arg [10803,10806]
                                                argument [10808,10815]
                                                    expr [10808,10815]
                                                        name [10808,10815]
                                                            name: list [10808,10812]
                                                            index [10812,10815]
                                                                expr [10813,10814]
                                                                    literal: 0 [10813,10814]
                                                argument [10817,10831]
                                                    expr [10817,10831]
                                                        call [10817,10831]
                                                            name [10817,10829]
                                                                name: list [10817,10821]
                                                                operator: . [10821,10822]
                                                                name: PopLeft [10822,10829]
                                                            argument_list [10829,10831]
                                expr_stmt [0,0]
    empty_stmt [10845,10846]
    macro [10847,10855]
        name: template [10847,10855]
    expr_stmt [10856,11523]
        expr [10856,11523]
            operator: < [10856,10857]
            operator: > [10857,10858]
            name [10866,10906]
                name: PushAllHelper [10866,10879]
                argument_list [10879,10906]
                    argument [10880,10905]
                        name [10880,10905]
                            name: interpreter [10880,10891]
                            operator: :: [10891,10893]
                            name: RegisterList [10893,10905]
            block [10907,11181]
                expr [10911,11177]
                    specifier: static [10911,10917]
                    name: void [10918,10922]
                    macro [10923,10984]
                        name: Push [10923,10927]
                        argument_list [10927,10984]
                            argument [10928,10951]
                            argument [10953,10983]
                    block [10985,11177]
                        expr [10991,11030]
                            call [10991,11030]
                                name: DCHECK_EQ [10991,11000]
                                argument_list [11000,11030]
                                    argument [11001,11026]
                                        expr [11001,11026]
                                            call [11001,11022]
                                                name [11001,11020]
                                                    name: list [11001,11005]
                                                    operator: . [11005,11006]
                                                    name: register_count [11006,11020]
                                                argument_list [11020,11022]
                                            operator: % [11023,11024]
                                            literal: 2 [11025,11026]
                                    argument [11028,11029]
                                        expr [11028,11029]
                                            literal: 0 [11028,11029]
                        for [11036,11171]
                            control [11040,11110]
                                init [11041,11059]
                                    decl [11041,11058]
                                        type [11041,11044]
                                            name: int [11041,11044]
                                        name: reg_index [11045,11054]
                                        init [11055,11058]
                                            expr [11057,11058]
                                                literal: 0 [11057,11058]
                                condition [11060,11094]
                                    expr [11060,11093]
                                        name: reg_index [11060,11069]
                                        operator: < [11070,11071]
                                        call [11072,11093]
                                            name [11072,11091]
                                                name: list [11072,11076]
                                                operator: . [11076,11077]
                                                name: register_count [11077,11091]
                                            argument_list [11091,11093]
                                incr [11095,11109]
                                    expr [11095,11109]
                                        name: reg_index [11095,11104]
                                        operator: += [11105,11107]
                                        literal: 2 [11108,11109]
                            block [11111,11171]
                                block_content [11119,11171]
                                    expr_stmt [11119,11171]
                                        expr [11119,11170]
                                            call [11119,11170]
                                                name: PushAll [11119,11126]
                                                argument_list [11126,11170]
                                                    argument [11127,11131]
                                                        expr [11127,11131]
                                                            name: basm [11127,11131]
                                                    argument [11133,11148]
                                                        expr [11133,11148]
                                                            name [11133,11148]
                                                                name: list [11133,11137]
                                                                index [11137,11148]
                                                                    expr [11138,11147]
                                                                        name: reg_index [11138,11147]
                                                    argument [11150,11169]
                                                        expr [11150,11169]
                                                            name [11150,11169]
                                                                name: list [11150,11154]
                                                                index [11154,11169]
                                                                    expr [11155,11168]
                                                                        name: reg_index [11155,11164]
                                                                        operator: + [11165,11166]
                                                                        literal: 1 [11167,11168]
                                    expr_stmt [0,0]
            specifier: static [11184,11190]
            name: void [11191,11195]
            macro [11196,11290]
                name: PushReverse [11196,11207]
                argument_list [11207,11290]
                    argument [11208,11231]
                    argument [11259,11289]
            block [11291,11523]
                expr [11297,11338]
                    name: int [11297,11300]
                    name: reg_index [11301,11310]
                    operator: = [11311,11312]
                    call [11313,11334]
                        name [11313,11332]
                            name: list [11313,11317]
                            operator: . [11317,11318]
                            name: register_count [11318,11332]
                        argument_list [11332,11334]
                    operator: - [11335,11336]
                    literal: 1 [11337,11338]
                if_stmt [11344,11517]
                    if [11344,11517]
                        condition [11347,11367]
                            expr [11348,11366]
                                name: reg_index [11348,11357]
                                operator: % [11358,11359]
                                literal: 2 [11360,11361]
                                operator: == [11362,11364]
                                literal: 0 [11365,11366]
                        block [11368,11517]
                            block_content [11452,11517]
                                comment: // Push the padding register to round up the amount of values pushed. [11376,11445]
                                expr_stmt [11452,11498]
                                    expr [11452,11497]
                                        call [11452,11497]
                                            name: PushAllReverse [11452,11466]
                                            argument_list [11466,11497]
                                                argument [11467,11471]
                                                    expr [11467,11471]
                                                        name: basm [11467,11471]
                                                argument [11473,11488]
                                                    expr [11473,11488]
                                                        name [11473,11488]
                                                            name: list [11473,11477]
                                                            index [11477,11488]
                                                                expr [11478,11487]
                                                                    name: reg_index [11478,11487]
                                                argument [11490,11496]
                                                    expr [11490,11496]
                                                        name: padreg [11490,11496]
                                expr_stmt [11505,11517]
                                    expr [11505,11516]
                                        name: reg_index [11505,11514]
                                        operator: -- [11514,11516]
                                expr_stmt [0,0]
    for [11528,11640]
        control [11532,11566]
            init [11533,11534]
            condition [11535,11550]
                expr [11535,11549]
                    name: reg_index [11535,11544]
                    operator: >= [11545,11547]
                    literal: 1 [11548,11549]
            incr [11551,11565]
                expr [11551,11565]
                    name: reg_index [11551,11560]
                    operator: -= [11561,11563]
                    literal: 2 [11564,11565]
        block [11567,11640]
            block_content [11575,11634]
                expr_stmt [11575,11634]
                    expr [11575,11633]
                        call [11575,11633]
                            name: PushAllReverse [11575,11589]
                            argument_list [11589,11633]
                                argument [11590,11594]
                                    expr [11590,11594]
                                        name: basm [11590,11594]
                                argument [11596,11615]
                                    expr [11596,11615]
                                        name [11596,11615]
                                            name: list [11596,11600]
                                            index [11600,11615]
                                                expr [11601,11614]
                                                    name: reg_index [11601,11610]
                                                    operator: - [11611,11612]
                                                    literal: 1 [11613,11614]
                                argument [11617,11632]
                                    expr [11617,11632]
                                        name [11617,11632]
                                            name: list [11617,11621]
                                            index [11621,11632]
                                                expr [11622,11631]
                                                    name: reg_index [11622,11631]
    empty_stmt [11646,11647]
    macro [11649,11657]
        name: template [11649,11657]
    expr_stmt [11658,11694]
        expr [11658,11693]
            operator: < [11658,11659]
            name: typename [11659,11667]
            operator: ... [11667,11670]
            name: T [11671,11672]
            operator: > [11672,11673]
            name: PopAllHelper [11681,11693]
    macro [11695,11703]
        name: template [11695,11703]
    expr_stmt [11704,11779]
        expr [11704,11778]
            operator: < [11704,11705]
            operator: > [11705,11706]
            name [11714,11728]
                name: PopAllHelper [11714,11726]
                argument_list [11726,11728]
            block [11729,11778]
                expr [11733,11776]
                    specifier: static [11733,11739]
                    name: void [11740,11744]
                    macro [11745,11773]
                        name: Pop [11745,11748]
                        argument_list [11748,11773]
                            argument [11749,11772]
                    block [11774,11776]
    macro [11780,11788]
        name: template [11780,11788]
    expr_stmt [11789,11925]
        expr [11789,11924]
            operator: < [11789,11790]
            operator: > [11790,11791]
            name [11799,11821]
                name: PopAllHelper [11799,11811]
                argument_list [11811,11821]
                    argument [11812,11820]
                        name: Register [11812,11820]
            block [11822,11924]
                expr [11826,11922]
                    specifier: static [11826,11832]
                    name: void [11833,11837]
                    macro [11838,11880]
                        name: Pop [11838,11841]
                        argument_list [11841,11880]
                            argument [11842,11865]
                            argument [11867,11879]
                    block [11881,11922]
                        expr [11887,11917]
                            call [11887,11899]
                                name [11887,11897]
                                    name: basm [11887,11891]
                                    operator: -> [11891,11893]
                                    name: masm [11893,11897]
                                argument_list [11897,11899]
                            operator: -> [11899,11901]
                            call [11901,11917]
                                name: Pop [11901,11904]
                                argument_list [11904,11917]
                                    argument [11905,11908]
                                        expr [11905,11908]
                                            name: reg [11905,11908]
                                    argument [11910,11916]
                                        expr [11910,11916]
                                            name: padreg [11910,11916]
    macro [11926,11934]
        name: template [11926,11934]
    expr_stmt [11935,12188]
        expr [11935,12187]
            operator: < [11935,11936]
            name: typename [11936,11944]
            operator: ... [11944,11947]
            name: T [11948,11949]
            operator: > [11949,11950]
            name [11958,11996]
                name: PopAllHelper [11958,11970]
                argument_list [11970,11996]
                    argument [11971,11979]
                        name: Register [11971,11979]
                    argument [11981,11989]
                        name: Register [11981,11989]
                    argument [11991,11995]
                        name: T [11991,11992]
                        modifier: ... [11992,11995]
            block [11997,12187]
                expr [12001,12185]
                    specifier: static [12001,12007]
                    name: void [12008,12012]
                    macro [12013,12100]
                        name: Pop [12013,12016]
                        argument_list [12016,12100]
                            argument [12017,12040]
                            argument [12042,12055]
                            argument [12057,12070]
                            argument [12090,12099]
                    block [12101,12185]
                        expr [12107,12136]
                            call [12107,12119]
                                name [12107,12117]
                                    name: basm [12107,12111]
                                    operator: -> [12111,12113]
                                    name: masm [12113,12117]
                                argument_list [12117,12119]
                            operator: -> [12119,12121]
                            call [12121,12136]
                                name: Pop [12121,12124]
                                argument_list [12124,12136]
                                    argument [12125,12129]
                                        expr [12125,12129]
                                            name: reg1 [12125,12129]
                                    argument [12131,12135]
                                        expr [12131,12135]
                                            name: reg2 [12131,12135]
                        expr [12142,12180]
                            call [12142,12180]
                                name [12142,12165]
                                    name [12142,12160]
                                        name: PopAllHelper [12142,12154]
                                        argument_list [12154,12160]
                                            argument [12155,12159]
                                                name: T [12155,12156]
                                                modifier: ... [12156,12159]
                                    operator: :: [12160,12162]
                                    name: Pop [12162,12165]
                                argument_list [12165,12180]
                                    argument [12166,12170]
                                        expr [12166,12170]
                                            name: basm [12166,12170]
                                    argument [12172,12179]
                                        expr [12172,12179]
                                            name: tail [12172,12176]
                                            operator: ... [12176,12179]
    comment: // namespace detail [12193,12212]
    expr_stmt [12223,12515]
        expr [12223,12515]
            operator: < [12223,12224]
            name: typename [12224,12232]
            operator: ... [12232,12235]
            name: T [12236,12237]
            operator: > [12237,12238]
            name: int [12239,12242]
            macro [12243,12260]
                name: BaselineAssembler [12243,12260]
            name [12260,12266]
                operator: :: [12260,12262]
                name: Push [12262,12266]
            operator: ( [12266,12267]
            name: T [12267,12268]
            operator: ... [12268,12271]
            name: vals [12272,12276]
            operator: ) [12276,12277]
            block [12278,12515]
                comment: // We have to count the pushes first, to decide whether to add padding before [12282,12359]
                comment: // the first push. [12362,12380]
                expr [12383,12445]
                    name: int [12383,12386]
                    name: push_count [12387,12397]
                    operator: = [12398,12399]
                    call [12400,12445]
                        name [12400,12436]
                            name: detail [12400,12406]
                            operator: :: [12406,12408]
                            name [12408,12429]
                                name: CountPushHelper [12408,12423]
                                argument_list [12423,12429]
                                    argument [12424,12428]
                                        name: T [12424,12425]
                                        modifier: ... [12425,12428]
                            operator: :: [12429,12431]
                            name: Count [12431,12436]
                        argument_list [12436,12445]
                            argument [12437,12444]
                                expr [12437,12444]
                                    name: vals [12437,12441]
                                    operator: ... [12441,12444]
                if_stmt [12449,12511]
                    if [12449,12511]
                        condition [12452,12473]
                            expr [12453,12472]
                                name: push_count [12453,12463]
                                operator: % [12464,12465]
                                literal: 2 [12466,12467]
                                operator: == [12468,12470]
                                literal: 0 [12471,12472]
                        block [12474,12511]
                            block_content [12480,12511]
                                expr_stmt [12480,12511]
                                    expr [12480,12510]
                                        call [12480,12510]
                                            name [12480,12495]
                                                name: detail [12480,12486]
                                                operator: :: [12486,12488]
                                                name: PushAll [12488,12495]
                                            argument_list [12495,12510]
                                                argument [12496,12500]
                                                    expr [12496,12500]
                                                        name: this [12496,12500]
                                                argument [12502,12509]
                                                    expr [12502,12509]
                                                        name: vals [12502,12506]
                                                        operator: ... [12506,12509]
                                expr_stmt [0,0]
    if_stmt [12516,12570]
        else [12516,12570]
            block [12521,12570]
                block_content [12527,12566]
                    expr_stmt [12527,12566]
                        expr [12527,12565]
                            call [12527,12565]
                                name [12527,12542]
                                    name: detail [12527,12533]
                                    operator: :: [12533,12535]
                                    name: PushAll [12535,12542]
                                argument_list [12542,12565]
                                    argument [12543,12547]
                                        expr [12543,12547]
                                            name: this [12543,12547]
                                    argument [12549,12555]
                                        expr [12549,12555]
                                            name: padreg [12549,12555]
                                    argument [12557,12564]
                                        expr [12557,12564]
                                            name: vals [12557,12561]
                                            operator: ... [12561,12564]
    return [12573,12591]
        expr [12580,12590]
            name: push_count [12580,12590]
    expr_stmt [12604,16162]
        expr [12604,16162]
            operator: < [12604,12605]
            name: typename [12605,12613]
            operator: ... [12613,12616]
            name: T [12617,12618]
            operator: > [12618,12619]
            name: void [12620,12624]
            macro [12625,12642]
                name: BaselineAssembler [12625,12642]
            name [12642,12655]
                operator: :: [12642,12644]
                name: PushReverse [12644,12655]
            operator: ( [12655,12656]
            name: T [12656,12657]
            operator: ... [12657,12660]
            name: vals [12661,12665]
            operator: ) [12665,12666]
            block [12667,12711]
                expr [12671,12708]
                    call [12671,12708]
                        name [12671,12693]
                            name: detail [12671,12677]
                            operator: :: [12677,12679]
                            name: PushAllReverse [12679,12693]
                        argument_list [12693,12708]
                            argument [12694,12698]
                                expr [12694,12698]
                                    name: this [12694,12698]
                            argument [12700,12707]
                                expr [12700,12707]
                                    name: vals [12700,12704]
                                    operator: ... [12704,12707]
            name [12713,12737]
                name: template [12713,12721]
                argument_list [12722,12737]
                    argument [12723,12736]
                        name: typename [12723,12731]
                        modifier: ... [12731,12734]
                        name: T [12735,12736]
            name: void [12738,12742]
            macro [12743,12760]
                name: BaselineAssembler [12743,12760]
            name [12760,12765]
                operator: :: [12760,12762]
                name: Pop [12762,12765]
            operator: ( [12765,12766]
            name: T [12766,12767]
            operator: ... [12767,12770]
            name: registers [12771,12780]
            operator: ) [12780,12781]
            block [12782,12840]
                expr [12786,12837]
                    call [12786,12837]
                        name [12786,12817]
                            name: detail [12786,12792]
                            operator: :: [12792,12794]
                            name [12794,12812]
                                name: PopAllHelper [12794,12806]
                                argument_list [12806,12812]
                                    argument [12807,12811]
                                        name: T [12807,12808]
                                        modifier: ... [12808,12811]
                            operator: :: [12812,12814]
                            name: Pop [12814,12817]
                        argument_list [12817,12837]
                            argument [12818,12822]
                                expr [12818,12822]
                                    name: this [12818,12822]
                            argument [12824,12836]
                                expr [12824,12836]
                                    name: registers [12824,12833]
                                    operator: ... [12833,12836]
            name: void [12842,12846]
            macro [12847,12864]
                name: BaselineAssembler [12847,12864]
            name [12864,12888]
                operator: :: [12864,12866]
                name: LoadTaggedPointerField [12866,12888]
            operator: ( [12888,12889]
            name: Register [12889,12897]
            name: output [12898,12904]
            operator: , [12904,12905]
            name: Register [12906,12914]
            name: source [12915,12921]
            operator: , [12921,12922]
            name: int [12970,12973]
            name: offset [12974,12980]
            operator: ) [12980,12981]
            block [12982,13055]
                expr [12986,13052]
                    name: __ [12986,12988]
                    call [12989,13052]
                        name: LoadTaggedPointerField [12989,13011]
                        argument_list [13011,13052]
                            argument [13012,13018]
                                expr [13012,13018]
                                    name: output [13012,13018]
                            argument [13020,13051]
                                expr [13020,13051]
                                    call [13020,13051]
                                        name: FieldMemOperand [13020,13035]
                                        argument_list [13035,13051]
                                            argument [13036,13042]
                                                expr [13036,13042]
                                                    name: source [13036,13042]
                                            argument [13044,13050]
                                                expr [13044,13050]
                                                    name: offset [13044,13050]
            name: void [13056,13060]
            macro [13061,13078]
                name: BaselineAssembler [13061,13078]
            name [13078,13101]
                operator: :: [13078,13080]
                name: LoadTaggedSignedField [13080,13101]
            operator: ( [13101,13102]
            name: Register [13102,13110]
            name: output [13111,13117]
            operator: , [13117,13118]
            name: Register [13119,13127]
            name: source [13128,13134]
            operator: , [13134,13135]
            name: int [13182,13185]
            name: offset [13186,13192]
            operator: ) [13192,13193]
            block [13194,13266]
                expr [13198,13263]
                    name: __ [13198,13200]
                    call [13201,13263]
                        name: LoadTaggedSignedField [13201,13222]
                        argument_list [13222,13263]
                            argument [13223,13229]
                                expr [13223,13229]
                                    name: output [13223,13229]
                            argument [13231,13262]
                                expr [13231,13262]
                                    call [13231,13262]
                                        name: FieldMemOperand [13231,13246]
                                        argument_list [13246,13262]
                                            argument [13247,13253]
                                                expr [13247,13253]
                                                    name: source [13247,13253]
                                            argument [13255,13261]
                                                expr [13255,13261]
                                                    name: offset [13255,13261]
            name: void [13267,13271]
            macro [13272,13289]
                name: BaselineAssembler [13272,13289]
            name [13289,13309]
                operator: :: [13289,13291]
                name: LoadTaggedAnyField [13291,13309]
            operator: ( [13309,13310]
            name: Register [13310,13318]
            name: output [13319,13325]
            operator: , [13325,13326]
            name: Register [13327,13335]
            name: source [13336,13342]
            operator: , [13342,13343]
            name: int [13387,13390]
            name: offset [13391,13397]
            operator: ) [13397,13398]
            block [13399,13468]
                expr [13403,13465]
                    name: __ [13403,13405]
                    call [13406,13465]
                        name: LoadAnyTaggedField [13406,13424]
                        argument_list [13424,13465]
                            argument [13425,13431]
                                expr [13425,13431]
                                    name: output [13425,13431]
                            argument [13433,13464]
                                expr [13433,13464]
                                    call [13433,13464]
                                        name: FieldMemOperand [13433,13448]
                                        argument_list [13448,13464]
                                            argument [13449,13455]
                                                expr [13449,13455]
                                                    name: source [13449,13455]
                                            argument [13457,13463]
                                                expr [13457,13463]
                                                    name: offset [13457,13463]
            name: void [13469,13473]
            macro [13474,13491]
                name: BaselineAssembler [13474,13491]
            name [13491,13506]
                operator: :: [13491,13493]
                name: LoadByteField [13493,13506]
            operator: ( [13506,13507]
            name: Register [13507,13515]
            name: output [13516,13522]
            operator: , [13522,13523]
            name: Register [13524,13532]
            name: source [13533,13539]
            operator: , [13539,13540]
            name: int [13579,13582]
            name: offset [13583,13589]
            operator: ) [13589,13590]
            block [13591,13646]
                expr [13595,13643]
                    name: __ [13595,13597]
                    call [13598,13643]
                        name: Ldrb [13598,13602]
                        argument_list [13602,13643]
                            argument [13603,13609]
                                expr [13603,13609]
                                    name: output [13603,13609]
                            argument [13611,13642]
                                expr [13611,13642]
                                    call [13611,13642]
                                        name: FieldMemOperand [13611,13626]
                                        argument_list [13626,13642]
                                            argument [13627,13633]
                                                expr [13627,13633]
                                                    name: source [13627,13633]
                                            argument [13635,13641]
                                                expr [13635,13641]
                                                    name: offset [13635,13641]
            name: void [13647,13651]
            macro [13652,13669]
                name: BaselineAssembler [13652,13669]
            name [13669,13693]
                operator: :: [13669,13671]
                name: StoreTaggedSignedField [13671,13693]
            operator: ( [13693,13694]
            name: Register [13694,13702]
            name: target [13703,13709]
            operator: , [13709,13710]
            name: int [13711,13714]
            name: offset [13715,13721]
            operator: , [13721,13722]
            name: Smi [13770,13773]
            name: value [13774,13779]
            operator: ) [13779,13780]
            block [13781,13953]
                expr [13785,13817]
                    name: ScratchRegisterScope [13785,13805]
                    call [13806,13817]
                        name: temps [13806,13811]
                        argument_list [13811,13817]
                            argument [13812,13816]
                                expr [13812,13816]
                                    name: this [13812,13816]
                expr [13821,13858]
                    name: Register [13821,13829]
                    name: tmp [13830,13833]
                    operator: = [13834,13835]
                    call [13836,13858]
                        name [13836,13856]
                            name: temps [13836,13841]
                            operator: . [13841,13842]
                            name: AcquireScratch [13842,13856]
                        argument_list [13856,13858]
                expr [13862,13889]
                    name: __ [13862,13864]
                    call [13865,13889]
                        name: Mov [13865,13868]
                        argument_list [13868,13889]
                            argument [13869,13872]
                                expr [13869,13872]
                                    name: tmp [13869,13872]
                            argument [13874,13888]
                                expr [13874,13888]
                                    call [13874,13888]
                                        name: Operand [13874,13881]
                                        argument_list [13881,13888]
                                            argument [13882,13887]
                                                expr [13882,13887]
                                                    name: value [13882,13887]
                expr [13893,13950]
                    name: __ [13893,13895]
                    call [13896,13950]
                        name: StoreTaggedField [13896,13912]
                        argument_list [13912,13950]
                            argument [13913,13916]
                                expr [13913,13916]
                                    name: tmp [13913,13916]
                            argument [13918,13949]
                                expr [13918,13949]
                                    call [13918,13949]
                                        name: FieldMemOperand [13918,13933]
                                        argument_list [13933,13949]
                                            argument [13934,13940]
                                                expr [13934,13940]
                                                    name: target [13934,13940]
                                            argument [13942,13948]
                                                expr [13942,13948]
                                                    name: offset [13942,13948]
            name: void [13954,13958]
            macro [13959,13976]
                name: BaselineAssembler [13959,13976]
            name [13976,14010]
                operator: :: [13976,13978]
                name: StoreTaggedFieldWithWriteBarrier [13978,14010]
            operator: ( [14010,14011]
            name: Register [14011,14019]
            name: target [14020,14026]
            operator: , [14026,14027]
            name: int [14085,14088]
            name: offset [14089,14095]
            operator: , [14095,14096]
            name: Register [14154,14162]
            name: value [14163,14168]
            operator: ) [14168,14169]
            block [14170,14349]
                expr [14174,14233]
                    name: __ [14174,14176]
                    call [14177,14233]
                        name: StoreTaggedField [14177,14193]
                        argument_list [14193,14233]
                            argument [14194,14199]
                                expr [14194,14199]
                                    name: value [14194,14199]
                            argument [14201,14232]
                                expr [14201,14232]
                                    call [14201,14232]
                                        name: FieldMemOperand [14201,14216]
                                        argument_list [14216,14232]
                                            argument [14217,14223]
                                                expr [14217,14223]
                                                    name: target [14217,14223]
                                            argument [14225,14231]
                                                expr [14225,14231]
                                                    name: offset [14225,14231]
                expr [14237,14346]
                    name: __ [14237,14239]
                    call [14240,14346]
                        name: RecordWriteField [14240,14256]
                        argument_list [14256,14346]
                            argument [14257,14263]
                                expr [14257,14263]
                                    name: target [14257,14263]
                            argument [14265,14271]
                                expr [14265,14271]
                                    name: offset [14265,14271]
                            argument [14273,14278]
                                expr [14273,14278]
                                    name: value [14273,14278]
                            argument [14280,14298]
                                expr [14280,14298]
                                    name: kLRHasNotBeenSaved [14280,14298]
                            argument [14322,14345]
                                expr [14322,14345]
                                    name [14322,14345]
                                        name: SaveFPRegsMode [14322,14336]
                                        operator: :: [14336,14338]
                                        name: kIgnore [14338,14345]
            name: void [14350,14354]
            macro [14355,14372]
                name: BaselineAssembler [14355,14372]
            name [14372,14404]
                operator: :: [14372,14374]
                name: StoreTaggedFieldNoWriteBarrier [14374,14404]
            operator: ( [14404,14405]
            name: Register [14405,14413]
            name: target [14414,14420]
            operator: , [14420,14421]
            name: int [14477,14480]
            name: offset [14481,14487]
            operator: , [14487,14488]
            name: Register [14544,14552]
            name: value [14553,14558]
            operator: ) [14558,14559]
            block [14560,14626]
                expr [14564,14623]
                    name: __ [14564,14566]
                    call [14567,14623]
                        name: StoreTaggedField [14567,14583]
                        argument_list [14583,14623]
                            argument [14584,14589]
                                expr [14584,14589]
                                    name: value [14584,14589]
                            argument [14591,14622]
                                expr [14591,14622]
                                    call [14591,14622]
                                        name: FieldMemOperand [14591,14606]
                                        argument_list [14606,14622]
                                            argument [14607,14613]
                                                expr [14607,14613]
                                                    name: target [14607,14613]
                                            argument [14615,14621]
                                                expr [14615,14621]
                                                    name: offset [14615,14621]
            name: void [14628,14632]
            macro [14633,14650]
                name: BaselineAssembler [14633,14650]
            name [14650,14672]
                operator: :: [14650,14652]
                name: AddToInterruptBudget [14652,14672]
            operator: ( [14672,14673]
            name: int32_t [14673,14680]
            name: weight [14681,14687]
            operator: ) [14687,14688]
            block [14689,15323]
                expr [14693,14733]
                    name: ScratchRegisterScope [14693,14713]
                    call [14714,14733]
                        name: scratch_scope [14714,14727]
                        argument_list [14727,14733]
                            argument [14728,14732]
                                expr [14728,14732]
                                    name: this [14728,14732]
                expr [14737,14792]
                    name: Register [14737,14745]
                    name: feedback_cell [14746,14759]
                    operator: = [14760,14761]
                    call [14762,14792]
                        name [14762,14790]
                            name: scratch_scope [14762,14775]
                            operator: . [14775,14776]
                            name: AcquireScratch [14776,14790]
                        argument_list [14790,14792]
                expr [14796,14823]
                    call [14796,14823]
                        name: LoadFunction [14796,14808]
                        argument_list [14808,14823]
                            argument [14809,14822]
                                expr [14809,14822]
                                    name: feedback_cell [14809,14822]
                expr [14827,14937]
                    call [14827,14937]
                        name: LoadTaggedPointerField [14827,14849]
                        argument_list [14849,14937]
                            argument [14850,14863]
                                expr [14850,14863]
                                    name: feedback_cell [14850,14863]
                            argument [14865,14878]
                                expr [14865,14878]
                                    name: feedback_cell [14865,14878]
                            argument [14905,14936]
                                expr [14905,14936]
                                    name [14905,14936]
                                        name: JSFunction [14905,14915]
                                        operator: :: [14915,14917]
                                        name: kFeedbackCellOffset [14917,14936]
                expr [14942,15004]
                    name: Register [14942,14950]
                    name: interrupt_budget [14951,14967]
                    operator: = [14968,14969]
                    call [14970,15000]
                        name [14970,14998]
                            name: scratch_scope [14970,14983]
                            operator: . [14983,14984]
                            name: AcquireScratch [14984,14998]
                        argument_list [14998,15000]
                    operator: . [15000,15001]
                    call [15001,15004]
                        name: W [15001,15002]
                        argument_list [15002,15004]
                expr [15008,15111]
                    name: __ [15008,15010]
                    call [15011,15111]
                        name: Ldr [15011,15014]
                        argument_list [15014,15111]
                            argument [15015,15031]
                                expr [15015,15031]
                                    name: interrupt_budget [15015,15031]
                            argument [15042,15110]
                                expr [15042,15110]
                                    call [15042,15110]
                                        name: FieldMemOperand [15042,15057]
                                        argument_list [15057,15110]
                                            argument [15058,15071]
                                                expr [15058,15071]
                                                    name: feedback_cell [15058,15071]
                                            argument [15073,15109]
                                                expr [15073,15109]
                                                    name [15073,15109]
                                                        name: FeedbackCell [15073,15085]
                                                        operator: :: [15085,15087]
                                                        name: kInterruptBudgetOffset [15087,15109]
                comment: // Remember to set flags as part of the add! [15115,15159]
                expr [15162,15213]
                    name: __ [15162,15164]
                    call [15165,15213]
                        name: Adds [15165,15169]
                        argument_list [15169,15213]
                            argument [15170,15186]
                                expr [15170,15186]
                                    name: interrupt_budget [15170,15186]
                            argument [15188,15204]
                                expr [15188,15204]
                                    name: interrupt_budget [15188,15204]
                            argument [15206,15212]
                                expr [15206,15212]
                                    name: weight [15206,15212]
                expr [15217,15320]
                    name: __ [15217,15219]
                    call [15220,15320]
                        name: Str [15220,15223]
                        argument_list [15223,15320]
                            argument [15224,15240]
                                expr [15224,15240]
                                    name: interrupt_budget [15224,15240]
                            argument [15251,15319]
                                expr [15251,15319]
                                    call [15251,15319]
                                        name: FieldMemOperand [15251,15266]
                                        argument_list [15266,15319]
                                            argument [15267,15280]
                                                expr [15267,15280]
                                                    name: feedback_cell [15267,15280]
                                            argument [15282,15318]
                                                expr [15282,15318]
                                                    name [15282,15318]
                                                        name: FeedbackCell [15282,15294]
                                                        operator: :: [15294,15296]
                                                        name: kInterruptBudgetOffset [15296,15318]
            name: void [15325,15329]
            macro [15330,15347]
                name: BaselineAssembler [15330,15347]
            name [15347,15369]
                operator: :: [15347,15349]
                name: AddToInterruptBudget [15349,15369]
            operator: ( [15369,15370]
            name: Register [15370,15378]
            name: weight [15379,15385]
            operator: ) [15385,15386]
            block [15387,16025]
                expr [15391,15431]
                    name: ScratchRegisterScope [15391,15411]
                    call [15412,15431]
                        name: scratch_scope [15412,15425]
                        argument_list [15425,15431]
                            argument [15426,15430]
                                expr [15426,15430]
                                    name: this [15426,15430]
                expr [15435,15490]
                    name: Register [15435,15443]
                    name: feedback_cell [15444,15457]
                    operator: = [15458,15459]
                    call [15460,15490]
                        name [15460,15488]
                            name: scratch_scope [15460,15473]
                            operator: . [15473,15474]
                            name: AcquireScratch [15474,15488]
                        argument_list [15488,15490]
                expr [15494,15521]
                    call [15494,15521]
                        name: LoadFunction [15494,15506]
                        argument_list [15506,15521]
                            argument [15507,15520]
                                expr [15507,15520]
                                    name: feedback_cell [15507,15520]
                expr [15525,15635]
                    call [15525,15635]
                        name: LoadTaggedPointerField [15525,15547]
                        argument_list [15547,15635]
                            argument [15548,15561]
                                expr [15548,15561]
                                    name: feedback_cell [15548,15561]
                            argument [15563,15576]
                                expr [15563,15576]
                                    name: feedback_cell [15563,15576]
                            argument [15603,15634]
                                expr [15603,15634]
                                    name [15603,15634]
                                        name: JSFunction [15603,15613]
                                        operator: :: [15613,15615]
                                        name: kFeedbackCellOffset [15615,15634]
                expr [15640,15702]
                    name: Register [15640,15648]
                    name: interrupt_budget [15649,15665]
                    operator: = [15666,15667]
                    call [15668,15698]
                        name [15668,15696]
                            name: scratch_scope [15668,15681]
                            operator: . [15681,15682]
                            name: AcquireScratch [15682,15696]
                        argument_list [15696,15698]
                    operator: . [15698,15699]
                    call [15699,15702]
                        name: W [15699,15700]
                        argument_list [15700,15702]
                expr [15706,15809]
                    name: __ [15706,15708]
                    call [15709,15809]
                        name: Ldr [15709,15712]
                        argument_list [15712,15809]
                            argument [15713,15729]
                                expr [15713,15729]
                                    name: interrupt_budget [15713,15729]
                            argument [15740,15808]
                                expr [15740,15808]
                                    call [15740,15808]
                                        name: FieldMemOperand [15740,15755]
                                        argument_list [15755,15808]
                                            argument [15756,15769]
                                                expr [15756,15769]
                                                    name: feedback_cell [15756,15769]
                                            argument [15771,15807]
                                                expr [15771,15807]
                                                    name [15771,15807]
                                                        name: FeedbackCell [15771,15783]
                                                        operator: :: [15783,15785]
                                                        name: kInterruptBudgetOffset [15785,15807]
                comment: // Remember to set flags as part of the add! [15813,15857]
                expr [15860,15915]
                    name: __ [15860,15862]
                    call [15863,15915]
                        name: Adds [15863,15867]
                        argument_list [15867,15915]
                            argument [15868,15884]
                                expr [15868,15884]
                                    name: interrupt_budget [15868,15884]
                            argument [15886,15902]
                                expr [15886,15902]
                                    name: interrupt_budget [15886,15902]
                            argument [15904,15914]
                                expr [15904,15914]
                                    call [15904,15914]
                                        name [15904,15912]
                                            name: weight [15904,15910]
                                            operator: . [15910,15911]
                                            name: W [15911,15912]
                                        argument_list [15912,15914]
                expr [15919,16022]
                    name: __ [15919,15921]
                    call [15922,16022]
                        name: Str [15922,15925]
                        argument_list [15925,16022]
                            argument [15926,15942]
                                expr [15926,15942]
                                    name: interrupt_budget [15926,15942]
                            argument [15953,16021]
                                expr [15953,16021]
                                    call [15953,16021]
                                        name: FieldMemOperand [15953,15968]
                                        argument_list [15968,16021]
                                            argument [15969,15982]
                                                expr [15969,15982]
                                                    name: feedback_cell [15969,15982]
                                            argument [15984,16020]
                                                expr [15984,16020]
                                                    name [15984,16020]
                                                        name: FeedbackCell [15984,15996]
                                                        operator: :: [15996,15998]
                                                        name: kInterruptBudgetOffset [15998,16020]
            name: void [16027,16031]
            macro [16032,16049]
                name: BaselineAssembler [16032,16049]
            name [16049,16057]
                operator: :: [16049,16051]
                name: AddSmi [16051,16057]
            operator: ( [16057,16058]
            name: Register [16058,16066]
            name: lhs [16067,16070]
            operator: , [16070,16071]
            name: Smi [16072,16075]
            name: rhs [16076,16079]
            operator: ) [16079,16080]
            block [16081,16162]
                if_stmt [16085,16158]
                    if [16085,16158]
                        condition [16088,16110]
                            expr [16089,16109]
                                call [16089,16109]
                                    name: SmiValuesAre31Bits [16089,16107]
                                    argument_list [16107,16109]
                        block [16111,16158]
                            block_content [16117,16158]
                                decl_stmt [16117,16158]
                                    decl [16117,16157]
                                        type [16117,16119]
                                            name: __ [16117,16119]
                                        name: Add [16120,16123]
                                        argument_list [16123,16157]
                                            argument [16124,16131]
                                                expr [16124,16131]
                                                    call [16124,16131]
                                                        name [16124,16129]
                                                            name: lhs [16124,16127]
                                                            operator: . [16127,16128]
                                                            name: W [16128,16129]
                                                        argument_list [16129,16131]
                                            argument [16133,16140]
                                                expr [16133,16140]
                                                    call [16133,16140]
                                                        name [16133,16138]
                                                            name: lhs [16133,16136]
                                                            operator: . [16136,16137]
                                                            name: W [16137,16138]
                                                        argument_list [16138,16140]
                                            argument [16142,16156]
                                                expr [16142,16156]
                                                    call [16142,16156]
                                                        name: Immediate [16142,16151]
                                                        argument_list [16151,16156]
                                                            argument [16152,16155]
                                                                expr [16152,16155]
                                                                    name: rhs [16152,16155]
                                expr_stmt [0,0]
    if_stmt [16163,16234]
        else [16163,16234]
            block [16168,16234]
                block_content [16174,16230]
                    expr_stmt [16174,16192]
                        expr [16174,16191]
                            call [16174,16191]
                                name: DCHECK [16174,16180]
                                argument_list [16180,16191]
                                    argument [16181,16190]
                                        expr [16181,16190]
                                            call [16181,16190]
                                                name [16181,16188]
                                                    name: lhs [16181,16184]
                                                    operator: . [16184,16185]
                                                    name: IsX [16185,16188]
                                                argument_list [16188,16190]
                    decl_stmt [16197,16230]
                        decl [16197,16229]
                            type [16197,16199]
                                name: __ [16197,16199]
                            name: Add [16200,16203]
                            argument_list [16203,16229]
                                argument [16204,16207]
                                    expr [16204,16207]
                                        name: lhs [16204,16207]
                                argument [16209,16212]
                                    expr [16209,16212]
                                        name: lhs [16209,16212]
                                argument [16214,16228]
                                    expr [16214,16228]
                                        call [16214,16228]
                                            name: Immediate [16214,16223]
                                            argument_list [16223,16228]
                                                argument [16224,16227]
                                                    expr [16224,16227]
                                                        name: rhs [16224,16227]
    macro [16243,16260]
        name: BaselineAssembler [16243,16260]
    expr_stmt [16260,16557]
        expr [16260,16556]
            name [16260,16268]
                operator: :: [16260,16262]
                name: Switch [16262,16268]
            operator: ( [16268,16269]
            name: Register [16269,16277]
            name: reg [16278,16281]
            operator: , [16281,16282]
            name: int [16283,16286]
            name: case_value_base [16287,16302]
            operator: , [16302,16303]
            name: Label [16335,16340]
            operator: * [16340,16341]
            operator: * [16341,16342]
            name: labels [16343,16349]
            operator: , [16349,16350]
            name: int [16351,16354]
            name: num_labels [16355,16365]
            operator: ) [16365,16366]
            block [16367,16472]
                expr [16371,16388]
                    name: Label [16371,16376]
                    name: fallthrough [16377,16388]
                if_stmt [16392,16468]
                    if [16392,16468]
                        condition [16395,16416]
                            expr [16396,16415]
                                name: case_value_base [16396,16411]
                                operator: > [16412,16413]
                                literal: 0 [16414,16415]
                        block [16417,16468]
                            block_content [16423,16468]
                                decl_stmt [16423,16468]
                                    decl [16423,16467]
                                        type [16423,16425]
                                            name: __ [16423,16425]
                                        name: Sub [16426,16429]
                                        argument_list [16429,16467]
                                            argument [16430,16433]
                                                expr [16430,16433]
                                                    name: reg [16430,16433]
                                            argument [16435,16438]
                                                expr [16435,16438]
                                                    name: reg [16435,16438]
                                            argument [16440,16466]
                                                expr [16440,16466]
                                                    call [16440,16466]
                                                        name: Immediate [16440,16449]
                                                        argument_list [16449,16466]
                                                            argument [16450,16465]
                                                                expr [16450,16465]
                                                                    name: case_value_base [16450,16465]
                                expr_stmt [0,0]
            comment: // Mostly copied from code-generator-arm64.cc [16476,16521]
            name: ScratchRegisterScope [16524,16544]
            call [16545,16556]
                name: scope [16545,16550]
                argument_list [16550,16556]
                    argument [16551,16555]
                        expr [16551,16555]
                            name: this [16551,16555]
    decl_stmt [16560,16599]
        decl [16560,16598]
            type [16560,16568]
                name: Register [16560,16568]
            name: temp [16569,16573]
            init [16574,16598]
                expr [16576,16598]
                    call [16576,16598]
                        name [16576,16596]
                            name: scope [16576,16581]
                            operator: . [16581,16582]
                            name: AcquireScratch [16582,16596]
                        argument_list [16596,16598]
    decl_stmt [16602,16614]
        decl [16602,16613]
            type [16602,16607]
                name: Label [16602,16607]
            name: table [16608,16613]
    function_decl [16617,16641]
        type [16617,16619]
            name: __ [16617,16619]
        name: Cmp [16620,16623]
        parameter_list [16623,16640]
            parameter [16624,16627]
                decl [16624,16627]
                    type [16624,16627]
                        name: reg [16624,16627]
            parameter [16629,16639]
                decl [16629,16639]
                    type [16629,16639]
                        name: num_labels [16629,16639]
    expr_stmt [16644,16703]
        expr [16644,16702]
            call [16644,16702]
                name: JumpIf [16644,16650]
                argument_list [16650,16702]
                    argument [16651,16687]
                        expr [16651,16687]
                            name [16651,16687]
                                name: Condition [16651,16660]
                                operator: :: [16660,16662]
                                name: kUnsignedGreaterThanEqual [16662,16687]
                    argument [16689,16701]
                        expr [16689,16701]
                            operator: & [16689,16690]
                            name: fallthrough [16690,16701]
    decl_stmt [16706,16727]
        decl [16706,16726]
            type [16706,16708]
                name: __ [16706,16708]
            name: Adr [16709,16712]
            argument_list [16712,16726]
                argument [16713,16717]
                    expr [16713,16717]
                        name: temp [16713,16717]
                argument [16719,16725]
                    expr [16719,16725]
                        operator: & [16719,16720]
                        name: table [16720,16725]
    decl_stmt [16730,16795]
        decl [16730,16753]
            type [16730,16733]
                name: int [16730,16733]
            name: entry_size_log2 [16734,16749]
            init [16750,16753]
                expr [16752,16753]
                    literal: 2 [16752,16753]
    ifdef [16755,16794]
        directive: ifdef [16756,16761]
        name: V8_ENABLE_CONTROL_FLOW_INTEGRITY [16762,16794]
    expr_stmt [16797,16844]
        expr [16797,16814]
            operator: ++ [16797,16799]
            name: entry_size_log2 [16799,16814]
    comment: // Account for BTI. [16817,16836]
    endif [16837,16843]
        directive: endif [16838,16843]
    decl_stmt [16846,16902]
        decl [16846,16901]
            type [16846,16848]
                name: __ [16846,16848]
            name: Add [16849,16852]
            argument_list [16852,16901]
                argument [16853,16857]
                    expr [16853,16857]
                        name: temp [16853,16857]
                argument [16859,16863]
                    expr [16859,16863]
                        name: temp [16859,16863]
                argument [16865,16900]
                    expr [16865,16900]
                        call [16865,16900]
                            name: Operand [16865,16872]
                            argument_list [16872,16900]
                                argument [16873,16876]
                                    expr [16873,16876]
                                        name: reg [16873,16876]
                                argument [16878,16882]
                                    expr [16878,16882]
                                        name: UXTW [16878,16882]
                                argument [16884,16899]
                                    expr [16884,16899]
                                        name: entry_size_log2 [16884,16899]
    function_decl [16905,16917]
        type [16905,16907]
            name: __ [16905,16907]
        name: Br [16908,16910]
        parameter_list [16910,16916]
            parameter [16911,16915]
                decl [16911,16915]
                    type [16911,16915]
                        name: temp [16911,16915]
    block [16920,17170]
        block_content [16926,17166]
            function_decl [16926,17002]
                type [16926,16957]
                    name [16926,16957]
                        name: TurboAssembler [16926,16940]
                        operator: :: [16940,16942]
                        name: BlockPoolsScope [16942,16957]
                name: block_pools [16958,16969]
                parameter_list [16969,17001]
                    parameter [16970,16975]
                        decl [16970,16975]
                            type [16970,16975]
                                name: masm_ [16970,16975]
                    parameter [16977,17000]
                        decl [16977,17000]
                            type [16977,16989]
                                name: num_labels [16977,16987]
                                modifier: * [16988,16989]
                            name: kInstrSize [16990,17000]
            decl_stmt [17007,17023]
                decl [17007,17022]
                    type [17007,17009]
                        name: __ [17007,17009]
                    name: Bind [17010,17014]
                    argument_list [17014,17022]
                        argument [17015,17021]
                            expr [17015,17021]
                                operator: & [17015,17016]
                                name: table [17016,17021]
            for [17028,17118]
                control [17032,17064]
                    init [17033,17043]
                        decl [17033,17042]
                            type [17033,17036]
                                name: int [17033,17036]
                            name: i [17037,17038]
                            init [17039,17042]
                                expr [17041,17042]
                                    literal: 0 [17041,17042]
                    condition [17044,17059]
                        expr [17044,17058]
                            name: i [17044,17045]
                            operator: < [17046,17047]
                            name: num_labels [17048,17058]
                    incr [17060,17063]
                        expr [17060,17063]
                            operator: ++ [17060,17062]
                            name: i [17062,17063]
                block [17065,17118]
                    block_content [17073,17112]
                        function_decl [17073,17089]
                            type [17073,17075]
                                name: __ [17073,17075]
                            name: JumpTarget [17076,17086]
                            parameter_list [17086,17088]
                        function_decl [17096,17112]
                            type [17096,17098]
                                name: __ [17096,17098]
                            name: B [17099,17100]
                            parameter_list [17100,17111]
                                parameter [17101,17110]
                                    decl [17101,17110]
                                        type [17101,17110]
                                            name [17101,17110]
                                                name: labels [17101,17107]
                                                index [17107,17110]
                                                    expr [17108,17109]
                                                        name: i [17108,17109]
            function_decl [17123,17139]
                type [17123,17125]
                    name: __ [17123,17125]
                name: JumpTarget [17126,17136]
                parameter_list [17136,17138]
            decl_stmt [17144,17166]
                decl [17144,17165]
                    type [17144,17146]
                        name: __ [17144,17146]
                    name: Bind [17147,17151]
                    argument_list [17151,17165]
                        argument [17152,17164]
                            expr [17152,17164]
                                operator: & [17152,17153]
                                name: fallthrough [17153,17164]
    undef [17174,17183]
        directive: undef [17175,17180]
        name: __ [17181,17183]
    define [17184,17200]
        directive: define [17185,17191]
        macro [17192,17194]
            name: __ [17192,17194]
        value [17195,17200]
    macro [17207,17224]
        name: BaselineAssembler [17207,17224]
    expr_stmt [17224,19023]
        expr [17224,19023]
            name [17224,17236]
                operator: :: [17224,17226]
                name: EmitReturn [17226,17236]
            operator: ( [17236,17237]
            name: MacroAssembler [17237,17251]
            operator: * [17251,17252]
            name: masm [17253,17257]
            operator: ) [17257,17258]
            block [17259,19023]
                expr [17263,17291]
                    name: BaselineAssembler [17263,17280]
                    call [17281,17291]
                        name: basm [17281,17285]
                        argument_list [17285,17291]
                            argument [17286,17290]
                                expr [17286,17290]
                                    name: masm [17286,17290]
                expr [17296,17360]
                    name: Register [17296,17304]
                    name: weight [17305,17311]
                    operator: = [17312,17313]
                    call [17314,17360]
                        name [17314,17358]
                            name: BaselineLeaveFrameDescriptor [17314,17342]
                            operator: :: [17342,17344]
                            name: WeightRegister [17344,17358]
                        argument_list [17358,17360]
                expr [17364,17437]
                    name: Register [17364,17372]
                    name: params_size [17373,17384]
                    operator: = [17385,17386]
                    call [17387,17437]
                        name [17387,17435]
                            name: BaselineLeaveFrameDescriptor [17387,17415]
                            operator: :: [17415,17417]
                            name: ParamsSizeRegister [17417,17435]
                        argument_list [17435,17437]
                expr [17442,17487]
                    name: __ [17442,17444]
                    call [17445,17487]
                        name: RecordComment [17445,17458]
                        argument_list [17458,17487]
                            argument [17459,17486]
                                expr [17459,17486]
                                    literal: "[ Update Interrupt Budget" [17459,17486]
                expr [17491,17522]
                    name: __ [17491,17493]
                    call [17494,17522]
                        name: AddToInterruptBudget [17494,17514]
                        argument_list [17514,17522]
                            argument [17515,17521]
                                expr [17515,17521]
                                    name: weight [17515,17521]
                comment: // Use compare flags set by add [17527,17558]
                expr [17561,17587]
                    name: Label [17561,17566]
                    name: skip_interrupt_label [17567,17587]
                expr [17591,17653]
                    name: __ [17591,17593]
                    call [17594,17653]
                        name: JumpIf [17594,17600]
                        argument_list [17600,17653]
                            argument [17601,17629]
                                expr [17601,17629]
                                    name [17601,17629]
                                        name: Condition [17601,17610]
                                        operator: :: [17610,17612]
                                        name: kGreaterThanEqual [17612,17629]
                            argument [17631,17652]
                                expr [17631,17652]
                                    operator: & [17631,17632]
                                    name: skip_interrupt_label [17632,17652]
                expr [17657,18095]
                    block [17657,18071]
                        expr [17663,17693]
                            name: __ [17663,17665]
                            call [17666,17672]
                                name: masm [17666,17670]
                                argument_list [17670,17672]
                            operator: -> [17672,17674]
                            call [17674,17693]
                                name: SmiTag [17674,17680]
                                argument_list [17680,17693]
                                    argument [17681,17692]
                                        expr [17681,17692]
                                            name: params_size [17681,17692]
                        expr [17699,17760]
                            name: __ [17699,17701]
                            call [17702,17708]
                                name: masm [17702,17706]
                                argument_list [17706,17708]
                            operator: -> [17708,17710]
                            call [17710,17760]
                                name: Push [17710,17714]
                                argument_list [17714,17760]
                                    argument [17715,17726]
                                        expr [17715,17726]
                                            name: params_size [17715,17726]
                                    argument [17728,17759]
                                        expr [17728,17759]
                                            name: kInterpreterAccumulatorRegister [17728,17759]
                        expr [17767,17799]
                            name: __ [17767,17769]
                            call [17770,17799]
                                name: LoadContext [17770,17781]
                                argument_list [17781,17799]
                                    argument [17782,17798]
                                        expr [17782,17798]
                                            name: kContextRegister [17782,17798]
                        expr [17805,17841]
                            name: __ [17805,17807]
                            call [17808,17841]
                                name: LoadFunction [17808,17820]
                                argument_list [17820,17841]
                                    argument [17821,17840]
                                        expr [17821,17840]
                                            name: kJSFunctionRegister [17821,17840]
                        expr [17847,17891]
                            name: __ [17847,17849]
                            call [17850,17856]
                                name: masm [17850,17854]
                                argument_list [17854,17856]
                            operator: -> [17856,17858]
                            call [17858,17891]
                                name: PushArgument [17858,17870]
                                argument_list [17870,17891]
                                    argument [17871,17890]
                                        expr [17871,17890]
                                            name: kJSFunctionRegister [17871,17890]
                        expr [17897,17961]
                            name: __ [17897,17899]
                            call [17900,17961]
                                name: CallRuntime [17900,17911]
                                argument_list [17911,17961]
                                    argument [17912,17957]
                                        expr [17912,17957]
                                            name [17912,17957]
                                                name: Runtime [17912,17919]
                                                operator: :: [17919,17921]
                                                name: kBytecodeBudgetInterruptFromBytecode [17921,17957]
                                    argument [17959,17960]
                                        expr [17959,17960]
                                            literal: 1 [17959,17960]
                        expr [17968,18028]
                            name: __ [17968,17970]
                            call [17971,17977]
                                name: masm [17971,17975]
                                argument_list [17975,17977]
                            operator: -> [17977,17979]
                            call [17979,18028]
                                name: Pop [17979,17982]
                                argument_list [17982,18028]
                                    argument [17983,18014]
                                        expr [17983,18014]
                                            name: kInterpreterAccumulatorRegister [17983,18014]
                                    argument [18016,18027]
                                        expr [18016,18027]
                                            name: params_size [18016,18027]
                        expr [18034,18066]
                            name: __ [18034,18036]
                            call [18037,18043]
                                name: masm [18037,18041]
                                argument_list [18041,18043]
                            operator: -> [18043,18045]
                            call [18045,18066]
                                name: SmiUntag [18045,18053]
                                argument_list [18053,18066]
                                    argument [18054,18065]
                                        expr [18054,18065]
                                            name: params_size [18054,18065]
                    name: __ [18074,18076]
                    call [18077,18095]
                        name: RecordComment [18077,18090]
                        argument_list [18090,18095]
                            argument [18091,18094]
                                expr [18091,18094]
                                    literal: "]" [18091,18094]
                expr [18100,18130]
                    name: __ [18100,18102]
                    call [18103,18130]
                        name: Bind [18103,18107]
                        argument_list [18107,18130]
                            argument [18108,18129]
                                expr [18108,18129]
                                    operator: & [18108,18109]
                                    name: skip_interrupt_label [18109,18129]
                expr [18135,18187]
                    name [18135,18174]
                        name: BaselineAssembler [18135,18152]
                        operator: :: [18152,18154]
                        name: ScratchRegisterScope [18154,18174]
                    call [18175,18187]
                        name: temps [18175,18180]
                        argument_list [18180,18187]
                            argument [18181,18186]
                                expr [18181,18186]
                                    operator: & [18181,18182]
                                    name: basm [18182,18186]
                expr [18191,18243]
                    name: Register [18191,18199]
                    name: actual_params_size [18200,18218]
                    operator: = [18219,18220]
                    call [18221,18243]
                        name [18221,18241]
                            name: temps [18221,18226]
                            operator: . [18226,18227]
                            name: AcquireScratch [18227,18241]
                        argument_list [18241,18243]
                comment: // Compute the size of the actual parameters + receiver (in bytes). [18247,18314]
                expr [18317,18407]
                    name: __ [18317,18319]
                    call [18320,18407]
                        name: Move [18320,18324]
                        argument_list [18324,18407]
                            argument [18325,18343]
                                expr [18325,18343]
                                    name: actual_params_size [18325,18343]
                            argument [18355,18406]
                                expr [18355,18406]
                                    call [18355,18406]
                                        name: MemOperand [18355,18365]
                                        argument_list [18365,18406]
                                            argument [18366,18368]
                                                expr [18366,18368]
                                                    name: fp [18366,18368]
                                            argument [18370,18405]
                                                expr [18370,18405]
                                                    name [18370,18405]
                                                        name: StandardFrameConstants [18370,18392]
                                                        operator: :: [18392,18394]
                                                        name: kArgCOffset [18394,18405]
                comment: // If actual is bigger than formal, then we should use it to free up the stack [18412,18490]
                comment: // arguments. [18493,18506]
                expr [18509,18535]
                    name: Label [18509,18514]
                    name: corrected_args_count [18515,18535]
                expr [18539,18586]
                    name: __ [18539,18541]
                    call [18542,18548]
                        name: masm [18542,18546]
                        argument_list [18546,18548]
                    operator: -> [18548,18550]
                    call [18550,18586]
                        name: Cmp [18550,18553]
                        argument_list [18553,18586]
                            argument [18554,18565]
                                expr [18554,18565]
                                    name: params_size [18554,18565]
                            argument [18567,18585]
                                expr [18567,18585]
                                    name: actual_params_size [18567,18585]
                expr [18590,18652]
                    name: __ [18590,18592]
                    call [18593,18652]
                        name: JumpIf [18593,18599]
                        argument_list [18599,18652]
                            argument [18600,18628]
                                expr [18600,18628]
                                    name [18600,18628]
                                        name: Condition [18600,18609]
                                        operator: :: [18609,18611]
                                        name: kGreaterThanEqual [18611,18628]
                            argument [18630,18651]
                                expr [18630,18651]
                                    operator: & [18630,18631]
                                    name: corrected_args_count [18631,18651]
                expr [18656,18703]
                    name: __ [18656,18658]
                    call [18659,18665]
                        name: masm [18659,18663]
                        argument_list [18663,18665]
                    operator: -> [18665,18667]
                    call [18667,18703]
                        name: Mov [18667,18670]
                        argument_list [18670,18703]
                            argument [18671,18682]
                                expr [18671,18682]
                                    name: params_size [18671,18682]
                            argument [18684,18702]
                                expr [18684,18702]
                                    name: actual_params_size [18684,18702]
                expr [18707,18737]
                    name: __ [18707,18709]
                    call [18710,18737]
                        name: Bind [18710,18714]
                        argument_list [18714,18737]
                            argument [18715,18736]
                                expr [18715,18736]
                                    operator: & [18715,18716]
                                    name: corrected_args_count [18716,18736]
                comment: // Leave the frame (also dropping the register file). [18742,18795]
                expr [18798,18841]
                    name: __ [18798,18800]
                    call [18801,18807]
                        name: masm [18801,18805]
                        argument_list [18805,18807]
                    operator: -> [18807,18809]
                    call [18809,18841]
                        name: LeaveFrame [18809,18819]
                        argument_list [18819,18841]
                            argument [18820,18840]
                                expr [18820,18840]
                                    name [18820,18840]
                                        name: StackFrame [18820,18830]
                                        operator: :: [18830,18832]
                                        name: BASELINE [18832,18840]
                comment: // Drop receiver + arguments. [18846,18875]
                expr [18878,18921]
                    name: __ [18878,18880]
                    call [18881,18887]
                        name: masm [18881,18885]
                        argument_list [18885,18887]
                    operator: -> [18887,18889]
                    call [18889,18921]
                        name: Add [18889,18892]
                        argument_list [18892,18921]
                            argument [18893,18904]
                                expr [18893,18904]
                                    name: params_size [18893,18904]
                            argument [18906,18917]
                                expr [18906,18917]
                                    name: params_size [18906,18917]
                            argument [18919,18920]
                                expr [18919,18920]
                                    literal: 1 [18919,18920]
                comment: // Include the receiver. [18924,18948]
                expr [18951,18988]
                    name: __ [18951,18953]
                    call [18954,18960]
                        name: masm [18954,18958]
                        argument_list [18958,18960]
                    operator: -> [18960,18962]
                    call [18962,18988]
                        name: DropArguments [18962,18975]
                        argument_list [18975,18988]
                            argument [18976,18987]
                                expr [18976,18987]
                                    name: params_size [18976,18987]
                expr [18992,19008]
                    name: __ [18992,18994]
                    call [18995,19001]
                        name: masm [18995,18999]
                        argument_list [18999,19001]
                    operator: -> [19001,19003]
                    call [19003,19008]
                        name: Ret [19003,19006]
                        argument_list [19006,19008]
    undef [19013,19022]
        directive: undef [19014,19019]
        name: __ [19020,19022]
    comment: // namespace baseline [19027,19048]
    comment: // namespace internal [19052,19073]
    comment: // namespace v8 [19077,19092]
    endif [19094,19100]
        directive: endif [19095,19100]
    comment: // V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [19102,19154]