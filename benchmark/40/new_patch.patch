--- ./benchmark/40/test2.cc	2024-03-02 19:45:24
+++ ./benchmark/40/test2_.cc	2024-03-02 19:45:46
@@ -3893,7 +3893,7 @@ void MacroAssembler::LoadWeakValue(Register out, Regis
   And(out, in, Operand(~kWeakHeapObjectMask));
 }
 
-void MacroAssembler::IncrementCounter(StatsCounter* counter, int value,
+void MacroAssembler::EmitIncrementCounter(StatsCounter* counter, int value,
                                       Register scratch1, Register scratch2) {
   DCHECK_GT(value, 0);
   if (FLAG_native_code_counters && counter->Enabled()) {
@@ -3907,19 +3907,7 @@ void MacroAssembler::IncrementCounter(StatsCounter* co
   }
 }
 
-void MacroAssembler::DecrementCounter(StatsCounter* counter, int value,
-                                      Register scratch1, Register scratch2) {
-  DCHECK_GT(value, 0);
-  if (FLAG_native_code_counters && counter->Enabled()) {
-    // This operation has to be exactly 32-bit wide in case the external
-    // reference table redirects the counter to a uint32_t
-    // dummy_stats_counter_ field.
-    li(scratch2, ExternalReference::Create(counter));
-    Lw(scratch1, MemOperand(scratch2));
-    Sub32(scratch1, scratch1, Operand(value));
-    Sw(scratch1, MemOperand(scratch2));
-  }
-}
+
 
 // -----------------------------------------------------------------------------
 // Debugging.
