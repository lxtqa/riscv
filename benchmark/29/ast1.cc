unit [0,0]
    comment: // Copyright 2021 the V8 project authors. All rights reserved. [0,62]
    comment: // Use of this source code is governed by a BSD-style license that can be [63,136]
    comment: // found in the LICENSE file. [137,166]
    ifndef [168,225]
        directive: ifndef [169,175]
        name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [176,225]
    define [226,283]
        directive: define [227,233]
        macro [234,283]
            name: V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [234,283]
    include [285,329]
        directive: include [286,293]
        file: "src/baseline/baseline-assembler.h" [294,329]
    include [330,386]
        directive: include [331,338]
        file: "src/codegen/arm64/macro-assembler-arm64-inl.h" [339,386]
    include [387,433]
        directive: include [388,395]
        file: "src/codegen/interface-descriptors.h" [396,433]
    namespace [435,9921]
        name: v8 [445,447]
        block [448,9921]
            namespace [450,9681]
                block [469,9681]
                    namespace [471,1308]
                        name: baseline [481,489]
                        block [490,1308]
                            class [493,1035]
                                name [499,538]
                                    name: BaselineAssembler [499,516]
                                    operator: :: [516,518]
                                    name: ScratchRegisterScope [518,538]
                                block [539,1035]
                                    expr_stmt [542,1031]
                                        expr [542,641]
                                            specifier: public [542,548]
                                            operator: : [548,549]
                                            specifier: explicit [552,560]
                                            call [561,611]
                                                name: ScratchRegisterScope [561,581]
                                                argument_list [581,611]
                                                    argument [582,610]
                                                        expr [582,610]
                                                            name: BaselineAssembler [582,599]
                                                            operator: * [599,600]
                                                            name: assembler [601,610]
                                            operator: : [618,619]
                                            call [620,641]
                                                name: assembler_ [620,630]
                                                argument_list [630,641]
                                                    argument [631,640]
                                                        expr [631,640]
                                                            name: assembler [631,640]
                                        operator: , [641,642]
                                        expr [651,698]
                                            call [651,698]
                                                name: prev_scope_ [651,662]
                                                argument_list [662,698]
                                                    argument [663,697]
                                                        expr [663,697]
                                                            name [663,697]
                                                                name: assembler [663,672]
                                                                operator: -> [672,674]
                                                                name: scratch_register_scope_ [674,697]
                                        operator: , [698,699]
                                        macro [708,741]
                                            name: wrapped_scope_ [708,722]
                                            argument_list [722,741]
                                                argument [723,740]
                                        expr [742,1030]
                                            block [742,983]
                                                if_stmt [748,977]
                                                    if [748,977]
                                                        condition [751,789]
                                                            expr [752,788]
                                                                operator: ! [752,753]
                                                                name [753,788]
                                                                    name: assembler_ [753,763]
                                                                    operator: -> [763,765]
                                                                    name: scratch_register_scope_ [765,788]
                                                        block [790,977]
                                                            block_content [909,977]
                                                                comment: // If we haven't opened a scratch scope yet, for the first one add a [798,866]
                                                                comment: // couple of extra registers. [873,902]
                                                                expr_stmt [909,942]
                                                                    expr [909,941]
                                                                        call [909,941]
                                                                            name [909,931]
                                                                                name: wrapped_scope_ [909,923]
                                                                                operator: . [923,924]
                                                                                name: Include [924,931]
                                                                            argument_list [931,941]
                                                                                argument [932,935]
                                                                                    expr [932,935]
                                                                                        name: x14 [932,935]
                                                                                argument [937,940]
                                                                                    expr [937,940]
                                                                                        name: x15 [937,940]
                                                                expr_stmt [949,977]
                                                                    expr [949,976]
                                                                        call [949,976]
                                                                            name [949,971]
                                                                                name: wrapped_scope_ [949,963]
                                                                                operator: . [963,964]
                                                                                name: Include [964,971]
                                                                            argument_list [971,976]
                                                                                argument [972,975]
                                                                                    expr [972,975]
                                                                                        name: x19 [972,975]
                                                                expr_stmt [0,0]
                                            name [988,1023]
                                                name: assembler_ [988,998]
                                                operator: -> [998,1000]
                                                name: scratch_register_scope_ [1000,1023]
                                            operator: = [1024,1025]
                                            name: this [1026,1030]
                            destructor [1038,1116]
                                name: ~ScratchRegisterScope [1038,1059]
                                parameter_list [1059,1061]
                                block [1062,1116]
                                    block_content [1064,1114]
                                        expr_stmt [1064,1114]
                                            expr [1064,1113]
                                                name [1064,1099]
                                                    name: assembler_ [1064,1074]
                                                    operator: -> [1074,1076]
                                                    name: scratch_register_scope_ [1076,1099]
                                                operator: = [1100,1101]
                                                name: prev_scope_ [1102,1113]
                            function [1120,1183]
                                type [1120,1128]
                                    name: Register [1120,1128]
                                name: AcquireScratch [1129,1143]
                                parameter_list [1143,1145]
                                block [1146,1183]
                                    block_content [1148,1181]
                                        return [1148,1181]
                                            expr [1155,1180]
                                                call [1155,1180]
                                                    name [1155,1178]
                                                        name: wrapped_scope_ [1155,1169]
                                                        operator: . [1169,1170]
                                                        name: AcquireX [1170,1178]
                                                    argument_list [1178,1180]
                            expr_stmt [1186,1227]
                                expr [1186,1226]
                                    specifier: private [1186,1193]
                                    operator: : [1193,1194]
                                    name: BaselineAssembler [1197,1214]
                                    operator: * [1214,1215]
                                    name: assembler_ [1216,1226]
                            decl_stmt [1230,1264]
                                decl [1230,1263]
                                    type [1230,1251]
                                        name: ScratchRegisterScope [1230,1250]
                                        modifier: * [1250,1251]
                                    name: prev_scope_ [1252,1263]
                            decl_stmt [1267,1306]
                                decl [1267,1305]
                                    type [1267,1290]
                                        name: UseScratchRegisterScope [1267,1290]
                                    name: wrapped_scope_ [1291,1305]
                    empty_stmt [1308,1309]
                    comment: // TODO(v8:11461): Unify condition names in the MacroAssembler. [1311,1374]
                    enum [1375,1725]
                        class [1380,1724]
                            name: Condition [1386,1395]
                            super_list [1396,1406]
                                super [1398,1406]
                                    name: uint32_t [1398,1406]
                            block [1407,1724]
                                expr_stmt [1411,1722]
                                    expr [1411,1422]
                                        name: kEqual [1411,1417]
                                        operator: = [1418,1419]
                                        name: eq [1420,1422]
                                    operator: , [1422,1423]
                                    expr [1426,1440]
                                        name: kNotEqual [1426,1435]
                                        operator: = [1436,1437]
                                        name: ne [1438,1440]
                                    operator: , [1440,1441]
                                    expr [1445,1459]
                                        name: kLessThan [1445,1454]
                                        operator: = [1455,1456]
                                        name: lt [1457,1459]
                                    operator: , [1459,1460]
                                    expr [1463,1480]
                                        name: kGreaterThan [1463,1475]
                                        operator: = [1476,1477]
                                        name: gt [1478,1480]
                                    operator: , [1480,1481]
                                    expr [1484,1503]
                                        name: kLessThanEqual [1484,1498]
                                        operator: = [1499,1500]
                                        name: le [1501,1503]
                                    operator: , [1503,1504]
                                    expr [1507,1529]
                                        name: kGreaterThanEqual [1507,1524]
                                        operator: = [1525,1526]
                                        name: ge [1527,1529]
                                    operator: , [1529,1530]
                                    expr [1534,1556]
                                        name: kUnsignedLessThan [1534,1551]
                                        operator: = [1552,1553]
                                        name: lo [1554,1556]
                                    operator: , [1556,1557]
                                    expr [1560,1585]
                                        name: kUnsignedGreaterThan [1560,1580]
                                        operator: = [1581,1582]
                                        name: hi [1583,1585]
                                    operator: , [1585,1586]
                                    expr [1589,1616]
                                        name: kUnsignedLessThanEqual [1589,1611]
                                        operator: = [1612,1613]
                                        name: ls [1614,1616]
                                    operator: , [1616,1617]
                                    expr [1620,1650]
                                        name: kUnsignedGreaterThanEqual [1620,1645]
                                        operator: = [1646,1647]
                                        name: hs [1648,1650]
                                    operator: , [1650,1651]
                                    expr [1655,1669]
                                        name: kOverflow [1655,1664]
                                        operator: = [1665,1666]
                                        name: vs [1667,1669]
                                    operator: , [1669,1670]
                                    expr [1673,1689]
                                        name: kNoOverflow [1673,1684]
                                        operator: = [1685,1686]
                                        name: vc [1687,1689]
                                    operator: , [1689,1690]
                                    expr [1694,1704]
                                        name: kZero [1694,1699]
                                        operator: = [1700,1701]
                                        name: eq [1702,1704]
                                    operator: , [1704,1705]
                                    expr [1708,1721]
                                        name: kNotZero [1708,1716]
                                        operator: = [1717,1718]
                                        name: ne [1719,1721]
                                    operator: , [1721,1722]
                    function [1727,1838]
                        type [1727,1753]
                            specifier: inline [1727,1733]
                            specifier: internal [1734,1742]
                            name [1742,1753]
                                operator: :: [1742,1744]
                                name: Condition [1744,1753]
                        name: AsMasmCondition [1754,1769]
                        parameter_list [1769,1785]
                            parameter [1770,1784]
                                decl [1770,1784]
                                    type [1770,1779]
                                        name: Condition [1770,1779]
                                    name: cond [1780,1784]
                        block [1786,1838]
                            block_content [1790,1836]
                                return [1790,1836]
                                    expr [1797,1835]
                                        call [1797,1835]
                                            name [1797,1829]
                                                name: static_cast [1797,1808]
                                                argument_list [1808,1829]
                                                    argument [1809,1828]
                                                        specifier: internal [1809,1817]
                                                        name [1817,1828]
                                                            operator: :: [1817,1819]
                                                            name: Condition [1819,1828]
                                            argument_list [1829,1835]
                                                argument [1830,1834]
                                                    expr [1830,1834]
                                                        name: cond [1830,1834]
                    namespace [1840,2039]
                        name: detail [1850,1856]
                        block [1857,2039]
                            ifdef [1860,1872]
                                directive: ifdef [1861,1866]
                                name: DEBUG [1867,1872]
                            function [1873,1995]
                                type [1873,1884]
                                    specifier: inline [1873,1879]
                                    name: bool [1880,1884]
                                name: Clobbers [1885,1893]
                                parameter_list [1893,1925]
                                    parameter [1894,1909]
                                        decl [1894,1909]
                                            type [1894,1909]
                                                name: Register [1894,1902]
                                            name: target [1903,1909]
                                    parameter [1911,1924]
                                        decl [1911,1924]
                                            type [1911,1924]
                                                name: MemOperand [1911,1921]
                                            name: op [1922,1924]
                                block [1926,1995]
                                    block_content [1930,1985]
                                        return [1930,1985]
                                            expr [1937,1984]
                                                call [1937,1946]
                                                    name [1937,1944]
                                                        name: op [1937,1939]
                                                        operator: . [1939,1940]
                                                        name: base [1940,1944]
                                                    argument_list [1944,1946]
                                                operator: == [1947,1949]
                                                name: target [1950,1956]
                                                operator: || [1957,1959]
                                                call [1960,1974]
                                                    name [1960,1972]
                                                        name: op [1960,1962]
                                                        operator: . [1962,1963]
                                                        name: regoffset [1963,1972]
                                                    argument_list [1972,1974]
                                                operator: == [1975,1977]
                                                name: target [1978,1984]
                            endif [1988,1994]
                                directive: endif [1989,1994]
                    comment: // namespace detail [1999,2018]
                    define [2020,2038]
                        directive: define [2021,2027]
                        macro [2028,2030]
                            name: __ [2028,2030]
                        value [2031,2038]
                    function [2040,2223]
                        type [2040,2050]
                            name: MemOperand [2040,2050]
                        name [2051,2090]
                            name: BaselineAssembler [2051,2068]
                            operator: :: [2068,2070]
                            name: RegisterFrameOperand [2070,2090]
                        parameter_list [2090,2139]
                            parameter [2096,2138]
                                decl [2096,2138]
                                    type [2096,2117]
                                        name [2096,2117]
                                            name: interpreter [2096,2107]
                                            operator: :: [2107,2109]
                                            name: Register [2109,2117]
                                    name: interpreter_register [2118,2138]
                        block [2140,2223]
                            block_content [2144,2221]
                                return [2144,2221]
                                    expr [2151,2220]
                                        call [2151,2220]
                                            name: MemOperand [2151,2161]
                                            argument_list [2161,2220]
                                                argument [2162,2164]
                                                    expr [2162,2164]
                                                        name: fp [2162,2164]
                                                argument [2166,2219]
                                                    expr [2166,2219]
                                                        call [2166,2198]
                                                            name [2166,2196]
                                                                name: interpreter_register [2166,2186]
                                                                operator: . [2186,2187]
                                                                name: ToOperand [2187,2196]
                                                            argument_list [2196,2198]
                                                        operator: * [2199,2200]
                                                        name: kSystemPointerSize [2201,2219]
                    function [2224,2353]
                        type [2224,2234]
                            name: MemOperand [2224,2234]
                        name [2235,2275]
                            name: BaselineAssembler [2235,2252]
                            operator: :: [2252,2254]
                            name: FeedbackVectorOperand [2254,2275]
                        parameter_list [2275,2277]
                        block [2278,2353]
                            block_content [2282,2351]
                                return [2282,2351]
                                    expr [2289,2350]
                                        call [2289,2350]
                                            name: MemOperand [2289,2299]
                                            argument_list [2299,2350]
                                                argument [2300,2302]
                                                    expr [2300,2302]
                                                        name: fp [2300,2302]
                                                argument [2304,2349]
                                                    expr [2304,2349]
                                                        name [2304,2349]
                                                            name: BaselineFrameConstants [2304,2326]
                                                            operator: :: [2326,2328]
                                                            name: kFeedbackVectorFromFp [2328,2349]
                    function [2355,2507]
                        type [2355,2359]
                            name: void [2355,2359]
                        name [2360,2383]
                            name: BaselineAssembler [2360,2377]
                            operator: :: [2377,2379]
                            name: Bind [2379,2383]
                        parameter_list [2383,2397]
                            parameter [2384,2396]
                                decl [2384,2396]
                                    type [2384,2390]
                                        name: Label [2384,2389]
                                        modifier: * [2389,2390]
                                    name: label [2391,2396]
                        block [2398,2507]
                            block_content [2480,2505]
                                comment: // All baseline compiler binds on arm64 are assumed to be for jump targets. [2402,2477]
                                decl_stmt [2480,2505]
                                    decl [2480,2504]
                                        type [2480,2482]
                                            name: __ [2480,2482]
                                        name: BindJumpTarget [2483,2497]
                                        argument_list [2497,2504]
                                            argument [2498,2503]
                                                expr [2498,2503]
                                                    name: label [2498,2503]
                    function [2509,2588]
                        type [2509,2513]
                            name: void [2509,2513]
                        name [2514,2554]
                            name: BaselineAssembler [2514,2531]
                            operator: :: [2531,2533]
                            name: BindWithoutJumpTarget [2533,2554]
                        parameter_list [2554,2568]
                            parameter [2555,2567]
                                decl [2555,2567]
                                    type [2555,2561]
                                        name: Label [2555,2560]
                                        modifier: * [2560,2561]
                                    name: label [2562,2567]
                        block [2569,2588]
                            block_content [2571,2586]
                                decl_stmt [2571,2586]
                                    decl [2571,2585]
                                        type [2571,2573]
                                            name: __ [2571,2573]
                                        name: Bind [2574,2578]
                                        argument_list [2578,2585]
                                            argument [2579,2584]
                                                expr [2579,2584]
                                                    name: label [2579,2584]
                    function [2590,2647]
                        type [2590,2594]
                            name: void [2590,2594]
                        name [2595,2624]
                            name: BaselineAssembler [2595,2612]
                            operator: :: [2612,2614]
                            name: JumpTarget [2614,2624]
                        parameter_list [2624,2626]
                        block [2627,2647]
                            block_content [2629,2645]
                                function_decl [2629,2645]
                                    type [2629,2631]
                                        name: __ [2629,2631]
                                    name: JumpTarget [2632,2642]
                                    parameter_list [2642,2644]
                    function [2649,2738]
                        type [2649,2653]
                            name: void [2649,2653]
                        name [2654,2677]
                            name: BaselineAssembler [2654,2671]
                            operator: :: [2671,2673]
                            name: Jump [2673,2677]
                        parameter_list [2677,2718]
                            parameter [2678,2691]
                                decl [2678,2691]
                                    type [2678,2691]
                                        name: Label [2678,2683]
                                        modifier: * [2683,2684]
                                    name: target [2685,2691]
                            parameter [2693,2717]
                                decl [2693,2717]
                                    type [2693,2717]
                                        name [2693,2708]
                                            name: Label [2693,2698]
                                            operator: :: [2698,2700]
                                            name: Distance [2700,2708]
                                    name: distance [2709,2717]
                        block [2719,2738]
                            block_content [2723,2736]
                                decl_stmt [2723,2736]
                                    decl [2723,2735]
                                        type [2723,2725]
                                            name: __ [2723,2725]
                                        name: B [2726,2727]
                                        argument_list [2727,2735]
                                            argument [2728,2734]
                                                expr [2728,2734]
                                                    name: target [2728,2734]
                    function [2739,2916]
                        type [2739,2743]
                            name: void [2739,2743]
                        name [2744,2773]
                            name: BaselineAssembler [2744,2761]
                            operator: :: [2761,2763]
                            name: JumpIfRoot [2763,2773]
                        parameter_list [2773,2873]
                            parameter [2774,2788]
                                decl [2774,2788]
                                    type [2774,2788]
                                        name: Register [2774,2782]
                                    name: value [2783,2788]
                            parameter [2790,2805]
                                decl [2790,2805]
                                    type [2790,2805]
                                        name: RootIndex [2790,2799]
                                    name: index [2800,2805]
                            parameter [2842,2855]
                                decl [2842,2855]
                                    type [2842,2855]
                                        name: Label [2842,2847]
                                        modifier: * [2847,2848]
                                    name: target [2849,2855]
                            parameter [2857,2872]
                                decl [2857,2872]
                                    type [2857,2872]
                                        name [2857,2872]
                                            name: Label [2857,2862]
                                            operator: :: [2862,2864]
                                            name: Distance [2864,2872]
                        block [2874,2916]
                            block_content [2878,2914]
                                decl_stmt [2878,2914]
                                    decl [2878,2913]
                                        type [2878,2880]
                                            name: __ [2878,2880]
                                        name: JumpIfRoot [2881,2891]
                                        argument_list [2891,2913]
                                            argument [2892,2897]
                                                expr [2892,2897]
                                                    name: value [2892,2897]
                                            argument [2899,2904]
                                                expr [2899,2904]
                                                    name: index [2899,2904]
                                            argument [2906,2912]
                                                expr [2906,2912]
                                                    name: target [2906,2912]
                    function [2917,3103]
                        type [2917,2921]
                            name: void [2917,2921]
                        name [2922,2954]
                            name: BaselineAssembler [2922,2939]
                            operator: :: [2939,2941]
                            name: JumpIfNotRoot [2941,2954]
                        parameter_list [2954,3057]
                            parameter [2955,2969]
                                decl [2955,2969]
                                    type [2955,2969]
                                        name: Register [2955,2963]
                                    name: value [2964,2969]
                            parameter [2971,2986]
                                decl [2971,2986]
                                    type [2971,2986]
                                        name: RootIndex [2971,2980]
                                    name: index [2981,2986]
                            parameter [3026,3039]
                                decl [3026,3039]
                                    type [3026,3039]
                                        name: Label [3026,3031]
                                        modifier: * [3031,3032]
                                    name: target [3033,3039]
                            parameter [3041,3056]
                                decl [3041,3056]
                                    type [3041,3056]
                                        name [3041,3056]
                                            name: Label [3041,3046]
                                            operator: :: [3046,3048]
                                            name: Distance [3048,3056]
                        block [3058,3103]
                            block_content [3062,3101]
                                decl_stmt [3062,3101]
                                    decl [3062,3100]
                                        type [3062,3064]
                                            name: __ [3062,3064]
                                        name: JumpIfNotRoot [3065,3078]
                                        argument_list [3078,3100]
                                            argument [3079,3084]
                                                expr [3079,3084]
                                                    name: value [3079,3084]
                                            argument [3086,3091]
                                                expr [3086,3091]
                                                    name: index [3086,3091]
                                            argument [3093,3099]
                                                expr [3093,3099]
                                                    name: target [3093,3099]
                    function [3104,3254]
                        type [3104,3108]
                            name: void [3104,3108]
                        name [3109,3137]
                            name: BaselineAssembler [3109,3126]
                            operator: :: [3126,3128]
                            name: JumpIfSmi [3128,3137]
                        parameter_list [3137,3219]
                            parameter [3138,3152]
                                decl [3138,3152]
                                    type [3138,3152]
                                        name: Register [3138,3146]
                                    name: value [3147,3152]
                            parameter [3154,3167]
                                decl [3154,3167]
                                    type [3154,3167]
                                        name: Label [3154,3159]
                                        modifier: * [3159,3160]
                                    name: target [3161,3167]
                            parameter [3203,3218]
                                decl [3203,3218]
                                    type [3203,3218]
                                        name [3203,3218]
                                            name: Label [3203,3208]
                                            operator: :: [3208,3210]
                                            name: Distance [3210,3218]
                        block [3220,3254]
                            block_content [3224,3252]
                                decl_stmt [3224,3252]
                                    decl [3224,3251]
                                        type [3224,3226]
                                            name: __ [3224,3226]
                                        name: JumpIfSmi [3227,3236]
                                        argument_list [3236,3251]
                                            argument [3237,3242]
                                                expr [3237,3242]
                                                    name: value [3237,3242]
                                            argument [3244,3250]
                                                expr [3244,3250]
                                                    name: target [3244,3250]
                    function [3255,3414]
                        type [3255,3259]
                            name: void [3255,3259]
                        name [3260,3291]
                            name: BaselineAssembler [3260,3277]
                            operator: :: [3277,3279]
                            name: JumpIfNotSmi [3279,3291]
                        parameter_list [3291,3376]
                            parameter [3292,3306]
                                decl [3292,3306]
                                    type [3292,3306]
                                        name: Register [3292,3300]
                                    name: value [3301,3306]
                            parameter [3308,3321]
                                decl [3308,3321]
                                    type [3308,3321]
                                        name: Label [3308,3313]
                                        modifier: * [3313,3314]
                                    name: target [3315,3321]
                            parameter [3360,3375]
                                decl [3360,3375]
                                    type [3360,3375]
                                        name [3360,3375]
                                            name: Label [3360,3365]
                                            operator: :: [3365,3367]
                                            name: Distance [3367,3375]
                        block [3377,3414]
                            block_content [3381,3412]
                                decl_stmt [3381,3412]
                                    decl [3381,3411]
                                        type [3381,3383]
                                            name: __ [3381,3383]
                                        name: JumpIfNotSmi [3384,3396]
                                        argument_list [3396,3411]
                                            argument [3397,3402]
                                                expr [3397,3402]
                                                    name: value [3397,3402]
                                            argument [3404,3410]
                                                expr [3404,3410]
                                                    name: target [3404,3410]
                    function [3416,3742]
                        type [3416,3420]
                            name: void [3416,3420]
                        name [3421,3451]
                            name: BaselineAssembler [3421,3438]
                            operator: :: [3438,3440]
                            name: CallBuiltin [3440,3451]
                        parameter_list [3451,3468]
                            parameter [3452,3467]
                                decl [3452,3467]
                                    type [3452,3459]
                                        name: Builtin [3452,3459]
                                    name: builtin [3460,3467]
                        block [3469,3742]
                            block_content [3473,3740]
                                if_stmt [3473,3740]
                                    if [3473,3584]
                                        condition [3476,3515]
                                            expr [3477,3514]
                                                call [3477,3483]
                                                    name: masm [3477,3481]
                                                    argument_list [3481,3483]
                                                operator: -> [3483,3485]
                                                call [3485,3494]
                                                    name: options [3485,3492]
                                                    argument_list [3492,3494]
                                                operator: . [3494,3495]
                                                name: short_builtin_calls [3495,3514]
                                        block [3516,3584]
                                            block_content [3556,3580]
                                                comment: // Generate pc-relative call. [3522,3551]
                                                decl_stmt [3556,3580]
                                                    decl [3556,3579]
                                                        type [3556,3558]
                                                            name: __ [3556,3558]
                                                        name: CallBuiltin [3559,3570]
                                                        argument_list [3570,3579]
                                                            argument [3571,3578]
                                                                expr [3571,3578]
                                                                    name: builtin [3571,3578]
                                    else [3585,3740]
                                        block [3590,3740]
                                            block_content [3596,3736]
                                                decl_stmt [3596,3629]
                                                    decl [3596,3628]
                                                        type [3596,3616]
                                                            name: ScratchRegisterScope [3596,3616]
                                                        name: temps [3617,3622]
                                                        argument_list [3622,3628]
                                                            argument [3623,3627]
                                                                expr [3623,3627]
                                                                    name: this [3623,3627]
                                                decl_stmt [3634,3673]
                                                    decl [3634,3672]
                                                        type [3634,3642]
                                                            name: Register [3634,3642]
                                                        name: temp [3643,3647]
                                                        init [3648,3672]
                                                            expr [3650,3672]
                                                                call [3650,3672]
                                                                    name [3650,3670]
                                                                        name: temps [3650,3655]
                                                                        operator: . [3655,3656]
                                                                        name: AcquireScratch [3656,3670]
                                                                    argument_list [3670,3672]
                                                decl_stmt [3678,3717]
                                                    decl [3678,3716]
                                                        type [3678,3680]
                                                            name: __ [3678,3680]
                                                        name: LoadEntryFromBuiltin [3681,3701]
                                                        argument_list [3701,3716]
                                                            argument [3702,3709]
                                                                expr [3702,3709]
                                                                    name: builtin [3702,3709]
                                                            argument [3711,3715]
                                                                expr [3711,3715]
                                                                    name: temp [3711,3715]
                                                decl_stmt [3722,3736]
                                                    decl [3722,3735]
                                                        type [3722,3724]
                                                            name: __ [3722,3724]
                                                        name: Call [3725,3729]
                                                        argument_list [3729,3735]
                                                            argument [3730,3734]
                                                                expr [3730,3734]
                                                                    name: temp [3730,3734]
                    function [3744,4774]
                        type [3744,3748]
                            name: void [3744,3748]
                        name [3749,3783]
                            name: BaselineAssembler [3749,3766]
                            operator: :: [3766,3768]
                            name: TailCallBuiltin [3768,3783]
                        parameter_list [3783,3800]
                            parameter [3784,3799]
                                decl [3784,3799]
                                    type [3784,3791]
                                        name: Builtin [3784,3791]
                                    name: builtin [3792,3799]
                        block [3801,4774]
                            block_content [3805,4772]
                                if_stmt [3805,4772]
                                    if [3805,3920]
                                        condition [3808,3847]
                                            expr [3809,3846]
                                                call [3809,3815]
                                                    name: masm [3809,3813]
                                                    argument_list [3813,3815]
                                                operator: -> [3815,3817]
                                                call [3817,3826]
                                                    name: options [3817,3824]
                                                    argument_list [3824,3826]
                                                operator: . [3826,3827]
                                                name: short_builtin_calls [3827,3846]
                                        block [3848,3920]
                                            block_content [3888,3916]
                                                comment: // Generate pc-relative call. [3854,3883]
                                                decl_stmt [3888,3916]
                                                    decl [3888,3915]
                                                        type [3888,3890]
                                                            name: __ [3888,3890]
                                                        name: TailCallBuiltin [3891,3906]
                                                        argument_list [3906,3915]
                                                            argument [3907,3914]
                                                                expr [3907,3914]
                                                                    name: builtin [3907,3914]
                                    else [3921,4772]
                                        block [3926,4772]
                                            block_content [4552,4768]
                                                comment: // The control flow integrity (CFI) feature allows us to "sign" code entry [3932,4006]
                                                comment: // points as a target for calls, jumps or both. Arm64 has special [4011,4076]
                                                comment: // instructions for this purpose, so-called "landing pads" (see [4081,4144]
                                                comment: // TurboAssembler::CallTarget(), TurboAssembler::JumpTarget() and [4149,4214]
                                                comment: // TurboAssembler::JumpOrCallTarget()). Currently, we generate "Call" [4219,4288]
                                                comment: // landing pads for CPP builtins. In order to allow tail calling to those [4293,4366]
                                                comment: // builtins we have to use a workaround. [4371,4411]
                                                comment: // x17 is used to allow using "Call" (i.e. `bti c`) rather than "Jump" (i.e. [4416,4492]
                                                comment: // `bti j`) landing pads for the tail-called code. [4497,4547]
                                                decl_stmt [4552,4572]
                                                    decl [4552,4571]
                                                        type [4552,4560]
                                                            name: Register [4552,4560]
                                                        name: temp [4561,4565]
                                                        init [4566,4571]
                                                            expr [4568,4571]
                                                                name: x17 [4568,4571]
                                                comment: // Make sure we're don't use this register as a temporary. [4578,4636]
                                                decl_stmt [4641,4679]
                                                    decl [4641,4678]
                                                        type [4641,4664]
                                                            name: UseScratchRegisterScope [4641,4664]
                                                        name: temps [4665,4670]
                                                        argument_list [4670,4678]
                                                            argument [4671,4677]
                                                                expr [4671,4677]
                                                                    call [4671,4677]
                                                                        name: masm [4671,4675]
                                                                        argument_list [4675,4677]
                                                expr_stmt [4684,4704]
                                                    expr [4684,4703]
                                                        call [4684,4703]
                                                            name [4684,4697]
                                                                name: temps [4684,4689]
                                                                operator: . [4689,4690]
                                                                name: Exclude [4690,4697]
                                                            argument_list [4697,4703]
                                                                argument [4698,4702]
                                                                    expr [4698,4702]
                                                                        name: temp [4698,4702]
                                                decl_stmt [4710,4749]
                                                    decl [4710,4748]
                                                        type [4710,4712]
                                                            name: __ [4710,4712]
                                                        name: LoadEntryFromBuiltin [4713,4733]
                                                        argument_list [4733,4748]
                                                            argument [4734,4741]
                                                                expr [4734,4741]
                                                                    name: builtin [4734,4741]
                                                            argument [4743,4747]
                                                                expr [4743,4747]
                                                                    name: temp [4743,4747]
                                                decl_stmt [4754,4768]
                                                    decl [4754,4767]
                                                        type [4754,4756]
                                                            name: __ [4754,4756]
                                                        name: Jump [4757,4761]
                                                        argument_list [4761,4767]
                                                            argument [4762,4766]
                                                                expr [4762,4766]
                                                                    name: temp [4762,4766]
                    function [4776,4998]
                        type [4776,4780]
                            name: void [4776,4780]
                        name [4781,4813]
                            name: BaselineAssembler [4781,4798]
                            operator: :: [4798,4800]
                            name: TestAndBranch [4800,4813]
                        parameter_list [4813,4923]
                            parameter [4814,4828]
                                decl [4814,4828]
                                    type [4814,4828]
                                        name: Register [4814,4822]
                                    name: value [4823,4828]
                            parameter [4830,4838]
                                decl [4830,4838]
                                    type [4830,4838]
                                        name: int [4830,4833]
                                    name: mask [4834,4838]
                            parameter [4840,4852]
                                decl [4840,4852]
                                    type [4840,4852]
                                        name: Condition [4840,4849]
                                    name: cc [4850,4852]
                            parameter [4892,4905]
                                decl [4892,4905]
                                    type [4892,4905]
                                        name: Label [4892,4897]
                                        modifier: * [4897,4898]
                                    name: target [4899,4905]
                            parameter [4907,4922]
                                decl [4907,4922]
                                    type [4907,4922]
                                        name [4907,4922]
                                            name: Label [4907,4912]
                                            operator: :: [4912,4914]
                                            name: Distance [4914,4922]
                        block [4924,4998]
                            block_content [4928,4996]
                                decl_stmt [4928,4959]
                                    decl [4928,4958]
                                        type [4928,4930]
                                            name: __ [4928,4930]
                                        name: Tst [4931,4934]
                                        argument_list [4934,4958]
                                            argument [4935,4940]
                                                expr [4935,4940]
                                                    name: value [4935,4940]
                                            argument [4942,4957]
                                                expr [4942,4957]
                                                    call [4942,4957]
                                                        name: Immediate [4942,4951]
                                                        argument_list [4951,4957]
                                                            argument [4952,4956]
                                                                expr [4952,4956]
                                                                    name: mask [4952,4956]
                                decl_stmt [4962,4996]
                                    decl [4962,4995]
                                        type [4962,4964]
                                            name: __ [4962,4964]
                                        name: B [4965,4966]
                                        argument_list [4966,4995]
                                            argument [4967,4986]
                                                expr [4967,4986]
                                                    call [4967,4986]
                                                        name: AsMasmCondition [4967,4982]
                                                        argument_list [4982,4986]
                                                            argument [4983,4985]
                                                                expr [4983,4985]
                                                                    name: cc [4983,4985]
                                            argument [4988,4994]
                                                expr [4988,4994]
                                                    name: target [4988,4994]
                    function [5000,5207]
                        type [5000,5004]
                            name: void [5000,5004]
                        name [5005,5030]
                            name: BaselineAssembler [5005,5022]
                            operator: :: [5022,5024]
                            name: JumpIf [5024,5030]
                        parameter_list [5030,5141]
                            parameter [5031,5043]
                                decl [5031,5043]
                                    type [5031,5043]
                                        name: Condition [5031,5040]
                                    name: cc [5041,5043]
                            parameter [5045,5057]
                                decl [5045,5057]
                                    type [5045,5057]
                                        name: Register [5045,5053]
                                    name: lhs [5054,5057]
                            parameter [5059,5077]
                                decl [5059,5077]
                                    type [5059,5077]
                                        specifier: const [5059,5064]
                                        name: Operand [5065,5072]
                                        modifier: & [5072,5073]
                                    name: rhs [5074,5077]
                            parameter [5110,5123]
                                decl [5110,5123]
                                    type [5110,5123]
                                        name: Label [5110,5115]
                                        modifier: * [5115,5116]
                                    name: target [5117,5123]
                            parameter [5125,5140]
                                decl [5125,5140]
                                    type [5125,5140]
                                        name [5125,5140]
                                            name: Label [5125,5130]
                                            operator: :: [5130,5132]
                                            name: Distance [5132,5140]
                        block [5142,5207]
                            block_content [5146,5205]
                                decl_stmt [5146,5205]
                                    decl [5146,5204]
                                        type [5146,5148]
                                            name: __ [5146,5148]
                                        name: CompareAndBranch [5149,5165]
                                        argument_list [5165,5204]
                                            argument [5166,5169]
                                                expr [5166,5169]
                                                    name: lhs [5166,5169]
                                            argument [5171,5174]
                                                expr [5171,5174]
                                                    name: rhs [5171,5174]
                                            argument [5176,5195]
                                                expr [5176,5195]
                                                    call [5176,5195]
                                                        name: AsMasmCondition [5176,5191]
                                                        argument_list [5191,5195]
                                                            argument [5192,5194]
                                                                expr [5192,5194]
                                                                    name: cc [5192,5194]
                                            argument [5197,5203]
                                                expr [5197,5203]
                                                    name: target [5197,5203]
                    function [5208,5693]
                        type [5208,5212]
                            name: void [5208,5212]
                        name [5213,5248]
                            name: BaselineAssembler [5213,5230]
                            operator: :: [5230,5232]
                            name: JumpIfObjectType [5232,5248]
                        parameter_list [5248,5476]
                            parameter [5249,5261]
                                decl [5249,5261]
                                    type [5249,5261]
                                        name: Condition [5249,5258]
                                    name: cc [5259,5261]
                            parameter [5263,5278]
                                decl [5263,5278]
                                    type [5263,5278]
                                        name: Register [5263,5271]
                                    name: object [5272,5278]
                            parameter [5321,5347]
                                decl [5321,5347]
                                    type [5321,5347]
                                        name: InstanceType [5321,5333]
                                    name: instance_type [5334,5347]
                            parameter [5390,5402]
                                decl [5390,5402]
                                    type [5390,5402]
                                        name: Register [5390,5398]
                                    name: map [5399,5402]
                            parameter [5404,5417]
                                decl [5404,5417]
                                    type [5404,5417]
                                        name: Label [5404,5409]
                                        modifier: * [5409,5410]
                                    name: target [5411,5417]
                            parameter [5460,5475]
                                decl [5460,5475]
                                    type [5460,5475]
                                        name [5460,5475]
                                            name: Label [5460,5465]
                                            operator: :: [5465,5467]
                                            name: Distance [5467,5475]
                        block [5477,5693]
                            block_content [5481,5691]
                                decl_stmt [5481,5514]
                                    decl [5481,5513]
                                        type [5481,5501]
                                            name: ScratchRegisterScope [5481,5501]
                                        name: temps [5502,5507]
                                        argument_list [5507,5513]
                                            argument [5508,5512]
                                                expr [5508,5512]
                                                    name: this [5508,5512]
                                decl_stmt [5517,5556]
                                    decl [5517,5555]
                                        type [5517,5525]
                                            name: Register [5517,5525]
                                        name: type [5526,5530]
                                        init [5531,5555]
                                            expr [5533,5555]
                                                call [5533,5555]
                                                    name [5533,5553]
                                                        name: temps [5533,5538]
                                                        operator: . [5538,5539]
                                                        name: AcquireScratch [5539,5553]
                                                    argument_list [5553,5555]
                                decl_stmt [5559,5583]
                                    decl [5559,5582]
                                        type [5559,5561]
                                            name: __ [5559,5561]
                                        name: LoadMap [5562,5569]
                                        argument_list [5569,5582]
                                            argument [5570,5573]
                                                expr [5570,5573]
                                                    name: map [5570,5573]
                                            argument [5575,5581]
                                                expr [5575,5581]
                                                    name: object [5575,5581]
                                decl_stmt [5586,5648]
                                    decl [5586,5647]
                                        type [5586,5588]
                                            name: __ [5586,5588]
                                        name: Ldrh [5589,5593]
                                        argument_list [5593,5647]
                                            argument [5594,5598]
                                                expr [5594,5598]
                                                    name: type [5594,5598]
                                            argument [5600,5646]
                                                expr [5600,5646]
                                                    call [5600,5646]
                                                        name: FieldMemOperand [5600,5615]
                                                        argument_list [5615,5646]
                                                            argument [5616,5619]
                                                                expr [5616,5619]
                                                                    name: map [5616,5619]
                                                            argument [5621,5645]
                                                                expr [5621,5645]
                                                                    name [5621,5645]
                                                                        name: Map [5621,5624]
                                                                        operator: :: [5624,5626]
                                                                        name: kInstanceTypeOffset [5626,5645]
                                expr_stmt [5651,5691]
                                    expr [5651,5690]
                                        call [5651,5690]
                                            name: JumpIf [5651,5657]
                                            argument_list [5657,5690]
                                                argument [5658,5660]
                                                    expr [5658,5660]
                                                        name: cc [5658,5660]
                                                argument [5662,5666]
                                                    expr [5662,5666]
                                                        name: type [5662,5666]
                                                argument [5668,5681]
                                                    expr [5668,5681]
                                                        name: instance_type [5668,5681]
                                                argument [5683,5689]
                                                    expr [5683,5689]
                                                        name: target [5683,5689]
                    function [5694,6258]
                        type [5694,5698]
                            name: void [5694,5698]
                        name [5699,5736]
                            name: BaselineAssembler [5699,5716]
                            operator: :: [5716,5718]
                            name: JumpIfInstanceType [5718,5736]
                        parameter_list [5736,5910]
                            parameter [5737,5749]
                                decl [5737,5749]
                                    type [5737,5749]
                                        name: Condition [5737,5746]
                                    name: cc [5747,5749]
                            parameter [5751,5763]
                                decl [5751,5763]
                                    type [5751,5763]
                                        name: Register [5751,5759]
                                    name: map [5760,5763]
                            parameter [5808,5834]
                                decl [5808,5834]
                                    type [5808,5834]
                                        name: InstanceType [5808,5820]
                                    name: instance_type [5821,5834]
                            parameter [5879,5892]
                                decl [5879,5892]
                                    type [5879,5892]
                                        name: Label [5879,5884]
                                        modifier: * [5884,5885]
                                    name: target [5886,5892]
                            parameter [5894,5909]
                                decl [5894,5909]
                                    type [5894,5909]
                                        name [5894,5909]
                                            name: Label [5894,5899]
                                            operator: :: [5899,5901]
                                            name: Distance [5901,5909]
                        block [5911,6258]
                            block_content [5915,6256]
                                decl_stmt [5915,5948]
                                    decl [5915,5947]
                                        type [5915,5935]
                                            name: ScratchRegisterScope [5915,5935]
                                        name: temps [5936,5941]
                                        argument_list [5941,5947]
                                            argument [5942,5946]
                                                expr [5942,5946]
                                                    name: this [5942,5946]
                                decl_stmt [5951,5990]
                                    decl [5951,5989]
                                        type [5951,5959]
                                            name: Register [5951,5959]
                                        name: type [5960,5964]
                                        init [5965,5989]
                                            expr [5967,5989]
                                                call [5967,5989]
                                                    name [5967,5987]
                                                        name: temps [5967,5972]
                                                        operator: . [5972,5973]
                                                        name: AcquireScratch [5973,5987]
                                                    argument_list [5987,5989]
                                if_stmt [5993,6148]
                                    if [5993,6148]
                                        condition [5996,6013]
                                            expr [5997,6012]
                                                name: FLAG_debug_code [5997,6012]
                                        block [6014,6148]
                                            block_content [6020,6144]
                                                decl_stmt [6020,6041]
                                                    decl [6020,6040]
                                                        type [6020,6022]
                                                            name: __ [6020,6022]
                                                        name: AssertNotSmi [6023,6035]
                                                        argument_list [6035,6040]
                                                            argument [6036,6039]
                                                                expr [6036,6039]
                                                                    name: map [6036,6039]
                                                decl_stmt [6046,6094]
                                                    decl [6046,6093]
                                                        type [6046,6048]
                                                            name: __ [6046,6048]
                                                        name: CompareObjectType [6049,6066]
                                                        argument_list [6066,6093]
                                                            argument [6067,6070]
                                                                expr [6067,6070]
                                                                    name: map [6067,6070]
                                                            argument [6072,6076]
                                                                expr [6072,6076]
                                                                    name: type [6072,6076]
                                                            argument [6078,6082]
                                                                expr [6078,6082]
                                                                    name: type [6078,6082]
                                                            argument [6084,6092]
                                                                expr [6084,6092]
                                                                    name: MAP_TYPE [6084,6092]
                                                decl_stmt [6099,6144]
                                                    decl [6099,6143]
                                                        type [6099,6101]
                                                            name: __ [6099,6101]
                                                        name: Assert [6102,6108]
                                                        argument_list [6108,6143]
                                                            argument [6109,6111]
                                                                expr [6109,6111]
                                                                    name: eq [6109,6111]
                                                            argument [6113,6142]
                                                                expr [6113,6142]
                                                                    name [6113,6142]
                                                                        name: AbortReason [6113,6124]
                                                                        operator: :: [6124,6126]
                                                                        name: kUnexpectedValue [6126,6142]
                                decl_stmt [6151,6213]
                                    decl [6151,6212]
                                        type [6151,6153]
                                            name: __ [6151,6153]
                                        name: Ldrh [6154,6158]
                                        argument_list [6158,6212]
                                            argument [6159,6163]
                                                expr [6159,6163]
                                                    name: type [6159,6163]
                                            argument [6165,6211]
                                                expr [6165,6211]
                                                    call [6165,6211]
                                                        name: FieldMemOperand [6165,6180]
                                                        argument_list [6180,6211]
                                                            argument [6181,6184]
                                                                expr [6181,6184]
                                                                    name: map [6181,6184]
                                                            argument [6186,6210]
                                                                expr [6186,6210]
                                                                    name [6186,6210]
                                                                        name: Map [6186,6189]
                                                                        operator: :: [6189,6191]
                                                                        name: kInstanceTypeOffset [6191,6210]
                                expr_stmt [6216,6256]
                                    expr [6216,6255]
                                        call [6216,6255]
                                            name: JumpIf [6216,6222]
                                            argument_list [6222,6255]
                                                argument [6223,6225]
                                                    expr [6223,6225]
                                                        name: cc [6223,6225]
                                                argument [6227,6231]
                                                    expr [6227,6231]
                                                        name: type [6227,6231]
                                                argument [6233,6246]
                                                    expr [6233,6246]
                                                        name: instance_type [6233,6246]
                                                argument [6248,6254]
                                                    expr [6248,6254]
                                                        name: target [6248,6254]
                    function [6259,6593]
                        type [6259,6263]
                            name: void [6259,6263]
                        name [6264,6296]
                            name: BaselineAssembler [6264,6281]
                            operator: :: [6281,6283]
                            name: JumpIfPointer [6283,6296]
                        parameter_list [6296,6454]
                            parameter [6297,6309]
                                decl [6297,6309]
                                    type [6297,6309]
                                        name: Condition [6297,6306]
                                    name: cc [6307,6309]
                            parameter [6311,6325]
                                decl [6311,6325]
                                    type [6311,6325]
                                        name: Register [6311,6319]
                                    name: value [6320,6325]
                            parameter [6365,6383]
                                decl [6365,6383]
                                    type [6365,6383]
                                        name: MemOperand [6365,6375]
                                    name: operand [6376,6383]
                            parameter [6385,6398]
                                decl [6385,6398]
                                    type [6385,6398]
                                        name: Label [6385,6390]
                                        modifier: * [6390,6391]
                                    name: target [6392,6398]
                            parameter [6438,6453]
                                decl [6438,6453]
                                    type [6438,6453]
                                        name [6438,6453]
                                            name: Label [6438,6443]
                                            operator: :: [6443,6445]
                                            name: Distance [6445,6453]
                        block [6455,6593]
                            block_content [6459,6591]
                                decl_stmt [6459,6492]
                                    decl [6459,6491]
                                        type [6459,6479]
                                            name: ScratchRegisterScope [6459,6479]
                                        name: temps [6480,6485]
                                        argument_list [6485,6491]
                                            argument [6486,6490]
                                                expr [6486,6490]
                                                    name: this [6486,6490]
                                decl_stmt [6495,6533]
                                    decl [6495,6532]
                                        type [6495,6503]
                                            name: Register [6495,6503]
                                        name: tmp [6504,6507]
                                        init [6508,6532]
                                            expr [6510,6532]
                                                call [6510,6532]
                                                    name [6510,6530]
                                                        name: temps [6510,6515]
                                                        operator: . [6515,6516]
                                                        name: AcquireScratch [6516,6530]
                                                    argument_list [6530,6532]
                                decl_stmt [6536,6557]
                                    decl [6536,6556]
                                        type [6536,6538]
                                            name: __ [6536,6538]
                                        name: Ldr [6539,6542]
                                        argument_list [6542,6556]
                                            argument [6543,6546]
                                                expr [6543,6546]
                                                    name: tmp [6543,6546]
                                            argument [6548,6555]
                                                expr [6548,6555]
                                                    name: operand [6548,6555]
                                expr_stmt [6560,6591]
                                    expr [6560,6590]
                                        call [6560,6590]
                                            name: JumpIf [6560,6566]
                                            argument_list [6566,6590]
                                                argument [6567,6569]
                                                    expr [6567,6569]
                                                        name: cc [6567,6569]
                                                argument [6571,6576]
                                                    expr [6571,6576]
                                                        name: value [6571,6576]
                                                argument [6578,6581]
                                                    expr [6578,6581]
                                                        name: tmp [6578,6581]
                                                argument [6583,6589]
                                                    expr [6583,6589]
                                                        name: target [6583,6589]
                    function [6594,6838]
                        type [6594,6598]
                            name: void [6594,6598]
                        name [6599,6627]
                            name: BaselineAssembler [6599,6616]
                            operator: :: [6616,6618]
                            name: JumpIfSmi [6618,6627]
                        parameter_list [6627,6741]
                            parameter [6628,6640]
                                decl [6628,6640]
                                    type [6628,6640]
                                        name: Condition [6628,6637]
                                    name: cc [6638,6640]
                            parameter [6642,6656]
                                decl [6642,6656]
                                    type [6642,6656]
                                        name: Register [6642,6650]
                                    name: value [6651,6656]
                            parameter [6658,6665]
                                decl [6658,6665]
                                    type [6658,6665]
                                        name: Smi [6658,6661]
                                    name: smi [6662,6665]
                            parameter [6701,6714]
                                decl [6701,6714]
                                    type [6701,6714]
                                        name: Label [6701,6706]
                                        modifier: * [6706,6707]
                                    name: target [6708,6714]
                            parameter [6716,6740]
                                decl [6716,6740]
                                    type [6716,6740]
                                        name [6716,6731]
                                            name: Label [6716,6721]
                                            operator: :: [6721,6723]
                                            name: Distance [6723,6731]
                                    name: distance [6732,6740]
                        block [6742,6838]
                            block_content [6746,6836]
                                decl_stmt [6746,6766]
                                    decl [6746,6765]
                                        type [6746,6748]
                                            name: __ [6746,6748]
                                        name: AssertSmi [6749,6758]
                                        argument_list [6758,6765]
                                            argument [6759,6764]
                                                expr [6759,6764]
                                                    name: value [6759,6764]
                                decl_stmt [6769,6836]
                                    decl [6769,6835]
                                        type [6769,6771]
                                            name: __ [6769,6771]
                                        name: CompareTaggedAndBranch [6772,6794]
                                        argument_list [6794,6835]
                                            argument [6795,6800]
                                                expr [6795,6800]
                                                    name: value [6795,6800]
                                            argument [6802,6805]
                                                expr [6802,6805]
                                                    name: smi [6802,6805]
                                            argument [6807,6826]
                                                expr [6807,6826]
                                                    call [6807,6826]
                                                        name: AsMasmCondition [6807,6822]
                                                        argument_list [6822,6826]
                                                            argument [6823,6825]
                                                                expr [6823,6825]
                                                                    name: cc [6823,6825]
                                            argument [6828,6834]
                                                expr [6828,6834]
                                                    name: target [6828,6834]
                    function [6840,7095]
                        type [6840,6844]
                            name: void [6840,6844]
                        name [6845,6873]
                            name: BaselineAssembler [6845,6862]
                            operator: :: [6862,6864]
                            name: JumpIfSmi [6864,6873]
                        parameter_list [6873,6981]
                            parameter [6874,6886]
                                decl [6874,6886]
                                    type [6874,6886]
                                        name: Condition [6874,6883]
                                    name: cc [6884,6886]
                            parameter [6888,6900]
                                decl [6888,6900]
                                    type [6888,6900]
                                        name: Register [6888,6896]
                                    name: lhs [6897,6900]
                            parameter [6902,6914]
                                decl [6902,6914]
                                    type [6902,6914]
                                        name: Register [6902,6910]
                                    name: rhs [6911,6914]
                            parameter [6950,6963]
                                decl [6950,6963]
                                    type [6950,6963]
                                        name: Label [6950,6955]
                                        modifier: * [6955,6956]
                                    name: target [6957,6963]
                            parameter [6965,6980]
                                decl [6965,6980]
                                    type [6965,6980]
                                        name [6965,6980]
                                            name: Label [6965,6970]
                                            operator: :: [6970,6972]
                                            name: Distance [6972,6980]
                        block [6982,7095]
                            block_content [6986,7093]
                                decl_stmt [6986,7004]
                                    decl [6986,7003]
                                        type [6986,6988]
                                            name: __ [6986,6988]
                                        name: AssertSmi [6989,6998]
                                        argument_list [6998,7003]
                                            argument [6999,7002]
                                                expr [6999,7002]
                                                    name: lhs [6999,7002]
                                decl_stmt [7007,7025]
                                    decl [7007,7024]
                                        type [7007,7009]
                                            name: __ [7007,7009]
                                        name: AssertSmi [7010,7019]
                                        argument_list [7019,7024]
                                            argument [7020,7023]
                                                expr [7020,7023]
                                                    name: rhs [7020,7023]
                                decl_stmt [7028,7093]
                                    decl [7028,7092]
                                        type [7028,7030]
                                            name: __ [7028,7030]
                                        name: CompareTaggedAndBranch [7031,7053]
                                        argument_list [7053,7092]
                                            argument [7054,7057]
                                                expr [7054,7057]
                                                    name: lhs [7054,7057]
                                            argument [7059,7062]
                                                expr [7059,7062]
                                                    name: rhs [7059,7062]
                                            argument [7064,7083]
                                                expr [7064,7083]
                                                    call [7064,7083]
                                                        name: AsMasmCondition [7064,7079]
                                                        argument_list [7079,7083]
                                                            argument [7080,7082]
                                                                expr [7080,7082]
                                                                    name: cc [7080,7082]
                                            argument [7085,7091]
                                                expr [7085,7091]
                                                    name: target [7085,7091]
                    function [7096,7463]
                        type [7096,7100]
                            name: void [7096,7100]
                        name [7101,7132]
                            name: BaselineAssembler [7101,7118]
                            operator: :: [7118,7120]
                            name: JumpIfTagged [7120,7132]
                        parameter_list [7132,7288]
                            parameter [7133,7145]
                                decl [7133,7145]
                                    type [7133,7145]
                                        name: Condition [7133,7142]
                                    name: cc [7143,7145]
                            parameter [7147,7161]
                                decl [7147,7161]
                                    type [7147,7161]
                                        name: Register [7147,7155]
                                    name: value [7156,7161]
                            parameter [7200,7218]
                                decl [7200,7218]
                                    type [7200,7218]
                                        name: MemOperand [7200,7210]
                                    name: operand [7211,7218]
                            parameter [7220,7233]
                                decl [7220,7233]
                                    type [7220,7233]
                                        name: Label [7220,7225]
                                        modifier: * [7225,7226]
                                    name: target [7227,7233]
                            parameter [7272,7287]
                                decl [7272,7287]
                                    type [7272,7287]
                                        name [7272,7287]
                                            name: Label [7272,7277]
                                            operator: :: [7277,7279]
                                            name: Distance [7279,7287]
                        block [7289,7463]
                            block_content [7293,7461]
                                decl_stmt [7293,7326]
                                    decl [7293,7325]
                                        type [7293,7313]
                                            name: ScratchRegisterScope [7293,7313]
                                        name: temps [7314,7319]
                                        argument_list [7319,7325]
                                            argument [7320,7324]
                                                expr [7320,7324]
                                                    name: this [7320,7324]
                                decl_stmt [7329,7367]
                                    decl [7329,7366]
                                        type [7329,7337]
                                            name: Register [7329,7337]
                                        name: tmp [7338,7341]
                                        init [7342,7366]
                                            expr [7344,7366]
                                                call [7344,7366]
                                                    name [7344,7364]
                                                        name: temps [7344,7349]
                                                        operator: . [7349,7350]
                                                        name: AcquireScratch [7350,7364]
                                                    argument_list [7364,7366]
                                decl_stmt [7370,7391]
                                    decl [7370,7390]
                                        type [7370,7372]
                                            name: __ [7370,7372]
                                        name: Ldr [7373,7376]
                                        argument_list [7376,7390]
                                            argument [7377,7380]
                                                expr [7377,7380]
                                                    name: tmp [7377,7380]
                                            argument [7382,7389]
                                                expr [7382,7389]
                                                    name: operand [7382,7389]
                                decl_stmt [7394,7461]
                                    decl [7394,7460]
                                        type [7394,7396]
                                            name: __ [7394,7396]
                                        name: CompareTaggedAndBranch [7397,7419]
                                        argument_list [7419,7460]
                                            argument [7420,7425]
                                                expr [7420,7425]
                                                    name: value [7420,7425]
                                            argument [7427,7430]
                                                expr [7427,7430]
                                                    name: tmp [7427,7430]
                                            argument [7432,7451]
                                                expr [7432,7451]
                                                    call [7432,7451]
                                                        name: AsMasmCondition [7432,7447]
                                                        argument_list [7447,7451]
                                                            argument [7448,7450]
                                                                expr [7448,7450]
                                                                    name: cc [7448,7450]
                                            argument [7453,7459]
                                                expr [7453,7459]
                                                    name: target [7453,7459]
                    function [7464,7831]
                        type [7464,7468]
                            name: void [7464,7468]
                        name [7469,7500]
                            name: BaselineAssembler [7469,7486]
                            operator: :: [7486,7488]
                            name: JumpIfTagged [7488,7500]
                        parameter_list [7500,7656]
                            parameter [7501,7513]
                                decl [7501,7513]
                                    type [7501,7513]
                                        name: Condition [7501,7510]
                                    name: cc [7511,7513]
                            parameter [7515,7533]
                                decl [7515,7533]
                                    type [7515,7533]
                                        name: MemOperand [7515,7525]
                                    name: operand [7526,7533]
                            parameter [7572,7586]
                                decl [7572,7586]
                                    type [7572,7586]
                                        name: Register [7572,7580]
                                    name: value [7581,7586]
                            parameter [7588,7601]
                                decl [7588,7601]
                                    type [7588,7601]
                                        name: Label [7588,7593]
                                        modifier: * [7593,7594]
                                    name: target [7595,7601]
                            parameter [7640,7655]
                                decl [7640,7655]
                                    type [7640,7655]
                                        name [7640,7655]
                                            name: Label [7640,7645]
                                            operator: :: [7645,7647]
                                            name: Distance [7647,7655]
                        block [7657,7831]
                            block_content [7661,7829]
                                decl_stmt [7661,7694]
                                    decl [7661,7693]
                                        type [7661,7681]
                                            name: ScratchRegisterScope [7661,7681]
                                        name: temps [7682,7687]
                                        argument_list [7687,7693]
                                            argument [7688,7692]
                                                expr [7688,7692]
                                                    name: this [7688,7692]
                                decl_stmt [7697,7735]
                                    decl [7697,7734]
                                        type [7697,7705]
                                            name: Register [7697,7705]
                                        name: tmp [7706,7709]
                                        init [7710,7734]
                                            expr [7712,7734]
                                                call [7712,7734]
                                                    name [7712,7732]
                                                        name: temps [7712,7717]
                                                        operator: . [7717,7718]
                                                        name: AcquireScratch [7718,7732]
                                                    argument_list [7732,7734]
                                decl_stmt [7738,7759]
                                    decl [7738,7758]
                                        type [7738,7740]
                                            name: __ [7738,7740]
                                        name: Ldr [7741,7744]
                                        argument_list [7744,7758]
                                            argument [7745,7748]
                                                expr [7745,7748]
                                                    name: tmp [7745,7748]
                                            argument [7750,7757]
                                                expr [7750,7757]
                                                    name: operand [7750,7757]
                                decl_stmt [7762,7829]
                                    decl [7762,7828]
                                        type [7762,7764]
                                            name: __ [7762,7764]
                                        name: CompareTaggedAndBranch [7765,7787]
                                        argument_list [7787,7828]
                                            argument [7788,7791]
                                                expr [7788,7791]
                                                    name: tmp [7788,7791]
                                            argument [7793,7798]
                                                expr [7793,7798]
                                                    name: value [7793,7798]
                                            argument [7800,7819]
                                                expr [7800,7819]
                                                    call [7800,7819]
                                                        name: AsMasmCondition [7800,7815]
                                                        argument_list [7815,7819]
                                                            argument [7816,7818]
                                                                expr [7816,7818]
                                                                    name: cc [7816,7818]
                                            argument [7821,7827]
                                                expr [7821,7827]
                                                    name: target [7821,7827]
                    function [7832,8027]
                        type [7832,7836]
                            name: void [7832,7836]
                        name [7837,7866]
                            name: BaselineAssembler [7837,7854]
                            operator: :: [7854,7856]
                            name: JumpIfByte [7856,7866]
                        parameter_list [7866,7977]
                            parameter [7867,7879]
                                decl [7867,7879]
                                    type [7867,7879]
                                        name: Condition [7867,7876]
                                    name: cc [7877,7879]
                            parameter [7881,7895]
                                decl [7881,7895]
                                    type [7881,7895]
                                        name: Register [7881,7889]
                                    name: value [7890,7895]
                            parameter [7897,7909]
                                decl [7897,7909]
                                    type [7897,7909]
                                        name: int32_t [7897,7904]
                                    name: byte [7905,7909]
                            parameter [7946,7959]
                                decl [7946,7959]
                                    type [7946,7959]
                                        name: Label [7946,7951]
                                        modifier: * [7951,7952]
                                    name: target [7953,7959]
                            parameter [7961,7976]
                                decl [7961,7976]
                                    type [7961,7976]
                                        name [7961,7976]
                                            name: Label [7961,7966]
                                            operator: :: [7966,7968]
                                            name: Distance [7968,7976]
                        block [7978,8027]
                            block_content [7982,8025]
                                expr_stmt [7982,8025]
                                    expr [7982,8024]
                                        call [7982,8024]
                                            name: JumpIf [7982,7988]
                                            argument_list [7988,8024]
                                                argument [7989,7991]
                                                    expr [7989,7991]
                                                        name: cc [7989,7991]
                                                argument [7993,7998]
                                                    expr [7993,7998]
                                                        name: value [7993,7998]
                                                argument [8000,8015]
                                                    expr [8000,8015]
                                                        call [8000,8015]
                                                            name: Immediate [8000,8009]
                                                            argument_list [8009,8015]
                                                                argument [8010,8014]
                                                                    expr [8010,8014]
                                                                        name: byte [8010,8014]
                                                argument [8017,8023]
                                                    expr [8017,8023]
                                                        name: target [8017,8023]
                    function [8029,8154]
                        type [8029,8033]
                            name: void [8029,8033]
                        name [8034,8057]
                            name: BaselineAssembler [8034,8051]
                            operator: :: [8051,8053]
                            name: Move [8053,8057]
                        parameter_list [8057,8104]
                            parameter [8058,8086]
                                decl [8058,8086]
                                    type [8058,8086]
                                        name [8058,8079]
                                            name: interpreter [8058,8069]
                                            operator: :: [8069,8071]
                                            name: Register [8071,8079]
                                    name: output [8080,8086]
                            parameter [8088,8103]
                                decl [8088,8103]
                                    type [8088,8103]
                                        name: Register [8088,8096]
                                    name: source [8097,8103]
                        block [8105,8154]
                            block_content [8109,8152]
                                expr_stmt [8109,8152]
                                    expr [8109,8151]
                                        call [8109,8151]
                                            name: Move [8109,8113]
                                            argument_list [8113,8151]
                                                argument [8114,8142]
                                                    expr [8114,8142]
                                                        call [8114,8142]
                                                            name: RegisterFrameOperand [8114,8134]
                                                            argument_list [8134,8142]
                                                                argument [8135,8141]
                                                                    expr [8135,8141]
                                                                        name: output [8135,8141]
                                                argument [8144,8150]
                                                    expr [8144,8150]
                                                        name: source [8144,8150]
                    function [8155,8265]
                        type [8155,8159]
                            name: void [8155,8159]
                        name [8160,8183]
                            name: BaselineAssembler [8160,8177]
                            operator: :: [8177,8179]
                            name: Move [8179,8183]
                        parameter_list [8183,8219]
                            parameter [8184,8199]
                                decl [8184,8199]
                                    type [8184,8199]
                                        name: Register [8184,8192]
                                    name: output [8193,8199]
                            parameter [8201,8218]
                                decl [8201,8218]
                                    type [8201,8218]
                                        name: TaggedIndex [8201,8212]
                                    name: value [8213,8218]
                        block [8220,8265]
                            block_content [8224,8263]
                                decl_stmt [8224,8263]
                                    decl [8224,8262]
                                        type [8224,8226]
                                            name: __ [8224,8226]
                                        name: Mov [8227,8230]
                                        argument_list [8230,8262]
                                            argument [8231,8237]
                                                expr [8231,8237]
                                                    name: output [8231,8237]
                                            argument [8239,8261]
                                                expr [8239,8261]
                                                    call [8239,8261]
                                                        name: Immediate [8239,8248]
                                                        argument_list [8248,8261]
                                                            argument [8249,8260]
                                                                expr [8249,8260]
                                                                    call [8249,8260]
                                                                        name [8249,8258]
                                                                            name: value [8249,8254]
                                                                            operator: . [8254,8255]
                                                                            name: ptr [8255,8258]
                                                                        argument_list [8258,8260]
                    function [8266,8360]
                        type [8266,8270]
                            name: void [8266,8270]
                        name [8271,8294]
                            name: BaselineAssembler [8271,8288]
                            operator: :: [8288,8290]
                            name: Move [8290,8294]
                        parameter_list [8294,8330]
                            parameter [8295,8312]
                                decl [8295,8312]
                                    type [8295,8312]
                                        name: MemOperand [8295,8305]
                                    name: output [8306,8312]
                            parameter [8314,8329]
                                decl [8314,8329]
                                    type [8314,8329]
                                        name: Register [8314,8322]
                                    name: source [8323,8329]
                        block [8331,8360]
                            block_content [8335,8358]
                                decl_stmt [8335,8358]
                                    decl [8335,8357]
                                        type [8335,8337]
                                            name: __ [8335,8337]
                                        name: Str [8338,8341]
                                        argument_list [8341,8357]
                                            argument [8342,8348]
                                                expr [8342,8348]
                                                    name: source [8342,8348]
                                            argument [8350,8356]
                                                expr [8350,8356]
                                                    name: output [8350,8356]
                    function [8361,8477]
                        type [8361,8365]
                            name: void [8361,8365]
                        name [8366,8389]
                            name: BaselineAssembler [8366,8383]
                            operator: :: [8383,8385]
                            name: Move [8385,8389]
                        parameter_list [8389,8435]
                            parameter [8390,8405]
                                decl [8390,8405]
                                    type [8390,8405]
                                        name: Register [8390,8398]
                                    name: output [8399,8405]
                            parameter [8407,8434]
                                decl [8407,8434]
                                    type [8407,8434]
                                        name: ExternalReference [8407,8424]
                                    name: reference [8425,8434]
                        block [8436,8477]
                            block_content [8440,8475]
                                decl_stmt [8440,8475]
                                    decl [8440,8474]
                                        type [8440,8442]
                                            name: __ [8440,8442]
                                        name: Mov [8443,8446]
                                        argument_list [8446,8474]
                                            argument [8447,8453]
                                                expr [8447,8453]
                                                    name: output [8447,8453]
                                            argument [8455,8473]
                                                expr [8455,8473]
                                                    call [8455,8473]
                                                        name: Operand [8455,8462]
                                                        argument_list [8462,8473]
                                                            argument [8463,8472]
                                                                expr [8463,8472]
                                                                    name: reference [8463,8472]
                    function [8478,8587]
                        type [8478,8482]
                            name: void [8478,8482]
                        name [8483,8506]
                            name: BaselineAssembler [8483,8500]
                            operator: :: [8500,8502]
                            name: Move [8502,8506]
                        parameter_list [8506,8549]
                            parameter [8507,8522]
                                decl [8507,8522]
                                    type [8507,8522]
                                        name: Register [8507,8515]
                                    name: output [8516,8522]
                            parameter [8524,8548]
                                decl [8524,8548]
                                    type [8524,8548]
                                        name [8524,8542]
                                            name: Handle [8524,8530]
                                            argument_list [8530,8542]
                                                argument [8531,8541]
                                                    name: HeapObject [8531,8541]
                                    name: value [8543,8548]
                        block [8550,8587]
                            block_content [8554,8585]
                                decl_stmt [8554,8585]
                                    decl [8554,8584]
                                        type [8554,8556]
                                            name: __ [8554,8556]
                                        name: Mov [8557,8560]
                                        argument_list [8560,8584]
                                            argument [8561,8567]
                                                expr [8561,8567]
                                                    name: output [8561,8567]
                                            argument [8569,8583]
                                                expr [8569,8583]
                                                    call [8569,8583]
                                                        name: Operand [8569,8576]
                                                        argument_list [8576,8583]
                                                            argument [8577,8582]
                                                                expr [8577,8582]
                                                                    name: value [8577,8582]
                    function [8588,8688]
                        type [8588,8592]
                            name: void [8588,8592]
                        name [8593,8616]
                            name: BaselineAssembler [8593,8610]
                            operator: :: [8610,8612]
                            name: Move [8612,8616]
                        parameter_list [8616,8648]
                            parameter [8617,8632]
                                decl [8617,8632]
                                    type [8617,8632]
                                        name: Register [8617,8625]
                                    name: output [8626,8632]
                            parameter [8634,8647]
                                decl [8634,8647]
                                    type [8634,8647]
                                        name: int32_t [8634,8641]
                                    name: value [8642,8647]
                        block [8649,8688]
                            block_content [8653,8686]
                                decl_stmt [8653,8686]
                                    decl [8653,8685]
                                        type [8653,8655]
                                            name: __ [8653,8655]
                                        name: Mov [8656,8659]
                                        argument_list [8659,8685]
                                            argument [8660,8666]
                                                expr [8660,8666]
                                                    name: output [8660,8666]
                                            argument [8668,8684]
                                                expr [8668,8684]
                                                    call [8668,8684]
                                                        name: Immediate [8668,8677]
                                                        argument_list [8677,8684]
                                                            argument [8678,8683]
                                                                expr [8678,8683]
                                                                    name: value [8678,8683]
                    function [8689,8789]
                        type [8689,8693]
                            name: void [8689,8693]
                        name [8694,8725]
                            name: BaselineAssembler [8694,8711]
                            operator: :: [8711,8713]
                            name: MoveMaybeSmi [8713,8725]
                        parameter_list [8725,8759]
                            parameter [8726,8741]
                                decl [8726,8741]
                                    type [8726,8741]
                                        name: Register [8726,8734]
                                    name: output [8735,8741]
                            parameter [8743,8758]
                                decl [8743,8758]
                                    type [8743,8758]
                                        name: Register [8743,8751]
                                    name: source [8752,8758]
                        block [8760,8789]
                            block_content [8764,8787]
                                decl_stmt [8764,8787]
                                    decl [8764,8786]
                                        type [8764,8766]
                                            name: __ [8764,8766]
                                        name: Mov [8767,8770]
                                        argument_list [8770,8786]
                                            argument [8771,8777]
                                                expr [8771,8777]
                                                    name: output [8771,8777]
                                            argument [8779,8785]
                                                expr [8779,8785]
                                                    name: source [8779,8785]
                    function [8790,8885]
                        type [8790,8794]
                            name: void [8790,8794]
                        name [8795,8821]
                            name: BaselineAssembler [8795,8812]
                            operator: :: [8812,8814]
                            name: MoveSmi [8814,8821]
                        parameter_list [8821,8855]
                            parameter [8822,8837]
                                decl [8822,8837]
                                    type [8822,8837]
                                        name: Register [8822,8830]
                                    name: output [8831,8837]
                            parameter [8839,8854]
                                decl [8839,8854]
                                    type [8839,8854]
                                        name: Register [8839,8847]
                                    name: source [8848,8854]
                        block [8856,8885]
                            block_content [8860,8883]
                                decl_stmt [8860,8883]
                                    decl [8860,8882]
                                        type [8860,8862]
                                            name: __ [8860,8862]
                                        name: Mov [8863,8866]
                                        argument_list [8866,8882]
                                            argument [8867,8873]
                                                expr [8867,8873]
                                                    name: output [8867,8873]
                                            argument [8875,8881]
                                                expr [8875,8881]
                                                    name: source [8875,8881]
                    namespace [8887,9492]
                        name: detail [8897,8903]
                        block [8904,9492]
                            function [8907,9177]
                                type [8907,8946]
                                    name [8907,8930]
                                        name: template [8907,8915]
                                        argument_list [8916,8930]
                                            argument [8917,8929]
                                                name: typename [8917,8925]
                                                name: Arg [8926,8929]
                                    specifier: inline [8931,8937]
                                    name: Register [8938,8946]
                                name: ToRegister [8947,8957]
                                parameter_list [8957,9093]
                                    parameter [8958,8981]
                                        decl [8958,8981]
                                            type [8958,8981]
                                                name: BaselineAssembler [8958,8975]
                                                modifier: * [8975,8976]
                                            name: basm [8977,8981]
                                    parameter [9010,9056]
                                        decl [9010,9056]
                                            type [9010,9056]
                                                name [9010,9049]
                                                    name: BaselineAssembler [9010,9027]
                                                    operator: :: [9027,9029]
                                                    name: ScratchRegisterScope [9029,9049]
                                                modifier: * [9049,9050]
                                            name: scope [9051,9056]
                                    parameter [9085,9092]
                                        decl [9085,9092]
                                            type [9085,9092]
                                                name: Arg [9085,9088]
                                            name: arg [9089,9092]
                                block [9094,9177]
                                    block_content [9098,9175]
                                        decl_stmt [9098,9137]
                                            decl [9098,9136]
                                                type [9098,9106]
                                                    name: Register [9098,9106]
                                                name: reg [9107,9110]
                                                init [9111,9136]
                                                    expr [9113,9136]
                                                        call [9113,9136]
                                                            name [9113,9134]
                                                                name: scope [9113,9118]
                                                                operator: -> [9118,9120]
                                                                name: AcquireScratch [9120,9134]
                                                            argument_list [9134,9136]
                                        expr_stmt [9140,9161]
                                            expr [9140,9160]
                                                call [9140,9160]
                                                    name [9140,9150]
                                                        name: basm [9140,9144]
                                                        operator: -> [9144,9146]
                                                        name: Move [9146,9150]
                                                    argument_list [9150,9160]
                                                        argument [9151,9154]
                                                            expr [9151,9154]
                                                                name: reg [9151,9154]
                                                        argument [9156,9159]
                                                            expr [9156,9159]
                                                                name: arg [9156,9159]
                                        return [9164,9175]
                                            expr [9171,9174]
                                                name: reg [9171,9174]
                            function [9178,9363]
                                type [9178,9193]
                                    specifier: inline [9178,9184]
                                    name: Register [9185,9193]
                                name: ToRegister [9194,9204]
                                parameter_list [9204,9345]
                                    parameter [9205,9228]
                                        decl [9205,9228]
                                            type [9205,9228]
                                                name: BaselineAssembler [9205,9222]
                                                modifier: * [9222,9223]
                                            name: basm [9224,9228]
                                    parameter [9257,9303]
                                        decl [9257,9303]
                                            type [9257,9303]
                                                name [9257,9296]
                                                    name: BaselineAssembler [9257,9274]
                                                    operator: :: [9274,9276]
                                                    name: ScratchRegisterScope [9276,9296]
                                                modifier: * [9296,9297]
                                            name: scope [9298,9303]
                                    parameter [9332,9344]
                                        decl [9332,9344]
                                            type [9332,9344]
                                                name: Register [9332,9340]
                                            name: reg [9341,9344]
                                block [9346,9363]
                                    block_content [9350,9361]
                                        return [9350,9361]
                                            expr [9357,9360]
                                                name: reg [9357,9360]
                            macro [9365,9373]
                                name: template [9365,9373]
                            expr_stmt [9374,9416]
                                expr [9374,9415]
                                    operator: < [9374,9375]
                                    name: typename [9375,9383]
                                    operator: ... [9383,9386]
                                    name: Args [9387,9391]
                                    operator: > [9391,9392]
                                    name: CountPushHelper [9400,9415]
                            macro [9417,9425]
                                name: template [9417,9425]
                            expr_stmt [9426,9490]
                                expr [9426,9490]
                                    operator: < [9426,9427]
                                    operator: > [9427,9428]
                                    name [9436,9453]
                                        name: CountPushHelper [9436,9451]
                                        argument_list [9451,9453]
                                    block [9454,9490]
                                        expr [9458,9488]
                                            specifier: static [9458,9464]
                                            name: int [9465,9468]
                                            macro [9469,9476]
                                                name: Count [9469,9474]
                                                argument_list [9474,9476]
                                            block [9477,9488]
                                                return [9479,9488]
                                                    expr [9486,9487]
                                                        literal: 0 [9486,9487]
                    empty_stmt [9492,9493]
                    macro [9494,9502]
                        name: template [9494,9502]
                    expr_stmt [9503,9679]
                        expr [9503,9516]
                            operator: < [9503,9504]
                            name: typename [9504,9512]
                            name: Arg [9513,9516]
                        operator: , [9516,9517]
                        expr [9518,9679]
                            name: typename [9518,9526]
                            operator: ... [9526,9529]
                            name: Args [9530,9534]
                            operator: > [9534,9535]
                            name [9543,9572]
                                name: CountPushHelper [9543,9558]
                                argument_list [9558,9572]
                                    argument [9559,9562]
                                        name: Arg [9559,9562]
                                    argument [9564,9571]
                                        name: Args [9564,9568]
                                        modifier: ... [9568,9571]
                            block [9573,9679]
                                expr [9577,9675]
                                    specifier: static [9577,9583]
                                    name: int [9584,9587]
                                    macro [9588,9616]
                                        name: Count [9588,9593]
                                        argument_list [9593,9616]
                                            argument [9594,9601]
                                            argument [9603,9615]
                                    block [9617,9675]
                                        return [9623,9675]
                                            expr [9630,9674]
                                                literal: 1 [9630,9633]
                                                operator: + [9632,9633]
                                                call [9634,9674]
                                                    name [9634,9665]
                                                        name [9634,9658]
                                                            name: CountPushHelper [9634,9649]
                                                            argument_list [9649,9658]
                                                                argument [9650,9657]
                                                                    name: Args [9650,9654]
                                                                    modifier: ... [9654,9657]
                                                        operator: :: [9658,9660]
                                                        name: Count [9660,9665]
                                                    argument_list [9665,9674]
                                                        argument [9666,9673]
                                                            expr [9666,9673]
                                                                name: args [9666,9670]
                                                                operator: ... [9670,9673]
            empty_stmt [9681,9682]
            macro [9683,9691]
                name: template [9683,9691]
            expr_stmt [9692,9919]
                expr [9692,9919]
                    operator: < [9692,9693]
                    name: typename [9693,9701]
                    operator: ... [9701,9704]
                    name: Args [9705,9709]
                    operator: > [9709,9710]
                    name [9718,9769]
                        name: CountPushHelper [9718,9733]
                        argument_list [9733,9769]
                            argument [9734,9759]
                                name [9734,9759]
                                    name: interpreter [9734,9745]
                                    operator: :: [9745,9747]
                                    name: RegisterList [9747,9759]
                            argument [9761,9768]
                                name: Args [9761,9765]
                                modifier: ... [9765,9768]
                    block [9770,9919]
                        expr [9774,9915]
                            specifier: static [9774,9780]
                            name: int [9781,9784]
                            macro [9785,9836]
                                name: Count [9785,9790]
                                argument_list [9790,9836]
                                    argument [9791,9821]
                                    argument [9823,9835]
                            block [9837,9915]
                                return [9843,9915]
                                    expr [9850,9914]
                                        call [9850,9871]
                                            name [9850,9869]
                                                name: list [9850,9854]
                                                operator: . [9854,9855]
                                                name: register_count [9855,9869]
                                            argument_list [9869,9871]
                                        operator: + [9872,9873]
                                        call [9874,9914]
                                            name [9874,9905]
                                                name [9874,9898]
                                                    name: CountPushHelper [9874,9889]
                                                    argument_list [9889,9898]
                                                        argument [9890,9897]
                                                            name: Args [9890,9894]
                                                            modifier: ... [9894,9897]
                                                operator: :: [9898,9900]
                                                name: Count [9900,9905]
                                            argument_list [9905,9914]
                                                argument [9906,9913]
                                                    expr [9906,9913]
                                                        name: args [9906,9910]
                                                        operator: ... [9910,9913]
    empty_stmt [9921,9922]
    macro [9924,9932]
        name: template [9924,9932]
    expr_stmt [9933,9973]
        expr [9933,9972]
            operator: < [9933,9934]
            name: typename [9934,9942]
            operator: ... [9942,9945]
            name: Args [9946,9950]
            operator: > [9950,9951]
            name: PushAllHelper [9959,9972]
    function [9974,10111]
        type [9974,10013]
            name [9974,10001]
                name: template [9974,9982]
                argument_list [9983,10001]
                    argument [9984,10000]
                        name: typename [9984,9992]
                        modifier: ... [9992,9995]
                        name: Args [9996,10000]
            specifier: inline [10002,10008]
            name: void [10009,10013]
        name: PushAll [10014,10021]
        parameter_list [10021,10060]
            parameter [10022,10045]
                decl [10022,10045]
                    type [10022,10045]
                        name: BaselineAssembler [10022,10039]
                        modifier: * [10039,10040]
                    name: basm [10041,10045]
            parameter [10047,10059]
                decl [10047,10059]
                    type [10047,10059]
                        name: Args [10047,10051]
                        modifier: ... [10051,10054]
                    name: args [10055,10059]
        block [10061,10111]
            block_content [10065,10109]
                expr_stmt [10065,10109]
                    expr [10065,10108]
                        call [10065,10108]
                            name [10065,10093]
                                name [10065,10087]
                                    name: PushAllHelper [10065,10078]
                                    argument_list [10078,10087]
                                        argument [10079,10086]
                                            name: Args [10079,10083]
                                            modifier: ... [10083,10086]
                                operator: :: [10087,10089]
                                name: Push [10089,10093]
                            argument_list [10093,10108]
                                argument [10094,10098]
                                    expr [10094,10098]
                                        name: basm [10094,10098]
                                argument [10100,10107]
                                    expr [10100,10107]
                                        name: args [10100,10104]
                                        operator: ... [10104,10107]
    function [10112,10263]
        type [10112,10151]
            name [10112,10139]
                name: template [10112,10120]
                argument_list [10121,10139]
                    argument [10122,10138]
                        name: typename [10122,10130]
                        modifier: ... [10130,10133]
                        name: Args [10134,10138]
            specifier: inline [10140,10146]
            name: void [10147,10151]
        name: PushAllReverse [10152,10166]
        parameter_list [10166,10205]
            parameter [10167,10190]
                decl [10167,10190]
                    type [10167,10190]
                        name: BaselineAssembler [10167,10184]
                        modifier: * [10184,10185]
                    name: basm [10186,10190]
            parameter [10192,10204]
                decl [10192,10204]
                    type [10192,10204]
                        name: Args [10192,10196]
                        modifier: ... [10196,10199]
                    name: args [10200,10204]
        block [10206,10263]
            block_content [10210,10261]
                expr_stmt [10210,10261]
                    expr [10210,10260]
                        call [10210,10260]
                            name [10210,10245]
                                name [10210,10232]
                                    name: PushAllHelper [10210,10223]
                                    argument_list [10223,10232]
                                        argument [10224,10231]
                                            name: Args [10224,10228]
                                            modifier: ... [10228,10231]
                                operator: :: [10232,10234]
                                name: PushReverse [10234,10245]
                            argument_list [10245,10260]
                                argument [10246,10250]
                                    expr [10246,10250]
                                        name: basm [10246,10250]
                                argument [10252,10259]
                                    expr [10252,10259]
                                        name: args [10252,10256]
                                        operator: ... [10256,10259]
    macro [10265,10273]
        name: template [10265,10273]
    expr_stmt [10274,10405]
        expr [10274,10404]
            operator: < [10274,10275]
            operator: > [10275,10276]
            name [10284,10299]
                name: PushAllHelper [10284,10297]
                argument_list [10297,10299]
            block [10300,10404]
                expr [10304,10402]
                    specifier: static [10304,10310]
                    name: void [10311,10315]
                    macro [10316,10345]
                        name: Push [10316,10320]
                        argument_list [10320,10345]
                            argument [10321,10344]
                    block [10346,10348]
                    specifier: static [10351,10357]
                    name: void [10358,10362]
                    macro [10363,10399]
                        name: PushReverse [10363,10374]
                        argument_list [10374,10399]
                            argument [10375,10398]
                    block [10400,10402]
    macro [10406,10414]
        name: template [10406,10414]
    expr_stmt [10415,10721]
        expr [10415,10721]
            operator: < [10415,10416]
            name: typename [10416,10424]
            name: Arg [10425,10428]
            operator: > [10428,10429]
            name [10437,10455]
                name: PushAllHelper [10437,10450]
                argument_list [10450,10455]
                    argument [10451,10454]
                        name: Arg [10451,10454]
            block [10456,10721]
                expr [10460,10717]
                    specifier: static [10460,10466]
                    name: void [10467,10471]
                    macro [10472,10506]
                        name: Push [10472,10476]
                        argument_list [10476,10506]
                            argument [10477,10500]
                            argument [10502,10505]
                    block [10507,10535]
                        expr [10509,10532]
                            call [10509,10532]
                                name: FATAL [10509,10514]
                                argument_list [10514,10532]
                                    argument [10515,10531]
                                        expr [10515,10531]
                                            literal: "Unaligned push" [10515,10531]
                    specifier: static [10538,10544]
                    name: void [10545,10549]
                    macro [10550,10595]
                        name: PushReverse [10550,10561]
                        argument_list [10561,10595]
                            argument [10562,10585]
                            argument [10587,10594]
                    block [10596,10717]
                        comment: // Push the padding register to round up the amount of values pushed. [10602,10671]
                        return [10676,10717]
                            expr [10683,10716]
                                call [10683,10716]
                                    name: PushAllReverse [10683,10697]
                                    argument_list [10697,10716]
                                        argument [10698,10702]
                                            expr [10698,10702]
                                                name: basm [10698,10702]
                                        argument [10704,10707]
                                            expr [10704,10707]
                                                name: arg [10704,10707]
                                        argument [10709,10715]
                                            expr [10709,10715]
                                                name: padreg [10709,10715]
    macro [10725,10733]
        name: template [10725,10733]
    expr_stmt [10734,11488]
        expr [10734,10748]
            operator: < [10734,10735]
            name: typename [10735,10743]
            name: Arg1 [10744,10748]
        operator: , [10748,10749]
        expr [10750,10763]
            name: typename [10750,10758]
            name: Arg2 [10759,10763]
        operator: , [10763,10764]
        expr [10765,11487]
            name: typename [10765,10773]
            operator: ... [10773,10776]
            name: Args [10777,10781]
            operator: > [10781,10782]
            name [10790,10824]
                name: PushAllHelper [10790,10803]
                argument_list [10803,10824]
                    argument [10804,10808]
                        name: Arg1 [10804,10808]
                    argument [10810,10814]
                        name: Arg2 [10810,10814]
                    argument [10816,10823]
                        name: Args [10816,10820]
                        modifier: ... [10820,10823]
            block [10825,11487]
                expr [10829,11485]
                    specifier: static [10829,10835]
                    name: void [10836,10840]
                    macro [10841,10925]
                        name: Push [10841,10845]
                        argument_list [10845,10925]
                            argument [10846,10869]
                            argument [10871,10880]
                            argument [10882,10891]
                            argument [10912,10924]
                    block [10926,11145]
                        expr [10932,11140]
                            block [10932,11113]
                                expr [10940,10991]
                                    name [10940,10979]
                                        name: BaselineAssembler [10940,10957]
                                        operator: :: [10957,10959]
                                        name: ScratchRegisterScope [10959,10979]
                                    call [10980,10991]
                                        name: scope [10980,10985]
                                        argument_list [10985,10991]
                                            argument [10986,10990]
                                                expr [10986,10990]
                                                    name: basm [10986,10990]
                                expr [10999,11106]
                                    call [10999,11011]
                                        name [10999,11009]
                                            name: basm [10999,11003]
                                            operator: -> [11003,11005]
                                            name: masm [11005,11009]
                                        argument_list [11009,11011]
                                    operator: -> [11011,11013]
                                    call [11013,11106]
                                        name: Push [11013,11017]
                                        argument_list [11017,11106]
                                            argument [11018,11048]
                                                expr [11018,11048]
                                                    call [11018,11048]
                                                        name: ToRegister [11018,11028]
                                                        argument_list [11028,11048]
                                                            argument [11029,11033]
                                                                expr [11029,11033]
                                                                    name: basm [11029,11033]
                                                            argument [11035,11041]
                                                                expr [11035,11041]
                                                                    operator: & [11035,11036]
                                                                    name: scope [11036,11041]
                                                            argument [11043,11047]
                                                                expr [11043,11047]
                                                                    name: arg1 [11043,11047]
                                            argument [11075,11105]
                                                expr [11075,11105]
                                                    call [11075,11105]
                                                        name: ToRegister [11075,11085]
                                                        argument_list [11085,11105]
                                                            argument [11086,11090]
                                                                expr [11086,11090]
                                                                    name: basm [11086,11090]
                                                            argument [11092,11098]
                                                                expr [11092,11098]
                                                                    operator: & [11092,11093]
                                                                    name: scope [11093,11098]
                                                            argument [11100,11104]
                                                                expr [11100,11104]
                                                                    name: arg2 [11100,11104]
                            call [11118,11140]
                                name: PushAll [11118,11125]
                                argument_list [11125,11140]
                                    argument [11126,11130]
                                        expr [11126,11130]
                                            name: basm [11126,11130]
                                    argument [11132,11139]
                                        expr [11132,11139]
                                            name: args [11132,11136]
                                            operator: ... [11136,11139]
                    specifier: static [11148,11154]
                    name: void [11155,11159]
                    macro [11160,11258]
                        name: PushReverse [11160,11171]
                        argument_list [11171,11258]
                            argument [11172,11195]
                            argument [11197,11206]
                            argument [11208,11217]
                            argument [11245,11257]
                    block [11259,11485]
                        expr [11265,11294]
                            call [11265,11294]
                                name: PushAllReverse [11265,11279]
                                argument_list [11279,11294]
                                    argument [11280,11284]
                                        expr [11280,11284]
                                            name: basm [11280,11284]
                                    argument [11286,11293]
                                        expr [11286,11293]
                                            name: args [11286,11290]
                                            operator: ... [11290,11293]
                        expr [11300,11481]
                            block [11300,11481]
                                expr [11308,11359]
                                    name [11308,11347]
                                        name: BaselineAssembler [11308,11325]
                                        operator: :: [11325,11327]
                                        name: ScratchRegisterScope [11327,11347]
                                    call [11348,11359]
                                        name: scope [11348,11353]
                                        argument_list [11353,11359]
                                            argument [11354,11358]
                                                expr [11354,11358]
                                                    name: basm [11354,11358]
                                expr [11367,11474]
                                    call [11367,11379]
                                        name [11367,11377]
                                            name: basm [11367,11371]
                                            operator: -> [11371,11373]
                                            name: masm [11373,11377]
                                        argument_list [11377,11379]
                                    operator: -> [11379,11381]
                                    call [11381,11474]
                                        name: Push [11381,11385]
                                        argument_list [11385,11474]
                                            argument [11386,11416]
                                                expr [11386,11416]
                                                    call [11386,11416]
                                                        name: ToRegister [11386,11396]
                                                        argument_list [11396,11416]
                                                            argument [11397,11401]
                                                                expr [11397,11401]
                                                                    name: basm [11397,11401]
                                                            argument [11403,11409]
                                                                expr [11403,11409]
                                                                    operator: & [11403,11404]
                                                                    name: scope [11404,11409]
                                                            argument [11411,11415]
                                                                expr [11411,11415]
                                                                    name: arg2 [11411,11415]
                                            argument [11443,11473]
                                                expr [11443,11473]
                                                    call [11443,11473]
                                                        name: ToRegister [11443,11453]
                                                        argument_list [11453,11473]
                                                            argument [11454,11458]
                                                                expr [11454,11458]
                                                                    name: basm [11454,11458]
                                                            argument [11460,11466]
                                                                expr [11460,11466]
                                                                    operator: & [11460,11461]
                                                                    name: scope [11461,11466]
                                                            argument [11468,11472]
                                                                expr [11468,11472]
                                                                    name: arg1 [11468,11472]
    comment: // Currently RegisterLists are always be the last argument, so we don't [11489,11560]
    comment: // specialize for the case where they're not. We do still specialise for the [11561,11637]
    comment: // aligned and unaligned cases. [11638,11669]
    macro [11670,11678]
        name: template [11670,11678]
    expr_stmt [11679,12220]
        expr [11679,12220]
            operator: < [11679,11680]
            name: typename [11680,11688]
            name: Arg [11689,11692]
            operator: > [11692,11693]
            name [11701,11746]
                name: PushAllHelper [11701,11714]
                argument_list [11714,11746]
                    argument [11715,11718]
                        name: Arg [11715,11718]
                    argument [11720,11745]
                        name [11720,11745]
                            name: interpreter [11720,11731]
                            operator: :: [11731,11733]
                            name: RegisterList [11733,11745]
            block [11747,12220]
                expr [11751,12149]
                    specifier: static [11751,11757]
                    name: void [11758,11762]
                    macro [11763,11852]
                        name: Push [11763,11767]
                        argument_list [11767,11852]
                            argument [11768,11791]
                            argument [11793,11800]
                            argument [11821,11851]
                    block [11853,11952]
                        expr [11859,11898]
                            call [11859,11898]
                                name: DCHECK_EQ [11859,11868]
                                argument_list [11868,11898]
                                    argument [11869,11894]
                                        expr [11869,11894]
                                            call [11869,11890]
                                                name [11869,11888]
                                                    name: list [11869,11873]
                                                    operator: . [11873,11874]
                                                    name: register_count [11874,11888]
                                                argument_list [11888,11890]
                                            operator: % [11891,11892]
                                            literal: 2 [11893,11894]
                                    argument [11896,11897]
                                        expr [11896,11897]
                                            literal: 1 [11896,11897]
                        expr [11904,11947]
                            call [11904,11947]
                                name: PushAll [11904,11911]
                                argument_list [11911,11947]
                                    argument [11912,11916]
                                        expr [11912,11916]
                                            name: basm [11912,11916]
                                    argument [11918,11921]
                                        expr [11918,11921]
                                            name: arg [11918,11921]
                                    argument [11923,11930]
                                        expr [11923,11930]
                                            name [11923,11930]
                                                name: list [11923,11927]
                                                index [11927,11930]
                                                    expr [11928,11929]
                                                        literal: 0 [11928,11929]
                                    argument [11932,11946]
                                        expr [11932,11946]
                                            call [11932,11946]
                                                name [11932,11944]
                                                    name: list [11932,11936]
                                                    operator: . [11936,11937]
                                                    name: PopLeft [11937,11944]
                                                argument_list [11944,11946]
                    specifier: static [11955,11961]
                    name: void [11962,11966]
                    macro [11967,12070]
                        name: PushReverse [11967,11978]
                        argument_list [11978,12070]
                            argument [11979,12002]
                            argument [12004,12011]
                            argument [12039,12069]
                    block [12071,12149]
                        if_stmt [12077,12143]
                            if [12077,12143]
                                condition [12080,12108]
                                    expr [12081,12107]
                                        call [12081,12102]
                                            name [12081,12100]
                                                name: list [12081,12085]
                                                operator: . [12085,12086]
                                                name: register_count [12086,12100]
                                            argument_list [12100,12102]
                                        operator: == [12103,12105]
                                        literal: 0 [12106,12107]
                                block [12109,12143]
                                    block_content [12117,12143]
                                        expr_stmt [12117,12143]
                                            expr [12117,12142]
                                                call [12117,12142]
                                                    name: PushAllReverse [12117,12131]
                                                    argument_list [12131,12142]
                                                        argument [12132,12136]
                                                            expr [12132,12136]
                                                                name: basm [12132,12136]
                                                        argument [12138,12141]
                                                            expr [12138,12141]
                                                                name: arg [12138,12141]
                                        expr_stmt [0,0]
                if_stmt [12150,12214]
                    else [12150,12214]
                        block [12155,12214]
                            block_content [12163,12214]
                                expr_stmt [12163,12214]
                                    expr [12163,12213]
                                        call [12163,12213]
                                            name: PushAllReverse [12163,12177]
                                            argument_list [12177,12213]
                                                argument [12178,12182]
                                                    expr [12178,12182]
                                                        name: basm [12178,12182]
                                                argument [12184,12187]
                                                    expr [12184,12187]
                                                        name: arg [12184,12187]
                                                argument [12189,12196]
                                                    expr [12189,12196]
                                                        name [12189,12196]
                                                            name: list [12189,12193]
                                                            index [12193,12196]
                                                                expr [12194,12195]
                                                                    literal: 0 [12194,12195]
                                                argument [12198,12212]
                                                    expr [12198,12212]
                                                        call [12198,12212]
                                                            name [12198,12210]
                                                                name: list [12198,12202]
                                                                operator: . [12202,12203]
                                                                name: PopLeft [12203,12210]
                                                            argument_list [12210,12212]
                                expr_stmt [0,0]
    empty_stmt [12226,12227]
    macro [12228,12236]
        name: template [12228,12236]
    expr_stmt [12237,12904]
        expr [12237,12904]
            operator: < [12237,12238]
            operator: > [12238,12239]
            name [12247,12287]
                name: PushAllHelper [12247,12260]
                argument_list [12260,12287]
                    argument [12261,12286]
                        name [12261,12286]
                            name: interpreter [12261,12272]
                            operator: :: [12272,12274]
                            name: RegisterList [12274,12286]
            block [12288,12562]
                expr [12292,12558]
                    specifier: static [12292,12298]
                    name: void [12299,12303]
                    macro [12304,12365]
                        name: Push [12304,12308]
                        argument_list [12308,12365]
                            argument [12309,12332]
                            argument [12334,12364]
                    block [12366,12558]
                        expr [12372,12411]
                            call [12372,12411]
                                name: DCHECK_EQ [12372,12381]
                                argument_list [12381,12411]
                                    argument [12382,12407]
                                        expr [12382,12407]
                                            call [12382,12403]
                                                name [12382,12401]
                                                    name: list [12382,12386]
                                                    operator: . [12386,12387]
                                                    name: register_count [12387,12401]
                                                argument_list [12401,12403]
                                            operator: % [12404,12405]
                                            literal: 2 [12406,12407]
                                    argument [12409,12410]
                                        expr [12409,12410]
                                            literal: 0 [12409,12410]
                        for [12417,12552]
                            control [12421,12491]
                                init [12422,12440]
                                    decl [12422,12439]
                                        type [12422,12425]
                                            name: int [12422,12425]
                                        name: reg_index [12426,12435]
                                        init [12436,12439]
                                            expr [12438,12439]
                                                literal: 0 [12438,12439]
                                condition [12441,12475]
                                    expr [12441,12474]
                                        name: reg_index [12441,12450]
                                        operator: < [12451,12452]
                                        call [12453,12474]
                                            name [12453,12472]
                                                name: list [12453,12457]
                                                operator: . [12457,12458]
                                                name: register_count [12458,12472]
                                            argument_list [12472,12474]
                                incr [12476,12490]
                                    expr [12476,12490]
                                        name: reg_index [12476,12485]
                                        operator: += [12486,12488]
                                        literal: 2 [12489,12490]
                            block [12492,12552]
                                block_content [12500,12552]
                                    expr_stmt [12500,12552]
                                        expr [12500,12551]
                                            call [12500,12551]
                                                name: PushAll [12500,12507]
                                                argument_list [12507,12551]
                                                    argument [12508,12512]
                                                        expr [12508,12512]
                                                            name: basm [12508,12512]
                                                    argument [12514,12529]
                                                        expr [12514,12529]
                                                            name [12514,12529]
                                                                name: list [12514,12518]
                                                                index [12518,12529]
                                                                    expr [12519,12528]
                                                                        name: reg_index [12519,12528]
                                                    argument [12531,12550]
                                                        expr [12531,12550]
                                                            name [12531,12550]
                                                                name: list [12531,12535]
                                                                index [12535,12550]
                                                                    expr [12536,12549]
                                                                        name: reg_index [12536,12545]
                                                                        operator: + [12546,12547]
                                                                        literal: 1 [12548,12549]
                                    expr_stmt [0,0]
            specifier: static [12565,12571]
            name: void [12572,12576]
            macro [12577,12671]
                name: PushReverse [12577,12588]
                argument_list [12588,12671]
                    argument [12589,12612]
                    argument [12640,12670]
            block [12672,12904]
                expr [12678,12719]
                    name: int [12678,12681]
                    name: reg_index [12682,12691]
                    operator: = [12692,12693]
                    call [12694,12715]
                        name [12694,12713]
                            name: list [12694,12698]
                            operator: . [12698,12699]
                            name: register_count [12699,12713]
                        argument_list [12713,12715]
                    operator: - [12716,12717]
                    literal: 1 [12718,12719]
                if_stmt [12725,12898]
                    if [12725,12898]
                        condition [12728,12748]
                            expr [12729,12747]
                                name: reg_index [12729,12738]
                                operator: % [12739,12740]
                                literal: 2 [12741,12742]
                                operator: == [12743,12745]
                                literal: 0 [12746,12747]
                        block [12749,12898]
                            block_content [12833,12898]
                                comment: // Push the padding register to round up the amount of values pushed. [12757,12826]
                                expr_stmt [12833,12879]
                                    expr [12833,12878]
                                        call [12833,12878]
                                            name: PushAllReverse [12833,12847]
                                            argument_list [12847,12878]
                                                argument [12848,12852]
                                                    expr [12848,12852]
                                                        name: basm [12848,12852]
                                                argument [12854,12869]
                                                    expr [12854,12869]
                                                        name [12854,12869]
                                                            name: list [12854,12858]
                                                            index [12858,12869]
                                                                expr [12859,12868]
                                                                    name: reg_index [12859,12868]
                                                argument [12871,12877]
                                                    expr [12871,12877]
                                                        name: padreg [12871,12877]
                                expr_stmt [12886,12898]
                                    expr [12886,12897]
                                        name: reg_index [12886,12895]
                                        operator: -- [12895,12897]
                                expr_stmt [0,0]
    for [12909,13021]
        control [12913,12947]
            init [12914,12915]
            condition [12916,12931]
                expr [12916,12930]
                    name: reg_index [12916,12925]
                    operator: >= [12926,12928]
                    literal: 1 [12929,12930]
            incr [12932,12946]
                expr [12932,12946]
                    name: reg_index [12932,12941]
                    operator: -= [12942,12944]
                    literal: 2 [12945,12946]
        block [12948,13021]
            block_content [12956,13015]
                expr_stmt [12956,13015]
                    expr [12956,13014]
                        call [12956,13014]
                            name: PushAllReverse [12956,12970]
                            argument_list [12970,13014]
                                argument [12971,12975]
                                    expr [12971,12975]
                                        name: basm [12971,12975]
                                argument [12977,12996]
                                    expr [12977,12996]
                                        name [12977,12996]
                                            name: list [12977,12981]
                                            index [12981,12996]
                                                expr [12982,12995]
                                                    name: reg_index [12982,12991]
                                                    operator: - [12992,12993]
                                                    literal: 1 [12994,12995]
                                argument [12998,13013]
                                    expr [12998,13013]
                                        name [12998,13013]
                                            name: list [12998,13002]
                                            index [13002,13013]
                                                expr [13003,13012]
                                                    name: reg_index [13003,13012]
    empty_stmt [13027,13028]
    macro [13030,13038]
        name: template [13030,13038]
    expr_stmt [13039,13075]
        expr [13039,13074]
            operator: < [13039,13040]
            name: typename [13040,13048]
            operator: ... [13048,13051]
            name: T [13052,13053]
            operator: > [13053,13054]
            name: PopAllHelper [13062,13074]
    macro [13076,13084]
        name: template [13076,13084]
    expr_stmt [13085,13160]
        expr [13085,13159]
            operator: < [13085,13086]
            operator: > [13086,13087]
            name [13095,13109]
                name: PopAllHelper [13095,13107]
                argument_list [13107,13109]
            block [13110,13159]
                expr [13114,13157]
                    specifier: static [13114,13120]
                    name: void [13121,13125]
                    macro [13126,13154]
                        name: Pop [13126,13129]
                        argument_list [13129,13154]
                            argument [13130,13153]
                    block [13155,13157]
    macro [13161,13169]
        name: template [13161,13169]
    expr_stmt [13170,13306]
        expr [13170,13305]
            operator: < [13170,13171]
            operator: > [13171,13172]
            name [13180,13202]
                name: PopAllHelper [13180,13192]
                argument_list [13192,13202]
                    argument [13193,13201]
                        name: Register [13193,13201]
            block [13203,13305]
                expr [13207,13303]
                    specifier: static [13207,13213]
                    name: void [13214,13218]
                    macro [13219,13261]
                        name: Pop [13219,13222]
                        argument_list [13222,13261]
                            argument [13223,13246]
                            argument [13248,13260]
                    block [13262,13303]
                        expr [13268,13298]
                            call [13268,13280]
                                name [13268,13278]
                                    name: basm [13268,13272]
                                    operator: -> [13272,13274]
                                    name: masm [13274,13278]
                                argument_list [13278,13280]
                            operator: -> [13280,13282]
                            call [13282,13298]
                                name: Pop [13282,13285]
                                argument_list [13285,13298]
                                    argument [13286,13289]
                                        expr [13286,13289]
                                            name: reg [13286,13289]
                                    argument [13291,13297]
                                        expr [13291,13297]
                                            name: padreg [13291,13297]
    macro [13307,13315]
        name: template [13307,13315]
    expr_stmt [13316,13569]
        expr [13316,13568]
            operator: < [13316,13317]
            name: typename [13317,13325]
            operator: ... [13325,13328]
            name: T [13329,13330]
            operator: > [13330,13331]
            name [13339,13377]
                name: PopAllHelper [13339,13351]
                argument_list [13351,13377]
                    argument [13352,13360]
                        name: Register [13352,13360]
                    argument [13362,13370]
                        name: Register [13362,13370]
                    argument [13372,13376]
                        name: T [13372,13373]
                        modifier: ... [13373,13376]
            block [13378,13568]
                expr [13382,13566]
                    specifier: static [13382,13388]
                    name: void [13389,13393]
                    macro [13394,13481]
                        name: Pop [13394,13397]
                        argument_list [13397,13481]
                            argument [13398,13421]
                            argument [13423,13436]
                            argument [13438,13451]
                            argument [13471,13480]
                    block [13482,13566]
                        expr [13488,13517]
                            call [13488,13500]
                                name [13488,13498]
                                    name: basm [13488,13492]
                                    operator: -> [13492,13494]
                                    name: masm [13494,13498]
                                argument_list [13498,13500]
                            operator: -> [13500,13502]
                            call [13502,13517]
                                name: Pop [13502,13505]
                                argument_list [13505,13517]
                                    argument [13506,13510]
                                        expr [13506,13510]
                                            name: reg1 [13506,13510]
                                    argument [13512,13516]
                                        expr [13512,13516]
                                            name: reg2 [13512,13516]
                        expr [13523,13561]
                            call [13523,13561]
                                name [13523,13546]
                                    name [13523,13541]
                                        name: PopAllHelper [13523,13535]
                                        argument_list [13535,13541]
                                            argument [13536,13540]
                                                name: T [13536,13537]
                                                modifier: ... [13537,13540]
                                    operator: :: [13541,13543]
                                    name: Pop [13543,13546]
                                argument_list [13546,13561]
                                    argument [13547,13551]
                                        expr [13547,13551]
                                            name: basm [13547,13551]
                                    argument [13553,13560]
                                        expr [13553,13560]
                                            name: tail [13553,13557]
                                            operator: ... [13557,13560]
    comment: // namespace detail [13574,13593]
    expr_stmt [13604,13896]
        expr [13604,13896]
            operator: < [13604,13605]
            name: typename [13605,13613]
            operator: ... [13613,13616]
            name: T [13617,13618]
            operator: > [13618,13619]
            name: int [13620,13623]
            macro [13624,13641]
                name: BaselineAssembler [13624,13641]
            name [13641,13647]
                operator: :: [13641,13643]
                name: Push [13643,13647]
            operator: ( [13647,13648]
            name: T [13648,13649]
            operator: ... [13649,13652]
            name: vals [13653,13657]
            operator: ) [13657,13658]
            block [13659,13896]
                comment: // We have to count the pushes first, to decide whether to add padding before [13663,13740]
                comment: // the first push. [13743,13761]
                expr [13764,13826]
                    name: int [13764,13767]
                    name: push_count [13768,13778]
                    operator: = [13779,13780]
                    call [13781,13826]
                        name [13781,13817]
                            name: detail [13781,13787]
                            operator: :: [13787,13789]
                            name [13789,13810]
                                name: CountPushHelper [13789,13804]
                                argument_list [13804,13810]
                                    argument [13805,13809]
                                        name: T [13805,13806]
                                        modifier: ... [13806,13809]
                            operator: :: [13810,13812]
                            name: Count [13812,13817]
                        argument_list [13817,13826]
                            argument [13818,13825]
                                expr [13818,13825]
                                    name: vals [13818,13822]
                                    operator: ... [13822,13825]
                if_stmt [13830,13892]
                    if [13830,13892]
                        condition [13833,13854]
                            expr [13834,13853]
                                name: push_count [13834,13844]
                                operator: % [13845,13846]
                                literal: 2 [13847,13848]
                                operator: == [13849,13851]
                                literal: 0 [13852,13853]
                        block [13855,13892]
                            block_content [13861,13892]
                                expr_stmt [13861,13892]
                                    expr [13861,13891]
                                        call [13861,13891]
                                            name [13861,13876]
                                                name: detail [13861,13867]
                                                operator: :: [13867,13869]
                                                name: PushAll [13869,13876]
                                            argument_list [13876,13891]
                                                argument [13877,13881]
                                                    expr [13877,13881]
                                                        name: this [13877,13881]
                                                argument [13883,13890]
                                                    expr [13883,13890]
                                                        name: vals [13883,13887]
                                                        operator: ... [13887,13890]
                                expr_stmt [0,0]
    if_stmt [13897,13951]
        else [13897,13951]
            block [13902,13951]
                block_content [13908,13947]
                    expr_stmt [13908,13947]
                        expr [13908,13946]
                            call [13908,13946]
                                name [13908,13923]
                                    name: detail [13908,13914]
                                    operator: :: [13914,13916]
                                    name: PushAll [13916,13923]
                                argument_list [13923,13946]
                                    argument [13924,13928]
                                        expr [13924,13928]
                                            name: this [13924,13928]
                                    argument [13930,13936]
                                        expr [13930,13936]
                                            name: padreg [13930,13936]
                                    argument [13938,13945]
                                        expr [13938,13945]
                                            name: vals [13938,13942]
                                            operator: ... [13942,13945]
    return [13954,13972]
        expr [13961,13971]
            name: push_count [13961,13971]
    expr_stmt [13985,16889]
        expr [13985,16889]
            operator: < [13985,13986]
            name: typename [13986,13994]
            operator: ... [13994,13997]
            name: T [13998,13999]
            operator: > [13999,14000]
            name: void [14001,14005]
            macro [14006,14023]
                name: BaselineAssembler [14006,14023]
            name [14023,14036]
                operator: :: [14023,14025]
                name: PushReverse [14025,14036]
            operator: ( [14036,14037]
            name: T [14037,14038]
            operator: ... [14038,14041]
            name: vals [14042,14046]
            operator: ) [14046,14047]
            block [14048,14092]
                expr [14052,14089]
                    call [14052,14089]
                        name [14052,14074]
                            name: detail [14052,14058]
                            operator: :: [14058,14060]
                            name: PushAllReverse [14060,14074]
                        argument_list [14074,14089]
                            argument [14075,14079]
                                expr [14075,14079]
                                    name: this [14075,14079]
                            argument [14081,14088]
                                expr [14081,14088]
                                    name: vals [14081,14085]
                                    operator: ... [14085,14088]
            name [14094,14118]
                name: template [14094,14102]
                argument_list [14103,14118]
                    argument [14104,14117]
                        name: typename [14104,14112]
                        modifier: ... [14112,14115]
                        name: T [14116,14117]
            name: void [14119,14123]
            macro [14124,14141]
                name: BaselineAssembler [14124,14141]
            name [14141,14146]
                operator: :: [14141,14143]
                name: Pop [14143,14146]
            operator: ( [14146,14147]
            name: T [14147,14148]
            operator: ... [14148,14151]
            name: registers [14152,14161]
            operator: ) [14161,14162]
            block [14163,14221]
                expr [14167,14218]
                    call [14167,14218]
                        name [14167,14198]
                            name: detail [14167,14173]
                            operator: :: [14173,14175]
                            name [14175,14193]
                                name: PopAllHelper [14175,14187]
                                argument_list [14187,14193]
                                    argument [14188,14192]
                                        name: T [14188,14189]
                                        modifier: ... [14189,14192]
                            operator: :: [14193,14195]
                            name: Pop [14195,14198]
                        argument_list [14198,14218]
                            argument [14199,14203]
                                expr [14199,14203]
                                    name: this [14199,14203]
                            argument [14205,14217]
                                expr [14205,14217]
                                    name: registers [14205,14214]
                                    operator: ... [14214,14217]
            name: void [14223,14227]
            macro [14228,14245]
                name: BaselineAssembler [14228,14245]
            name [14245,14269]
                operator: :: [14245,14247]
                name: LoadTaggedPointerField [14247,14269]
            operator: ( [14269,14270]
            name: Register [14270,14278]
            name: output [14279,14285]
            operator: , [14285,14286]
            name: Register [14287,14295]
            name: source [14296,14302]
            operator: , [14302,14303]
            name: int [14351,14354]
            name: offset [14355,14361]
            operator: ) [14361,14362]
            block [14363,14436]
                expr [14367,14433]
                    name: __ [14367,14369]
                    call [14370,14433]
                        name: LoadTaggedPointerField [14370,14392]
                        argument_list [14392,14433]
                            argument [14393,14399]
                                expr [14393,14399]
                                    name: output [14393,14399]
                            argument [14401,14432]
                                expr [14401,14432]
                                    call [14401,14432]
                                        name: FieldMemOperand [14401,14416]
                                        argument_list [14416,14432]
                                            argument [14417,14423]
                                                expr [14417,14423]
                                                    name: source [14417,14423]
                                            argument [14425,14431]
                                                expr [14425,14431]
                                                    name: offset [14425,14431]
            name: void [14437,14441]
            macro [14442,14459]
                name: BaselineAssembler [14442,14459]
            name [14459,14482]
                operator: :: [14459,14461]
                name: LoadTaggedSignedField [14461,14482]
            operator: ( [14482,14483]
            name: Register [14483,14491]
            name: output [14492,14498]
            operator: , [14498,14499]
            name: Register [14500,14508]
            name: source [14509,14515]
            operator: , [14515,14516]
            name: int [14563,14566]
            name: offset [14567,14573]
            operator: ) [14573,14574]
            block [14575,14647]
                expr [14579,14644]
                    name: __ [14579,14581]
                    call [14582,14644]
                        name: LoadTaggedSignedField [14582,14603]
                        argument_list [14603,14644]
                            argument [14604,14610]
                                expr [14604,14610]
                                    name: output [14604,14610]
                            argument [14612,14643]
                                expr [14612,14643]
                                    call [14612,14643]
                                        name: FieldMemOperand [14612,14627]
                                        argument_list [14627,14643]
                                            argument [14628,14634]
                                                expr [14628,14634]
                                                    name: source [14628,14634]
                                            argument [14636,14642]
                                                expr [14636,14642]
                                                    name: offset [14636,14642]
            name: void [14648,14652]
            macro [14653,14670]
                name: BaselineAssembler [14653,14670]
            name [14670,14690]
                operator: :: [14670,14672]
                name: LoadTaggedAnyField [14672,14690]
            operator: ( [14690,14691]
            name: Register [14691,14699]
            name: output [14700,14706]
            operator: , [14706,14707]
            name: Register [14708,14716]
            name: source [14717,14723]
            operator: , [14723,14724]
            name: int [14768,14771]
            name: offset [14772,14778]
            operator: ) [14778,14779]
            block [14780,14849]
                expr [14784,14846]
                    name: __ [14784,14786]
                    call [14787,14846]
                        name: LoadAnyTaggedField [14787,14805]
                        argument_list [14805,14846]
                            argument [14806,14812]
                                expr [14806,14812]
                                    name: output [14806,14812]
                            argument [14814,14845]
                                expr [14814,14845]
                                    call [14814,14845]
                                        name: FieldMemOperand [14814,14829]
                                        argument_list [14829,14845]
                                            argument [14830,14836]
                                                expr [14830,14836]
                                                    name: source [14830,14836]
                                            argument [14838,14844]
                                                expr [14838,14844]
                                                    name: offset [14838,14844]
            name: void [14850,14854]
            macro [14855,14872]
                name: BaselineAssembler [14855,14872]
            name [14872,14887]
                operator: :: [14872,14874]
                name: LoadByteField [14874,14887]
            operator: ( [14887,14888]
            name: Register [14888,14896]
            name: output [14897,14903]
            operator: , [14903,14904]
            name: Register [14905,14913]
            name: source [14914,14920]
            operator: , [14920,14921]
            name: int [14960,14963]
            name: offset [14964,14970]
            operator: ) [14970,14971]
            block [14972,15027]
                expr [14976,15024]
                    name: __ [14976,14978]
                    call [14979,15024]
                        name: Ldrb [14979,14983]
                        argument_list [14983,15024]
                            argument [14984,14990]
                                expr [14984,14990]
                                    name: output [14984,14990]
                            argument [14992,15023]
                                expr [14992,15023]
                                    call [14992,15023]
                                        name: FieldMemOperand [14992,15007]
                                        argument_list [15007,15023]
                                            argument [15008,15014]
                                                expr [15008,15014]
                                                    name: source [15008,15014]
                                            argument [15016,15022]
                                                expr [15016,15022]
                                                    name: offset [15016,15022]
            name: void [15028,15032]
            macro [15033,15050]
                name: BaselineAssembler [15033,15050]
            name [15050,15074]
                operator: :: [15050,15052]
                name: StoreTaggedSignedField [15052,15074]
            operator: ( [15074,15075]
            name: Register [15075,15083]
            name: target [15084,15090]
            operator: , [15090,15091]
            name: int [15092,15095]
            name: offset [15096,15102]
            operator: , [15102,15103]
            name: Smi [15151,15154]
            name: value [15155,15160]
            operator: ) [15160,15161]
            block [15162,15334]
                expr [15166,15198]
                    name: ScratchRegisterScope [15166,15186]
                    call [15187,15198]
                        name: temps [15187,15192]
                        argument_list [15192,15198]
                            argument [15193,15197]
                                expr [15193,15197]
                                    name: this [15193,15197]
                expr [15202,15239]
                    name: Register [15202,15210]
                    name: tmp [15211,15214]
                    operator: = [15215,15216]
                    call [15217,15239]
                        name [15217,15237]
                            name: temps [15217,15222]
                            operator: . [15222,15223]
                            name: AcquireScratch [15223,15237]
                        argument_list [15237,15239]
                expr [15243,15270]
                    name: __ [15243,15245]
                    call [15246,15270]
                        name: Mov [15246,15249]
                        argument_list [15249,15270]
                            argument [15250,15253]
                                expr [15250,15253]
                                    name: tmp [15250,15253]
                            argument [15255,15269]
                                expr [15255,15269]
                                    call [15255,15269]
                                        name: Operand [15255,15262]
                                        argument_list [15262,15269]
                                            argument [15263,15268]
                                                expr [15263,15268]
                                                    name: value [15263,15268]
                expr [15274,15331]
                    name: __ [15274,15276]
                    call [15277,15331]
                        name: StoreTaggedField [15277,15293]
                        argument_list [15293,15331]
                            argument [15294,15297]
                                expr [15294,15297]
                                    name: tmp [15294,15297]
                            argument [15299,15330]
                                expr [15299,15330]
                                    call [15299,15330]
                                        name: FieldMemOperand [15299,15314]
                                        argument_list [15314,15330]
                                            argument [15315,15321]
                                                expr [15315,15321]
                                                    name: target [15315,15321]
                                            argument [15323,15329]
                                                expr [15323,15329]
                                                    name: offset [15323,15329]
            name: void [15335,15339]
            macro [15340,15357]
                name: BaselineAssembler [15340,15357]
            name [15357,15391]
                operator: :: [15357,15359]
                name: StoreTaggedFieldWithWriteBarrier [15359,15391]
            operator: ( [15391,15392]
            name: Register [15392,15400]
            name: target [15401,15407]
            operator: , [15407,15408]
            name: int [15466,15469]
            name: offset [15470,15476]
            operator: , [15476,15477]
            name: Register [15535,15543]
            name: value [15544,15549]
            operator: ) [15549,15550]
            block [15551,15730]
                expr [15555,15614]
                    name: __ [15555,15557]
                    call [15558,15614]
                        name: StoreTaggedField [15558,15574]
                        argument_list [15574,15614]
                            argument [15575,15580]
                                expr [15575,15580]
                                    name: value [15575,15580]
                            argument [15582,15613]
                                expr [15582,15613]
                                    call [15582,15613]
                                        name: FieldMemOperand [15582,15597]
                                        argument_list [15597,15613]
                                            argument [15598,15604]
                                                expr [15598,15604]
                                                    name: target [15598,15604]
                                            argument [15606,15612]
                                                expr [15606,15612]
                                                    name: offset [15606,15612]
                expr [15618,15727]
                    name: __ [15618,15620]
                    call [15621,15727]
                        name: RecordWriteField [15621,15637]
                        argument_list [15637,15727]
                            argument [15638,15644]
                                expr [15638,15644]
                                    name: target [15638,15644]
                            argument [15646,15652]
                                expr [15646,15652]
                                    name: offset [15646,15652]
                            argument [15654,15659]
                                expr [15654,15659]
                                    name: value [15654,15659]
                            argument [15661,15679]
                                expr [15661,15679]
                                    name: kLRHasNotBeenSaved [15661,15679]
                            argument [15703,15726]
                                expr [15703,15726]
                                    name [15703,15726]
                                        name: SaveFPRegsMode [15703,15717]
                                        operator: :: [15717,15719]
                                        name: kIgnore [15719,15726]
            name: void [15731,15735]
            macro [15736,15753]
                name: BaselineAssembler [15736,15753]
            name [15753,15785]
                operator: :: [15753,15755]
                name: StoreTaggedFieldNoWriteBarrier [15755,15785]
            operator: ( [15785,15786]
            name: Register [15786,15794]
            name: target [15795,15801]
            operator: , [15801,15802]
            name: int [15858,15861]
            name: offset [15862,15868]
            operator: , [15868,15869]
            name: Register [15925,15933]
            name: value [15934,15939]
            operator: ) [15939,15940]
            block [15941,16007]
                expr [15945,16004]
                    name: __ [15945,15947]
                    call [15948,16004]
                        name: StoreTaggedField [15948,15964]
                        argument_list [15964,16004]
                            argument [15965,15970]
                                expr [15965,15970]
                                    name: value [15965,15970]
                            argument [15972,16003]
                                expr [15972,16003]
                                    call [15972,16003]
                                        name: FieldMemOperand [15972,15987]
                                        argument_list [15987,16003]
                                            argument [15988,15994]
                                                expr [15988,15994]
                                                    name: target [15988,15994]
                                            argument [15996,16002]
                                                expr [15996,16002]
                                                    name: offset [15996,16002]
            name: void [16009,16013]
            macro [16014,16031]
                name: BaselineAssembler [16014,16031]
            name [16031,16073]
                operator: :: [16031,16033]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [16033,16073]
            operator: ( [16073,16074]
            name: int32_t [16079,16086]
            name: weight [16087,16093]
            operator: , [16093,16094]
            name: Label [16095,16100]
            operator: * [16100,16101]
            name: skip_interrupt_label [16102,16122]
            operator: ) [16122,16123]
            block [16124,16889]
                expr [16128,16168]
                    name: ScratchRegisterScope [16128,16148]
                    call [16149,16168]
                        name: scratch_scope [16149,16162]
                        argument_list [16162,16168]
                            argument [16163,16167]
                                expr [16163,16167]
                                    name: this [16163,16167]
                expr [16172,16227]
                    name: Register [16172,16180]
                    name: feedback_cell [16181,16194]
                    operator: = [16195,16196]
                    call [16197,16227]
                        name [16197,16225]
                            name: scratch_scope [16197,16210]
                            operator: . [16210,16211]
                            name: AcquireScratch [16211,16225]
                        argument_list [16225,16227]
                expr [16231,16258]
                    call [16231,16258]
                        name: LoadFunction [16231,16243]
                        argument_list [16243,16258]
                            argument [16244,16257]
                                expr [16244,16257]
                                    name: feedback_cell [16244,16257]
                expr [16262,16372]
                    call [16262,16372]
                        name: LoadTaggedPointerField [16262,16284]
                        argument_list [16284,16372]
                            argument [16285,16298]
                                expr [16285,16298]
                                    name: feedback_cell [16285,16298]
                            argument [16300,16313]
                                expr [16300,16313]
                                    name: feedback_cell [16300,16313]
                            argument [16340,16371]
                                expr [16340,16371]
                                    name [16340,16371]
                                        name: JSFunction [16340,16350]
                                        operator: :: [16350,16352]
                                        name: kFeedbackCellOffset [16352,16371]
                expr [16377,16439]
                    name: Register [16377,16385]
                    name: interrupt_budget [16386,16402]
                    operator: = [16403,16404]
                    call [16405,16435]
                        name [16405,16433]
                            name: scratch_scope [16405,16418]
                            operator: . [16418,16419]
                            name: AcquireScratch [16419,16433]
                        argument_list [16433,16435]
                    operator: . [16435,16436]
                    call [16436,16439]
                        name: W [16436,16437]
                        argument_list [16437,16439]
                expr [16443,16546]
                    name: __ [16443,16445]
                    call [16446,16546]
                        name: Ldr [16446,16449]
                        argument_list [16449,16546]
                            argument [16450,16466]
                                expr [16450,16466]
                                    name: interrupt_budget [16450,16466]
                            argument [16477,16545]
                                expr [16477,16545]
                                    call [16477,16545]
                                        name: FieldMemOperand [16477,16492]
                                        argument_list [16492,16545]
                                            argument [16493,16506]
                                                expr [16493,16506]
                                                    name: feedback_cell [16493,16506]
                                            argument [16508,16544]
                                                expr [16508,16544]
                                                    name [16508,16544]
                                                        name: FeedbackCell [16508,16520]
                                                        operator: :: [16520,16522]
                                                        name: kInterruptBudgetOffset [16522,16544]
                comment: // Remember to set flags as part of the add! [16550,16594]
                expr [16597,16648]
                    name: __ [16597,16599]
                    call [16600,16648]
                        name: Adds [16600,16604]
                        argument_list [16604,16648]
                            argument [16605,16621]
                                expr [16605,16621]
                                    name: interrupt_budget [16605,16621]
                            argument [16623,16639]
                                expr [16623,16639]
                                    name: interrupt_budget [16623,16639]
                            argument [16641,16647]
                                expr [16641,16647]
                                    name: weight [16641,16647]
                expr [16652,16755]
                    name: __ [16652,16654]
                    call [16655,16755]
                        name: Str [16655,16658]
                        argument_list [16658,16755]
                            argument [16659,16675]
                                expr [16659,16675]
                                    name: interrupt_budget [16659,16675]
                            argument [16686,16754]
                                expr [16686,16754]
                                    call [16686,16754]
                                        name: FieldMemOperand [16686,16701]
                                        argument_list [16701,16754]
                                            argument [16702,16715]
                                                expr [16702,16715]
                                                    name: feedback_cell [16702,16715]
                                            argument [16717,16753]
                                                expr [16717,16753]
                                                    name [16717,16753]
                                                        name: FeedbackCell [16717,16729]
                                                        operator: :: [16729,16731]
                                                        name: kInterruptBudgetOffset [16731,16753]
                if_stmt [16759,16885]
                    if [16759,16885]
                        condition [16762,16784]
                            expr [16763,16783]
                                name: skip_interrupt_label [16763,16783]
                        block [16785,16885]
                            block_content [16828,16885]
                                comment: // Use compare flags set by Adds [16791,16823]
                                expr_stmt [16828,16849]
                                    expr [16828,16848]
                                        call [16828,16848]
                                            name: DCHECK_LT [16828,16837]
                                            argument_list [16837,16848]
                                                argument [16838,16844]
                                                    expr [16838,16844]
                                                        name: weight [16838,16844]
                                                argument [16846,16847]
                                                    expr [16846,16847]
                                                        literal: 0 [16846,16847]
                                function_decl [16854,16885]
                                    type [16854,16856]
                                        name: __ [16854,16856]
                                    name: B [16857,16858]
                                    parameter_list [16858,16884]
                                        parameter [16859,16861]
                                            decl [16859,16861]
                                                type [16859,16861]
                                                    name: ge [16859,16861]
                                        parameter [16863,16883]
                                            decl [16863,16883]
                                                type [16863,16883]
                                                    name: skip_interrupt_label [16863,16883]
                                expr_stmt [0,0]
    macro [16898,16915]
        name: BaselineAssembler [16898,16915]
    expr_stmt [16915,17707]
        expr [16915,17707]
            name [16915,16957]
                operator: :: [16915,16917]
                name: AddToInterruptBudgetAndJumpIfNotExceeded [16917,16957]
            operator: ( [16957,16958]
            name: Register [16963,16971]
            name: weight [16972,16978]
            operator: , [16978,16979]
            name: Label [16980,16985]
            operator: * [16985,16986]
            name: skip_interrupt_label [16987,17007]
            operator: ) [17007,17008]
            block [17009,17707]
                expr [17013,17053]
                    name: ScratchRegisterScope [17013,17033]
                    call [17034,17053]
                        name: scratch_scope [17034,17047]
                        argument_list [17047,17053]
                            argument [17048,17052]
                                expr [17048,17052]
                                    name: this [17048,17052]
                expr [17057,17112]
                    name: Register [17057,17065]
                    name: feedback_cell [17066,17079]
                    operator: = [17080,17081]
                    call [17082,17112]
                        name [17082,17110]
                            name: scratch_scope [17082,17095]
                            operator: . [17095,17096]
                            name: AcquireScratch [17096,17110]
                        argument_list [17110,17112]
                expr [17116,17143]
                    call [17116,17143]
                        name: LoadFunction [17116,17128]
                        argument_list [17128,17143]
                            argument [17129,17142]
                                expr [17129,17142]
                                    name: feedback_cell [17129,17142]
                expr [17147,17257]
                    call [17147,17257]
                        name: LoadTaggedPointerField [17147,17169]
                        argument_list [17169,17257]
                            argument [17170,17183]
                                expr [17170,17183]
                                    name: feedback_cell [17170,17183]
                            argument [17185,17198]
                                expr [17185,17198]
                                    name: feedback_cell [17185,17198]
                            argument [17225,17256]
                                expr [17225,17256]
                                    name [17225,17256]
                                        name: JSFunction [17225,17235]
                                        operator: :: [17235,17237]
                                        name: kFeedbackCellOffset [17237,17256]
                expr [17262,17324]
                    name: Register [17262,17270]
                    name: interrupt_budget [17271,17287]
                    operator: = [17288,17289]
                    call [17290,17320]
                        name [17290,17318]
                            name: scratch_scope [17290,17303]
                            operator: . [17303,17304]
                            name: AcquireScratch [17304,17318]
                        argument_list [17318,17320]
                    operator: . [17320,17321]
                    call [17321,17324]
                        name: W [17321,17322]
                        argument_list [17322,17324]
                expr [17328,17431]
                    name: __ [17328,17330]
                    call [17331,17431]
                        name: Ldr [17331,17334]
                        argument_list [17334,17431]
                            argument [17335,17351]
                                expr [17335,17351]
                                    name: interrupt_budget [17335,17351]
                            argument [17362,17430]
                                expr [17362,17430]
                                    call [17362,17430]
                                        name: FieldMemOperand [17362,17377]
                                        argument_list [17377,17430]
                                            argument [17378,17391]
                                                expr [17378,17391]
                                                    name: feedback_cell [17378,17391]
                                            argument [17393,17429]
                                                expr [17393,17429]
                                                    name [17393,17429]
                                                        name: FeedbackCell [17393,17405]
                                                        operator: :: [17405,17407]
                                                        name: kInterruptBudgetOffset [17407,17429]
                comment: // Remember to set flags as part of the add! [17435,17479]
                expr [17482,17537]
                    name: __ [17482,17484]
                    call [17485,17537]
                        name: Adds [17485,17489]
                        argument_list [17489,17537]
                            argument [17490,17506]
                                expr [17490,17506]
                                    name: interrupt_budget [17490,17506]
                            argument [17508,17524]
                                expr [17508,17524]
                                    name: interrupt_budget [17508,17524]
                            argument [17526,17536]
                                expr [17526,17536]
                                    call [17526,17536]
                                        name [17526,17534]
                                            name: weight [17526,17532]
                                            operator: . [17532,17533]
                                            name: W [17533,17534]
                                        argument_list [17534,17536]
                expr [17541,17644]
                    name: __ [17541,17543]
                    call [17544,17644]
                        name: Str [17544,17547]
                        argument_list [17547,17644]
                            argument [17548,17564]
                                expr [17548,17564]
                                    name: interrupt_budget [17548,17564]
                            argument [17575,17643]
                                expr [17575,17643]
                                    call [17575,17643]
                                        name: FieldMemOperand [17575,17590]
                                        argument_list [17590,17643]
                                            argument [17591,17604]
                                                expr [17591,17604]
                                                    name: feedback_cell [17591,17604]
                                            argument [17606,17642]
                                                expr [17606,17642]
                                                    name [17606,17642]
                                                        name: FeedbackCell [17606,17618]
                                                        operator: :: [17618,17620]
                                                        name: kInterruptBudgetOffset [17620,17642]
                if_stmt [17648,17705]
                    if [17648,17705]
                        condition [17651,17673]
                            expr [17652,17672]
                                name: skip_interrupt_label [17652,17672]
                        block [17674,17705]
                            block_content [17674,17705]
                                function_decl [17674,17705]
                                    type [17674,17676]
                                        name: __ [17674,17676]
                                    name: B [17677,17678]
                                    parameter_list [17678,17704]
                                        parameter [17679,17681]
                                            decl [17679,17681]
                                                type [17679,17681]
                                                    name: ge [17679,17681]
                                        parameter [17683,17703]
                                            decl [17683,17703]
                                                type [17683,17703]
                                                    name: skip_interrupt_label [17683,17703]
    function [17709,17918]
        type [17709,17713]
            name: void [17709,17713]
        name [17714,17739]
            name: BaselineAssembler [17714,17731]
            operator: :: [17731,17733]
            name: AddSmi [17733,17739]
        parameter_list [17739,17762]
            parameter [17740,17752]
                decl [17740,17752]
                    type [17740,17752]
                        name: Register [17740,17748]
                    name: lhs [17749,17752]
            parameter [17754,17761]
                decl [17754,17761]
                    type [17754,17761]
                        name: Smi [17754,17757]
                    name: rhs [17758,17761]
        block [17763,17918]
            block_content [17767,17916]
                if_stmt [17767,17916]
                    if [17767,17844]
                        condition [17770,17792]
                            expr [17771,17791]
                                call [17771,17791]
                                    name: SmiValuesAre31Bits [17771,17789]
                                    argument_list [17789,17791]
                        block [17793,17844]
                            block_content [17799,17840]
                                decl_stmt [17799,17840]
                                    decl [17799,17839]
                                        type [17799,17801]
                                            name: __ [17799,17801]
                                        name: Add [17802,17805]
                                        argument_list [17805,17839]
                                            argument [17806,17813]
                                                expr [17806,17813]
                                                    call [17806,17813]
                                                        name [17806,17811]
                                                            name: lhs [17806,17809]
                                                            operator: . [17809,17810]
                                                            name: W [17810,17811]
                                                        argument_list [17811,17813]
                                            argument [17815,17822]
                                                expr [17815,17822]
                                                    call [17815,17822]
                                                        name [17815,17820]
                                                            name: lhs [17815,17818]
                                                            operator: . [17818,17819]
                                                            name: W [17819,17820]
                                                        argument_list [17820,17822]
                                            argument [17824,17838]
                                                expr [17824,17838]
                                                    call [17824,17838]
                                                        name: Immediate [17824,17833]
                                                        argument_list [17833,17838]
                                                            argument [17834,17837]
                                                                expr [17834,17837]
                                                                    name: rhs [17834,17837]
                    else [17845,17916]
                        block [17850,17916]
                            block_content [17856,17912]
                                expr_stmt [17856,17874]
                                    expr [17856,17873]
                                        call [17856,17873]
                                            name: DCHECK [17856,17862]
                                            argument_list [17862,17873]
                                                argument [17863,17872]
                                                    expr [17863,17872]
                                                        call [17863,17872]
                                                            name [17863,17870]
                                                                name: lhs [17863,17866]
                                                                operator: . [17866,17867]
                                                                name: IsX [17867,17870]
                                                            argument_list [17870,17872]
                                decl_stmt [17879,17912]
                                    decl [17879,17911]
                                        type [17879,17881]
                                            name: __ [17879,17881]
                                        name: Add [17882,17885]
                                        argument_list [17885,17911]
                                            argument [17886,17889]
                                                expr [17886,17889]
                                                    name: lhs [17886,17889]
                                            argument [17891,17894]
                                                expr [17891,17894]
                                                    name: lhs [17891,17894]
                                            argument [17896,17910]
                                                expr [17896,17910]
                                                    call [17896,17910]
                                                        name: Immediate [17896,17905]
                                                        argument_list [17905,17910]
                                                            argument [17906,17909]
                                                                expr [17906,17909]
                                                                    name: rhs [17906,17909]
    function [17920,18873]
        type [17920,17924]
            name: void [17920,17924]
        name [17925,17950]
            name: BaselineAssembler [17925,17942]
            operator: :: [17942,17944]
            name: Switch [17944,17950]
        parameter_list [17950,18048]
            parameter [17951,17963]
                decl [17951,17963]
                    type [17951,17963]
                        name: Register [17951,17959]
                    name: reg [17960,17963]
            parameter [17965,17984]
                decl [17965,17984]
                    type [17965,17984]
                        name: int [17965,17968]
                    name: case_value_base [17969,17984]
            parameter [18017,18031]
                decl [18017,18031]
                    type [18017,18031]
                        name: Label [18017,18022]
                        modifier: * [18022,18023]
                        modifier: * [18023,18024]
                    name: labels [18025,18031]
            parameter [18033,18047]
                decl [18033,18047]
                    type [18033,18047]
                        name: int [18033,18036]
                    name: num_labels [18037,18047]
        block [18049,18873]
            block_content [18053,18842]
                decl_stmt [18053,18071]
                    decl [18053,18070]
                        type [18053,18058]
                            name: Label [18053,18058]
                        name: fallthrough [18059,18070]
                if_stmt [18074,18154]
                    if [18074,18154]
                        condition [18077,18098]
                            expr [18078,18097]
                                name: case_value_base [18078,18093]
                                operator: > [18094,18095]
                                literal: 0 [18096,18097]
                        block [18099,18154]
                            block_content [18105,18150]
                                decl_stmt [18105,18150]
                                    decl [18105,18149]
                                        type [18105,18107]
                                            name: __ [18105,18107]
                                        name: Sub [18108,18111]
                                        argument_list [18111,18149]
                                            argument [18112,18115]
                                                expr [18112,18115]
                                                    name: reg [18112,18115]
                                            argument [18117,18120]
                                                expr [18117,18120]
                                                    name: reg [18117,18120]
                                            argument [18122,18148]
                                                expr [18122,18148]
                                                    call [18122,18148]
                                                        name: Immediate [18122,18131]
                                                        argument_list [18131,18148]
                                                            argument [18132,18147]
                                                                expr [18132,18147]
                                                                    name: case_value_base [18132,18147]
                comment: // Mostly copied from code-generator-arm64.cc [18158,18203]
                decl_stmt [18206,18239]
                    decl [18206,18238]
                        type [18206,18226]
                            name: ScratchRegisterScope [18206,18226]
                        name: scope [18227,18232]
                        argument_list [18232,18238]
                            argument [18233,18237]
                                expr [18233,18237]
                                    name: this [18233,18237]
                decl_stmt [18242,18281]
                    decl [18242,18280]
                        type [18242,18250]
                            name: Register [18242,18250]
                        name: temp [18251,18255]
                        init [18256,18280]
                            expr [18258,18280]
                                call [18258,18280]
                                    name [18258,18278]
                                        name: scope [18258,18263]
                                        operator: . [18263,18264]
                                        name: AcquireScratch [18264,18278]
                                    argument_list [18278,18280]
                decl_stmt [18284,18296]
                    decl [18284,18295]
                        type [18284,18289]
                            name: Label [18284,18289]
                        name: table [18290,18295]
                expr_stmt [18299,18375]
                    expr [18299,18374]
                        call [18299,18374]
                            name: JumpIf [18299,18305]
                            argument_list [18305,18374]
                                argument [18306,18342]
                                    expr [18306,18342]
                                        name [18306,18342]
                                            name: Condition [18306,18315]
                                            operator: :: [18315,18317]
                                            name: kUnsignedGreaterThanEqual [18317,18342]
                                argument [18344,18347]
                                    expr [18344,18347]
                                        name: reg [18344,18347]
                                argument [18349,18359]
                                    expr [18349,18359]
                                        name: num_labels [18349,18359]
                                argument [18361,18373]
                                    expr [18361,18373]
                                        operator: & [18361,18362]
                                        name: fallthrough [18362,18373]
                decl_stmt [18378,18399]
                    decl [18378,18398]
                        type [18378,18380]
                            name: __ [18378,18380]
                        name: Adr [18381,18384]
                        argument_list [18384,18398]
                            argument [18385,18389]
                                expr [18385,18389]
                                    name: temp [18385,18389]
                            argument [18391,18397]
                                expr [18391,18397]
                                    operator: & [18391,18392]
                                    name: table [18392,18397]
                decl_stmt [18402,18467]
                    decl [18402,18425]
                        type [18402,18405]
                            name: int [18402,18405]
                        name: entry_size_log2 [18406,18421]
                        init [18422,18425]
                            expr [18424,18425]
                                literal: 2 [18424,18425]
                ifdef [18427,18466]
                    directive: ifdef [18428,18433]
                    name: V8_ENABLE_CONTROL_FLOW_INTEGRITY [18434,18466]
                expr_stmt [18469,18516]
                    expr [18469,18486]
                        operator: ++ [18469,18471]
                        name: entry_size_log2 [18471,18486]
                comment: // Account for BTI. [18489,18508]
                endif [18509,18515]
                    directive: endif [18510,18515]
                decl_stmt [18518,18574]
                    decl [18518,18573]
                        type [18518,18520]
                            name: __ [18518,18520]
                        name: Add [18521,18524]
                        argument_list [18524,18573]
                            argument [18525,18529]
                                expr [18525,18529]
                                    name: temp [18525,18529]
                            argument [18531,18535]
                                expr [18531,18535]
                                    name: temp [18531,18535]
                            argument [18537,18572]
                                expr [18537,18572]
                                    call [18537,18572]
                                        name: Operand [18537,18544]
                                        argument_list [18544,18572]
                                            argument [18545,18548]
                                                expr [18545,18548]
                                                    name: reg [18545,18548]
                                            argument [18550,18554]
                                                expr [18550,18554]
                                                    name: UXTW [18550,18554]
                                            argument [18556,18571]
                                                expr [18556,18571]
                                                    name: entry_size_log2 [18556,18571]
                decl_stmt [18577,18589]
                    decl [18577,18588]
                        type [18577,18579]
                            name: __ [18577,18579]
                        name: Br [18580,18582]
                        argument_list [18582,18588]
                            argument [18583,18587]
                                expr [18583,18587]
                                    name: temp [18583,18587]
                block [18592,18842]
                    block_content [18598,18838]
                        decl_stmt [18598,18674]
                            decl [18598,18673]
                                type [18598,18629]
                                    name [18598,18629]
                                        name: TurboAssembler [18598,18612]
                                        operator: :: [18612,18614]
                                        name: BlockPoolsScope [18614,18629]
                                name: block_pools [18630,18641]
                                argument_list [18641,18673]
                                    argument [18642,18647]
                                        expr [18642,18647]
                                            name: masm_ [18642,18647]
                                    argument [18649,18672]
                                        expr [18649,18672]
                                            name: num_labels [18649,18659]
                                            operator: * [18660,18661]
                                            name: kInstrSize [18662,18672]
                        decl_stmt [18679,18695]
                            decl [18679,18694]
                                type [18679,18681]
                                    name: __ [18679,18681]
                                name: Bind [18682,18686]
                                argument_list [18686,18694]
                                    argument [18687,18693]
                                        expr [18687,18693]
                                            operator: & [18687,18688]
                                            name: table [18688,18693]
                        for [18700,18790]
                            control [18704,18736]
                                init [18705,18715]
                                    decl [18705,18714]
                                        type [18705,18708]
                                            name: int [18705,18708]
                                        name: i [18709,18710]
                                        init [18711,18714]
                                            expr [18713,18714]
                                                literal: 0 [18713,18714]
                                condition [18716,18731]
                                    expr [18716,18730]
                                        name: i [18716,18717]
                                        operator: < [18718,18719]
                                        name: num_labels [18720,18730]
                                incr [18732,18735]
                                    expr [18732,18735]
                                        operator: ++ [18732,18734]
                                        name: i [18734,18735]
                            block [18737,18790]
                                block_content [18745,18784]
                                    function_decl [18745,18761]
                                        type [18745,18747]
                                            name: __ [18745,18747]
                                        name: JumpTarget [18748,18758]
                                        parameter_list [18758,18760]
                                    decl_stmt [18768,18784]
                                        decl [18768,18783]
                                            type [18768,18770]
                                                name: __ [18768,18770]
                                            name: B [18771,18772]
                                            argument_list [18772,18783]
                                                argument [18773,18782]
                                                    expr [18773,18782]
                                                        name [18773,18782]
                                                            name: labels [18773,18779]
                                                            index [18779,18782]
                                                                expr [18780,18781]
                                                                    name: i [18780,18781]
                        function_decl [18795,18811]
                            type [18795,18797]
                                name: __ [18795,18797]
                            name: JumpTarget [18798,18808]
                            parameter_list [18808,18810]
                        decl_stmt [18816,18838]
                            decl [18816,18837]
                                type [18816,18818]
                                    name: __ [18816,18818]
                                name: Bind [18819,18823]
                                argument_list [18823,18837]
                                    argument [18824,18836]
                                        expr [18824,18836]
                                            operator: & [18824,18825]
                                            name: fallthrough [18825,18836]
    undef [18846,18855]
        directive: undef [18847,18852]
        name: __ [18853,18855]
    define [18856,18872]
        directive: define [18857,18863]
        macro [18864,18866]
            name: __ [18864,18866]
        value [18867,18872]
    function [18874,20632]
        type [18874,18878]
            name: void [18874,18878]
        name [18879,18908]
            name: BaselineAssembler [18879,18896]
            operator: :: [18896,18898]
            name: EmitReturn [18898,18908]
        parameter_list [18908,18930]
            parameter [18909,18929]
                decl [18909,18929]
                    type [18909,18924]
                        name: MacroAssembler [18909,18923]
                        modifier: * [18923,18924]
                    name: masm [18925,18929]
        block [18931,20632]
            block_content [18935,20618]
                decl_stmt [18935,18964]
                    decl [18935,18963]
                        type [18935,18952]
                            name: BaselineAssembler [18935,18952]
                        name: basm [18953,18957]
                        argument_list [18957,18963]
                            argument [18958,18962]
                                expr [18958,18962]
                                    name: masm [18958,18962]
                decl_stmt [18968,19033]
                    decl [18968,19032]
                        type [18968,18976]
                            name: Register [18968,18976]
                        name: weight [18977,18983]
                        init [18984,19032]
                            expr [18986,19032]
                                call [18986,19032]
                                    name [18986,19030]
                                        name: BaselineLeaveFrameDescriptor [18986,19014]
                                        operator: :: [19014,19016]
                                        name: WeightRegister [19016,19030]
                                    argument_list [19030,19032]
                decl_stmt [19036,19110]
                    decl [19036,19109]
                        type [19036,19044]
                            name: Register [19036,19044]
                        name: params_size [19045,19056]
                        init [19057,19109]
                            expr [19059,19109]
                                call [19059,19109]
                                    name [19059,19107]
                                        name: BaselineLeaveFrameDescriptor [19059,19087]
                                        operator: :: [19087,19089]
                                        name: ParamsSizeRegister [19089,19107]
                                    argument_list [19107,19109]
                decl_stmt [19114,19160]
                    decl [19114,19159]
                        type [19114,19116]
                            name: __ [19114,19116]
                        name: RecordComment [19117,19130]
                        argument_list [19130,19159]
                            argument [19131,19158]
                                expr [19131,19158]
                                    literal: "[ Update Interrupt Budget" [19131,19158]
                decl_stmt [19164,19191]
                    decl [19164,19190]
                        type [19164,19169]
                            name: Label [19164,19169]
                        name: skip_interrupt_label [19170,19190]
                decl_stmt [19194,19269]
                    decl [19194,19268]
                        type [19194,19196]
                            name: __ [19194,19196]
                        name: AddToInterruptBudgetAndJumpIfNotExceeded [19197,19237]
                        argument_list [19237,19268]
                            argument [19238,19244]
                                expr [19238,19244]
                                    name: weight [19238,19244]
                            argument [19246,19267]
                                expr [19246,19267]
                                    operator: & [19246,19247]
                                    name: skip_interrupt_label [19247,19267]
                block [19272,19686]
                    block_content [19278,19682]
                        expr_stmt [19278,19309]
                            expr [19278,19308]
                                name: __ [19278,19280]
                                call [19281,19287]
                                    name: masm [19281,19285]
                                    argument_list [19285,19287]
                                operator: -> [19287,19289]
                                call [19289,19308]
                                    name: SmiTag [19289,19295]
                                    argument_list [19295,19308]
                                        argument [19296,19307]
                                            expr [19296,19307]
                                                name: params_size [19296,19307]
                        expr_stmt [19314,19376]
                            expr [19314,19375]
                                name: __ [19314,19316]
                                call [19317,19323]
                                    name: masm [19317,19321]
                                    argument_list [19321,19323]
                                operator: -> [19323,19325]
                                call [19325,19375]
                                    name: Push [19325,19329]
                                    argument_list [19329,19375]
                                        argument [19330,19341]
                                            expr [19330,19341]
                                                name: params_size [19330,19341]
                                        argument [19343,19374]
                                            expr [19343,19374]
                                                name: kInterpreterAccumulatorRegister [19343,19374]
                        decl_stmt [19382,19415]
                            decl [19382,19414]
                                type [19382,19384]
                                    name: __ [19382,19384]
                                name: LoadContext [19385,19396]
                                argument_list [19396,19414]
                                    argument [19397,19413]
                                        expr [19397,19413]
                                            name: kContextRegister [19397,19413]
                        decl_stmt [19420,19457]
                            decl [19420,19456]
                                type [19420,19422]
                                    name: __ [19420,19422]
                                name: LoadFunction [19423,19435]
                                argument_list [19435,19456]
                                    argument [19436,19455]
                                        expr [19436,19455]
                                            name: kJSFunctionRegister [19436,19455]
                        expr_stmt [19462,19507]
                            expr [19462,19506]
                                name: __ [19462,19464]
                                call [19465,19471]
                                    name: masm [19465,19469]
                                    argument_list [19469,19471]
                                operator: -> [19471,19473]
                                call [19473,19506]
                                    name: PushArgument [19473,19485]
                                    argument_list [19485,19506]
                                        argument [19486,19505]
                                            expr [19486,19505]
                                                name: kJSFunctionRegister [19486,19505]
                        decl_stmt [19512,19577]
                            decl [19512,19576]
                                type [19512,19514]
                                    name: __ [19512,19514]
                                name: CallRuntime [19515,19526]
                                argument_list [19526,19576]
                                    argument [19527,19572]
                                        expr [19527,19572]
                                            name [19527,19572]
                                                name: Runtime [19527,19534]
                                                operator: :: [19534,19536]
                                                name: kBytecodeBudgetInterruptFromBytecode [19536,19572]
                                    argument [19574,19575]
                                        expr [19574,19575]
                                            literal: 1 [19574,19575]
                        expr_stmt [19583,19644]
                            expr [19583,19643]
                                name: __ [19583,19585]
                                call [19586,19592]
                                    name: masm [19586,19590]
                                    argument_list [19590,19592]
                                operator: -> [19592,19594]
                                call [19594,19643]
                                    name: Pop [19594,19597]
                                    argument_list [19597,19643]
                                        argument [19598,19629]
                                            expr [19598,19629]
                                                name: kInterpreterAccumulatorRegister [19598,19629]
                                        argument [19631,19642]
                                            expr [19631,19642]
                                                name: params_size [19631,19642]
                        expr_stmt [19649,19682]
                            expr [19649,19681]
                                name: __ [19649,19651]
                                call [19652,19658]
                                    name: masm [19652,19656]
                                    argument_list [19656,19658]
                                operator: -> [19658,19660]
                                call [19660,19681]
                                    name: SmiUntag [19660,19668]
                                    argument_list [19668,19681]
                                        argument [19669,19680]
                                            expr [19669,19680]
                                                name: params_size [19669,19680]
                decl_stmt [19689,19711]
                    decl [19689,19710]
                        type [19689,19691]
                            name: __ [19689,19691]
                        name: RecordComment [19692,19705]
                        argument_list [19705,19710]
                            argument [19706,19709]
                                expr [19706,19709]
                                    literal: "]" [19706,19709]
                decl_stmt [19715,19746]
                    decl [19715,19745]
                        type [19715,19717]
                            name: __ [19715,19717]
                        name: Bind [19718,19722]
                        argument_list [19722,19745]
                            argument [19723,19744]
                                expr [19723,19744]
                                    operator: & [19723,19724]
                                    name: skip_interrupt_label [19724,19744]
                decl_stmt [19750,19803]
                    decl [19750,19802]
                        type [19750,19789]
                            name [19750,19789]
                                name: BaselineAssembler [19750,19767]
                                operator: :: [19767,19769]
                                name: ScratchRegisterScope [19769,19789]
                        name: temps [19790,19795]
                        argument_list [19795,19802]
                            argument [19796,19801]
                                expr [19796,19801]
                                    operator: & [19796,19797]
                                    name: basm [19797,19801]
                decl_stmt [19806,19859]
                    decl [19806,19858]
                        type [19806,19814]
                            name: Register [19806,19814]
                        name: actual_params_size [19815,19833]
                        init [19834,19858]
                            expr [19836,19858]
                                call [19836,19858]
                                    name [19836,19856]
                                        name: temps [19836,19841]
                                        operator: . [19841,19842]
                                        name: AcquireScratch [19842,19856]
                                    argument_list [19856,19858]
                comment: // Compute the size of the actual parameters + receiver (in bytes). [19862,19929]
                decl_stmt [19932,20023]
                    decl [19932,20022]
                        type [19932,19934]
                            name: __ [19932,19934]
                        name: Move [19935,19939]
                        argument_list [19939,20022]
                            argument [19940,19958]
                                expr [19940,19958]
                                    name: actual_params_size [19940,19958]
                            argument [19970,20021]
                                expr [19970,20021]
                                    call [19970,20021]
                                        name: MemOperand [19970,19980]
                                        argument_list [19980,20021]
                                            argument [19981,19983]
                                                expr [19981,19983]
                                                    name: fp [19981,19983]
                                            argument [19985,20020]
                                                expr [19985,20020]
                                                    name [19985,20020]
                                                        name: StandardFrameConstants [19985,20007]
                                                        operator: :: [20007,20009]
                                                        name: kArgCOffset [20009,20020]
                comment: // If actual is bigger than formal, then we should use it to free up the stack [20027,20105]
                comment: // arguments. [20108,20121]
                decl_stmt [20124,20151]
                    decl [20124,20150]
                        type [20124,20129]
                            name: Label [20124,20129]
                        name: corrected_args_count [20130,20150]
                decl_stmt [20154,20262]
                    decl [20154,20261]
                        type [20154,20156]
                            name: __ [20154,20156]
                        name: JumpIf [20157,20163]
                        argument_list [20163,20261]
                            argument [20164,20192]
                                expr [20164,20192]
                                    name [20164,20192]
                                        name: Condition [20164,20173]
                                        operator: :: [20173,20175]
                                        name: kGreaterThanEqual [20175,20192]
                            argument [20194,20205]
                                expr [20194,20205]
                                    name: params_size [20194,20205]
                            argument [20207,20225]
                                expr [20207,20225]
                                    name: actual_params_size [20207,20225]
                            argument [20239,20260]
                                expr [20239,20260]
                                    operator: & [20239,20240]
                                    name: corrected_args_count [20240,20260]
                expr_stmt [20265,20313]
                    expr [20265,20312]
                        name: __ [20265,20267]
                        call [20268,20274]
                            name: masm [20268,20272]
                            argument_list [20272,20274]
                        operator: -> [20274,20276]
                        call [20276,20312]
                            name: Mov [20276,20279]
                            argument_list [20279,20312]
                                argument [20280,20291]
                                    expr [20280,20291]
                                        name: params_size [20280,20291]
                                argument [20293,20311]
                                    expr [20293,20311]
                                        name: actual_params_size [20293,20311]
                decl_stmt [20316,20347]
                    decl [20316,20346]
                        type [20316,20318]
                            name: __ [20316,20318]
                        name: Bind [20319,20323]
                        argument_list [20323,20346]
                            argument [20324,20345]
                                expr [20324,20345]
                                    operator: & [20324,20325]
                                    name: corrected_args_count [20325,20345]
                comment: // Leave the frame (also dropping the register file). [20351,20404]
                expr_stmt [20407,20451]
                    expr [20407,20450]
                        name: __ [20407,20409]
                        call [20410,20416]
                            name: masm [20410,20414]
                            argument_list [20414,20416]
                        operator: -> [20416,20418]
                        call [20418,20450]
                            name: LeaveFrame [20418,20428]
                            argument_list [20428,20450]
                                argument [20429,20449]
                                    expr [20429,20449]
                                        name [20429,20449]
                                            name: StackFrame [20429,20439]
                                            operator: :: [20439,20441]
                                            name: BASELINE [20441,20449]
                comment: // Drop receiver + arguments. [20455,20484]
                expr_stmt [20487,20531]
                    expr [20487,20530]
                        name: __ [20487,20489]
                        call [20490,20496]
                            name: masm [20490,20494]
                            argument_list [20494,20496]
                        operator: -> [20496,20498]
                        call [20498,20530]
                            name: Add [20498,20501]
                            argument_list [20501,20530]
                                argument [20502,20513]
                                    expr [20502,20513]
                                        name: params_size [20502,20513]
                                argument [20515,20526]
                                    expr [20515,20526]
                                        name: params_size [20515,20526]
                                argument [20528,20529]
                                    expr [20528,20529]
                                        literal: 1 [20528,20529]
                comment: // Include the receiver. [20533,20557]
                expr_stmt [20560,20598]
                    expr [20560,20597]
                        name: __ [20560,20562]
                        call [20563,20569]
                            name: masm [20563,20567]
                            argument_list [20567,20569]
                        operator: -> [20569,20571]
                        call [20571,20597]
                            name: DropArguments [20571,20584]
                            argument_list [20584,20597]
                                argument [20585,20596]
                                    expr [20585,20596]
                                        name: params_size [20585,20596]
                expr_stmt [20601,20618]
                    expr [20601,20617]
                        name: __ [20601,20603]
                        call [20604,20610]
                            name: masm [20604,20608]
                            argument_list [20608,20610]
                        operator: -> [20610,20612]
                        call [20612,20617]
                            name: Ret [20612,20615]
                            argument_list [20615,20617]
    undef [20622,20631]
        directive: undef [20623,20628]
        name: __ [20629,20631]
    comment: // namespace baseline [20636,20657]
    comment: // namespace internal [20661,20682]
    comment: // namespace v8 [20686,20701]
    endif [20703,20709]
        directive: endif [20704,20709]
    comment: // V8_BASELINE_ARM64_BASELINE_ASSEMBLER_ARM64_INL_H_ [20711,20763]