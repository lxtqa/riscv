[
    [
        [
            "3f12c06ea0fadfd4a962fe6fd84693f01751a4f3",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 17)"
        ],
        [
            "956e537a372ef29058a0035052dd6c54ab764b25",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 17)"
        ],
        [
            "014e0bb5ac4691c85b1da2dac579af77d02d17b7",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 17)"
        ],
        [
            "dac59871658f010e88615ddb6b1950957667a67a",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 17)"
        ],
        [
            "3c498539b256f0abb4e3e1adcff3266eea777a96",
            " [PATCH] ppc/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 16)"
        ],
        [
            "6d0f16a9a28761461d3bd6e2dda3d25e3d6ff92c",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 16)"
        ],
        [
            "b871993c1d2062a0387b62c5695d142bfc29f392",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 16)"
        ],
        [
            "d91e7905a3a5022f37f1a1f2a96c9d5db9e08519",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 16)"
        ],
        [
            "db76cc0737d0406b52ed5e61b99a0524d18c21ee",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 15)"
        ],
        [
            "222ec320768086ed8a8eb9ab857d836d4ed1221c",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 14)"
        ],
        [
            "050ff839a2a7638790b99e803354ce0d2f2437b7",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 13)"
        ],
        [
            "94dfe2e4af6b524bff3c54e04d1f93c3eb2fa53d",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 13)"
        ],
        [
            "bdcb632a948aa2dca227c581c3f3c681b162b9bb",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 13)"
        ],
        [
            "d9db05adf9b94b1905bebe2db70e3cae1513af8a",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 13)"
        ],
        [
            "1fd7689d431fc2f776385cfdbb94d02a5c858842",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 12)"
        ],
        [
            "9844f7ddc2c87e31e921837a5760649486d81204",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 12)"
        ],
        [
            "df96d49ea6206ab7ed3ff7b2ad30c5794b73c05b",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 12)"
        ],
        [
            "b65a2725b84dc6dce919920f007682ea4d1daf54",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 12)"
        ],
        [
            "16c6c585b750c7a8e13c1bebb57f05fd90f60d19",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 10)"
        ],
        [
            "e33693d57f647407cd74b7ca4057614916d1e50f",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 10)"
        ],
        [
            "0dbea94dbdd950cbe5ff018a3e43a4bac18c6045",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 10)"
        ],
        [
            "8e06a0ca8713c2c259803c956088778d95f75304",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 8)"
        ],
        [
            "d4ac7058f3a8451a22c0ebf6436daff360e52d00",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 8)"
        ],
        [
            "d1ab2cc79e5d99f4634a3993603ef3f28892e325",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 8)"
        ],
        [
            "6a61b59b49b77c7ec69eeb550a1151464899079e",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 7)"
        ],
        [
            "78e7af54404537ffaba4639ae22a28bc99acbadb",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 8)"
        ],
        [
            "d5676677bae6537447e4b0f049ede4f3c7677d6e",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 7)"
        ],
        [
            "d462db6f61ebf1209df7da3d2712f92e14ef0308",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 7)"
        ],
        [
            "8150b2992499eec5a75e7003dd8c5fa44d5940ae",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 7)"
        ],
        [
            "03fae4e00e78dbf4fa3b68553b2b2352dc8bd80e",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 6)"
        ],
        [
            "16bbf0574a581386d924e98ee55bcb5afdb338fe",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 5)"
        ],
        [
            "e3157b001a71993c3b25dd4fd1f81ccff4d41d30",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 6)"
        ],
        [
            "f6d04210496977cd1da3319ba87ac004954b7cfe",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 5)"
        ],
        [
            "b2482d605c5f29dda0d65b33d455bd14125eeab4",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 6)"
        ],
        [
            "b5e2c6774d858679d7e39d9ba8c298f3231af6ca",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 5)"
        ],
        [
            "3e234a5af966bc866e3f024bca001a8a6f039060",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 4)"
        ],
        [
            "026b90bbedc79844425d1159bd16317da638bb48",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 4)"
        ],
        [
            "d6bdecb7f1f245ab5148b31cfefd22c34ebc10ac",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 4)"
        ],
        [
            "80b0061bb1aa7dee84b26b6aec1afa6ca2920508",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 4)"
        ],
        [
            "17af3ebfa976f2da08b6f8c9ae12cc3fd2513026",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 3)"
        ],
        [
            "bd498120ba71a823d0765a4ce597289a0256c13b",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 3)"
        ],
        [
            "32a0a573d94082a6d23cee6aeb4e943c20fae602",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 3)"
        ],
        [
            "8354eb85ea2b9cfd88ece71dfe9cc0e42d150870",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 3)"
        ],
        [
            "1f1b9e94e69caec257fd9cfa487f297adb00da13",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 2)"
        ],
        [
            "be5f78c77ff56a0ba50c49667c3327f9ceb5fbae",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 2)"
        ],
        [
            "6c63351bb854f6a3c16f4608b2c46d79ebe75ec6",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 2)"
        ]
    ],
    [
        [
            "54a02928c3787f71ab22db6f9b0d22fbed7514ef",
            " [PATCH] [turboshaft][arm] Port InstructionSelector part 4"
        ],
        [
            "f2e4d5caa28ddcc33f0330a7e3a0bdb592039793",
            " [PATCH] [loong64][turboshaft] Port InstructionSelector part 3"
        ],
        [
            "afee3b501bed785ae1739bb5c8da6ace5c823e7d",
            " [PATCH] [turboshaft][arm] Port InstructionSelector part 3"
        ],
        [
            "080ec07da9d783a504f1681bca893ef85e53583f",
            " [PATCH] [turboshaft][arm] Port InstructionSelector part 2"
        ],
        [
            "7cd955494906ecd724215ad7183e445835577d80",
            " [PATCH] [loong64][mips64][turboshaft] Port InstructionSelector part 2"
        ],
        [
            "45f7bb0166524fe6da47deb34926745b55678230",
            " [PATCH] [turboshaft][arm] Port InstructionSelector part 1"
        ],
        [
            "3ade8ed5d8b97ee9ba8bf50a54792fadef99b577",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 13"
        ],
        [
            "376a960b508dc46f1987aee038e938e58faf9749",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 12"
        ],
        [
            "ad0263ab46ab64dcf3affc00e41e94acfacca112",
            " [PATCH] [mips64][turboshaft] Port InstructionSelector part 1"
        ],
        [
            "2f1a534549405587d5314ebe9d12fac41aa38af4",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 11"
        ],
        [
            "56d0d218f1435f219256e4eb6c3ad48b94716e92",
            " [PATCH] [loong64][turboshaft] Port InstructionSelector part 1"
        ],
        [
            "63281106544ab301fd9e860abccd158c15fcc7be",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 10"
        ],
        [
            "eb30f44afa97f2ffd935e43b121259a1535e4dc3",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 9"
        ],
        [
            "eb94c4dc8f8d9964a563c226a8ab118e4d4d1d6e",
            " [PATCH] [riscv][turboshaft] Port InstructionSelector part4"
        ],
        [
            "a8c1f72360ef872ed4e0ab7bebbf92147fdd0b4b",
            " [PATCH] [riscv][turboshaft] Port InstructionSelector part 3"
        ],
        [
            "3c3aca4f42afd429977d2eea9707fbb1ed55a21e",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 8"
        ],
        [
            "7afd5eb2aebb737267b1b55a6cb895c9e6a97e38",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 7"
        ],
        [
            "e90dc6639d6ef470559410497c7f66fe43435412",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 6"
        ],
        [
            "d88fb0fc348dffc6193958be997c4406fb9ff856",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 5"
        ],
        [
            "8b70c9388f66fb35d4a4233b13ac867a93be9b06",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 4"
        ],
        [
            "85f0e9d884c7cb5fc2b4fa1e40d1270c858781fe",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 3"
        ],
        [
            "a2647085637404d4edaa9bf9604f9d1fddeec797",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 2"
        ],
        [
            "37a28ee64751ef4b6aa584bb11e2fea65c8a5463",
            " [PATCH] [turboshaft][arm64] Port InstructionSelector part 1"
        ]
    ],
    [
        [
            "8c22b422678bc2429fd045d3e94366850b03a6e4",
            " [PATCH] [loong64][mips64] Reland^5 \"[wasm][x64] Run JS imports on the central stack\""
        ],
        [
            "f95794ade0b45eabf738e35fd363dca6ce7642cc",
            " [PATCH] [riscv]Reland^5 \"[wasm][x64] Run JS imports on the central stack\""
        ],
        [
            "502b1ffc3a3f7050f068f7a5d1d031d56324c03a",
            " [PATCH] PPC/s390: Reland^5 \"[wasm][x64] Run JS imports on the central stack\""
        ],
        [
            "aef80d12d489b55217b63821ce3b0eaca2b5e2ab",
            " [PATCH] Reland^5 \"[wasm][x64] Run JS imports on the central stack\""
        ],
        [
            "3ebc66786099800b9c7170fc6e72eb59298dfb7c",
            " [PATCH] Reland^4 \"[wasm][x64] Run JS imports on the central stack\""
        ],
        [
            "d62459f10401390ede081ed9701a8300ec26c48f",
            " [PATCH] PPC/s390: Reland^3 \"[wasm][x64] Run JS imports on the central stack\""
        ],
        [
            "be830f359c50f21db867f7e6f430124af314e0db",
            " [PATCH] Reland^3 \"[wasm][x64] Run JS imports on the central stack\""
        ],
        [
            "4be9ff946b727ea05e6049c72ad62f5c83f6a13c",
            " [PATCH] Reland \"[wasm][x64] Run JS imports on the central stack\""
        ]
    ],
    [
        [
            "059f6763d0477e7ee52b3e186bbf92e2e3646047",
            " [PATCH] [loong64][mips64][builtins][csa] Use CallBuiltin/TailCallBuiltin where possible, pt.6"
        ],
        [
            "8841ea55de5b6a16c396b819032ba4123b294899",
            " [PATCH] [riscv][builtins] Use CallBuiltin/TailCallBuiltin where possible, pt.2"
        ],
        [
            "747cf705c6b5398d1cab60ef6bc2f9c930c27190",
            " [PATCH] PPC/s390: [builtins][csa] Use CallBuiltin/TailCallBuiltin where possible, pt.6"
        ],
        [
            "8de6dcc377690a0ea0fd95ba6bbef802f55da683",
            " [PATCH] [builtins][csa] Use CallBuiltin/TailCallBuiltin where possible, pt.6"
        ],
        [
            "dd97dd1b1f094ba20cffdf5698951c18387a3387",
            " [PATCH] [loong64][mips64][builtins] Use CallBuiltin/TailCallBuiltin where possible, pt.2"
        ],
        [
            "4202afccdd483dfe45804dc92b4f959be5e15826",
            " [PATCH] [builtins] Use CallBuiltin/TailCallBuiltin where possible, pt.3"
        ],
        [
            "85fddc8861b7d80428cedc60798dbd7394f4712c",
            " [PATCH] [builtins] Use CallBuiltin/TailCallBuiltin where possible, pt.2"
        ]
    ],
    [
        [
            "8081d32346551df2bf06e29899472d1371318c66",
            " [PATCH] Revert \"Reland^4 \"[wasm][x64] Run JS imports on the central stack\"\""
        ],
        [
            "f38b9f169a053efe8a5b1b3ed838900605dcb450",
            " [PATCH] Revert \"[riscv]Reland^3 '[wasm][x64] Run JS imports on the central stack'\""
        ],
        [
            "12f511861b5ebaa409e2d043f5ee3fff151baefd",
            " [PATCH] Revert \"PPC/s390: Reland^3 \"[wasm][x64] Run JS imports on the central stack\"\""
        ],
        [
            "083b24225f72a735ca8848692640ffc43ee727b5",
            " [PATCH] Revert \"Reland^3 \"[wasm][x64] Run JS imports on the central stack\"\""
        ],
        [
            "9283415d8f0629f470b649ca3642f96795575fa8",
            " [PATCH] Revert \"Reland \"[wasm][x64] Run JS imports on the central stack\"\""
        ]
    ],
    [
        [
            "bfb4a2e42db8011b28ddb46f3b6071b116c8c516",
            " [PATCH] [riscv][assembler] Make UseScratchRegisterScope inlinable"
        ],
        [
            "cb286539a7d63b45d5460761058f057972a3fa4b",
            " [PATCH] [arm64][assembler] Make UseScratchRegisterScope inlinable"
        ],
        [
            "2f49ccc2b223ffa59de25094e20d5e236367511e",
            " [PATCH] PPC/s390: [arm][assembler] Make UseScratchRegisterScope inlinable"
        ],
        [
            "c0b91f58921b3fff7fbb377d9d8fd77781e9b8f6",
            " [PATCH] [loong64][mips64][assembler] Make UseScratchRegisterScope inlinable"
        ],
        [
            "3ea267f2758c3e35f24ac897f62f43b4993129cc",
            " [PATCH] [arm][assembler] Make UseScratchRegisterScope inlinable"
        ]
    ],
    [
        [
            "d93cc4ef42b64711409dda6e87128fcb88f0ac26",
            " [PATCH] [riscv][liftoff] Emit less code for write barriers"
        ],
        [
            "618042625011b9765dc1209b56edc69360f62887",
            " [PATCH] [loong64][mips64][liftoff] Emit less code for write barriers"
        ],
        [
            "efb8f97f626555580522950cc14e212d159cd8c8",
            " [PATCH] PPC/s390: [liftoff] Emit less code for write barriers"
        ],
        [
            "82bb5ea9a9bd1184f30dd6177cafb3d68136bc7f",
            " [PATCH] PPC/s390: [liftoff] Emit less code for write barriers"
        ],
        [
            "ac06e55a17d63b3f62ddac986a7979f0e448309c",
            " [PATCH] [liftoff] Emit less code for write barriers"
        ]
    ],
    [
        [
            "84aaa4028930a1ad383da3480cc941d940bd9eb7",
            " [PATCH] [riscv][builtins] Track topmost script-having execution context"
        ],
        [
            "3664f8217cac478fadc0c8bc04ac34ce24f79476",
            " [PATCH] [loong64][mips64][builtins] Track topmost script-having execution context"
        ],
        [
            "aad1878c776adc3e095dd12d896f4a0eadd8e693",
            " [PATCH] PPC/s390: [builtins] Track topmost script-having execution context"
        ],
        [
            "32548386efc8d7b0d199fe8ec11e3eda3f5b8264",
            " [PATCH] [builtins] Track topmost script-having execution context"
        ]
    ],
    [
        [
            "ae7de90b0c0015b6d1d3c95a7a0e4069481d6a0e",
            " [PATCH] [loong64][mips64][turboshaft] Add missing pieces to Turboshaft CSA pipeline"
        ],
        [
            "b18b6559fc047c0f0989ddd87efb436816ce0ad9",
            " [PATCH] [riscv][turboshaft] Add missing pieces to Turboshaft CSA pipeline"
        ],
        [
            "498bfb87cb996a53d0ae67658b957256806e08e1",
            " [PATCH] PPC/s390: [turboshaft] Add missing pieces to Turboshaft CSA pipeline"
        ],
        [
            "235d5bd74cb77aef5bbd7ad85331d6f067d36dae",
            " [PATCH] [turboshaft] Add missing pieces to Turboshaft CSA pipeline"
        ]
    ],
    [
        [
            "6b8eb077c5eb46b8f57c2542578289dc764c18cd",
            " [PATCH] PPC/S390: [wasm] Pass arguments directly to memory.init"
        ],
        [
            "53d774d524392f74b11cfbc95b466c9206e2d3e7",
            " [PATCH] [loong64][mips64][wasm] Pass arguments directly to memory.init"
        ],
        [
            "21d3e127fc0b8f21268455fc5a976b705fa37ed4",
            " [PATCH] [riscv][wasm] Pass arguments directly to memory.init"
        ],
        [
            "200df6f6bf1752d9c7c27d8868321fb5c26fef53",
            " [PATCH] [wasm] Pass arguments directly to memory.init"
        ]
    ],
    [
        [
            "0ed82ef0d30760c6a20e0f560da19d51c1179724",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 19)"
        ],
        [
            "ba7bbec5aa4dc6ed90555a4daf04564d383e784b",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 19)"
        ],
        [
            "3ec5a0838c2504485ce7e048e1d0458502544bf4",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 19)"
        ],
        [
            "c89fb798454d076f3d404185678ac5a71fd09c28",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 19)"
        ]
    ],
    [
        [
            "39399268bc97f60520abef1576f95c894fc30332",
            " [PATCH] [loong64][interpreter] Skip spread machinery in default derived constructor"
        ],
        [
            "150690d5f6a0fd6ad3787d7070d6968c3ead2f78",
            " [PATCH] [riscv][interpreter] Skip spread machinery in default derived constructor"
        ],
        [
            "58d0430cadb4b7fac6b7221438095b46f4f81e53",
            " [PATCH] PPC/s390: [interpreter] Skip spread machinery in default derived constructor"
        ],
        [
            "6ee16b764a2e267e20a3b25163b5077656eda9a3",
            " [PATCH] [interpreter] Skip spread machinery in default derived constructor"
        ]
    ],
    [
        [
            "80717207474bb8faf10de8458ff0ae0aa90c1cd0",
            " [PATCH] [riscv][wasm] Also load the real stack limit from the root register"
        ],
        [
            "ac3c3af41810bcfcb0996aa63b0ee9863a8d2a18",
            " [PATCH] [loong64][mips64][wasm] Also load the real stack limit from the root register"
        ],
        [
            "51c1d0b733b5cf77ab567d8459d7e5845c21824b",
            " [PATCH] PPC/s390: [wasm] Also load the real stack limit from the root register"
        ],
        [
            "d5244423b7fb9b9c237472dc610f762d18c4d2ad",
            " [PATCH] [wasm] Also load the real stack limit from the root register"
        ]
    ],
    [
        [
            "65bccd205487b07f01e334891949d1daed1c80d6",
            " [PATCH] [riscv][regexp] Fix stack check in native code when interrupt was requested"
        ],
        [
            "1ec3c714bf75f01e3f4f6519bebb953eab93df39",
            " [PATCH] [loong64][mips64][regexp] Fix stack check in native code when interrupt was requested"
        ],
        [
            "200f788c125d7a07b14765a6cffd1ce8e3af1ceb",
            " [PATCH] PPC/s390: [regexp] Fix stack check in native code when interrupt was requested"
        ],
        [
            "7f1aaf2a1c763c8aa1358ec8ed24f39bfa17b767",
            " [PATCH] [regexp] Fix stack check in native code when interrupt was requested"
        ]
    ],
    [
        [
            "1f026e2919bd4c5177a70ddda4e2c20a75f6500b",
            " [PATCH] [riscv][wasm][liftoff] Use root register for stack checks"
        ],
        [
            "ae8e13db745e26f29e458d511670eb6bf9601255",
            " [PATCH] [loong64][mips64][wasm][liftoff] Use root register for stack checks"
        ],
        [
            "1fbd008a40d8d751b58937cb821285400309cd13",
            " [PATCH] PPC/s390: [wasm][liftoff] Use root register for stack checks"
        ],
        [
            "1ad00840445dbae3dab17e568597db620253a08f",
            " [PATCH] [wasm][liftoff] Use root register for stack checks"
        ]
    ],
    [
        [
            "568a80dac9819c8d7f5441fde68d83b94d848370",
            " [PATCH] [riscv] Reland^2 \"[liftoff] Add support for direct C calls\""
        ],
        [
            "82aa1fd7592c4ddeff7aae2323f5118963d9bd6b",
            " [PATCH] PPC/s390: Reland^2 \"[liftoff] Add support for direct C calls\""
        ],
        [
            "846b5bfe32b98bfc7750f502d3b00dc0cb98ce25",
            " [PATCH] Reland^2 \"[liftoff] Add support for direct C calls\""
        ],
        [
            "abb12d27903a827d3be0959dc800725e9cb6b533",
            " [PATCH] Reland \"[liftoff] Add support for direct C calls\""
        ]
    ],
    [
        [
            "78060a278ac3e72e95e7896a5472e5a55b99e3c7",
            " [PATCH] [riscv][baseline] Cache feedback cell in the unused slot"
        ],
        [
            "869e1945a75416fac0b7251436225ea45f8d1058",
            " [PATCH] PPC/s390: [baseline] Cache feedback cell in the unused slot"
        ],
        [
            "a7d96c56ae58c192b43d8785aea113a204752738",
            " [PATCH] [loong64][mips64][baseline] Cache feedback cell in the unused slot"
        ],
        [
            "0d7002280b2224b3ed92705fd9bba3547cbfc9de",
            " [PATCH] [baseline] Cache feedback cell in the unused slot"
        ]
    ],
    [
        [
            "b833ec2335794b16dfef5fe00a3f87cd78a28b2d",
            " [PATCH] [riscv][interpreter] Cache FBV in the stack frame"
        ],
        [
            "fa534e9bafa21fe176b5ca6d81899a71c1329bca",
            " [PATCH] [loong64][mips64][interpreter] Cache FBV in the stack frame"
        ],
        [
            "68b8603320a74d87f5a38f7f2d703e56fe1b16b7",
            " [PATCH] PPC/s390: [interpreter] Cache FBV in the stack frame"
        ],
        [
            "92a83637738290b867b9d0db999104952afee341",
            " [PATCH] [interpreter] Cache FBV in the stack frame"
        ]
    ],
    [
        [
            "25e0b9823b59a2b49dac1b67d6ed55fe944ae402",
            " [PATCH] [riscv][wasm] Use Builtin ids instead of RuntimeStubId ids for calls"
        ],
        [
            "33aed30227008af7299a01d9898a30a97535ad2c",
            " [PATCH] PPC/s390: [wasm] Use Builtin ids instead of RuntimeStubId ids for calls"
        ],
        [
            "40b69a2f5e9c92cdc6d126414ac39187d7db981a",
            " [PATCH] [loong64][mips64][wasm] Use Builtin ids instead of RuntimeStubId ids for calls"
        ],
        [
            "d371c44f54f58830fd4b69d60b25bcd7eff2a229",
            " [PATCH] [wasm] Use Builtin ids instead of RuntimeStubId ids for calls"
        ]
    ],
    [
        [
            "2577ac074077a2bb2d62503ef5c0d5a5350f0af0",
            " [PATCH] ppc/s390: [cfi] Split RelocIterator into ro / rw versions"
        ],
        [
            "6c6baa40dc2a68127c4bc40a323f6eb39b9d5307",
            " [PATCH] [riscv][cfi] Split RelocIterator into ro / rw versions"
        ],
        [
            "f6ba12727c7815feb5a1fccc6e767e103d9b0a99",
            " [PATCH] [loong64][mips64][cfi] Split RelocIterator into ro / rw versions"
        ],
        [
            "3f963778ad8f9af93f7edf14dfa7bec4ad09a922",
            " [PATCH] [cfi] Split RelocIterator into ro / rw versions"
        ]
    ],
    [
        [
            "0c082ae7f3ddc828ba5045bcf081efe135cdb228",
            " [PATCH] [loong64][mips64][liftoff][cleanup] Tighten static register type"
        ],
        [
            "f1a74c3bc4f83be540d7483228611a70086fb430",
            " [PATCH] [riscv][liftoff][cleanup] Tighten static register type"
        ],
        [
            "745b9388b5389d4fadc4924d36009416a4cf23f7",
            " [PATCH] PPC/s390: [liftoff][cleanup] Tighten static register type"
        ],
        [
            "825afa519d7e15aa769df7cfee7134c1622f5e2a",
            " [PATCH] [liftoff][cleanup] Tighten static register type"
        ]
    ],
    [
        [
            "13192d6e10fa726858056e49fc9bca6201401171",
            " [PATCH] [riscv][tagged-ptr] Convert more Objects to Tagged<>"
        ],
        [
            "cda104f32c0389c3535f218228c10f6fdbb0a59f",
            " [PATCH] [loong64][mips64][tagged-ptr] Convert more Objects to Tagged<>"
        ],
        [
            "de320e01e47eeb01071b54b9553d9b6d5de52256",
            " [PATCH] PPC/s390: [tagged-ptr] Convert more Objects to Tagged<>"
        ],
        [
            "064b9a7903b793734b6c03a86ee53a2dc85f0f80",
            " [PATCH] [tagged-ptr] Convert more Objects to Tagged<>"
        ]
    ],
    [
        [
            "13867741f9dc808f3b1faa25fed0af8b64068cbb",
            " [PATCH] PPC/s390[wasm]: Fix memory.fill and memory.init with i64.const args"
        ],
        [
            "f8bffeae366cb3b7c23b3bd748740f64ccbcf3cd",
            " [PATCH] [loong64][mips64][wasm] Fix memory.fill and memory.init with i64.const args"
        ],
        [
            "46e50187d82fa6645339b5ed29d92b10cc42cba6",
            " [PATCH] [riscv][wasm] Fix memory.fill and memory.init with i64.const args"
        ],
        [
            "e703a03fec212957bc522dc859d4330bd21e6b69",
            " [PATCH] [wasm] Fix memory.fill and memory.init with i64.const args"
        ]
    ],
    [
        [
            "5f1ce563182104f761762c5cb52ff2a1edb6ab69",
            " [PATCH] [riscv][sandbox] Reference Code objects (and their entrypoint) through the CPT"
        ],
        [
            "5e34284dbbbc425c8a97222b8d357b339a50d8a6",
            " [PATCH] [loong64][mips64][sandbox] Reference Code objects (and their entrypoint) through the CPT"
        ],
        [
            "271470b0ee5ffd0b18bd77b765d92c80d5929a97",
            " [PATCH] PPC/s390: [sandbox] Reference Code objects (and their entrypoint) through the CPT"
        ],
        [
            "fbb9df7218ae348b56104ff8fdd82b578e42d189",
            " [PATCH] [sandbox] Reference Code objects (and their entrypoint) through the CPT"
        ]
    ],
    [
        [
            "69f7215a8c8a850f28393e2b41012e1680e33c6a",
            " [PATCH] riscv: [tagged-ptr] Make Object methods static"
        ],
        [
            "80eabe98c13771cd111c341cadd04ae6ec5d0239",
            " [PATCH] [loong64][mips64][tagged-ptr] Make Object methods static"
        ],
        [
            "3d35cc91cedbd2eb5e1a899c58039b5b60ba5339",
            " [PATCH] PPC/s390: [tagged-ptr] Make Object methods static"
        ],
        [
            "f20f342a3e275ae6442a53e34869f1c90f0db4a0",
            " [PATCH] [tagged-ptr] Make Object methods static"
        ]
    ],
    [
        [
            "63822b4ba708f1c2850faf3504ea7fb6531c3b99",
            " [PATCH] PPC/s390: [tagged-ptr] Change obj->IsFoo() to IsFoo(obj)"
        ],
        [
            "7d67d27757ca0dd455972fce28b69c6588af4215",
            " [PATCH] [loong64][mips64][tagged-ptr] Change obj->IsFoo() to IsFoo(obj)"
        ],
        [
            "c80318ae05cd03b85f893d4ca6567c39741991a8",
            " [PATCH] [riscv][tagged-ptr] Change obj->IsFoo() to IsFoo(obj)"
        ],
        [
            "9c869941764bc57a9a3b86a090323236d9b3af7c",
            " [PATCH] [tagged-ptr] Change obj->IsFoo() to IsFoo(obj)"
        ]
    ],
    [
        [
            "e6ff37dcf9efae0be12ecbde3e656fa6eaec284b",
            " [PATCH] [riscv][ignition] Fast construct calls"
        ],
        [
            "91d69a1c47327c36b38c53f9c683859bda984310",
            " [PATCH] [loong64][mips64][ignition] Fast construct calls"
        ],
        [
            "9d423adf1277e46ebc12bb39cf407dc7de8aec55",
            " [PATCH] PPC/S390: [ignition] Fast construct calls"
        ],
        [
            "b2bb5653706b04ac5ea421eedcade9810b8d1ea4",
            " [PATCH] [ignition] Fast construct calls"
        ]
    ],
    [
        [
            "fe710cdc3bfbde13bffdf5bbafc12b07488ca52b",
            " [PATCH] [loong64][mips64][builtins] Prepare Api-calls related builtins for refactoring"
        ],
        [
            "c79b721c97848f675b83c7ef154a721171c4427e",
            " [PATCH] riscv: [builtins] Prepare Api-calls related builtins for refactoring"
        ],
        [
            "580d2aa0e50ec97f810edcc59062402535d1e7ea",
            " [PATCH] PPC/s390: [builtins] Prepare Api-calls related builtins for refactoring"
        ],
        [
            "e70138196420755a503ea02dbd376d672a90eab4",
            " [PATCH] [builtins] Prepare Api-calls related builtins for refactoring"
        ]
    ],
    [
        [
            "78f4d6563c9424e37530bdfdc8d6f635b5f93fea",
            " [PATCH] PPC/s390: [liftoff] Use VarState for C-Calls"
        ],
        [
            "617ee99cdab0488821d2fef4cf9965ca8f39566e",
            " [PATCH] [loong64][mips64][liftoff] Use VarState for C-Calls"
        ],
        [
            "3418fa940e588a587975b4c94d9ab7aa13da6b1e",
            " [PATCH] [riscv][liftoff] Use VarState for C-Calls"
        ],
        [
            "a782748a830116583e5d33723d46a82aed50c67e",
            " [PATCH] [liftoff] Use VarState for C-Calls"
        ]
    ],
    [
        [
            "f9a31b4e6c58867bb3ca5b7cae4bb2cb6d49b517",
            " [PATCH] PPC/s390: [compiler] Generalize InstructionSelectorT for Turboshaft (part 1)"
        ],
        [
            "2c6f8eebe74cb51ca6e922d037a005b3a97a2d8c",
            " [PATCH] [loong64][mips64][compiler] Generalize InstructionSelectorT for Turboshaft (part 1)"
        ],
        [
            "657c2b1837e5ff411cfe82c112f002934ef08302",
            " [PATCH] [riscv][compiler] Generalize InstructionSelectorT for Turboshaft (part 1)"
        ],
        [
            "3c2714d57370a05ea5ce99d79d92bf4980bb5d39",
            " [PATCH] [compiler] Generalize InstructionSelectorT for Turboshaft (part 1)"
        ]
    ],
    [
        [
            "694886a4c12a467549f3801ee6a337eef31f3709",
            " [PATCH] [riscv][compiler] Add Adapter template argument to InstructionSelector"
        ],
        [
            "4aa01df6f748e200c88de03db71cbb2403fb8771",
            " [PATCH] [loong64][mips64][compiler] Add Adapter template argument to InstructionSelector"
        ],
        [
            "f6e528ea599f3ee6dc470d27ae2054bd6f8b2772",
            " [PATCH] PPC/s390: [compiler] Add Adapter template argument to InstructionSelector"
        ],
        [
            "65a226a63fd7c10e761ae82b00b8490b879a8fae",
            " [PATCH] [compiler] Add Adapter template argument to InstructionSelector"
        ]
    ],
    [
        [
            "6b08f43389a13b3bef8eda949a9c76d0ae3678e6",
            " [PATCH] [loong64][mips64][builtins] Port HandleApiCall to CSA"
        ],
        [
            "f11164958814c6aaded5b121fadec2adb502c984",
            " [PATCH] [riscv][builtins] Port HandleApiCall to CSA"
        ],
        [
            "042ca800ddfa58faff857c35a493df8a1ae7c3a9",
            " [PATCH] PPC/s390: [builtins] Port HandleApiCall to CSA"
        ],
        [
            "7b42c0bfde1efbf03baf8a819671efdb3d09853f",
            " [PATCH] [builtins] Port HandleApiCall to CSA"
        ]
    ],
    [
        [
            "62f5ce8d379ef7f710760ca6e971822bced1e3de",
            " [PATCH] [riscv][wasm-gc] Inlining into JS: Lower traps to conditional jump to trap call"
        ],
        [
            "0179e8dba34e6ed1491d806974430dfb5ccadf08",
            " [PATCH] [loong64][mips64][wasm-gc] Inlining into JS: Lower traps to conditional jump to trap call"
        ],
        [
            "3a99354ebdf088d6b265a995912eda552ef32f3b",
            " [PATCH] PPC/s390: [wasm-gc] Inlining into JS: Lower traps to conditional jump to trap call"
        ],
        [
            "a764401e64fdef9834cafeba32fc219eba9bd74b",
            " [PATCH] [wasm-gc] Inlining into JS: Lower traps to conditional jump to trap call"
        ]
    ],
    [
        [
            "50b4846eaa1305f287e60578b07c30add99e0f86",
            " [PATCH] [riscv][builtins] Split CallApiCallback into generic and optimized variants"
        ],
        [
            "408eabdb8f335ae4ca0b8a1609898e38684f7997",
            " [PATCH] PPC/s390: [builtins] Split CallApiCallback into generic and optimized variants"
        ],
        [
            "b3b81366a904a19074fb3e544519b974a40678b9",
            " [PATCH] [loong64][mips64][builtins] Split CallApiCallback into generic and optimized variants"
        ],
        [
            "ef130cfbef0a438bd50ed997e48f6545edd92a06",
            " [PATCH] [builtins] Split CallApiCallback into generic and optimized variants"
        ]
    ],
    [
        [
            "3db739c7a842def8e15a11810f912547383b2739",
            " [PATCH] [riscv][wasm-gc] Wasm into JS inlining: Get stack trace locations"
        ],
        [
            "eb43d2a11041de7aacb5c5ad785141131097b444",
            " [PATCH] PPC/s390: [wasm-gc] Wasm into JS inlining: Get stack trace locations"
        ],
        [
            "ff027cec58bbae7a79bf44d633fea2b87b30fd5c",
            " [PATCH] [loong64][mips64][wasm-gc] Wasm into JS inlining: Get stack trace locations"
        ],
        [
            "920521ce58f08db861376c89a80d5db13e871907",
            " [PATCH] [wasm-gc] Wasm into JS inlining: Get stack trace locations"
        ]
    ],
    [
        [
            "6b766f3b88a0ddb433d6b7e82fbb8855d29dad42",
            " [PATCH] [riscv][builtins] Remake Api callback thunk wrappers calling convention"
        ],
        [
            "5635b4396a60a3fa8fcfeed78a879b6e2b56ae3a",
            " [PATCH] [loong64][mips64][builtins] Remake Api callback thunk wrappers calling convention"
        ],
        [
            "5fbb615d4eab788f7d7e2a168a55e277314ae037",
            " [PATCH] PPC/s390: [builtins] Remake Api callback thunk wrappers calling convention"
        ],
        [
            "c56004231528c09baff88993aa9be093648bca1e",
            " [PATCH] [builtins] Remake Api callback thunk wrappers calling convention"
        ]
    ],
    [
        [
            "0a0abca95b28442aca072340a024440968204001",
            " [PATCH] [loong64][mips64][builtins] Refactor register allocation in CallApiCallback/CallApiGetter"
        ],
        [
            "eee57d8b0ff734c411d0499b9a8dc26482ea3272",
            " [PATCH] [riscv][builtins] Refactor register allocation in CallApiCallback/CallApiGetter"
        ],
        [
            "bda9aaef9d3df86a85e70e71f445362aab55a74c",
            " [PATCH] PPC/s390: [builtins] Refactor register allocation in CallApiCallback/CallApiGetter"
        ],
        [
            "e479798142f9495d7b39384095a4fd63950e7711",
            " [PATCH] [builtins] Refactor register allocation in CallApiCallback/CallApiGetter"
        ]
    ],
    [
        [
            "01551ab36e1123c084bbfeee717836422b3cb82d",
            " [PATCH] [riscv][isolate]Move Isolate::handle_scope_data_ to IsolateData"
        ],
        [
            "7e0ad32383b4a52500fd2c493a9229eb7ac11679",
            " [PATCH] [loong64][mips64][isolate] Move Isolate::handle_scope_data_ to IsolateData"
        ],
        [
            "5e9325ce6beb006fd4fdc7be04fc1d3128f188ff",
            " [PATCH] PPC/s390: [isolate] Move Isolate::handle_scope_data_ to IsolateData"
        ],
        [
            "bc45e84fe4abaa72c3e7cd37c250b484840ad512",
            " [PATCH] [isolate] Move Isolate::handle_scope_data_ to IsolateData"
        ]
    ],
    [
        [
            "a99836832091b9037372050ddf822b426b500d30",
            " [PATCH] [riscv] Remove code/istream fields from RelocInfo"
        ],
        [
            "ca4af3e11bbe1da293bbd860412a54c705a31412",
            " [PATCH] [loong64][mips64] Remove code/istream fields from RelocInfo"
        ],
        [
            "49963343a40f425d3cff1d7f969de34c84020b4d",
            " [PATCH] PPC/s390: Remove code/istream fields from RelocInfo"
        ],
        [
            "9f4bea8e781260e7b7a1e3c8ef6598cb52dc1dd4",
            " [PATCH] Remove code/istream fields from RelocInfo"
        ]
    ],
    [
        [
            "5b7786ef02998def65ae6aa812dca1d55d124974",
            " [PATCH] [riscv][code] Merge kind_specific_flags with flags"
        ],
        [
            "c728e3ba53532367a8afdabc0c7df37c3adf9b12",
            " [PATCH] [loong64][mips64][code] Merge kind_specific_flags with flags"
        ],
        [
            "e5772c03e1ae6068349937df2bd97c1053c53029",
            " [PATCH] PPC/s390: [code] Merge kind_specific_flags with flags"
        ],
        [
            "cb8be519f0add9b76d2bd542f0924004fdb2c16c",
            " [PATCH] [code] Merge kind_specific_flags with flags"
        ]
    ],
    [
        [
            "443498c7faaca5a14fb2331d15c43aa80510975e",
            " [PATCH] [riscv][api] Always use the-hole as default return"
        ],
        [
            "fa440ce54487a740390b76fa222426431c38a05c",
            " [PATCH] [loong64][mips64][api] Always use the-hole as default return"
        ],
        [
            "88cf272a0acd99450521d5fcdcb94c52389154a8",
            " [PATCH] PPC/s390: [api] Always use the-hole as default return"
        ],
        [
            "154d1e4ee6d8980e1c254124625d162ef49067b8",
            " [PATCH] [api] Always use the-hole as default return"
        ]
    ],
    [
        [
            "057964e89c48e01d668e55fec9372cc729ea487b",
            " [PATCH] [riscv][builtins] Link up various offset for api calls"
        ],
        [
            "2806e27911289523ddc88001424ebeee78ae8014",
            " [PATCH] [loong64][mips64][builtins] Link up various offset for api calls"
        ],
        [
            "4ed9ce567ccf6551e53f11352bc820d8589822ea",
            " [PATCH] PPC/s390: [builtins] Link up various offset for api calls"
        ],
        [
            "eaaddb9ef75ee67fb718de5f876ba7ded4916f5b",
            " [PATCH] [builtins] Link up various offset for api calls"
        ]
    ],
    [
        [
            "228589a8869b131c2af794bd1129681949f58d1d",
            " [PATCH] [loong64][mips64] Remove the unused kOffHeapTrampolineRegister"
        ],
        [
            "cb4e75c39477967daa11caba6390db0f5e305add",
            " [PATCH] [riscv] Remove the unused kOffHeapTrampolineRegister"
        ],
        [
            "5271bdb3124bcbddca9b5d4d3c37ddc5bf6db0c8",
            " [PATCH] PPC/s390: Remove the unused kOffHeapTrampolineRegister"
        ],
        [
            "0e1e2b838a8f9ecc61667f083041417a5c19345b",
            " [PATCH] Remove the unused kOffHeapTrampolineRegister"
        ]
    ],
    [
        [
            "2768d44a6a7acafc2c7e29e88c7ec335d99f6bc4",
            " [PATCH] [riscv]Optimizations for jitless builds"
        ],
        [
            "4be5fa21acafe8c5f36ed66b4c614907e98debc7",
            " [PATCH] [loong64][mips64] Optimizations for jitless builds"
        ],
        [
            "eb57f21992d603fcd4a609ff6f8731fb85268eb9",
            " [PATCH] PPC/s390: Optimizations for jitless builds"
        ],
        [
            "ed3ce33a3745fdadc055760a2486d307ff4e4468",
            " [PATCH] Optimizations for jitless builds"
        ]
    ],
    [
        [
            "8df13bdf32988f217479051cc7d59477ed218a3e",
            " [PATCH] [loong64][mips64][wasm] Load isolate root from root register"
        ],
        [
            "d7e7f890385421200169759cbd01862513f759f7",
            " [PATCH] PPC/s390: [wasm] Load isolate root from root register"
        ],
        [
            "436983f141eb8b81f5135426580c615b4604e4f8",
            " [PATCH] [riscv][wasm] Load isolate root from root register"
        ],
        [
            "fabda2b54661881570eed2c2aec22cfad03a985c",
            " [PATCH] [wasm] Load isolate root from root register"
        ]
    ],
    [
        [
            "df0b871ecf3c0a19b2302461c4c6974ebadc0f61",
            " [PATCH] [riscv][regexp] Add a frame marker for irregexp frames"
        ],
        [
            "1f749a5e2ecb08eb8c6a8f49dfa93b88b12d18c0",
            " [PATCH] [loong64][mips64][regexp] Add a frame marker for irregexp frames"
        ],
        [
            "84d28d1a8846bca8c048b38fbeee2435e36fc900",
            " [PATCH] PPC/s390: [regexp] Add a frame marker for irregexp frames"
        ],
        [
            "9c012f1143703d0353e7a8092d1723aef870cfc3",
            " [PATCH] [regexp] Add a frame marker for irregexp frames"
        ]
    ],
    [
        [
            "5711ea39a9be75b4afc12cd25f83a609070f3823",
            " [PATCH] [riscv][regexp] Fix stack iteration when -fomit-frame-pointer is enabled"
        ],
        [
            "7f0d3b4cb4362b14de80e1e41f988aef5144511f",
            " [PATCH] [loong64][mips64][regexp] Fix stack iteration when -fomit-frame-pointer is enabled"
        ],
        [
            "065c47bfdc1703770031ec62f2e1984b3265893f",
            " [PATCH] PPC/s390: [regexp] Fix stack iteration when -fomit-frame-pointer is enabled"
        ],
        [
            "e0644f3e0cb01d99058a959e7587b6e96665af0f",
            " [PATCH] [regexp] Fix stack iteration when -fomit-frame-pointer is enabled"
        ]
    ],
    [
        [
            "2949bb9e5c8808c1230f909a2741c0f4e09c46dd",
            " [PATCH] [loong64][mips64] Rename CodeDataContainer to Code"
        ],
        [
            "b06b015d7a6b6c27b22ba291603987236489067e",
            " [PATCH] [riscv] Rename CodeDataContainer to Code"
        ],
        [
            "b7cce4aa1622b10eab5544da67ca6a90ce29fd6c",
            " [PATCH] PPC/s390: Rename CodeDataContainer to Code"
        ],
        [
            "c53c026e6ee5083d71e1cd63607ecbae0c641678",
            " [PATCH] Rename CodeDataContainer to Code"
        ]
    ],
    [
        [
            "b692796f75b392b6a5cee34a1fea9fe5ea8ae39f",
            " [PATCH] [riscv][codet] Remove the CodeT=Code implementation"
        ],
        [
            "6c55f09ed5c8a85cd47c8f2a8f2af780ce93788a",
            " [PATCH] [loong64][mips64][codet] Remove the CodeT=Code implementation"
        ],
        [
            "d48aea7a23a034e321aad372d8e3ca8d31cde35a",
            " [PATCH] PPC/s390: [codet] Remove the CodeT=Code implementation"
        ],
        [
            "177b6be920a0c0cd1f1b14630dcf8d20218fc5e7",
            " [PATCH] [codet] Remove the CodeT=Code implementation"
        ]
    ],
    [
        [
            "ac65192ce2f2ecd244f6cc592da3c2bba4916948",
            " [PATCH] [loong64][mips64][centry] Remove the unused SaveFPRegsMode parameter"
        ],
        [
            "39abc766995a96258a7c56a152cc7eeb47ec32d6",
            " [PATCH] [riscv][centry] Remove the unused SaveFPRegsMode parameter"
        ],
        [
            "70bdadce8f79e9ab12b9e8972803aea708fd36e7",
            " [PATCH] PPC/s390: [centry] Remove the unused SaveFPRegsMode parameter"
        ],
        [
            "605e46479aca3449a6ba1350a1de7927c76b86ad",
            " [PATCH] [centry] Remove the unused SaveFPRegsMode parameter"
        ]
    ],
    [
        [
            "e6dd3058cc460a366542ee15ee15247953f71187",
            " [PATCH] [loong64][mips64][regalloc] Resolve tail-call gap moves"
        ],
        [
            "3ecadd81840768613203f1212ff5e74fcbcdfe1b",
            " [PATCH] PPC/s390: [regalloc] Resolve tail-call gap moves"
        ],
        [
            "9fab8195c92b71ba73949b3582c534303157dc0c",
            " [PATCH] [riscv][regalloc] Resolve tail-call gap moves"
        ],
        [
            "2f4397d652f200501f65b913e8a8a2cc5e4a9404",
            " [PATCH] [regalloc] Resolve tail-call gap moves"
        ]
    ],
    [
        [
            "725bdbb3ef62932d4d1c07ae0cf65cdc25c87de9",
            " [PATCH] [loong64][mips64][ext-code-space] Add InterpreterEntryTrampolineForProfiling builtin"
        ],
        [
            "30d6b245eab9724aca63aa18c6ad2ad5a756100c",
            " [PATCH] PPC/s390: [ext-code-space] Add InterpreterEntryTrampolineForProfiling builtin"
        ],
        [
            "e71be343616c7dc2354b75b63b9a8d9718185825",
            " [PATCH] [riscv][ext-code-space] Add InterpreterEntryTrampolineForProfiling builtin"
        ],
        [
            "1067c6accc3b57ec5ef4bd4e9b362e0b2feb3bda",
            " [PATCH] [ext-code-space] Add InterpreterEntryTrampolineForProfiling builtin"
        ]
    ],
    [
        [
            "4c7ec1fc45de42599f71ef8513ef0928e4e73a13",
            " [PATCH] [loong64][mips64][masm] Move tiering logic to macro-assembler"
        ],
        [
            "613c24028b91df0cb8773531b26d5124c9d5aea6",
            " [PATCH] [riscv][masm] Move tiering logic to macro-assembler"
        ],
        [
            "d4e3fa9a32e4b6f9f1e530ed4b8ff31593fc7169",
            " [PATCH] PPC/s390: [masm] Move tiering logic to macro-assembler"
        ],
        [
            "ca33c73e7c56c7d88d9592ad996d26d8bdc125e5",
            " [PATCH] [masm] Move tiering logic to macro-assembler"
        ]
    ],
    [
        [
            "eea893d59417c76a26ebd8b776a7fcb450442138",
            " [PATCH] [loong64][mips64][wasm][stack-switching] Support rejected promises"
        ],
        [
            "2e9ce2ffbf0ef73c1c76a8bd487ed6b7452b6480",
            " [PATCH] [riscv64] [wasm][stack-switching] Support rejected promises"
        ],
        [
            "ccb45d8cc08b941ad7a11ea26bf1ad824775938e",
            " [PATCH] PPC/s390: [wasm][stack-switching] Support rejected promises"
        ],
        [
            "e35039e7736c5aab4840f9e2c08da32ff26cc877",
            " [PATCH] [wasm][stack-switching] Support rejected promises"
        ]
    ],
    [
        [
            "562160fb98b4f592f476b2bed929c96e286d957c",
            " [PATCH] [riscv64][heap] Remove write barrier builtin for incremental marking"
        ],
        [
            "877e735205f9cee9a6d8797c4177b355d340e195",
            " [PATCH] PPC/s390: [heap] Remove write barrier builtin for incremental marking"
        ],
        [
            "851854c46f1650874e6e5d15c8cc3fca72fbd5fe",
            " [PATCH] [loong64][mips64][heap] Remove write barrier builtin for incremental marking"
        ],
        [
            "e50d19cb1190735eaf42351b69bb2c3bd5f8b1b7",
            " [PATCH] [heap] Remove write barrier builtin for incremental marking"
        ]
    ],
    [
        [
            "86ca80bb78b8ba5c4d06c75f9a0280947d732f90",
            " [PATCH] [loong64][mips64][wasm-simd] Prototype relaxed integer Dot product instructions"
        ],
        [
            "3af7f6add6874f8b19e1f31d3ba18bfd035af334",
            " [PATCH] [riscv64][wasm-simd] Prototype relaxed integer Dot product instructions"
        ],
        [
            "90804935b90fa47ba83e523ce2e9863d590f7599",
            " [PATCH] PPC/s390: [wasm-simd] Prototype relaxed integer Dot product instructions"
        ],
        [
            "a52b44f093efc6694d56f27e0ceea1d4b70751a3",
            " [PATCH] [wasm-simd] Prototype relaxed integer Dot product instructions"
        ]
    ],
    [
        [
            "bdb20626c106aa144ab06b624990dd8dccb085bc",
            " [PATCH] [riscv64] Fix return value of lazy compile runtime function"
        ],
        [
            "68ae81bfc83e0e66294135c61abf45450e7c19a3",
            " [PATCH] PPC/s390: [wasm] Fix return value of lazy compile runtime function"
        ],
        [
            "7e50fa627592b5bd75427199f366d836618b8115",
            " [PATCH] [loong64][mips][wasm] Fix return value of lazy compile runtime function"
        ],
        [
            "22a16bda86492deea2f5a33fd89c63df162ed809",
            " [PATCH] [wasm] Fix return value of lazy compile runtime function"
        ]
    ],
    [
        [
            "b6b785815deede522914c434686a1be7fca1793e",
            " [PATCH] [loong64][mips][wasm-relaxed-simd] Keep q15_mul emit operations consistent"
        ],
        [
            "2bd261c0716362b50614e4e9523b8567a95ef3c2",
            " [PATCH] [riscv64][wasm-relaxed-simd] Keep q15_mul emit operations consistent"
        ],
        [
            "93446e3c12b0df604bd3925fbc51b33d499e9be8",
            " [PATCH] PPC/s390: [wasm-relaxed-simd] Keep q15_mul emit operations consistent"
        ],
        [
            "d2a8bdec7fb749ab0cd44bb29cb4aad0b9dc0a38",
            " [PATCH] [wasm-relaxed-simd] Keep q15_mul emit operations consistent"
        ]
    ],
    [
        [
            "870981928511681028dade7bebf726246ffd5b2d",
            " [PATCH] [wasm-simd][Arm]Prototype Relaxed Rounding Q-format Multiplication"
        ],
        [
            "ef77fe0f4ebd5f06d7c1037cf4388684a027141a",
            " [PATCH] [loong64][mips][wasm-simd] Prototype Relaxed Rounding Q-format Multiplication"
        ],
        [
            "f4674fbba3e5a578103140f221eb3eff55ce3e75",
            " [PATCH] PPC/s390: [wasm-simd] Prototype Relaxed Rounding Q-format Multiplication"
        ],
        [
            "fe443a4e1fd0e738fe1a1d51e80d48d6d4cc4c67",
            " [PATCH] [wasm-simd] Prototype Relaxed Rounding Q-format Multiplication"
        ]
    ],
    [
        [
            "2dfd87f2101371ff95b282cac8ede1bbca5301cc",
            " [PATCH] [riscv64] Remove the Dummy interface descriptor"
        ],
        [
            "827e523702de15a90db01ec493f208c0c30af039",
            " [PATCH] [loong64][mips] Remove the Dummy interface descriptor"
        ],
        [
            "2dbffca74ae1b05d6e94a514f5b2d16646f1ce76",
            " [PATCH] PPC/s390: Remove the Dummy interface descriptor"
        ],
        [
            "4ae5a813c75959fe0afe2b4ffc2b4722ad932ddf",
            " [PATCH] Remove the Dummy interface descriptor"
        ]
    ],
    [
        [
            "8fc8a3e2c2ffc47f1cb58e073d044e817dce3814",
            " [PATCH] [riscv64][osr] Add an install-by-offset mechanism"
        ],
        [
            "a026e9900ae31558d512e64daf07f69008deaaab",
            " [PATCH] [loong64][mips][osr] Add an install-by-offset mechanism"
        ],
        [
            "a3aad69cf7f304edb45e34a1e385d61dd6ddb8ae",
            " [PATCH] s390x/ppc64: [osr] Add an install-by-offset mechanism"
        ],
        [
            "51b99213e73045e9ffcae970e6c3f3cd07fc8381",
            " [PATCH] [osr] Add an install-by-offset mechanism"
        ]
    ],
    [
        [
            "1b88676f064f2c247b99432dca1b744b28858a05",
            " [PATCH] [loong64][mips][wasm] Count direct calls"
        ],
        [
            "73d76e015c3ae37a5aba2f4857e92b775b9cca68",
            " [PATCH] [riscv64][wasm] Count direct calls"
        ],
        [
            "aacd41629bdb2d3bdd38fc5bee7e5ae10b7f8351",
            " [PATCH] PPC/s390: [wasm] Count direct calls"
        ],
        [
            "9ca0bfef37ca59914433e35d59502a268907614e",
            " [PATCH] [wasm] Count direct calls"
        ]
    ],
    [
        [
            "0056f4ff3356eeb488e324440bdc1f28c9766a21",
            " [PATCH] [loong64][mips][deoptimizer] Remove soft deopts"
        ],
        [
            "636d2818242b3694cee9dbcb3f5577d3d167bf20",
            " [PATCH] [riscv64] [deoptimizer] Remove soft deopts"
        ],
        [
            "334016ac62333f510629b28a41f0ed79d3ec6038",
            " [PATCH] PPC/s390: [deoptimizer] Remove soft deopts"
        ],
        [
            "1ff685d8b1a13794abaca3adf36cfd9838b1f6fc",
            " [PATCH] [deoptimizer] Remove soft deopts"
        ]
    ],
    [
        [
            "0be6983593c4ee3bcac0545262450c236adaf94e",
            " [PATCH] [loong64][mips][deoptimizer] Remove non-fixed-size deopts"
        ],
        [
            "5cf05b0aaf2dc6999063ee6bd3ee13a238628399",
            " [PATCH] [riscv64] [deoptimizer] Remove non-fixed-size deopts"
        ],
        [
            "f859193aed7937a6813cc8acf2728f7b31d42205",
            " [PATCH] PPC/s390: [deoptimizer] Remove non-fixed-size deopts"
        ],
        [
            "0a110021d21a43a376f29a5ff1672ac6293c71cc",
            " [PATCH] [deoptimizer] Remove non-fixed-size deopts"
        ]
    ],
    [
        [
            "da5b5f66a6bd27df6249602378300c6961bc62b4",
            " [PATCH] [riscv64] Remove dynamic map checks and custom deoptimization kinds"
        ],
        [
            "38940b70986da6b43d18cb8cf8f0a3be36ca9010",
            " [PATCH] [loong64][mips] Remove dynamic map checks and custom deoptimization kinds"
        ],
        [
            "f52f934119635058b179c2359fe070b8ee0f9233",
            " [PATCH] PPC/s390: Remove dynamic map checks and custom deoptimization kinds"
        ],
        [
            "b2978927d8a96ebc814cccbc5a9f1c35910ee621",
            " [PATCH] Remove dynamic map checks and custom deoptimization kinds"
        ]
    ],
    [
        [
            "5218f6096241248c264eedf24349362d34dbbbb6",
            " [PATCH] [riscv64][cleanup] Remove condition based on kJSArgcIncludesReceiver"
        ],
        [
            "ff2a8f39f256743be3a88de0ab2aa08c92276873",
            " [PATCH] [loong64][mips][cleanup] Remove condition based on kJSArgcIncludesReceiver"
        ],
        [
            "7727437e9addb3e43e549434e00924a70bf59535",
            " [PATCH] PPC/s390: [cleanup] Remove condition based on kJSArgcIncludesReceiver"
        ],
        [
            "db9f6bff7735c28f6d44dd9b01daafc724e7efa8",
            " [PATCH] [cleanup] Remove condition based on kJSArgcIncludesReceiver"
        ]
    ],
    [
        [
            "3cd630bc783e1cde428bca3c846f8cec985f1b26",
            " [PATCH] s390: Restrict bit_cast"
        ],
        [
            "ee5adf6f7a4d4bc2902bd9cdf167a35d91d6b820",
            " [PATCH] Restrict bit_cast"
        ],
        [
            "45501c0ed506bdc8c1b1d96e5bfb81bfaba995e5",
            " [PATCH] Restrict bit_cast"
        ]
    ],
    [
        [
            "ebff428a7a40c407f11d74462f6fa89fa1ac44e3",
            " [PATCH] [wasm][jspi][arm] Run JS imports on the central stack"
        ],
        [
            "a99fa663b3b8f47ef702d249ea3acc5823d02eb2",
            " [PATCH] PPC/S390: [wasm][jspi] Run JS imports on the central stack"
        ],
        [
            "9b1e5f0eacc5d9e823f440e101730f759757bf0c",
            " [PATCH] [wasm][jspi][ia32] Run JS imports on the central stack"
        ]
    ],
    [
        [
            "f1449c6b8df7a42fa6fd2c2f007ff40871342564",
            " [PATCH] PPC/s390: [builtins][masm] Use CallBuiltin/TailCallBuiltin where possible"
        ],
        [
            "86e54fe85fba80a75805d52031c16e83cba03671",
            " [PATCH] [riscv][builtins][masm] Use CallBuiltin/TailCallBuiltin where possible"
        ],
        [
            "063210c08c0dcbff02e3fc59f4afd430b8108432",
            " [PATCH] [builtins][masm] Use CallBuiltin/TailCallBuiltin where possible"
        ]
    ],
    [
        [
            "7042e907a7cb7c6edadb9890a14ae015e0c7dab0",
            " [PATCH] [loong64][mips64][exceptions] Unify pending and scheduled exceptions"
        ],
        [
            "5b117f9266c6f1b1f6878e31cd145b489e283f26",
            " [PATCH] PPC/s390: [exceptions] Unify pending and scheduled exceptions"
        ],
        [
            "12203e0c46b507dc138047c0fe22ce254bfced91",
            " [PATCH] [exceptions] Unify pending and scheduled exceptions"
        ]
    ],
    [
        [
            "bd77e012c6c92c9b95e040db4251b70f070a2784",
            " [PATCH] [loong64][mips64][wasm] Add platform-specific support for the wasm-to-js wrapper"
        ],
        [
            "71bb4725a71dc3ace905f35073716efe623214ae",
            " [PATCH] PPC/s390: [wasm] Add platform-specific support for the wasm-to-js wrapper"
        ],
        [
            "06d8a985d8180221c7c5a227b49c6d8b8c938c53",
            " [PATCH] [wasm][riscv] Add platform-specific support for the wasm-to-js wrapper"
        ]
    ],
    [
        [
            "9fbc6a0eaa7711b2ff4785403baf2a3a7d070ea0",
            " [PATCH] [loong64][mips64] Add StackPointer and SetStackPointer ops"
        ],
        [
            "942dc7042ce0d0fc789cce97fe751cd17aaa523e",
            " [PATCH] PPC/s390: Add StackPointer and SetStackPointer ops"
        ],
        [
            "ca600e3c0abb5d129ddc9019413557c6ea8aa7ec",
            " [PATCH] [x64] Add StackPointer and SetStackPointer ops"
        ]
    ],
    [
        [
            "2a5d8fa756541203e1c31bd5ef2779ae2e1381b1",
            " [PATCH] [loong64][mips64][tagged-ptr] Remove Tagged<Foo> -> Foo conversion"
        ],
        [
            "8f09b4bbf9d9d4b087dd0cfac12eb8fff43354f8",
            " [PATCH] PPC/s390: [tagged-ptr] Remove Tagged<Foo> -> Foo conversion"
        ],
        [
            "f895ee44de75584ed06d0bb4261d699b3811a15e",
            " [PATCH] [tagged-ptr] Remove Tagged<Foo> -> Foo conversion"
        ]
    ],
    [
        [
            "dd9bbfd41636e2b2a44b678e9ffca6922704af54",
            " [PATCH] [riscv] Reduce the number of vector arch codes (Part 4)"
        ],
        [
            "1a13fad66f832ab5693e6e71795e206245cc2ad0",
            " [PATCH] [riscv] Reduce the number of  vector arch code(Part 2)"
        ],
        [
            "36546f5eab263a196933a756fb5d8111f96456df",
            " [PATCH] [riscv] Reduce the number of  vector arch code(Part 1)"
        ]
    ],
    [
        [
            "76f4af399d405440504cd302737f0393b1ab98b2",
            " [PATCH] [wasm][ia32] Add platform-specific support for the wasm-to-js wrapper"
        ],
        [
            "afcc6231a03a446e67fc1752e0f0d4d515057351",
            " [PATCH] [wasm][arm] Add platform-specific support for the wasm-to-js wrapper"
        ],
        [
            "93bb287c2fef9c52760940895e82759f780ec93f",
            " [PATCH] [wasm][arm64] Add platform-specific support for the wasm-to-js wrapper"
        ]
    ],
    [
        [
            "751d271c8799c28a34559d48c5b7e224cbae3f4c",
            " [PATCH] [loong64][mips64][turboshaft][js] Add reducer to make int64->int32 truncations explicit"
        ],
        [
            "101c92793b2b483b2a36f6cd4b6e4d09ff9ee1fe",
            " [PATCH] PPC/s390: [turboshaft][js] Add reducer to make int64->int32 truncations explicit"
        ],
        [
            "9952a7366df210ba5fc52392346b28c806719b67",
            " [PATCH] [turboshaft][js] Add reducer to make int64->int32 truncations explicit"
        ]
    ],
    [
        [
            "8889cad5545413521074d8bc5129beb0603fbe12",
            " [PATCH] [loong64][mips64][liftoff] Remove signature from C calls"
        ],
        [
            "374f1e71fcee5ff8881a988f32f8482298acdda5",
            " [PATCH] PPC/s390: [liftoff] Remove signature from C calls"
        ],
        [
            "bcca43c8e49285d663208b8e386a299fc73e0c01",
            " [PATCH] [liftoff] Remove signature from C calls"
        ]
    ],
    [
        [
            "93da7f82c2f27b08162f483fa8fa4856922a3722",
            " [PATCH] [loong64][mips64] Make stack switching work on the simulator and with CFI"
        ],
        [
            "f6a07623da686cd74302919ce13ea347baf783a2",
            " [PATCH] PPC/s390: Make stack switching work on the simulator and with CFI"
        ],
        [
            "31863bc7c1e239fef6c1650278285cd83b3c5370",
            " [PATCH] [arm64] Make stack switching work on the simulator and with CFI"
        ]
    ],
    [
        [
            "b53d2403c9fb978420cdf9e2ff721fc7adab7ce6",
            " [PATCH] [loong64][mips64][wasm] Generic js-to-wasm wrapper written in Torque"
        ],
        [
            "37a1f24020b636e222af68f9291b2db3cad5655a",
            " [PATCH] PPC/s390: [wasm] Generic js-to-wasm wrapper written in Torque"
        ],
        [
            "31c15897a3a6a5f3ed36ef0c89c2eb7d38a0e093",
            " [PATCH] [wasm] Generic js-to-wasm wrapper written in Torque"
        ]
    ],
    [
        [
            "c7f2b74e6d10ddd4e46425de1d777aafe8464d9e",
            " [PATCH] [loong64][mips64][heap] Move age from BytecodeArray into SharedFunctionInfo"
        ],
        [
            "9ee68dbbab8ec57a95d00d45d701fe1d93768597",
            " [PATCH] [riscv][heap] Move age from BytecodeArray into SharedFunctionInfo"
        ],
        [
            "61db298cf24f55f7f368ceb21b79b41c07692836",
            " [PATCH] [heap] Move age from BytecodeArray into SharedFunctionInfo"
        ]
    ],
    [
        [
            "7be79498222a24f997e06a3286e1f4943cb807c3",
            " [PATCH] PPC/s390: Reland^2 \"[heap] Move age from BytecodeArray into SharedFunctionInfo\""
        ],
        [
            "94c7b145d246f2d9758d5fb0a4a5219a9db95ab0",
            " [PATCH] Reland^2 \"[heap] Move age from BytecodeArray into SharedFunctionInfo\""
        ],
        [
            "4636cca1b2b1fd9660f21a56578ef6aaefc10e39",
            " [PATCH] Reland \"[heap] Move age from BytecodeArray into SharedFunctionInfo\""
        ]
    ],
    [
        [
            "7b791fec2999dcfc665cfaa9a0b15de9f39936bf",
            " [PATCH] PPC/s390: [wasm-stringrefs] Recognize a few more builtins"
        ],
        [
            "3874b45141c130e3f55868f0e132ceeb4fb2179c",
            " [PATCH] [loong64][mips64][wasm-stringrefs] Recognize a few more builtins"
        ],
        [
            "cf1c64fa9ad9d62029a8e22f52aaed76cb3fe29d",
            " [PATCH] [wasm-stringrefs] Recognize a few more builtins"
        ]
    ],
    [
        [
            "3ae27f1f1cc2aca9b5e2901c1a524a8f31823425",
            " [PATCH] [loong64][mips64] Flip the order of write barrier checks in Turbofan"
        ],
        [
            "ece773865a5dc7e2ea6b24197548c3af5f179877",
            " [PATCH] PPC/s390: Flip the order of write barrier checks in Turbofan"
        ],
        [
            "4ad5dc96ce0b609f2de86918a154b8e4a29c9302",
            " [PATCH] Flip the order of write barrier checks in Turbofan"
        ]
    ],
    [
        [
            "d0f81e4d4b04d7474f79993e6a3773b9e552930e",
            " [PATCH] [loong64][mips64][builtins] Clean up api callback stack access"
        ],
        [
            "2a99fd9e6050955ebc71c57731006e4e1c5b251a",
            " [PATCH] PPC/s390: [builtins] Clean up api callback stack access"
        ],
        [
            "bcf80a7eeedcb2c3d88f120fce8e7cfdb8f16252",
            " [PATCH] [builtins] Clean up api callback stack access"
        ]
    ],
    [
        [
            "a7d3bfead6343af4cb8a7e3ab3c3079704886d22",
            " [PATCH] [loong64][mips64] Allocate builtin Code objects in RO space"
        ],
        [
            "ecffcf956a8fb62173905593ca6203cd682b2a66",
            " [PATCH] [riscv]Allocate builtin Code objects in RO space"
        ],
        [
            "10fae211fd84c927cefea869c7814dcd3f74abc8",
            " [PATCH] Allocate builtin Code objects in RO space"
        ]
    ],
    [
        [
            "3629566847427f851edc59cba2baca364935d234",
            " [PATCH] [loong64][mips64] Move data fields from InstructionStream to Code"
        ],
        [
            "def6d156a4cbcc392839eb9354c72734d8ceb97f",
            " [PATCH] [riscv] Move data fields from InstructionStream to Code"
        ],
        [
            "ff909db74eefcf68656e190bd6e3fc0edc0f7790",
            " [PATCH] Move data fields from InstructionStream to Code"
        ]
    ],
    [
        [
            "6353852da5ce446ae6aa0cd505931f4c3d2074d1",
            " [PATCH] [loong64][mips64][wasm-gc] Inlining of very small wasm functions into JS"
        ],
        [
            "3b412d523a8775001993b348c27df57938c11c77",
            " [PATCH] [riscv][wasm-gc] Inlining of very small wasm functions into JS"
        ],
        [
            "79d603d3cb746c105a45e1282abf68c278a752af",
            " [PATCH] [wasm-gc] Inlining of very small wasm functions into JS"
        ]
    ],
    [
        [
            "eb6447f36e26d7a4ed72be826855715468f329c0",
            " [PATCH] PPC/s390: [wasm-relaxed-simd] Add dot/dot_add implementations"
        ],
        [
            "21289aa92c80a4161cc5f0d9915a0002a644d8b4",
            " [PATCH] [riscv64][wasm-relaxed-simd] Add dot/dot_add RISCV implementations"
        ],
        [
            "63dedfc05aeec74087f360dc90fc8825abf9fedd",
            " [PATCH] [wasm-relaxed-simd] Add dot/dot_add ARM implementations"
        ]
    ],
    [
        [
            "19ae980ce1763367e2c1c918324fbc9ed15426de",
            " [PATCH] [loong64][mips64] Remove the AbstractCode == InstructionStream case"
        ],
        [
            "be42eb7139853e672f0a3189245b4d4cdd52344a",
            " [PATCH] PPC/s390: Remove the AbstractCode == InstructionStream case"
        ],
        [
            "11c4c8e3d258d63991a43871e9fa727c405412ac",
            " [PATCH] Remove the AbstractCode == InstructionStream case"
        ]
    ],
    [
        [
            "dba5c526af85d3c05ad8a43d0822d337aebf82c4",
            " [PATCH] [loong64][mips64][wasm] Fix printing of wasm-to-js frames"
        ],
        [
            "a8f6a56e9ae34f918324dc753cc1456b22ffc51f",
            " [PATCH] PPC/s390: [wasm] Fix printing of wasm-to-js frames"
        ],
        [
            "e17eee4894be67f715a7b2d7f17d8b69724f1cf8",
            " [PATCH] [wasm] Fix printing of wasm-to-js frames"
        ]
    ],
    [
        [
            "482fc8c97f45f1e37dede99a8354101123122635",
            " [PATCH] [loong64][mips64][foozzie] Disable loong64/mips64-sim debugger during differential fuzzing"
        ],
        [
            "4b7b95358e00f5dcf527e3cb4ddf5f766f8f040b",
            " [PATCH] PPC/s390: [foozzie] Disable arm/arm64-sim debugger during differential fuzzing"
        ],
        [
            "b57bb851e0dc56a77ba62057520e8748f66235d3",
            " [PATCH] [foozzie] Disable arm/arm64-sim debugger during differential fuzzing"
        ]
    ],
    [
        [
            "5d7bbeb5ec84259a618d98926106de7a5ad5aa9a",
            " [PATCH] [riscv][wasm] Allocate feedback vectors on demand"
        ],
        [
            "c8b6657b72927af810ee65ed82e32d5614da1886",
            " [PATCH] [loong64][mips64][wasm] Allocate feedback vectors on demand"
        ],
        [
            "4804c4de313c2e5e41407518a97f61abf8d33331",
            " [PATCH] [wasm] Allocate feedback vectors on demand"
        ]
    ],
    [
        [
            "ef1b19d6263243a0c382987e7c6869dad854a00f",
            " [PATCH] [loong64][mips64][wasm][liftoff] Fix and cleanup tracing of return value"
        ],
        [
            "415ef632806b99dbacfaab033925484ead3f536d",
            " [PATCH] PPC/s390: [wasm][liftoff] Fix and cleanup tracing of return value"
        ],
        [
            "6f9e71fa74eb589a48c0f5065ac961a64cb515a3",
            " [PATCH] [wasm][liftoff] Fix and cleanup tracing of return value"
        ]
    ],
    [
        [
            "85b5fbc77ab86ce2ff6f6f65cedb8524d7e2ae2e",
            " [PATCH] [loong64][mips64][log][compiler] Enable first-execution logging"
        ],
        [
            "c0f420ef5cdd9723d79d4fec7dea31d2e81edc41",
            " [PATCH] PPC/s390: [log][compiler] Enable first-execution logging"
        ],
        [
            "b257641833f41bf41ae514bd5d09533ea8e376c1",
            " [PATCH] [log][compiler] Enable first-execution logging"
        ]
    ],
    [
        [
            "85f8b8bf9d81ccec6da9ed6f1fe4313bc37716b6",
            " [PATCH] [loong64][mips64][maglev] Implement Maglev-to-Turbofan OSR"
        ],
        [
            "1e3e6969608c420915b5b1196931d73325ec2538",
            " [PATCH] PPC/s390: [maglev] Implement Maglev-to-Turbofan OSR"
        ],
        [
            "ed90ea5cf77a7192239f0a7e3c273fcb4f0e1a17",
            " [PATCH] [maglev] Implement Maglev-to-Turbofan OSR"
        ]
    ],
    [
        [
            "295911112bf80a83c8d5a63d1c885a3d96610fb3",
            " [PATCH] [loong64][mips64][sparkplug] Allow sparkplug->ignition deopt in func entry"
        ],
        [
            "67c0ad3bc92b8bf6c01cf44c8e9ca236d82fb0c7",
            " [PATCH] PPC/s390: [sparkplug] Allow sparkplug->ignition deopt in func entry"
        ],
        [
            "af62c4f0e5566f48396e4a89028f6b21987b5e3f",
            " [PATCH] [sparkplug] Allow sparkplug->ignition deopt in func entry"
        ]
    ],
    [
        [
            "c728b8a5aaf7f2149620ea8868ad5e7717eaf07d",
            " [PATCH] [loong64][mips64][wasm] Keep call_indirect index on the stack"
        ],
        [
            "81f15091a4c161711645ebe790a48f493f00a700",
            " [PATCH] PPC/s390: [wasm] Keep call_indirect index on the stack"
        ],
        [
            "c2d46fe966802eefb19e661ef71009d90b24cdd5",
            " [PATCH] [wasm] Keep call_indirect index on the stack"
        ]
    ],
    [
        [
            "5493270399220e4f59c8ac5f26464f5feeb30b8a",
            " [PATCH] PPC/s390: [masm][cleanup] Refactor call related assembler options"
        ],
        [
            "4ae65adedd75eb75d975ece8ae7bdb2c0db91871",
            " [PATCH] [riscv][masm][cleanup] Refactor call related assembler options"
        ],
        [
            "00746406cfbbd4e838840c20dbe5a3760e3b3f15",
            " [PATCH] [masm][cleanup] Refactor call related assembler options"
        ]
    ],
    [
        [
            "5182e6f12a0a372960c67900b6bb8a2dd62895fe",
            " [PATCH] [loong64][mips64][heap] Add shared barrier to RecordWrite builtin"
        ],
        [
            "93150467c06a10692bffaf43ba0e7efb528d8066",
            " [PATCH] PPC/s390: [heap] Add shared barrier to RecordWrite builtin"
        ],
        [
            "c5d481219650b721c11257ab6b175a96037683b4",
            " [PATCH] [heap] Add shared barrier to RecordWrite builtin"
        ]
    ],
    [
        [
            "c7c9f1c364759583c9aa771de4b9655a6020bfab",
            " [PATCH] [loong64][mips64][codegen] Optimize out calls to TurboAssembler::Assert*"
        ],
        [
            "45a74f3a51a11992cac3258ae4b55af6ebdb89c8",
            " [PATCH] PPC/s390: [codegen] Optimize out calls to TurboAssembler::Assert*"
        ],
        [
            "c3ca81587737cf3235568705fc6dca024f329b23",
            " [PATCH] [codegen] Optimize out calls to TurboAssembler::Assert*"
        ]
    ],
    [
        [
            "866aae35f410fe218e0d70501f3ebef773a4eba5",
            " [PATCH] [loong64][mips64][heap] Improve verification for code write barrier"
        ],
        [
            "ecdde64cff6bcc7b9906686ba0c7fab467c4d5f2",
            " [PATCH] PPC/s390: [heap] Improve verification for code write barrier"
        ],
        [
            "dc2d69d815fe7a118c904c60ec9bc8da7fea4ffe",
            " [PATCH] [heap] Improve verification for code write barrier"
        ]
    ],
    [
        [
            "e442dce90f30e7ae8973031738d98c5c0ea82acc",
            " [PATCH] [loong64][mips64][compiler] Remove delayed string constants"
        ],
        [
            "08607d37a261282bf98f05c03ade08de414b5434",
            " [PATCH] PPC/s390: [compiler] Remove delayed string constants"
        ],
        [
            "de04959f17336b087b7f93824df2102ad91686be",
            " [PATCH] [compiler] Remove delayed string constants"
        ]
    ],
    [
        [
            "3be1dacb1a0a56de9d5db3b3a3e2d8320400d023",
            " [PATCH] [loong64][mips64][compiler] Merge all CompileFoo_Bar runtime functions"
        ],
        [
            "8154ac1468e769877b72324fb504137e3184b5a8",
            " [PATCH] PPC/s390: [compiler] Merge all CompileFoo_Bar runtime functions"
        ],
        [
            "8b4272c2cac4bc6eb8ba9bfc3f7da23828be699e",
            " [PATCH] [compiler] Merge all CompileFoo_Bar runtime functions"
        ]
    ],
    [
        [
            "0c785c076090a32875dac8c4ec02d886e3a42a35",
            " [PATCH] [riscv] Reland: [wasm] WasmCompileLazyFrame scanning"
        ],
        [
            "84c2c7cfb53dfb9d3c4e871c7c26a2a5e7600557",
            " [PATCH] PPC/s390: Reland: [wasm] WasmCompileLazyFrame scanning"
        ],
        [
            "4e329f8c8aa0c97774892e9c3ccaf72f5d74d2b5",
            " [PATCH] Reland: [wasm] WasmCompileLazyFrame scanning"
        ]
    ],
    [
        [
            "859ff489615ad0aa62bcf5cfbf35ff6e4526897b",
            " [PATCH] [riscv][Cleanup] Use CmpInstanceTypeRange in MacroAssembler"
        ],
        [
            "04483dbb2cbad338265cd241fa633cb5c18cdf48",
            " [PATCH] PPC/s390: [Cleanup] Use CmpInstanceTypeRange in MacroAssembler"
        ],
        [
            "ec6368bf125c00810273d577a600cb2b889187e3",
            " [PATCH] [Cleanup] Use CmpInstanceTypeRange in MacroAssembler"
        ]
    ],
    [
        [
            "0ed101e0152476aa8891b10f47574628d929f3ce",
            " [PATCH] Remove some unused includes (4)"
        ],
        [
            "aa4f84ba44f4e7f3fe5288d980062b68c364fdb1",
            " [PATCH] PPC/s390: Remove some unused includes (3)"
        ],
        [
            "1f16e67b51285d56c0979e16dba827ade2d34134",
            " [PATCH] Remove some unused includes (3)"
        ]
    ],
    [
        [
            "2ac469ae5d4545b7c01353f44120e3ee52c284b9",
            " [PATCH] [loong64][mips64][fastcall] Support EnforceRange annotation"
        ],
        [
            "9d69f6f70598583fda448a87ca98f165fe2324a0",
            " [PATCH] PPC/s390: [fastcall] Support EnforceRange annotation"
        ],
        [
            "84e078c6cfdf330d1d3bb909d810a262138445cb",
            " [PATCH] [fastcall] Support EnforceRange annotation"
        ]
    ],
    [
        [
            "2dc4329ff42c8722cd00d1f4fb8c1d590d8a372d",
            " [PATCH] [loong64][mips64][wasm] Fix and harden all conditional tier-up checks"
        ],
        [
            "74955ee1c7ad924af8a486fa0a038c5ddab08e12",
            " [PATCH] [riscv64][wasm] Fix and harden all conditional tier-up checks"
        ],
        [
            "b9c4a8495560cd3ee14f32aa9f6cf5acee18811a",
            " [PATCH] [wasm] Fix and harden all conditional tier-up checks"
        ]
    ],
    [
        [
            "6f611424281518472a18931d864c48a96da3a2c9",
            " [PATCH] [loong64][mips64][liftoff] Fix implicit conversion to LiftoffRegList"
        ],
        [
            "308a7e2f58be8a8ddbeb8b4f6ca4237ae21daf8e",
            " [PATCH] [riscv64][liftoff] Fix implicit conversion to LiftoffRegList"
        ],
        [
            "b84c7dbd7f5aa990cf67c2511b7d8cd650a7b1df",
            " [PATCH] [liftoff] Fix implicit conversion to LiftoffRegList"
        ]
    ],
    [
        [
            "2b6cbda0b4bf90020c7ec078d3269bbf8d1ab679",
            " [PATCH] [loong64][regalloc] Improve gap resolver algorithm"
        ],
        [
            "5c445ebbea474db669e7dfce7d39674cd596d6d8",
            " [PATCH] PPC/S390: [regalloc] Improve gap resolver algorithm"
        ],
        [
            "a77dd89e4ca85a776c6c65f871e39abc0bdee5c4",
            " [PATCH] [regalloc] Improve gap resolver algorithm"
        ]
    ],
    [
        [
            "59cd199d51a216692a7a62c9965f9d2493b6151b",
            " [PATCH] PPC/s390: [wasm-relaxed-simd] Add liftoff min/max operations on Arm and Arm64"
        ],
        [
            "b5d6997af4b94947dc9c8b9201ab0c86be6f3a46",
            " [PATCH] [loong64][mips][wasm-relaxed-simd] Add liftoff min/max operations on Arm and Arm64"
        ],
        [
            "0236d7b5b47e8411f3211af3b9f17dee9ea9e252",
            " [PATCH] [wasm-relaxed-simd] Add liftoff min/max operations on Arm and Arm64"
        ]
    ],
    [
        [
            "8b34a965825d4623c0582de82ec374a8a291ca1a",
            " [PATCH] [riscv64] Reland \"[osr] Use the new OSR cache\""
        ],
        [
            "c575e8ae97532a9ebd43b33658b347508f55ff0f",
            " [PATCH] PPC/S390: Reland \"[osr] Use the new OSR cache\""
        ],
        [
            "9145388055f7f89d8c19fd944fe7612413fae182",
            " [PATCH] Reland \"[osr] Use the new OSR cache\""
        ]
    ],
    [
        [
            "02d8c126b7ff2e5afa2bc99c157ddafed2b25fd1",
            " [PATCH] PPC/s390: Reland \"[osr] Extract extended OSR checks to BaselineOnStackReplacement builtin\""
        ],
        [
            "f8fddd6b13a6786ca3db94bae079a4ba6c13f031",
            " [PATCH] Reland \"[osr] Extract extended OSR checks to BaselineOnStackReplacement builtin\""
        ],
        [
            "af1fa2869b0d473dbc9ad02ef2f6a398b39e9f8c",
            " [PATCH] Revert \"[osr] Extract extended OSR checks to BaselineOnStackReplacement builtin\""
        ]
    ],
    [
        [
            "a9d185b4f58ff8907737a5bf28e242d63513a480",
            " [PATCH] [loong64][mips][codegen] Change RegList into a class"
        ],
        [
            "46cd6c8bb431d0611a282b9925f10485b2d71f7e",
            " [PATCH] PPC/s390: [codegen] Change RegList into a class"
        ],
        [
            "8a0d1b6fe5874d6645da3719d1ccce9b15df18b9",
            " [PATCH] [codegen] Change RegList into a class"
        ]
    ],
    [
        [
            "c832c6b13bf0e73a0479991fa23bd0bcd79f24ec",
            " [PATCH] [loong64][mips][compiler] Always use full version of RecordWrite builtin"
        ],
        [
            "ddc409cbd4800dcec9e9d67f3505d524c0391109",
            " [PATCH] PPC/s390: [compiler] Always use full version of RecordWrite builtin"
        ],
        [
            "1b437aa87d59b6677dddff7727f1d62b75c53f78",
            " [PATCH] [compiler] Always use full version of RecordWrite builtin"
        ]
    ],
    [
        [
            "d652a5db22a423d7a3c97a5685c5bae5de0662b6",
            " [PATCH] PPC/s390: Remove ClassConstructor check from CallFunction"
        ],
        [
            "3b233c9f25791277d3f6a6f2f9f7b20f67d28d8d",
            " [PATCH] [loong64][mips]Remove ClassConstructor check from CallFunction"
        ],
        [
            "99a5bb7484149fa75299f4fd91d5e32be97bf3e2",
            " [PATCH] Remove ClassConstructor check from CallFunction"
        ]
    ],
    [
        [
            "2e73e042be35a654e545fb9fbe053b55699c880f",
            " [PATCH] [riscv64][compiler] Remove OptimizationMarker::kLogFirstExecution"
        ],
        [
            "e78a351f045970108daa27546c5e2e07a9021a49",
            " [PATCH] [loong64][compiler] Remove OptimizationMarker::kLogFirstExecution"
        ],
        [
            "54604990c6cbbe27cd99d2ba4566d97b0a72d89f",
            " [PATCH] [compiler] Remove OptimizationMarker::kLogFirstExecution"
        ]
    ],
    [
        [
            "3bd78de20b381253158ef953a6531da7fbfc7538",
            " [PATCH] [codegen] Load trusted pointer table via root register"
        ]
    ],
    [
        [
            "8cf17a14a78cc1276eb42e1b4bb699f705675530",
            " [PATCH] [sandbox] Reference Code from FeedbackVector via code pointer"
        ]
    ],
    [
        [
            "1ae8f2f47ae3073d42050651b078111fa1b59b00",
            " [PATCH] PPC/s390: [cfi] use more CodeModificationForDebugging scopes"
        ],
        [
            "76c2d0382cace104db38e7fadb25d02b5141cc10",
            " [PATCH] [cfi] use more CodeModificationForDebugging scopes"
        ]
    ],
    [
        [
            "3494f446d33e18eed4fb4db4a1876a883e265b79",
            " [PATCH] PPC/s390: [exceptions] cleanup after unifying pending/scheduled exceptions"
        ],
        [
            "a34be67351534cdff8ec04847630615eac9c057d",
            " [PATCH] [exceptions] cleanup after unifying pending/scheduled exceptions"
        ]
    ],
    [
        [
            "619a24b9969864ab9c48ddaf2d6c747992995b1f",
            " [PATCH] Reland^2 \"[sandbox] Ensure bytecode is loaded via a trusted pointer\""
        ],
        [
            "9d6bd9e75a7350327121ae4f9d748c01886e374c",
            " [PATCH] Reland \"[sandbox] Ensure bytecode is loaded via a trusted pointer\""
        ]
    ],
    [
        [
            "3e42642b3727e99dec37b32cada7c406d24a675c",
            " [PATCH] [loong64][mips64][jspi] Port JS central stack switch"
        ],
        [
            "bf668e84fbd39c5aaa3ae5ec5952f8a555926dec",
            " [PATCH] [riscv][jspi][arm64] Port JS central stack switch"
        ]
    ],
    [
        [
            "57c865a14330da93445f3febe6d233852a1dae50",
            " [PATCH] [riscv][turboshaft] Merge EqualOp into ComparisonOp"
        ],
        [
            "c56336a064ed11369f4c1b48e49c806e8fd46ceb",
            " [PATCH] [turboshaft] Merge EqualOp into ComparisonOp"
        ]
    ],
    [
        [
            "b477829b284cff8667f07089880560147c3c3d2c",
            " [PATCH] PPC/s390: [wasm][memory64] Use trap handling for memory64"
        ],
        [
            "8b4bcf30bd87c5215b4137d8afecc3df935f4902",
            " [PATCH] [wasm][memory64] Use trap handling for memory64"
        ]
    ],
    [
        [
            "5601ea256b4b3a4fd0772adfd8b028bad5225e6a",
            " [PATCH] PPC/s390: [codegen] Avoid redundant code comment"
        ],
        [
            "b578a2d5fe3fc407b2d63a7f0d0240f3016120dd",
            " [PATCH] [codegen] Avoid redundant code comment"
        ]
    ],
    [
        [
            "bf9318f5a59347042ccc393e9f9b102b7e7abf7e",
            " [PATCH] [riscv] Port InstructionSelector part 3"
        ],
        [
            "2fae7bdf1c664a943b370d9b5ed13ace0742a348",
            " [PATCH] [riscv] Port InstructionSelector part 2"
        ]
    ],
    [
        [
            "4341fa249188705e78fff2a4dad4df68f6e46116",
            " [PATCH] [loong64][wasm] Single landing pad for trap handlers"
        ],
        [
            "682d41b0064f61b364d58557259c89299e05507f",
            " [PATCH] [wasm] Single landing pad for trap handlers"
        ]
    ],
    [
        [
            "012b1b960beb4bc40ac9ab38d55a8770a6c85821",
            " [PATCH] [loong64][mips64][liftoff] Add support for direct C calls"
        ],
        [
            "5fb5de9cfc6c54cf8710db01f395299d5acb435b",
            " [PATCH] [liftoff] Add support for direct C calls"
        ]
    ],
    [
        [
            "60dcfa7700194e75a3144a528ce1204616d3ec68",
            " [PATCH] PPC/s390: Reland \"[baseline] Use the same slot for FBV as Ignition\""
        ],
        [
            "1cfbe6e6a787c5424e096dfa8348e56e6053feaf",
            " [PATCH] Reland \"[baseline] Use the same slot for FBV as Ignition\""
        ]
    ],
    [
        [
            "d143fa0c5b0542af7ae65ea9a851802704dad161",
            " [PATCH] [loong64][mips64][baseline] Use the same slot for FBV as Ignition"
        ],
        [
            "fd775a3054c017c801d9e3c2d32dfb13ac79c554",
            " [PATCH] [baseline] Use the same slot for FBV as Ignition"
        ]
    ],
    [
        [
            "cf43f10625997e80f78cc15360951fe01918aee9",
            " [PATCH] s390: [wasm][liftoff] Fix relaxed dot product regalloc"
        ],
        [
            "b9eda2d1664c43e7a9974facb025210d5f0ba13f",
            " [PATCH] [wasm][liftoff] Fix relaxed dot product regalloc"
        ]
    ],
    [
        [
            "52da47b257d77672c0288593b3bffcd0a0f1352b",
            " [PATCH] [mips64][liftoff] Avoid modifying the cache state in stores"
        ],
        [
            "413662b468e4946eb6237ff0022f061bd89fbc12",
            " [PATCH] [liftoff] Avoid modifying the cache state in stores"
        ]
    ],
    [
        [
            "32081b9cb0adfad3b8b8e85fc7327ee015ad128a",
            " [PATCH] [Assembler][ia32] Implement special lea instruction."
        ],
        [
            "96d81437227d3d477a02b6ccaeea531a4c04cc5a",
            " [PATCH] [Assembler][ia32]Implement special lea instruction"
        ]
    ],
    [
        [
            "981f0d656d129a15bae5fc7c7c7f4c80f0a94c15",
            " [PATCH] [riscv] Reduce the vector arch code (Part 8)"
        ],
        [
            "a69fd7dfc981e82c4639a902583e3a7fc9f89715",
            " [PATCH] [riscv] Reduce the vector arch code (Part 7)"
        ]
    ],
    [
        [
            "5301bd881bdc1364d527893fa7f182da0000ab90",
            " [PATCH] [riscv] Reduce riscv Vector arch code(Part 6)"
        ],
        [
            "ed285609763d1166abb657b65c62c02ff7431ce2",
            " [PATCH] [riscv] Reduce riscv Vector arch code(Part 5)"
        ]
    ],
    [
        [
            "f7699855c95a3faa6a76bdb71263cf8fbfbe0fd7",
            " [PATCH] Reland^2 \"[maglev] Support non-pointer-compressed builds\""
        ],
        [
            "a22079d35e5cc27246d865e11b99af74c15a09da",
            " [PATCH] Reland \"[maglev] Support non-pointer-compressed builds\""
        ]
    ],
    [
        [
            "4576ce69bc8562f4c85f57d3d19e59e6a470d7a5",
            " [PATCH] [riscv][maglev][turbofan] Use the fast construct builtin when deopting"
        ],
        [
            "f991de3b3869977f9f5f3332e3593e0929df4eb4",
            " [PATCH] [maglev][turbofan] Use the fast construct builtin when deopting"
        ]
    ],
    [
        [
            "552645c9419604e69f530ffa34f9f968e7b49104",
            " [PATCH] [loong64][mips64][sandbox] Sandboxify WasmIndirectFunctionTable::Targets"
        ],
        [
            "f7440172503e758e543fa0e5a6da9356a43236cf",
            " [PATCH] [sandbox] Sandboxify WasmIndirectFunctionTable::Targets"
        ]
    ],
    [
        [
            "78cc598d67f966dc20d3e045880392a6b5f41e56",
            " [PATCH] [loong64][mips64][liftoff] Make tier-up check platform specific"
        ],
        [
            "2c4468730d01163519074efe6a66078a6b0e14cd",
            " [PATCH] [liftoff] Make tier-up check platform specific"
        ]
    ],
    [
        [
            "94d3c58817512691edeb832d03656a1faacdc780",
            " [PATCH] PPC/s390: Reland \"[sandbox] Sandboxify WasmIndirectFunctionTable::Targets\""
        ],
        [
            "11c55ef5b4229f4fb6eb497aba9903d3252044e7",
            " [PATCH] Reland \"[sandbox] Sandboxify WasmIndirectFunctionTable::Targets\""
        ]
    ],
    [
        [
            "aa79dae3ecf2bc56654bf2ea531fe5954d1d2716",
            " [PATCH] PPC/s390: Reland \"[liftoff] Make tier-up check platform specific\""
        ],
        [
            "e0c0fa199505c71f4222074b407c14a7196f7372",
            " [PATCH] Reland \"[liftoff] Make tier-up check platform specific\""
        ]
    ],
    [
        [
            "ff01727d91e3c4adb360a78c14555fc4f8bc0ae8",
            " [PATCH] PPC/s390: Reland \"[wasm] Switching to the central stack from Wasm to Runtime calls.\""
        ],
        [
            "6d256f7d37d6ef2ab4ef605633b9a3f2f6f42c43",
            " [PATCH] Reland \"[wasm] Switching to the central stack from Wasm to Runtime calls.\""
        ]
    ],
    [
        [
            "81672861cb6bef74ed4daec624d4b2c1ab63af8a",
            " [PATCH] [loong64][mips64][wasm] Switching to the central stack from Wasm to Runtime calls."
        ],
        [
            "611d0530d0639163a7df73c9aa147b151d8aeff3",
            " [PATCH] [wasm] Switching to the central stack from Wasm to Runtime calls."
        ]
    ],
    [
        [
            "0a553206a178396e76a95d73f9b9fb941d44e10d",
            " [PATCH] PPC/s390: [maglev][arm] Use SafepointTableBuilderBase in GetCode"
        ],
        [
            "3482ab709b9ee5ee62032ad05d67b19aa25eca76",
            " [PATCH] [maglev][arm] Use SafepointTableBuilderBase in GetCode"
        ]
    ],
    [
        [
            "fa3a6a34e34cb34e8fe496640b68a6ac6aa0dc48",
            " [PATCH] s390: [test] Use uint8_t instead of byte"
        ],
        [
            "aa228d8bfe21af169e969fa33e71058b888338d2",
            " [PATCH] [test] Use uint8_t instead of byte"
        ]
    ],
    [
        [
            "bd6487a611fb1cea052d19ffbaf147c4ba589dea",
            " [PATCH] [loong64][mips64][wasm-stringrefs] Recognize S.p.toLocaleLowerCase"
        ],
        [
            "48adc4b67c156588a56bdb9c620eef683208def6",
            " [PATCH] [wasm-stringrefs] Recognize S.p.toLocaleLowerCase"
        ]
    ],
    [
        [
            "9cefa614b3ddf87abca192bc93e7afdffc092b09",
            " [PATCH] PPC/s390: Reland \"Cleanup memory modification scopes\""
        ],
        [
            "9fb114888030388d3b7b1a1a14a04bf83de1f03a",
            " [PATCH] Reland \"Cleanup memory modification scopes\""
        ]
    ],
    [
        [
            "c347910aa717bba66e24923ebb2772b4da6ee7bc",
            " [PATCH] PPC/s390: Reland \"[wasm-stringrefs] Recognize S.p.toLocaleLowerCase\""
        ],
        [
            "f6ebe8af6d9b8bae98ca74add29b18e28a6f6d20",
            " [PATCH] Reland \"[wasm-stringrefs] Recognize S.p.toLocaleLowerCase\""
        ]
    ],
    [
        [
            "2f2a2457f4a18fb674ba8e8edfedf80254856cc5",
            " [PATCH] PPC: [regexp] Fix clobbered register in global Unicode special case"
        ],
        [
            "2c8a019f39d29b403f881d9b5932e3219fdcc832",
            " [PATCH] [regexp] Fix clobbered register in global Unicode special case"
        ]
    ],
    [
        [
            "3da045a1a76173d03aeb15985654cf95939a69ae",
            " [PATCH] Revert \"PPC/s390: Flip the order of write barrier checks in Turbofan\""
        ],
        [
            "046d3f16c91f0149e12212e664c99231d486ed69",
            " [PATCH] Revert \"Flip the order of write barrier checks in Turbofan\""
        ]
    ],
    [
        [
            "1d2d4ce1d2067a5fe7b0ad2c1f15a24b0c26e921",
            " [PATCH] Reland^2 \"[tiering] Don't increase budgets on forward jumps\""
        ],
        [
            "cdb171228bdc7566cdfbed9a1a9622ad6ab2e338",
            " [PATCH] Reland \"[tiering] Don't increase budgets on forward jumps\""
        ]
    ],
    [
        [
            "05715898e78ef812c3e6e9c774fbf41fdda35ded",
            " [PATCH] PPC/s390: Reland \"Move data fields from InstructionStream to Code\""
        ],
        [
            "ca9faf8024ec138abb9c7c1c7d6bb8dd1af1de28",
            " [PATCH] Reland \"Move data fields from InstructionStream to Code\""
        ]
    ],
    [
        [
            "e32648ab046c64b6741a85ee5fbff2e652324703",
            " [PATCH] PPC/s390: Reland \"Allocate builtin Code objects in RO space\""
        ],
        [
            "0600991a1ad20340db26b9f0785cbbdc1aa332da",
            " [PATCH] Reland \"Allocate builtin Code objects in RO space\""
        ]
    ],
    [
        [
            "2e3718cd486eeb7d89f4548868ce123c4093ea9f",
            " [PATCH] PPC/s390: Reland \"[wasm-gc] Inlining of very small wasm functions into JS\""
        ],
        [
            "d9d393e442c1ebb7f2813cda3749b861a8196e3e",
            " [PATCH] Reland \"[wasm-gc] Inlining of very small wasm functions into JS\""
        ]
    ],
    [
        [
            "f70b0a7bbc93af3b17c6cf6445073c1901b637c3",
            " [PATCH] Reland \"[x64] fold constant base into constant displacement when generate memory load/store operand.\""
        ],
        [
            "74d741c12aacef92416fc3f911b322a559fc36c0",
            " [PATCH] [x64] fold constant base into constant displacement when generate memory load/store operand."
        ]
    ],
    [
        [
            "fa2da69a00e7a205abe50f5d01c898c8036940d1",
            " [PATCH] [loong64][mips64][liftoff] Remove unused RelocInfo::Mode parameter"
        ],
        [
            "c88ab96ee192052a0aa793276f2a2c28e7dd47df",
            " [PATCH] [liftoff] Remove unused RelocInfo::Mode parameter"
        ]
    ],
    [
        [
            "fd2cb0482679439bad769953d22cae5b4544f34f",
            " [PATCH] PPC/s390: [isolate-data] Tweak root register offsets and bias"
        ],
        [
            "e17bbd604586a791c440a132d1b035b8df634006",
            " [PATCH] [isolate-data] Tweak root register offsets and bias"
        ]
    ],
    [
        [
            "644cf4acce878007f53a28affb2cad0db751dcfa",
            " [PATCH] [static-roots][arm64] Encode roots as immediates when possible"
        ],
        [
            "03dd4bd834d47f50be0ae6cf8d20f9a85f991f33",
            " [PATCH] [static-roots][x64] Encode roots as immediates when possible"
        ]
    ],
    [
        [
            "5275c1a407407fc4d42cb732e1213f97eb6ed7e6",
            " [PATCH] s390: [ptrcomp] Remove the distinction of TaggedAny and TaggedPointer"
        ],
        [
            "81aa89592bf85f39a9ee99ebedaf748437038ddf",
            " [PATCH] [ptrcomp] Remove the distinction of TaggedAny and TaggedPointer"
        ]
    ],
    [
        [
            "31487e43a65f899c055a49828911219ef9ad7334",
            " [PATCH] PPC/s390: [liftoff] Use cross-platform conditions"
        ],
        [
            "a5eb40d90daa9a3f7d7952e3a90fb3be9025b1e6",
            " [PATCH] [liftoff] Use cross-platform conditions"
        ]
    ],
    [
        [
            "35964e2418bb329a6e6d49bf6f0d7b1b29073e8a",
            " [PATCH] PPC/s390: [wasm][memory64] Fix atomics"
        ],
        [
            "76a817e03a83414a5eb727e5f1c73cfa3831cf30",
            " [PATCH] [wasm][memory64] Fix atomics"
        ]
    ],
    [
        [
            "0dbff5d07b27e848e00902b7e35fddf8a0ff0c51",
            " [PATCH] PPC/s390: Various post-Code rename cleanups"
        ],
        [
            "c0367102a3aef0ebc642ecd4c6528966e065deee",
            " [PATCH] Various post-Code rename cleanups"
        ]
    ],
    [
        [
            "60a8726ed65417516fe4c69d1bb0d27a296d6d1b",
            " [PATCH] PPC/s390: Rename Code to InstructionStream"
        ],
        [
            "2c7272fddee50a161a97c753fcf8cfa6ae7f920f",
            " [PATCH] Rename Code to InstructionStream"
        ]
    ],
    [
        [
            "f5bf7b701a48eb5d3b3d1f466b580c181cede6c0",
            " [PATCH] PPC/s390: [codet] Remove obsolete CodeT dispatch functions"
        ],
        [
            "651d4d9748b40fadb45317f1f9655d5b81fe81b6",
            " [PATCH] [codet] Remove obsolete CodeT dispatch functions"
        ]
    ],
    [
        [
            "880f8208ef1aba2a3a1cfa71ea2d3852730708e3",
            " [PATCH] PPC/s390: [static-roots] Use static roots in CSA"
        ],
        [
            "643b458b07a99b1b23108c6a17c7450b645c62e6",
            " [PATCH] [static-roots] Use static roots in CSA"
        ]
    ],
    [
        [
            "b51e75a608217811a8488cd0e5c2dd1d222fc6b6",
            " [PATCH] PPC/s390: [relaxed-simd] Fix ordering of relaxed FMA/FNMA operands"
        ],
        [
            "b0c2b7797a72a757aabfc9e407d9a52d85a1b10b",
            " [PATCH] [relaxed-simd] Fix ordering of relaxed FMA/FNMA operands"
        ]
    ],
    [
        [
            "313b85fbc37d4e7403602a2b782de63affd2b1d9",
            " [PATCH] [riscv] Convert Opcode from enum to integer type."
        ],
        [
            "efd26eaecea9b55b674924877c3c21389fe0bdfc",
            " [PATCH] [loong64][mips64] Convert Opcode from enum to integer type"
        ]
    ],
    [
        [
            "675f569aabdc3ad0562689ac483bc000997b46ae",
            " [PATCH] PPC/s390: Reland \"[wasm-gc] Use static null value for pointer-compressed builds\""
        ],
        [
            "b1477a716fb7a59f84b48f40fb76ce3c239dd5a7",
            " [PATCH] Reland \"[wasm-gc] Use static null value for pointer-compressed builds\""
        ]
    ],
    [
        [
            "72fa21b52cff29b74ba63d46839646b2bb964f3b",
            " [PATCH] PPC/s390: [wasm-gc] Fix WasmLiftoffSetupFrame::Iterate()"
        ],
        [
            "c84946e1e2c5fabfa8ec04ad87556912e2303850",
            " [PATCH] [wasm-gc] Fix WasmLiftoffSetupFrame::Iterate()"
        ]
    ],
    [
        [
            "6c0716d8af6eb2cfebc0ac7bb87db768765fde24",
            " [PATCH] PPC/s390: Reland \"[wasm] Allocate feedback vectors on demand\""
        ],
        [
            "a02c56694fd5e0c64072293040e51837204c7955",
            " [PATCH] Reland \"[wasm] Allocate feedback vectors on demand\""
        ]
    ],
    [
        [
            "5eb4be2e4e1d0a17d30bc41c94a0b8aae4dea9d5",
            " [PATCH] PPC: group unary simd ops requiring a scratch register"
        ],
        [
            "6a99330709cca94ed15d7c508aea74325963f169",
            " [PATCH] PPC: group binary simd ops requiring a scratch register"
        ]
    ],
    [
        [
            "b9e9db5626beb9f7c507383b389e982fb4fe1b6f",
            " [PATCH] [loong64][mips64] Support Int64MulWithOverflow"
        ],
        [
            "78570f7826a49eb9040f4854f4d6ba7c5d945294",
            " [PATCH] [x64][arm64] Support Int64MulWithOverflow"
        ]
    ],
    [
        [
            "989a3cdc0288c232b2be4b1aa6df3d1a4482be17",
            " [PATCH] [loong64][mips64] support 64bit mul high"
        ],
        [
            "222007bc116628ad5a90364acc6dccb125e876dd",
            " [PATCH] [arm64][x64] support 64bit mul high"
        ]
    ],
    [
        [
            "0d85646664c39f7e8d4de8f255b887499cb2960e",
            " [PATCH] [riscv] Fix cctest/test-assembler-riscv*/RISCV_UTEST_FLOAT_WIDENING_vfwmacc_vf."
        ],
        [
            "184efc149a20a62a50dc7c0335befa97fd456512",
            " [PATCH] [riscv] Fix cctest/test-assembler-riscv*/RISCV_UTEST_FLOAT_WIDENING_vfwadd_vf."
        ]
    ],
    [
        [
            "e855b48b64956344a8d6116f61e18ff54970db50",
            " [PATCH] PPC/s390: Remove unused RelocInfo::Mode::RUNTIME_ENTRY"
        ],
        [
            "3f998527960184044f5f7db39454ee9aa917545c",
            " [PATCH] Remove unused RelocInfo::Mode::RUNTIME_ENTRY"
        ]
    ],
    [
        [
            "a482e33fdb333040828790bbdd467a8896e22462",
            " [PATCH] Fix build with -Wextra-semi (arm64)"
        ],
        [
            "2dd434f4db0e22935dd5422ed47fade3113e84be",
            " [PATCH] Fix build with -Wextra-semi"
        ]
    ],
    [
        [
            "99ca63fd135aa337c089c9fa6e97a7a33359fbb2",
            " [PATCH] PPC/s390: [builtins][masm] Move hot flags to the beginning of IsolateData"
        ],
        [
            "8a56da4459bc65c1253c0fed45fe355d9db88bec",
            " [PATCH] [builtins][masm] Move hot flags to the beginning of IsolateData"
        ]
    ],
    [
        [
            "84e9de321bafd5eb0e4bf9106153e1273c4344cd",
            " [PATCH] PPC/s390: [builtins] Streamline API calls"
        ],
        [
            "1e5c03c78e1510740bed179093ff512731970e7b",
            " [PATCH] [builtins] Streamline API calls"
        ]
    ],
    [
        [
            "50cdbb31ff818235e87e27afee93eb6edcfd88c6",
            " [PATCH] PPC/s390: [heap, baseline] Implement shared write barrier for baseline compiler"
        ],
        [
            "805df68f568e2badffdd1a0a0e6310252b2685cc",
            " [PATCH] [heap, baseline] Implement shared write barrier for baseline compiler"
        ]
    ],
    [
        [
            "036384d01a62c61912e451fd9cbfd87a4cebf325",
            " [PATCH] PPC: [codegen] Change a few DCHECKs to V8_ASSUMEs"
        ],
        [
            "e5524920a673ded3a7998b6b6a720ffb0e297cc0",
            " [PATCH] [codegen] Change a few DCHECKs to V8_ASSUMEs"
        ]
    ],
    [
        [
            "17ee577c805a19f5a71f6c4a923631cc5946a8fb",
            " [PATCH] S390: pass a scratch register when using register_location"
        ],
        [
            "9861ce1deae2fc52a7c1fb251b70401a728e44f4",
            " [PATCH] PPC: pass a scratch reg when using register_location"
        ]
    ],
    [
        [
            "1835dec7c0b54ec50f4c99ddc9b19610f385a4d8",
            " [PATCH] PPC/s390: [wasm] Fix 64-bit addressed loads on arm64"
        ],
        [
            "044a18ac248db67aaa5b04416f4ac88a28dfaa7f",
            " [PATCH] [wasm] Fix 64-bit addressed loads on arm64"
        ]
    ],
    [
        [
            "1f2add9fc24a76f0194f178783d8e5f09ca56c5a",
            " [PATCH] Revert \"[loong64][mips64][wasm] WasmCompileLazyFrame scanning\""
        ],
        [
            "814e6b0bf8b357b6fbe9d30b4b4a0ffee884ffd2",
            " [PATCH] Revert \"[wasm] WasmCompileLazyFrame scanning\""
        ]
    ],
    [
        [
            "7af609f965d724c8a847e760e87ff648aeb20330",
            " [PATCH] [loong64][mips64][wasm] WasmCompileLazyFrame scanning"
        ],
        [
            "eb3fb6cbc7f678c726b4878c500e7c9be686e555",
            " [PATCH] [wasm] WasmCompileLazyFrame scanning"
        ]
    ],
    [
        [
            "f28466f36cbff771f1a913a318a2fe32e03f1990",
            " [PATCH] PPC/s390: [liftoff] Mark unused parameters per platform"
        ],
        [
            "781a5b5ad629cdda9cb200e33ffe8fc60167dfec",
            " [PATCH] [liftoff] Mark unused parameters per platform"
        ]
    ],
    [
        [
            "fc945778d1a36311bf749a22d02e74d529770ac1",
            " [PATCH] PPC/s390: [wasm][arm][ia32] Push instance only twice in lazy-compile builtin"
        ],
        [
            "d5b3d8e994f471d37782dd4490f631b422ef7c64",
            " [PATCH] [wasm][arm][ia32] Push instance only twice in lazy-compile builtin"
        ]
    ],
    [
        [
            "043a5cac0af58db97b6f4c8361a396222b90d632",
            " [PATCH] ppc64: [baseline] fix ptrcompr issue"
        ],
        [
            "db9e3428c604c9120ba8c018c73d6d6f795f4c13",
            " [PATCH] s390x: [baseline] fix ptr-compr issue"
        ]
    ],
    [
        [
            "979bd521e8c869db83cf39b1a48a723ff062842f",
            " [PATCH] [loong64][mips64][wasm-gc][refactor] Rename optRef -> refNull"
        ],
        [
            "a0a786656f87f10b2845390ca6d07bebe0fcd73b",
            " [PATCH] [wasm-gc][refactor] Rename optRef -> refNull"
        ]
    ],
    [
        [
            "5f914d92f4269c4242852c19f8b437f301d14f58",
            " [PATCH] S390: Fix build with  no web assembly"
        ],
        [
            "ad711b06e002391e143ae45e6991050c4d1f24a3",
            " [PATCH] PPC: Fix build with  no web assembly"
        ]
    ],
    [
        [
            "9d0a09368569234a1d1094975e2e92591922cd08",
            " [PATCH] PPC [flags] Protect individual flag updates"
        ],
        [
            "f149912f337ca7ddb1dad734aab02eaf9bf76dcf",
            " [PATCH] [flags] Protect individual flag updates"
        ]
    ],
    [
        [
            "44e1d129e2eb504b4fb5bb5eb6d2a276110806fd",
            " [PATCH] [loong64][mips] Remove a useless declaration of Operand"
        ],
        [
            "3ebf2052a1b270393eafb093a98ceca844ad237a",
            " [PATCH] [mips64] Remove a useless declaration of Operand."
        ]
    ],
    [
        [
            "0e05d1b7e3ec7a17d6153af6cda9c4b785982eef",
            " [PATCH] PPC/s390: [osr] Extend OSR tracing"
        ],
        [
            "3e43010abba10eea88590f3064b733e3a1ea22a1",
            " [PATCH] [osr] Extend OSR tracing"
        ]
    ],
    [
        [
            "acb1304d5d536b1f78be93a8d48cdbe4eb546146",
            " [PATCH] [loong64][wasm-relaxed-simd] Add relaxed laneselect in Liftoff on ia32/x64"
        ],
        [
            "bd22e3bec02df88f2cd8c768245004da3aa7a643",
            " [PATCH] [wasm-relaxed-simd] Add relaxed laneselect in Liftoff on ia32/x64"
        ]
    ],
    [
        [
            "9a06f7175cbb6ebdbf4c971c339470371d7dc98d",
            " [PATCH] Reland \"PPC/S390: Reland \"[osr] Use the new OSR cache\"\""
        ],
        [
            "0e9a55d24f9de82d2c1a378cb96227a815b1c42d",
            " [PATCH] Reland \"Reland \"[osr] Use the new OSR cache\"\""
        ]
    ],
    [
        [
            "3b5ba5a8ba2848299a648cb25dea8149c7605e55",
            " [PATCH] Revert \"PPC/S390: Reland \"[osr] Use the new OSR cache\"\""
        ],
        [
            "896f6e749aa4b8d1cdd8157762dc3f196dbd962f",
            " [PATCH] Revert \"Reland \"[osr] Use the new OSR cache\"\""
        ]
    ],
    [
        [
            "692aeb278d4bd0361a6fc4e3f910f6e3d5265b56",
            " [PATCH] PPC: [builtins] Add 'RestartFrameTrampoline'"
        ],
        [
            "b011817158d6617e65d40de2dde02bb89a46885a",
            " [PATCH] [builtins] Add 'RestartFrameTrampoline'"
        ]
    ],
    [
        [
            "130a3099f2ae600a0ba27f4e4d9e9b6c542921f4",
            " [PATCH] [loong64][mips][osr] Extract extended OSR checks to BaselineOnStackReplacement builtin"
        ],
        [
            "a4216b7b11c1d41e44bed8ba6c7e7bbe0f74272d",
            " [PATCH] [osr] Extract extended OSR checks to BaselineOnStackReplacement builtin"
        ]
    ],
    [
        [
            "d2491aed27e0c279dac44a957ac7effff3b54500",
            " [PATCH] ppc64: fix compilation error"
        ],
        [
            "55d9eb4238af36bbdf80bb9c237e258ede8f0f70",
            " [PATCH] ppc64: Fix compilation error"
        ]
    ],
    [
        [
            "dc0230733eb60c2520ba10210a55017eb6e10d3e",
            " [PATCH] [riscv64][sim] Increase the simulator's stack limit margin"
        ],
        [
            "d36f596e8a680a654e868f05de401a7c11756d7d",
            " [PATCH] [sim] Increase the simulator's stack limit margin"
        ]
    ],
    [
        [
            "679e7229ff68e869e269fe8fd5b7b057bc7ea171",
            " [PATCH] s390: [ext-code-space] Make some EmbeddedData methods inline"
        ],
        [
            "5a7ed57b10bfd3f6ea42a6836bfacd4c8050c0c1",
            " [PATCH] [ext-code-space] Make some EmbeddedData methods inline"
        ]
    ],
    [
        [
            "f4a2eda7b4363131e5fcd31f952b47e5b40e3bc3",
            " [PATCH] PPC/s390: [write-barrier] Add debug check for cleared weak refs in write barrier"
        ],
        [
            "dbff2a67b90e39fa878921b7b69acff64d3185a0",
            " [PATCH] [write-barrier] Add debug check for cleared weak refs in write barrier"
        ]
    ],
    [
        [
            "bb9004f32ffd289b4ee54927d4194630a602aca0",
            " [PATCH] PPC/s390: [safepoints] Various refactors"
        ],
        [
            "c7e47c3033e8b6a619f776933252ec557720b0ea",
            " [PATCH] [safepoints] Various refactors"
        ]
    ],
    [
        [
            "676782b942861bd6d682db0aefa52951fe5fd047",
            " [PATCH] PPC/s390: [liftoff] Rename {emit_u32_to_intptr} to {emit_u32_to_uintptr}"
        ],
        [
            "276355cb9d84229716490d3c0da917ac756e522e",
            " [PATCH] [liftoff] Rename {emit_u32_to_intptr} to {emit_u32_to_uintptr}"
        ]
    ],
    [
        [
            "011da951a470d2b05cda500dc2fa4e393b59145d",
            " [PATCH] s390x: [baseline] implement AddToInterruptBudgetAndJumpIfNotExceeded"
        ],
        [
            "9226834841e6152cf6ac0780db3a5ac742de51cc",
            " [PATCH] s390x: [baseline] implement AddToInterruptBudgetAndJumpIfNotExceeded"
        ]
    ],
    [
        [
            "12b7c452591a96afffeb18d115e97499c9ea96af",
            " [PATCH] S390 [liftoff]: Implement simd f32x2 unops"
        ],
        [
            "0f294a8fefa60d7a7fc8345241ef235566880c1b",
            " [PATCH] S390 [liftoff]: Implement simd f64x2 unops"
        ]
    ],
    [
        [
            "ae499dcf552d2280565830a6f982e2b3f45cc5c7",
            " [PATCH] PPC/s390: Remove many superfluous STL includes in headers."
        ]
    ]
]